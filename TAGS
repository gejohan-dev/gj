
../gejo/.gitmodules,0

../gejo/gejo/gejo_base.h,6783
#define GEJO_BASE_HGEJO_BASE_H2,27
typedef int32_t b32;b329,237
typedef float f32;f3210,259
typedef double f64;f6411,279
typedef int8_t s8;s813,302
typedef int16_t s16;s1614,322
typedef int32_t s32;s3215,344
typedef int64_t s64;s6416,366
typedef uint8_t u8;u818,390
typedef uint16_t u16;u1619,411
typedef uint32_t u32;u3220,434
typedef uint64_t u64;u6421,457
typedef u8 one_byte;one_byte23,482
#define internal internal25,506
#define local_persist local_persist26,531
#define global_variable global_variable27,561
#define Assert(Assert32,758
#define InvalidCodePath InvalidCodePath37,978
#define InvalidDefaultCase InvalidDefaultCase38,1030
#define Kilobytes(Kilobytes40,1094
#define Megabytes(Megabytes41,1139
#define Gigabytes(Gigabytes42,1193
#define Terabytes(Terabytes43,1247
#define ArrayCount(ArrayCount45,1303
#define IsCharacter(IsCharacter47,1369
#define IsDigit(IsDigit48,1444
#define IsWhitespace(IsWhitespace49,1487
#define FLT_MAX FLT_MAX51,1564
#define FLT_MIN FLT_MIN52,1614
#define BUFFER_SIZE BUFFER_SIZE54,1675
#define SwapVar(SwapVar56,1702
#define SwapArray(SwapArray57,1785
#define brk brk60,1953
#define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN62,2014
#define NOMINMAXNOMINMAX63,2043
#define BeginTimer(BeginTimer65,2083
#define EndTimer(EndTimer66,2173
s32 get_s32_length(s32 number)get_s32_length72,2527
void build_binary_string(u32 number, char* buffer, u32 max_size, u32 padding)build_binary_string84,2704
copy_string(char* src, char* dst)copy_string104,3288
struct MemoryArenaMemoryArena118,3608
    size_t size;size120,3631
    u8* base;base121,3649
    size_t used;used122,3664
#define BeginTemporaryMemoryBlock(BeginTemporaryMemoryBlock125,3688
#define EndTemporaryMemoryBlock(EndTemporaryMemoryBlock126,3761
void initialize_arena(MemoryArena* arena, size_t size, u8* base)initialize_arena128,3828
#define zero_struct(zero_struct135,3974
zero_size(size_t size_bytes, void* ptr)zero_size137,4080
#define push_size(push_size147,4241
#define push_array(push_array148,4291
#define push_struct(push_struct149,4376
void* _push(MemoryArena* arena, size_t size, size_t alignment = 4)_push150,4444
enum PlatformOpenFileModeFlagsPlatformOpenFileModeFlags176,5203
    PlatformOpenFileModeFlags_Read  = 0x1,PlatformOpenFileModeFlags_Read178,5238
    PlatformOpenFileModeFlags_Write = 0x2,PlatformOpenFileModeFlags_Write179,5282
struct PlatformFileHandlePlatformFileHandle182,5332
    void* handle;handle184,5362
    u32 file_size;file_size185,5381
    char* full_file_name;full_file_name187,5417
struct PlatformFileListingPlatformFileListing191,5458
    char* file_name;file_name193,5489
    PlatformFileListing* next;next194,5511
struct PlatformThreadContextPlatformThreadContext197,5549
    void (*thread_func)(void*);thread_func199,5582
    void* param;param200,5615
    void* platform;platform201,5633
enum ThreadStatusThreadStatus204,5660
    ThreadStatus_Done    = 0,ThreadStatus_Done206,5682
    ThreadStatus_RunningThreadStatus_Running207,5713
struct TicketMutexTicketMutex210,5745
    u64 volatile ticket;ticket212,5768
    u64 volatile serving;serving213,5794
typedef PlatformFileHandle   GetFileHandle(const char* file_name, u8 mode_flags);GetFileHandle216,5827
typedef void                 ReadDataFromFileHandle(PlatformFileHandle* file_handle, u32 offset,ReadDataFromFileHandle217,5910
typedef void                 WriteDataToFileHandle(PlatformFileHandle* file_handle, u32 offset, WriteDataToFileHandle218,6030
typedef void                 CloseFileHandle(PlatformFileHandle* file_handle);CloseFileHandle219,6149
typedef PlatformFileListing* ListFiles(MemoryArena* memory_arena, const char* file_name_pattern)ListFiles220,6229
typedef void*                AllocateMemory(size_t size);AllocateMemory221,6328
typedef void                 DeallocateMemory(void* memory);DeallocateMemory222,6387
typedef void                 NewThread(PlatformThreadContext* thread_context);NewThread223,6449
typedef b32                  WaitForThreads(PlatformThreadContext* threads, u32 thread_count);WaitForThreads224,6529
typedef ThreadStatus         CheckThreadStatus(PlatformThreadContext thread_context);CheckThreadStatus225,6625
typedef void                 BeginTicketMutex(TicketMutex* ticket_mutex);BeginTicketMutex226,6712
typedef void                 EndTicketMutex(TicketMutex* ticket_mutex);EndTicketMutex227,6787
typedef void                 DebugPrint(const char* format, ...);DebugPrint229,6876
struct SoundBufferSoundBuffer235,7121
    int16_t* buffer;buffer237,7144
    size_t buffer_size;buffer_size238,7166
    uint32_t count;count239,7191
    void* platform;platform240,7212
typedef u32         GetMaxQueuedSoundBuffers();GetMaxQueuedSoundBuffers243,7239
typedef u32         QueuedSoundBuffers();QueuedSoundBuffers244,7288
typedef SoundBuffer CreatesoundBuffer(uint32_t sample_count);CreatesoundBuffer245,7331
typedef void        SubmitSoundBuffer(SoundBuffer sound_buffer);SubmitSoundBuffer246,7394
typedef u32         GetRemainingSamples(SoundBuffer sound_buffer);GetRemainingSamples247,7460
struct PlatformAPIPlatformAPI252,7700
    GetFileHandle*          get_file_handle;get_file_handle255,7738
    ReadDataFromFileHandle* read_data_from_file_handle;read_data_from_file_handle256,7784
    WriteDataToFileHandle*  write_data_to_file_handle;write_data_to_file_handle257,7841
    CloseFileHandle*        close_file_handle;close_file_handle258,7897
    ListFiles*              list_files;list_files259,7945
    AllocateMemory*         allocate_memory;allocate_memory260,7986
    DeallocateMemory*       deallocate_memory;deallocate_memory261,8032
    NewThread*              new_thread;new_thread262,8080
    WaitForThreads*         wait_for_threads;wait_for_threads263,8121
    CheckThreadStatus*      check_thread_status;check_thread_status264,8168
    BeginTicketMutex*       begin_ticket_mutex;begin_ticket_mutex265,8218
    EndTicketMutex*         end_ticket_mutex;end_ticket_mutex266,8267
    DebugPrint*             debug_print;debug_print268,8330
    GetMaxQueuedSoundBuffers* get_max_queued_sound_buffers;get_max_queued_sound_buffers272,8400
    QueuedSoundBuffers*       queued_sound_buffers;queued_sound_buffers273,8461
    CreatesoundBuffer*        create_sound_buffer;create_sound_buffer274,8514
    SubmitSoundBuffer*        submit_sound_buffer;submit_sound_buffer275,8566
    GetRemainingSamples*      get_remaining_samples;get_remaining_samples276,8618
    void* memory;memory279,8697
    size_t memory_size;memory_size280,8716
    b32 should_update_window_size;should_update_window_size282,8751

../gejo/gejo/gejo_math.h,4853
#define GEJO_MATH_HGEJO_MATH_H2,27
#define PI_F32 PI_F324,50
#define E_F32 E_F325,76
#define DEG_TO_RAD DEG_TO_RAD6,106
#define Gejo_Max(Gejo_Max11,205
#define Gejo_Min(Gejo_Min12,256
#define Gejo_Abs(Gejo_Abs13,307
inline f32 sqrt(f32 x)        { return sqrtf(x); }sqrt15,353
inline u32 pow2(u32 x)        { return (u32)powf(2,(f32)x); }pow216,405
inline f32 pow2(f32 x)        { return powf(2,x); }pow217,468
inline f32 pow (f32 x, f32 n) { return powf(x,n); }pow18,521
inline f32 sin(f32 x) { return sinf(x); }sin21,604
inline f32 cos(f32 x) { return cosf(x); }cos22,647
inline f32 tan(f32 x) { return tanf(x); }tan23,690
inline f32 clamp(f32 min, f32 value, f32 max) { return value < min ? min : (value > max ? max : clamp25,735
inline f32 lerp(f32 a, f32 b, f32 x) { return (1.0f - x) * a + x * b; }lerp26,842
inline f32 normalize(f32 a, f32 b, f32 x) { return Gejo_Min(1.0f, Gejo_Max(0.0f, (x - a) / (b - normalize27,915
#define V2(V230,1034
#define V3(V339,1324
#define V4(V447,1601
inline V2f V2_add      (V2f v0, V2f v1)             { return {v0.x + v1.x, v0.y + v1.y}; }V2_add54,1875
inline V2f V2_sub      (V2f v0, V2f v1)             { return {v0.x - v1.x, v0.y - v1.y}; }V2_sub55,1967
inline f32 V2_length   (V2f v0)                     { return sqrt(v0.x * v0.x + v0.y * v0.y); }V2_length56,2059
inline f32 V2_length   (f32 x, f32 y)               { return sqrt(x * x + y * y); }V2_length57,2156
inline V2f V2_normalize(V2f v0)                     { f32 l = V2_length(v0); return {v0.x / l, vV2_normalize58,2241
inline f32 V2_dot      (V2f v0, V2f v1)             { return v0.x * v1.x + v0.y * v1.y; }V2_dot59,2350
inline V3f V3_add      (V3f v0, V3f v1)             { return {v0.x + v1.x, v0.y + v1.y, v0.z + vV3_add61,2443
inline V3f V3_add      (V3f v0, f32 c)              { return {v0.x + c, v0.y + c, v0.z + c}; }V3_add62,2548
inline V3f V3_add      (f32 c, V3f v0)              { return V3_add(v0, c); }V3_add63,2644
inline V3f V3_sub      (V3f v0, V3f v1)             { return {v0.x - v1.x, v0.y - v1.y, v0.z - vV3_sub64,2723
inline f32 V3_length   (V3f v0)                     { return sqrt(v0.x * v0.x + v0.y * v0.y + v0V3_length65,2828
inline f32 V3_length   (f32 x, f32 y, f32 z)        { return sqrt(x * x + y * y + z * z); }V3_length66,2939
inline V3f V3_mul      (f32 x1, f32 y1, f32 z1,V3_mul67,3032
inline V3f V3_mul      (f32 c, V3f v0)              { return {c * v0.x, c * v0.y, c * v0.z}; }V3_mul69,3174
inline V3f V3_mul      (V3f v0, f32 c)              { return V3_mul(c, v0); }V3_mul70,3270
inline V3f V3_mul      (f32 x, f32 y, f32 z, f32 c) { return {c * x, c * y, c * z}; }V3_mul71,3349
inline V3f V3_normalize(V3f v0)                     { f32 l = V3_length(v0); return {v0.x / l, vV3_normalize72,3436
inline f32 V3_dot      (V3f v0, V3f v1)             { return v0.x * v1.x + v0.y * v1.y + v0.z * V3_dot73,3555
inline V3f V3_cross    (V3f v0, V3f v1)             { return {v0.y * v1.z - v0.z * v1.y, v0.z * V3_cross74,3660
V3f V3_triangle_normal(V3f p1, V3f p2, V3f p3)V3_triangle_normal76,3809
union M4x4M4x487,4096
    f32 m[4][4];m93,4187
    f32 a[16];a99,4285
inline M4x4 M4x4_identity() { return {1.0f,0,0,0, 0,1.0f,0,0, 0,0,1.0f,0, 0,0,0,1.0f}; }M4x4_identity102,4307
inline M4x4 M4x4_mul(M4x4 m, M4x4 n)M4x4_mul104,4399
inline V4f M4x4_mul(M4x4 m, V4f v)M4x4_mul110,5594
inline V3f M4x4_mul(M4x4 m, V3f v)M4x4_mul120,6023
inline void M4x4_apply_translate(M4x4& m, f32 x, f32 y, f32 z)M4x4_apply_translate129,6347
inline void M4x4_apply_translate(M4x4& m, V3f v) { M4x4_apply_translate(m, v.x, v.y, v.z); }M4x4_apply_translate136,6623
M4x4_apply_transpose(M4x4& m)M4x4_apply_transpose139,6732
inline void M4x4_apply_rotate_x(M4x4& m, f32 angle_degrees)M4x4_apply_rotate_x149,6972
inline void M4x4_apply_rotate_y(M4x4& m, f32 angle_degrees)M4x4_apply_rotate_y163,7609
inline void M4x4_apply_rotate_z(M4x4& m, f32 angle_degrees)M4x4_apply_rotate_z177,8254
M4x4 M4x4_model_view_matrix(V3f camera_pos, V3f camera_direction, V3f up, b32 translate = true)M4x4_model_view_matrix192,8888
M4x4 M4x4_inverse_model_view_matrix(M4x4 model_view_matrix, V3f camera_pos)M4x4_inverse_model_view_matrix209,9592
M4x4 M4x4_projection_matrix(f32 field_of_view_degrees, f32 aspect_w_over_h,M4x4_projection_matrix217,9847
M4x4 M4x4_inverse_projection_matrix(M4x4 projection_matrix)M4x4_inverse_projection_matrix233,10466
V3f_fps_forward_vector(f32 yaw_radians, f32 pitch_radians)V3f_fps_forward_vector247,10874
rectangle_bounds_check(f32 px, f32 py, f32 rx1, f32 rx2, f32 ry1, f32 ry2) { return px >= rx1 &&rectangle_bounds_check257,11100
f32 ray_plane_collision(V3f v0, V3f v1, V3f v2,ray_plane_collision259,11237
b32 ray_triangle_intersection(V3f v0, V3f v1, V3f v2,ray_triangle_intersection270,11630

../gejo/gejo/imgui_bindings.h,11017
#define IMGUI_BINDINGS_HIMGUI_BINDINGS_H4,89
#define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN6,117
#define NOMINMAXNOMINMAX7,146
typedef char                 GLchar;GLchar11,208
typedef int                  GLint;GLint12,246
typedef unsigned int         GLenum;GLenum13,283
typedef unsigned int         GLuint;GLuint14,321
typedef int                  GLsizei;GLsizei15,359
typedef unsigned char        GLboolean;GLboolean16,398
typedef float                GLfloat;GLfloat17,439
typedef double               GLdouble;GLdouble18,478
typedef signed long long int GLsizeiptr;GLsizeiptr19,518
#define GL_ACTIVE_TEXTURE GL_ACTIVE_TEXTURE21,562
#define GL_ARRAY_BUFFER GL_ARRAY_BUFFER22,612
#define GL_ARRAY_BUFFER GL_ARRAY_BUFFER23,662
#define GL_ARRAY_BUFFER GL_ARRAY_BUFFER24,712
#define GL_ARRAY_BUFFER GL_ARRAY_BUFFER25,762
#define GL_ARRAY_BUFFER_BINDING GL_ARRAY_BUFFER_BINDING26,812
#define GL_ARRAY_BUFFER_BINDING GL_ARRAY_BUFFER_BINDING27,862
#define GL_BLEND_DST_ALPHA GL_BLEND_DST_ALPHA28,912
#define GL_BLEND_DST_RGB GL_BLEND_DST_RGB29,962
#define GL_BLEND_EQUATION_ALPHA GL_BLEND_EQUATION_ALPHA30,1012
#define GL_BLEND_EQUATION_RGB GL_BLEND_EQUATION_RGB31,1062
#define GL_BLEND_SRC_ALPHA GL_BLEND_SRC_ALPHA32,1112
#define GL_BLEND_SRC_RGB GL_BLEND_SRC_RGB33,1162
#define GL_COMPILE_STATUS GL_COMPILE_STATUS34,1212
#define GL_CURRENT_PROGRAM GL_CURRENT_PROGRAM35,1262
#define GL_ELEMENT_ARRAY_BUFFER GL_ELEMENT_ARRAY_BUFFER36,1312
#define GL_ELEMENT_ARRAY_BUFFER GL_ELEMENT_ARRAY_BUFFER37,1362
#define GL_FRAGMENT_SHADER GL_FRAGMENT_SHADER38,1412
#define GL_FUNC_ADD GL_FUNC_ADD39,1462
#define GL_INFO_LOG_LENGTH GL_INFO_LOG_LENGTH40,1512
#define GL_INFO_LOG_LENGTH GL_INFO_LOG_LENGTH41,1562
#define GL_LINK_STATUS GL_LINK_STATUS42,1612
#define GL_MAJOR_VERSION GL_MAJOR_VERSION43,1662
#define GL_MINOR_VERSION GL_MINOR_VERSION44,1712
#define GL_NUM_EXTENSIONS GL_NUM_EXTENSIONS45,1762
#define GL_STREAM_DRAW GL_STREAM_DRAW46,1812
#define GL_STREAM_DRAW GL_STREAM_DRAW47,1862
#define GL_TEXTURE0 GL_TEXTURE048,1912
#define GL_VERTEX_ARRAY_BINDING GL_VERTEX_ARRAY_BINDING49,1962
#define GL_VERTEX_ARRAY_BINDING GL_VERTEX_ARRAY_BINDING50,2012
#define GL_VERTEX_SHADER GL_VERTEX_SHADER51,2062
typedef GLint          type_glGetAttribLocation (GLuint program, const GLchar *name);type_glGetAttribLocation53,2114
typedef GLint          type_glGetUniformLocation (GLuint program, const GLchar *name);type_glGetUniformLocation54,2201
typedef GLuint         type_glCreateProgram (void);type_glCreateProgram55,2289
typedef GLuint         type_glCreateShader (GLenum type);type_glCreateShader56,2342
typedef const GLubyte* type_glGetStringi(GLenum name, GLuint index);type_glGetStringi57,2401
typedef void           type_glActiveTexture (GLenum texture);type_glActiveTexture58,2471
typedef void           type_glAttachShader (GLuint program, GLuint shader);type_glAttachShader59,2534
typedef void           type_glBindBuffer (GLenum target, GLuint buffer);type_glBindBuffer60,2611
typedef void           type_glBindVertexArray (GLuint array);type_glBindVertexArray61,2685
typedef void           type_glBlendEquation (GLenum mode);type_glBlendEquation62,2748
typedef void           type_glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);type_glBlendEquationSeparate63,2808
typedef void           type_glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sftype_glBlendFuncSeparate64,2897
typedef void           type_glBufferData (GLenum target, GLsizeiptr size, const void *data, GLentype_glBufferData65,3028
typedef void           type_glCompileShader (GLuint shader);type_glCompileShader66,3136
typedef void           type_glDeleteBuffers (GLsizei n, const GLuint *buffers);type_glDeleteBuffers67,3198
typedef void           type_glDeleteProgram (GLuint program);type_glDeleteProgram68,3279
typedef void           type_glDeleteShader (GLuint shader);type_glDeleteShader69,3342
typedef void           type_glDeleteVertexArrays (GLsizei n, const GLuint *arrays);type_glDeleteVertexArrays70,3403
typedef void           type_glDetachShader (GLuint program, GLuint shader);type_glDetachShader71,3488
typedef void           type_glEnableVertexAttribArray (GLuint index);type_glEnableVertexAttribArray72,3565
typedef void           type_glGenBuffers (GLsizei n, GLuint *buffers);type_glGenBuffers73,3636
typedef void           type_glGenVertexArrays (GLsizei n, GLuint *arrays);type_glGenVertexArrays74,3708
typedef void           type_glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *lengttype_glGetProgramInfoLog75,3784
typedef void           type_glGetProgramiv (GLuint program, GLenum pname, GLint *params);type_glGetProgramiv76,3902
typedef void           type_glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length,type_glGetShaderInfoLog77,3993
typedef void           type_glGetShaderiv (GLuint shader, GLenum pname, GLint *params);type_glGetShaderiv78,4109
typedef void           type_glLinkProgram (GLuint program);type_glLinkProgram79,4198
typedef void           type_glShaderSource (GLuint shader, GLsizei count, const GLchar *const*sttype_glShaderSource80,4259
typedef void           type_glUniform1i (GLint location, GLint v0);type_glUniform1i81,4384
typedef void           type_glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpotype_glUniformMatrix4fv82,4453
typedef void           type_glUseProgram (GLuint program);type_glUseProgram83,4577
typedef void           type_glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLbooltype_glVertexAttribPointer84,4637
type_glActiveTexture*           glActiveTexture;      glActiveTexture87,4824
type_glAttachShader*            glAttachShader;      glAttachShader88,4880
type_glBindBuffer*              glBindBuffer;      glBindBuffer89,4935
type_glBindVertexArray*         glBindVertexArray;      glBindVertexArray90,4988
type_glBlendEquation*           glBlendEquation;      glBlendEquation91,5046
type_glBlendEquationSeparate*   glBlendEquationSeparate;      glBlendEquationSeparate92,5102
type_glBlendFuncSeparate*       glBlendFuncSeparate;      glBlendFuncSeparate93,5166
type_glBufferData*              glBufferData;      glBufferData94,5226
type_glCompileShader*           glCompileShader;      glCompileShader95,5279
type_glCreateProgram*           glCreateProgram;      glCreateProgram96,5335
type_glCreateShader*            glCreateShader;      glCreateShader97,5391
type_glDeleteBuffers*           glDeleteBuffers;      glDeleteBuffers98,5446
type_glDeleteProgram*           glDeleteProgram;      glDeleteProgram99,5502
type_glDeleteShader*            glDeleteShader;      glDeleteShader100,5558
type_glDeleteVertexArrays*      glDeleteVertexArrays;      glDeleteVertexArrays101,5613
type_glDetachShader*            glDetachShader;      glDetachShader102,5674
type_glEnableVertexAttribArray* glEnableVertexAttribArray;      glEnableVertexAttribArray103,5729
type_glGenBuffers*              glGenBuffers;      glGenBuffers104,5795
type_glGenVertexArrays*         glGenVertexArrays;      glGenVertexArrays105,5848
type_glGetAttribLocation*       glGetAttribLocation;      glGetAttribLocation106,5906
type_glGetProgramInfoLog*       glGetProgramInfoLog;      glGetProgramInfoLog107,5966
type_glGetProgramiv*            glGetProgramiv;      glGetProgramiv108,6026
type_glGetShaderInfoLog*        glGetShaderInfoLog;      glGetShaderInfoLog109,6081
type_glGetShaderiv*             glGetShaderiv;glGetShaderiv110,6140
type_glGetStringi*              glGetStringi;glGetStringi111,6188
type_glGetUniformLocation*      glGetUniformLocation;      glGetUniformLocation112,6235
type_glLinkProgram*             glLinkProgram;      glLinkProgram113,6296
type_glShaderSource*            glShaderSource;      glShaderSource114,6350
type_glUniform1i*               glUniform1i;      glUniform1i115,6405
type_glUniformMatrix4fv*        glUniformMatrix4fv;      glUniformMatrix4fv116,6457
type_glUseProgram*              glUseProgram;      glUseProgram117,6516
type_glVertexAttribPointer*     glVertexAttribPointer;glVertexAttribPointer118,6569
struct ImGuiOpenGLImGuiOpenGL154,8493
    type_glActiveTexture*           glActiveTexture;glActiveTexture156,8516
    type_glAttachShader*            glAttachShader;glAttachShader157,8570
    type_glBindBuffer*              glBindBuffer;glBindBuffer158,8623
    type_glBindVertexArray*         glBindVertexArray;glBindVertexArray159,8674
    type_glBlendEquation*           glBlendEquation;glBlendEquation160,8730
    type_glBlendEquationSeparate*   glBlendEquationSeparate;glBlendEquationSeparate161,8784
    type_glBlendFuncSeparate*       glBlendFuncSeparate;glBlendFuncSeparate162,8846
    type_glBufferData*              glBufferData;glBufferData163,8904
    type_glCompileShader*           glCompileShader;glCompileShader164,8955
    type_glCreateProgram*           glCreateProgram;glCreateProgram165,9009
    type_glCreateShader*            glCreateShader;glCreateShader166,9063
    type_glDeleteBuffers*           glDeleteBuffers;glDeleteBuffers167,9116
    type_glDeleteProgram*           glDeleteProgram;glDeleteProgram168,9170
    type_glDeleteShader*            glDeleteShader;glDeleteShader169,9224
    type_glDeleteVertexArrays*      glDeleteVertexArrays;glDeleteVertexArrays170,9277
    type_glDetachShader*            glDetachShader;glDetachShader171,9336
    type_glEnableVertexAttribArray* glEnableVertexAttribArray;glEnableVertexAttribArray172,9389
    type_glGenBuffers*              glGenBuffers;glGenBuffers173,9453
    type_glGenVertexArrays*         glGenVertexArrays;glGenVertexArrays174,9504
    type_glGetAttribLocation*       glGetAttribLocation;glGetAttribLocation175,9560
    type_glGetProgramInfoLog*       glGetProgramInfoLog;glGetProgramInfoLog176,9618
    type_glGetProgramiv*            glGetProgramiv;glGetProgramiv177,9676
    type_glGetShaderInfoLog*        glGetShaderInfoLog;glGetShaderInfoLog178,9729
    type_glGetShaderiv*             glGetShaderiv;glGetShaderiv179,9786
    type_glGetStringi*              glGetStringi;glGetStringi180,9838
    type_glGetUniformLocation*      glGetUniformLocation;glGetUniformLocation181,9889
    type_glLinkProgram*             glLinkProgram;glLinkProgram182,9948
    type_glShaderSource*            glShaderSource;glShaderSource183,10000
    type_glUniform1i*               glUniform1i;glUniform1i184,10053
    type_glUniformMatrix4fv*        glUniformMatrix4fv;glUniformMatrix4fv185,10103
    type_glUseProgram*              glUseProgram;glUseProgram186,10160
    type_glVertexAttribPointer*     glVertexAttribPointer;glVertexAttribPointer187,10211
#define CreateImGuiOpenGL(CreateImGuiOpenGL190,10277
init_global_opengl_bindings(ImGuiOpenGL imgui_opengl)init_global_opengl_bindings227,12853

../gejo/gejo/win32_dx11.h,959
#define WIN32_DX11_HWIN32_DX11_H2,28
struct Win32DX11Win32DX1110,201
    ID3D11Device*            device;device12,222
    ID3D11DeviceContext*     device_context;device_context13,260
    IDXGISwapChain*          swap_chain;swap_chain14,306
    ID3D11RenderTargetView*  frame_buffer_view;frame_buffer_view15,348
    ID3D11RasterizerState*   rasterizer_state;rasterizer_state16,397
    ID3D11DepthStencilState* depth_stencil_state;depth_stencil_state17,445
    ID3D11DepthStencilView*  depth_buffer_view;depth_buffer_view18,496
    ID3D11BlendState*        blend_state;blend_state19,545
    ID3D11Debug*             debug_context;debug_context21,604
global_variable Win32DX11 g_win32_dx11;g_win32_dx1125,663
win32_init_directx11_render_views(ID3D11Device* device, IDXGISwapChain* swap_chain,win32_init_directx11_render_views28,721
win32_init_directx11(HWND window, b32 disable_alt_enter_fullscreen = true)win32_init_directx1156,1795

../gejo/gejo/win32_opengl.h,1313
#define WIN32_OPENGL_HWIN32_OPENGL_H2,30
typedef BOOL        OPENGL_APIENTRY wgl_swap_interval_EXT(int interval);wgl_swap_interval_EXT5,82
typedef HGLRC       OPENGL_APIENTRY wgl_create_context_attribs_ARB(HDC hdc, HGLRC h_share_contexwgl_create_context_attribs_ARB6,156
typedef BOOL        OPENGL_APIENTRY wgl_choose_pixel_format_ARB(HDC hdc, const int *piAttribILiswgl_choose_pixel_format_ARB7,281
typedef const char* OPENGL_APIENTRY wgl_get_extensions_string_ARB(HDC hdc);wgl_get_extensions_string_ARB8,463
global_variable wgl_swap_interval_EXT*          wglSwapIntervalEXT;wglSwapIntervalEXT10,542
global_variable wgl_create_context_attribs_ARB* wglCreateContextAttribsARB;wglCreateContextAttribsARB11,611
global_variable wgl_choose_pixel_format_ARB*    wglChoosePixelFormatARB;wglChoosePixelFormatARB12,688
global_variable wgl_get_extensions_string_ARB*  wglGetExtensionsStringARB;wglGetExtensionsStringARB13,762
typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLDEBUGPROC15,840
opengl_error_callback(GLenum source,opengl_error_callback24,1258
#define GL_DEBUG_TYPE_ERROR GL_DEBUG_TYPE_ERROR32,1540
struct Win32OpenGLWin32OpenGL39,1880
    HGLRC context;context41,1903
    OpenGL api;api42,1923
win32_create_opengl_context(HDC device_ctx)win32_create_opengl_context46,1968

../gejo/gejo/win32_platform.h,2448
#define WIN32_PLATFORM_HWIN32_PLATFORM_H2,32
global_variable PlatformAPI g_platform_api;g_platform_api12,328
PlatformFileHandle win32_get_file_handle(const char* file_name, u8 mode_flags)win32_get_file_handle14,375
void win32_read_data_from_file_handle(PlatformFileHandle* file_handle, u32 offset, u32 size, voiwin32_read_data_from_file_handle52,1919
void win32_write_data_to_file_handle(PlatformFileHandle* file_handle, u32 offset, u32 size, voidwin32_write_data_to_file_handle66,2397
void win32_close_file_handle(PlatformFileHandle* file_handle)win32_close_file_handle80,2884
PlatformFileListing* win32_list_files(MemoryArena* memory_arena, const char* file_name_pattern)win32_list_files86,3070
void* win32_allocate_memory(size_t size)win32_allocate_memory118,4011
void win32_deallocate_memory(void* memory)win32_deallocate_memory139,4553
DWORD WINAPI ThreadProc(LPVOID param)ThreadProc153,5016
struct Win32ThreadWin32Thread160,5211
    DWORD id;id162,5234
    HANDLE handle;handle163,5249
void win32_new_thread(PlatformThreadContext* thread_context)win32_new_thread166,5275
b32 win32_wait_for_threads(PlatformThreadContext* threads, u32 thread_count)win32_wait_for_threads175,5663
ThreadStatus win32_check_thread_status(PlatformThreadContext thread_context)win32_check_thread_status190,6147
void win32_begin_ticket_mutex(TicketMutex* ticket_mutex)win32_begin_ticket_mutex203,6563
void win32_end_ticket_mutex(TicketMutex* ticket_mutex)win32_end_ticket_mutex211,6942
void win32_debug_print(const char* format, ...)win32_debug_print216,7082
struct Win32XAudio2Win32XAudio2230,7511
    IXAudio2* context;context232,7535
    IXAudio2MasteringVoice* mastering_voice;mastering_voice233,7559
    WAVEFORMATEX wave_format_ext;wave_format_ext234,7605
    IXAudio2SourceVoice* source_voice;source_voice235,7640
global_variable Win32XAudio2 g_win32_xaudio2;g_win32_xaudio2238,7686
u32 win32_get_max_queued_sound_buffers()win32_get_max_queued_sound_buffers240,7735
u32 win32_queued_sound_buffers()win32_queued_sound_buffers245,7825
SoundBuffer win32_create_sound_buffer(uint32_t sample_count)win32_create_sound_buffer254,8069
void win32_submit_sound_buffer(SoundBuffer sound_buffer)win32_submit_sound_buffer279,9012
u32 win32_get_remaining_samples(SoundBuffer sound_buffer)win32_get_remaining_samples286,9268
void win32_init_platform_api(PlatformAPI* platform_api)win32_init_platform_api298,9721

../gejo/gejo/win32_util.h,1625
#define WIN32_UTIL_HWIN32_UTIL_H2,28
#define WIN32_EXE_FILE_NAME WIN32_EXE_FILE_NAME9,205
global_variable int64_t         g_perf_count_frequency;g_perf_count_frequency12,249
global_variable WINDOWPLACEMENT g_window_pos = {sizeof(g_window_pos)};g_window_pos13,306
struct Win32AppWin32App14,378
    HWND window;window16,398
    HDC device_context;device_context17,416
    V2u window_dimensions;window_dimensions18,441
global_variable Win32App        g_win32_app;g_win32_app20,473
V2u win32_get_window_dimension(HWND window)win32_get_window_dimension22,521
win32_get_time()win32_get_time36,821
win32_get_time_difference(LARGE_INTEGER start, LARGE_INTEGER end)win32_get_time_difference44,947
void win32_toggle_fullscreen(HWND window)win32_toggle_fullscreen51,1155
win32_get_last_write_time(const char* file_name)win32_get_last_write_time80,2330
void win32_build_exe_file_path(char* output_path, const char* file_name)win32_build_exe_file_path97,2917
struct Win32HotLoadedDLLWin32HotLoadedDLL114,3673
    char*    dll_file_path;dll_file_path116,3702
    char*    lock_file_path;lock_file_path117,3731
    u32      tmp_dll_number;tmp_dll_number118,3761
    FILETIME last_write_time;last_write_time119,3791
    HMODULE  hmodule;hmodule120,3822
b32 win32_check_new_dll(Win32HotLoadedDLL dll)win32_check_new_dll123,3851
void win32_load_dll(Win32HotLoadedDLL* dll)win32_load_dll132,4210
void win32_load_dll(Win32HotLoadedDLL* dll, char* dll_file_path, char* lock_file_path)win32_load_dll153,5125
void win32_init_window(HINSTANCE instance, WNDPROC window_proc)win32_init_window160,5332

../gejo/libs/glcorearb.h,337665
#define __gl_glcorearb_h_ __gl_glcorearb_h_2,27
#define WIN32_LEAN_AND_MEAN WIN32_LEAN_AND_MEAN20,578
#define APIENTRYAPIENTRY26,667
#define APIENTRYP APIENTRYP29,712
#define GLAPI GLAPI32,765
#define GL_VERSION_1_0 GL_VERSION_1_060,1678
typedef void GLvoid;GLvoid61,1706
typedef unsigned int GLenum;GLenum62,1728
typedef khronos_float_t GLfloat;GLfloat64,1784
typedef int GLint;GLint65,1818
typedef int GLsizei;GLsizei66,1838
typedef unsigned int GLbitfield;GLbitfield67,1860
typedef double GLdouble;GLdouble68,1894
typedef unsigned int GLuint;GLuint69,1920
typedef unsigned char GLboolean;GLboolean70,1950
typedef khronos_uint8_t GLubyte;GLubyte71,1984
#define GL_DEPTH_BUFFER_BIT GL_DEPTH_BUFFER_BIT72,2018
#define GL_STENCIL_BUFFER_BIT GL_STENCIL_BUFFER_BIT73,2072
#define GL_COLOR_BUFFER_BIT GL_COLOR_BUFFER_BIT74,2126
#define GL_FALSE GL_FALSE75,2180
#define GL_TRUE GL_TRUE76,2225
#define GL_POINTS GL_POINTS77,2270
#define GL_LINES GL_LINES78,2320
#define GL_LINE_LOOP GL_LINE_LOOP79,2370
#define GL_LINE_STRIP GL_LINE_STRIP80,2420
#define GL_TRIANGLES GL_TRIANGLES81,2470
#define GL_TRIANGLE_STRIP GL_TRIANGLE_STRIP82,2520
#define GL_TRIANGLE_FAN GL_TRIANGLE_FAN83,2570
#define GL_QUADS GL_QUADS84,2620
#define GL_NEVER GL_NEVER85,2670
#define GL_LESS GL_LESS86,2720
#define GL_EQUAL GL_EQUAL87,2770
#define GL_LEQUAL GL_LEQUAL88,2820
#define GL_GREATER GL_GREATER89,2870
#define GL_NOTEQUAL GL_NOTEQUAL90,2920
#define GL_GEQUAL GL_GEQUAL91,2970
#define GL_ALWAYS GL_ALWAYS92,3020
#define GL_ZERO GL_ZERO93,3070
#define GL_ONE GL_ONE94,3115
#define GL_SRC_COLOR GL_SRC_COLOR95,3160
#define GL_ONE_MINUS_SRC_COLOR GL_ONE_MINUS_SRC_COLOR96,3210
#define GL_SRC_ALPHA GL_SRC_ALPHA97,3260
#define GL_ONE_MINUS_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA98,3310
#define GL_DST_ALPHA GL_DST_ALPHA99,3360
#define GL_ONE_MINUS_DST_ALPHA GL_ONE_MINUS_DST_ALPHA100,3410
#define GL_DST_COLOR GL_DST_COLOR101,3460
#define GL_ONE_MINUS_DST_COLOR GL_ONE_MINUS_DST_COLOR102,3510
#define GL_SRC_ALPHA_SATURATE GL_SRC_ALPHA_SATURATE103,3560
#define GL_NONE GL_NONE104,3610
#define GL_FRONT_LEFT GL_FRONT_LEFT105,3655
#define GL_FRONT_RIGHT GL_FRONT_RIGHT106,3705
#define GL_BACK_LEFT GL_BACK_LEFT107,3755
#define GL_BACK_RIGHT GL_BACK_RIGHT108,3805
#define GL_FRONT GL_FRONT109,3855
#define GL_BACK GL_BACK110,3905
#define GL_LEFT GL_LEFT111,3955
#define GL_RIGHT GL_RIGHT112,4005
#define GL_FRONT_AND_BACK GL_FRONT_AND_BACK113,4055
#define GL_NO_ERROR GL_NO_ERROR114,4105
#define GL_INVALID_ENUM GL_INVALID_ENUM115,4150
#define GL_INVALID_VALUE GL_INVALID_VALUE116,4200
#define GL_INVALID_OPERATION GL_INVALID_OPERATION117,4250
#define GL_OUT_OF_MEMORY GL_OUT_OF_MEMORY118,4300
#define GL_CW GL_CW119,4350
#define GL_CCW GL_CCW120,4400
#define GL_POINT_SIZE GL_POINT_SIZE121,4450
#define GL_POINT_SIZE_RANGE GL_POINT_SIZE_RANGE122,4500
#define GL_POINT_SIZE_GRANULARITY GL_POINT_SIZE_GRANULARITY123,4550
#define GL_LINE_SMOOTH GL_LINE_SMOOTH124,4600
#define GL_LINE_WIDTH GL_LINE_WIDTH125,4650
#define GL_LINE_WIDTH_RANGE GL_LINE_WIDTH_RANGE126,4700
#define GL_LINE_WIDTH_GRANULARITY GL_LINE_WIDTH_GRANULARITY127,4750
#define GL_POLYGON_MODE GL_POLYGON_MODE128,4800
#define GL_POLYGON_SMOOTH GL_POLYGON_SMOOTH129,4850
#define GL_CULL_FACE GL_CULL_FACE130,4900
#define GL_CULL_FACE_MODE GL_CULL_FACE_MODE131,4950
#define GL_FRONT_FACE GL_FRONT_FACE132,5000
#define GL_DEPTH_RANGE GL_DEPTH_RANGE133,5050
#define GL_DEPTH_TEST GL_DEPTH_TEST134,5100
#define GL_DEPTH_WRITEMASK GL_DEPTH_WRITEMASK135,5150
#define GL_DEPTH_CLEAR_VALUE GL_DEPTH_CLEAR_VALUE136,5200
#define GL_DEPTH_FUNC GL_DEPTH_FUNC137,5250
#define GL_STENCIL_TEST GL_STENCIL_TEST138,5300
#define GL_STENCIL_CLEAR_VALUE GL_STENCIL_CLEAR_VALUE139,5350
#define GL_STENCIL_FUNC GL_STENCIL_FUNC140,5400
#define GL_STENCIL_VALUE_MASK GL_STENCIL_VALUE_MASK141,5450
#define GL_STENCIL_FAIL GL_STENCIL_FAIL142,5500
#define GL_STENCIL_PASS_DEPTH_FAIL GL_STENCIL_PASS_DEPTH_FAIL143,5550
#define GL_STENCIL_PASS_DEPTH_PASS GL_STENCIL_PASS_DEPTH_PASS144,5600
#define GL_STENCIL_REF GL_STENCIL_REF145,5650
#define GL_STENCIL_WRITEMASK GL_STENCIL_WRITEMASK146,5700
#define GL_VIEWPORT GL_VIEWPORT147,5750
#define GL_DITHER GL_DITHER148,5800
#define GL_BLEND_DST GL_BLEND_DST149,5850
#define GL_BLEND_SRC GL_BLEND_SRC150,5900
#define GL_BLEND GL_BLEND151,5950
#define GL_LOGIC_OP_MODE GL_LOGIC_OP_MODE152,6000
#define GL_DRAW_BUFFER GL_DRAW_BUFFER153,6050
#define GL_READ_BUFFER GL_READ_BUFFER154,6100
#define GL_SCISSOR_BOX GL_SCISSOR_BOX155,6150
#define GL_SCISSOR_TEST GL_SCISSOR_TEST156,6200
#define GL_COLOR_CLEAR_VALUE GL_COLOR_CLEAR_VALUE157,6250
#define GL_COLOR_WRITEMASK GL_COLOR_WRITEMASK158,6300
#define GL_DOUBLEBUFFER GL_DOUBLEBUFFER159,6350
#define GL_STEREO GL_STEREO160,6400
#define GL_LINE_SMOOTH_HINT GL_LINE_SMOOTH_HINT161,6450
#define GL_POLYGON_SMOOTH_HINT GL_POLYGON_SMOOTH_HINT162,6500
#define GL_UNPACK_SWAP_BYTES GL_UNPACK_SWAP_BYTES163,6550
#define GL_UNPACK_LSB_FIRST GL_UNPACK_LSB_FIRST164,6600
#define GL_UNPACK_ROW_LENGTH GL_UNPACK_ROW_LENGTH165,6650
#define GL_UNPACK_SKIP_ROWS GL_UNPACK_SKIP_ROWS166,6700
#define GL_UNPACK_SKIP_PIXELS GL_UNPACK_SKIP_PIXELS167,6750
#define GL_UNPACK_ALIGNMENT GL_UNPACK_ALIGNMENT168,6800
#define GL_PACK_SWAP_BYTES GL_PACK_SWAP_BYTES169,6850
#define GL_PACK_LSB_FIRST GL_PACK_LSB_FIRST170,6900
#define GL_PACK_ROW_LENGTH GL_PACK_ROW_LENGTH171,6950
#define GL_PACK_SKIP_ROWS GL_PACK_SKIP_ROWS172,7000
#define GL_PACK_SKIP_PIXELS GL_PACK_SKIP_PIXELS173,7050
#define GL_PACK_ALIGNMENT GL_PACK_ALIGNMENT174,7100
#define GL_MAX_TEXTURE_SIZE GL_MAX_TEXTURE_SIZE175,7150
#define GL_MAX_VIEWPORT_DIMS GL_MAX_VIEWPORT_DIMS176,7200
#define GL_SUBPIXEL_BITS GL_SUBPIXEL_BITS177,7250
#define GL_TEXTURE_1D GL_TEXTURE_1D178,7300
#define GL_TEXTURE_2D GL_TEXTURE_2D179,7350
#define GL_TEXTURE_WIDTH GL_TEXTURE_WIDTH180,7400
#define GL_TEXTURE_HEIGHT GL_TEXTURE_HEIGHT181,7450
#define GL_TEXTURE_BORDER_COLOR GL_TEXTURE_BORDER_COLOR182,7500
#define GL_DONT_CARE GL_DONT_CARE183,7550
#define GL_FASTEST GL_FASTEST184,7600
#define GL_NICEST GL_NICEST185,7650
#define GL_BYTE GL_BYTE186,7700
#define GL_UNSIGNED_BYTE GL_UNSIGNED_BYTE187,7750
#define GL_SHORT GL_SHORT188,7800
#define GL_UNSIGNED_SHORT GL_UNSIGNED_SHORT189,7850
#define GL_INT GL_INT190,7900
#define GL_UNSIGNED_INT GL_UNSIGNED_INT191,7950
#define GL_FLOAT GL_FLOAT192,8000
#define GL_STACK_OVERFLOW GL_STACK_OVERFLOW193,8050
#define GL_STACK_UNDERFLOW GL_STACK_UNDERFLOW194,8100
#define GL_CLEAR GL_CLEAR195,8150
#define GL_AND GL_AND196,8200
#define GL_AND_REVERSE GL_AND_REVERSE197,8250
#define GL_COPY GL_COPY198,8300
#define GL_AND_INVERTED GL_AND_INVERTED199,8350
#define GL_NOOP GL_NOOP200,8400
#define GL_XOR GL_XOR201,8450
#define GL_OR GL_OR202,8500
#define GL_NOR GL_NOR203,8550
#define GL_EQUIV GL_EQUIV204,8600
#define GL_INVERT GL_INVERT205,8650
#define GL_OR_REVERSE GL_OR_REVERSE206,8700
#define GL_COPY_INVERTED GL_COPY_INVERTED207,8750
#define GL_OR_INVERTED GL_OR_INVERTED208,8800
#define GL_NAND GL_NAND209,8850
#define GL_SET GL_SET210,8900
#define GL_TEXTURE GL_TEXTURE211,8950
#define GL_COLOR GL_COLOR212,9000
#define GL_DEPTH GL_DEPTH213,9050
#define GL_STENCIL GL_STENCIL214,9100
#define GL_STENCIL_INDEX GL_STENCIL_INDEX215,9150
#define GL_DEPTH_COMPONENT GL_DEPTH_COMPONENT216,9200
#define GL_RED GL_RED217,9250
#define GL_GREEN GL_GREEN218,9300
#define GL_BLUE GL_BLUE219,9350
#define GL_ALPHA GL_ALPHA220,9400
#define GL_RGB GL_RGB221,9450
#define GL_RGBA GL_RGBA222,9500
#define GL_POINT GL_POINT223,9550
#define GL_LINE GL_LINE224,9600
#define GL_FILL GL_FILL225,9650
#define GL_KEEP GL_KEEP226,9700
#define GL_REPLACE GL_REPLACE227,9750
#define GL_INCR GL_INCR228,9800
#define GL_DECR GL_DECR229,9850
#define GL_VENDOR GL_VENDOR230,9900
#define GL_RENDERER GL_RENDERER231,9950
#define GL_VERSION GL_VERSION232,10000
#define GL_EXTENSIONS GL_EXTENSIONS233,10050
#define GL_NEAREST GL_NEAREST234,10100
#define GL_LINEAR GL_LINEAR235,10150
#define GL_NEAREST_MIPMAP_NEAREST GL_NEAREST_MIPMAP_NEAREST236,10200
#define GL_LINEAR_MIPMAP_NEAREST GL_LINEAR_MIPMAP_NEAREST237,10250
#define GL_NEAREST_MIPMAP_LINEAR GL_NEAREST_MIPMAP_LINEAR238,10300
#define GL_LINEAR_MIPMAP_LINEAR GL_LINEAR_MIPMAP_LINEAR239,10350
#define GL_TEXTURE_MAG_FILTER GL_TEXTURE_MAG_FILTER240,10400
#define GL_TEXTURE_MIN_FILTER GL_TEXTURE_MIN_FILTER241,10450
#define GL_TEXTURE_WRAP_S GL_TEXTURE_WRAP_S242,10500
#define GL_TEXTURE_WRAP_T GL_TEXTURE_WRAP_T243,10550
#define GL_REPEAT GL_REPEAT244,10600
typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);PFNGLCULLFACEPROC245,10650
typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);PFNGLFRONTFACEPROC246,10709
typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);PFNGLHINTPROC247,10769
typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);PFNGLLINEWIDTHPROC248,10839
typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);PFNGLPOINTSIZEPROC249,10901
typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);PFNGLPOLYGONMODEPROC250,10962
typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);PFNGLSCISSORPROC251,11037
typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);PFNGLTEXPARAMETERFPROC252,11131
typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *paPFNGLTEXPARAMETERFVPROC253,11226
typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);PFNGLTEXPARAMETERIPROC254,11330
typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *paraPFNGLTEXPARAMETERIVPROC255,11423
typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, PFNGLTEXIMAGE1DPROC256,11525
typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, PFNGLTEXIMAGE2DPROC257,11700
typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum buf);PFNGLDRAWBUFFERPROC258,11891
typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);PFNGLCLEARPROC259,11951
typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat PFNGLCLEARCOLORPROC260,12011
typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);PFNGLCLEARSTENCILPROC261,12116
typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);PFNGLCLEARDEPTHPROC262,12175
typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);PFNGLSTENCILMASKPROC263,12239
typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLbPFNGLCOLORMASKPROC264,12301
typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);PFNGLDEPTHMASKPROC265,12413
typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);PFNGLDISABLEPROC266,12476
typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);PFNGLENABLEPROC267,12533
typedef void (APIENTRYP PFNGLFINISHPROC) (void);PFNGLFINISHPROC268,12589
typedef void (APIENTRYP PFNGLFLUSHPROC) (void);PFNGLFLUSHPROC269,12639
typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);PFNGLBLENDFUNCPROC270,12688
typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);PFNGLLOGICOPPROC271,12767
typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);PFNGLSTENCILFUNCPROC272,12827
typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);PFNGLSTENCILOPPROC273,12913
typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);PFNGLDEPTHFUNCPROC274,13001
typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);PFNGLPIXELSTOREFPROC275,13061
typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);PFNGLPIXELSTOREIPROC276,13139
typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum src);PFNGLREADBUFFERPROC277,13215
typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GPFNGLREADPIXELSPROC278,13275
typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *data);PFNGLGETBOOLEANVPROC279,13414
typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *data);PFNGLGETDOUBLEVPROC280,13494
typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);PFNGLGETERRORPROC281,13572
typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *data);PFNGLGETFLOATVPROC282,13626
typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *data);PFNGLGETINTEGERVPROC283,13702
typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);PFNGLGETSTRINGPROC284,13778
typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenumPFNGLGETTEXIMAGEPROC285,13848
typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *paramPFNGLGETTEXPARAMETERFVPROC286,13967
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params)PFNGLGETTEXPARAMETERIVPROC287,14068
typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pnaPFNGLGETTEXLEVELPARAMETERFVPROC288,14167
typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pnaPFNGLGETTEXLEVELPARAMETERIVPROC289,14286
typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);PFNGLISENABLEDPROC290,14403
typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble n, GLdouble f);PFNGLDEPTHRANGEPROC291,14467
typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);PFNGLVIEWPORTPROC292,14539
#define GL_VERSION_1_1 GL_VERSION_1_1346,18133
typedef khronos_float_t GLclampf;GLclampf347,18159
typedef double GLclampd;GLclampd348,18194
#define GL_COLOR_LOGIC_OP GL_COLOR_LOGIC_OP349,18220
#define GL_POLYGON_OFFSET_UNITS GL_POLYGON_OFFSET_UNITS350,18270
#define GL_POLYGON_OFFSET_POINT GL_POLYGON_OFFSET_POINT351,18320
#define GL_POLYGON_OFFSET_LINE GL_POLYGON_OFFSET_LINE352,18370
#define GL_POLYGON_OFFSET_FILL GL_POLYGON_OFFSET_FILL353,18420
#define GL_POLYGON_OFFSET_FACTOR GL_POLYGON_OFFSET_FACTOR354,18470
#define GL_TEXTURE_BINDING_1D GL_TEXTURE_BINDING_1D355,18520
#define GL_TEXTURE_BINDING_2D GL_TEXTURE_BINDING_2D356,18570
#define GL_TEXTURE_INTERNAL_FORMAT GL_TEXTURE_INTERNAL_FORMAT357,18620
#define GL_TEXTURE_RED_SIZE GL_TEXTURE_RED_SIZE358,18670
#define GL_TEXTURE_GREEN_SIZE GL_TEXTURE_GREEN_SIZE359,18720
#define GL_TEXTURE_BLUE_SIZE GL_TEXTURE_BLUE_SIZE360,18770
#define GL_TEXTURE_ALPHA_SIZE GL_TEXTURE_ALPHA_SIZE361,18820
#define GL_DOUBLE GL_DOUBLE362,18870
#define GL_PROXY_TEXTURE_1D GL_PROXY_TEXTURE_1D363,18920
#define GL_PROXY_TEXTURE_2D GL_PROXY_TEXTURE_2D364,18970
#define GL_R3_G3_B2 GL_R3_G3_B2365,19020
#define GL_RGB4 GL_RGB4366,19070
#define GL_RGB5 GL_RGB5367,19120
#define GL_RGB8 GL_RGB8368,19170
#define GL_RGB10 GL_RGB10369,19220
#define GL_RGB12 GL_RGB12370,19270
#define GL_RGB16 GL_RGB16371,19320
#define GL_RGBA2 GL_RGBA2372,19370
#define GL_RGBA4 GL_RGBA4373,19420
#define GL_RGB5_A1 GL_RGB5_A1374,19470
#define GL_RGBA8 GL_RGBA8375,19520
#define GL_RGB10_A2 GL_RGB10_A2376,19570
#define GL_RGBA12 GL_RGBA12377,19620
#define GL_RGBA16 GL_RGBA16378,19670
#define GL_VERTEX_ARRAY GL_VERTEX_ARRAY379,19720
typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);PFNGLDRAWARRAYSPROC380,19770
typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const vPFNGLDRAWELEMENTSPROC381,19859
typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, void **params);PFNGLGETPOINTERVPROC382,19971
typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);PFNGLPOLYGONOFFSETPROC383,20049
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalforPFNGLCOPYTEXIMAGE1DPROC384,20131
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalforPFNGLCOPYTEXIMAGE2DPROC385,20281
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, PFNGLCOPYTEXSUBIMAGE1DPROC386,20447
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, PFNGLCOPYTEXSUBIMAGE2DPROC387,20578
typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsiPFNGLTEXSUBIMAGE1DPROC388,20740
typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLinPFNGLTEXSUBIMAGE2DPROC389,20897
typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);PFNGLBINDTEXTUREPROC390,21085
typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);PFNGLDELETETEXTURESPROC391,21165
typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);PFNGLGENTEXTURESPROC392,21252
typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);PFNGLISTEXTUREPROC393,21330
#define GL_VERSION_1_2 GL_VERSION_1_2413,22949
#define GL_UNSIGNED_BYTE_3_3_2 GL_UNSIGNED_BYTE_3_3_2414,22975
#define GL_UNSIGNED_SHORT_4_4_4_4 GL_UNSIGNED_SHORT_4_4_4_4415,23025
#define GL_UNSIGNED_SHORT_5_5_5_1 GL_UNSIGNED_SHORT_5_5_5_1416,23075
#define GL_UNSIGNED_INT_8_8_8_8 GL_UNSIGNED_INT_8_8_8_8417,23125
#define GL_UNSIGNED_INT_10_10_10_2 GL_UNSIGNED_INT_10_10_10_2418,23175
#define GL_TEXTURE_BINDING_3D GL_TEXTURE_BINDING_3D419,23225
#define GL_PACK_SKIP_IMAGES GL_PACK_SKIP_IMAGES420,23275
#define GL_PACK_IMAGE_HEIGHT GL_PACK_IMAGE_HEIGHT421,23325
#define GL_UNPACK_SKIP_IMAGES GL_UNPACK_SKIP_IMAGES422,23375
#define GL_UNPACK_IMAGE_HEIGHT GL_UNPACK_IMAGE_HEIGHT423,23425
#define GL_TEXTURE_3D GL_TEXTURE_3D424,23475
#define GL_PROXY_TEXTURE_3D GL_PROXY_TEXTURE_3D425,23525
#define GL_TEXTURE_DEPTH GL_TEXTURE_DEPTH426,23575
#define GL_TEXTURE_WRAP_R GL_TEXTURE_WRAP_R427,23625
#define GL_MAX_3D_TEXTURE_SIZE GL_MAX_3D_TEXTURE_SIZE428,23675
#define GL_UNSIGNED_BYTE_2_3_3_REV GL_UNSIGNED_BYTE_2_3_3_REV429,23725
#define GL_UNSIGNED_SHORT_5_6_5 GL_UNSIGNED_SHORT_5_6_5430,23775
#define GL_UNSIGNED_SHORT_5_6_5_REV GL_UNSIGNED_SHORT_5_6_5_REV431,23825
#define GL_UNSIGNED_SHORT_4_4_4_4_REV GL_UNSIGNED_SHORT_4_4_4_4_REV432,23875
#define GL_UNSIGNED_SHORT_1_5_5_5_REV GL_UNSIGNED_SHORT_1_5_5_5_REV433,23925
#define GL_UNSIGNED_INT_8_8_8_8_REV GL_UNSIGNED_INT_8_8_8_8_REV434,23975
#define GL_UNSIGNED_INT_2_10_10_10_REV GL_UNSIGNED_INT_2_10_10_10_REV435,24025
#define GL_BGR GL_BGR436,24075
#define GL_BGRA GL_BGRA437,24125
#define GL_MAX_ELEMENTS_VERTICES GL_MAX_ELEMENTS_VERTICES438,24175
#define GL_MAX_ELEMENTS_INDICES GL_MAX_ELEMENTS_INDICES439,24225
#define GL_CLAMP_TO_EDGE GL_CLAMP_TO_EDGE440,24275
#define GL_TEXTURE_MIN_LOD GL_TEXTURE_MIN_LOD441,24325
#define GL_TEXTURE_MAX_LOD GL_TEXTURE_MAX_LOD442,24375
#define GL_TEXTURE_BASE_LEVEL GL_TEXTURE_BASE_LEVEL443,24425
#define GL_TEXTURE_MAX_LEVEL GL_TEXTURE_MAX_LEVEL444,24475
#define GL_SMOOTH_POINT_SIZE_RANGE GL_SMOOTH_POINT_SIZE_RANGE445,24525
#define GL_SMOOTH_POINT_SIZE_GRANULARITY GL_SMOOTH_POINT_SIZE_GRANULARITY446,24575
#define GL_SMOOTH_LINE_WIDTH_RANGE GL_SMOOTH_LINE_WIDTH_RANGE447,24625
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY GL_SMOOTH_LINE_WIDTH_GRANULARITY448,24675
#define GL_ALIASED_LINE_WIDTH_RANGE GL_ALIASED_LINE_WIDTH_RANGE449,24725
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsiPFNGLDRAWRANGEELEMENTSPROC450,24775
typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, PFNGLTEXIMAGE3DPROC451,24918
typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLinPFNGLTEXSUBIMAGE3DPROC452,25124
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, PFNGLCOPYTEXSUBIMAGE3DPROC453,25342
#define GL_VERSION_1_3 GL_VERSION_1_3463,26306
#define GL_TEXTURE0 GL_TEXTURE0464,26332
#define GL_TEXTURE1 GL_TEXTURE1465,26382
#define GL_TEXTURE2 GL_TEXTURE2466,26432
#define GL_TEXTURE3 GL_TEXTURE3467,26482
#define GL_TEXTURE4 GL_TEXTURE4468,26532
#define GL_TEXTURE5 GL_TEXTURE5469,26582
#define GL_TEXTURE6 GL_TEXTURE6470,26632
#define GL_TEXTURE7 GL_TEXTURE7471,26682
#define GL_TEXTURE8 GL_TEXTURE8472,26732
#define GL_TEXTURE9 GL_TEXTURE9473,26782
#define GL_TEXTURE10 GL_TEXTURE10474,26832
#define GL_TEXTURE11 GL_TEXTURE11475,26882
#define GL_TEXTURE12 GL_TEXTURE12476,26932
#define GL_TEXTURE13 GL_TEXTURE13477,26982
#define GL_TEXTURE14 GL_TEXTURE14478,27032
#define GL_TEXTURE15 GL_TEXTURE15479,27082
#define GL_TEXTURE16 GL_TEXTURE16480,27132
#define GL_TEXTURE17 GL_TEXTURE17481,27182
#define GL_TEXTURE18 GL_TEXTURE18482,27232
#define GL_TEXTURE19 GL_TEXTURE19483,27282
#define GL_TEXTURE20 GL_TEXTURE20484,27332
#define GL_TEXTURE21 GL_TEXTURE21485,27382
#define GL_TEXTURE22 GL_TEXTURE22486,27432
#define GL_TEXTURE23 GL_TEXTURE23487,27482
#define GL_TEXTURE24 GL_TEXTURE24488,27532
#define GL_TEXTURE25 GL_TEXTURE25489,27582
#define GL_TEXTURE26 GL_TEXTURE26490,27632
#define GL_TEXTURE27 GL_TEXTURE27491,27682
#define GL_TEXTURE28 GL_TEXTURE28492,27732
#define GL_TEXTURE29 GL_TEXTURE29493,27782
#define GL_TEXTURE30 GL_TEXTURE30494,27832
#define GL_TEXTURE31 GL_TEXTURE31495,27882
#define GL_ACTIVE_TEXTURE GL_ACTIVE_TEXTURE496,27932
#define GL_MULTISAMPLE GL_MULTISAMPLE497,27982
#define GL_SAMPLE_ALPHA_TO_COVERAGE GL_SAMPLE_ALPHA_TO_COVERAGE498,28032
#define GL_SAMPLE_ALPHA_TO_ONE GL_SAMPLE_ALPHA_TO_ONE499,28082
#define GL_SAMPLE_COVERAGE GL_SAMPLE_COVERAGE500,28132
#define GL_SAMPLE_BUFFERS GL_SAMPLE_BUFFERS501,28182
#define GL_SAMPLES GL_SAMPLES502,28232
#define GL_SAMPLE_COVERAGE_VALUE GL_SAMPLE_COVERAGE_VALUE503,28282
#define GL_SAMPLE_COVERAGE_INVERT GL_SAMPLE_COVERAGE_INVERT504,28332
#define GL_TEXTURE_CUBE_MAP GL_TEXTURE_CUBE_MAP505,28382
#define GL_TEXTURE_BINDING_CUBE_MAP GL_TEXTURE_BINDING_CUBE_MAP506,28432
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X GL_TEXTURE_CUBE_MAP_POSITIVE_X507,28482
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X GL_TEXTURE_CUBE_MAP_NEGATIVE_X508,28532
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y GL_TEXTURE_CUBE_MAP_POSITIVE_Y509,28582
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y GL_TEXTURE_CUBE_MAP_NEGATIVE_Y510,28632
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z GL_TEXTURE_CUBE_MAP_POSITIVE_Z511,28682
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z GL_TEXTURE_CUBE_MAP_NEGATIVE_Z512,28732
#define GL_PROXY_TEXTURE_CUBE_MAP GL_PROXY_TEXTURE_CUBE_MAP513,28782
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE GL_MAX_CUBE_MAP_TEXTURE_SIZE514,28832
#define GL_COMPRESSED_RGB GL_COMPRESSED_RGB515,28882
#define GL_COMPRESSED_RGBA GL_COMPRESSED_RGBA516,28932
#define GL_TEXTURE_COMPRESSION_HINT GL_TEXTURE_COMPRESSION_HINT517,28982
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE GL_TEXTURE_COMPRESSED_IMAGE_SIZE518,29032
#define GL_TEXTURE_COMPRESSED GL_TEXTURE_COMPRESSED519,29082
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS GL_NUM_COMPRESSED_TEXTURE_FORMATS520,29132
#define GL_COMPRESSED_TEXTURE_FORMATS GL_COMPRESSED_TEXTURE_FORMATS521,29182
#define GL_CLAMP_TO_BORDER GL_CLAMP_TO_BORDER522,29232
typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);PFNGLACTIVETEXTUREPROC523,29282
typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);PFNGLSAMPLECOVERAGEPROC524,29349
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum interPFNGLCOMPRESSEDTEXIMAGE3DPROC525,29434
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum interPFNGLCOMPRESSEDTEXIMAGE2DPROC526,29640
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum interPFNGLCOMPRESSEDTEXIMAGE1DPROC527,29831
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xofPFNGLCOMPRESSEDTEXSUBIMAGE3DPROC528,30006
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xofPFNGLCOMPRESSEDTEXSUBIMAGE2DPROC529,30238
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xofPFNGLCOMPRESSEDTEXSUBIMAGE1DPROC530,30440
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);PFNGLGETCOMPRESSEDTEXIMAGEPROC531,30611
#define GL_VERSION_1_4 GL_VERSION_1_4546,32119
#define GL_BLEND_DST_RGB GL_BLEND_DST_RGB547,32145
#define GL_BLEND_SRC_RGB GL_BLEND_SRC_RGB548,32195
#define GL_BLEND_DST_ALPHA GL_BLEND_DST_ALPHA549,32245
#define GL_BLEND_SRC_ALPHA GL_BLEND_SRC_ALPHA550,32295
#define GL_POINT_FADE_THRESHOLD_SIZE GL_POINT_FADE_THRESHOLD_SIZE551,32345
#define GL_DEPTH_COMPONENT16 GL_DEPTH_COMPONENT16552,32395
#define GL_DEPTH_COMPONENT24 GL_DEPTH_COMPONENT24553,32445
#define GL_DEPTH_COMPONENT32 GL_DEPTH_COMPONENT32554,32495
#define GL_MIRRORED_REPEAT GL_MIRRORED_REPEAT555,32545
#define GL_MAX_TEXTURE_LOD_BIAS GL_MAX_TEXTURE_LOD_BIAS556,32595
#define GL_TEXTURE_LOD_BIAS GL_TEXTURE_LOD_BIAS557,32645
#define GL_INCR_WRAP GL_INCR_WRAP558,32695
#define GL_DECR_WRAP GL_DECR_WRAP559,32745
#define GL_TEXTURE_DEPTH_SIZE GL_TEXTURE_DEPTH_SIZE560,32795
#define GL_TEXTURE_COMPARE_MODE GL_TEXTURE_COMPARE_MODE561,32845
#define GL_TEXTURE_COMPARE_FUNC GL_TEXTURE_COMPARE_FUNC562,32895
#define GL_BLEND_COLOR GL_BLEND_COLOR563,32945
#define GL_BLEND_EQUATION GL_BLEND_EQUATION564,32995
#define GL_CONSTANT_COLOR GL_CONSTANT_COLOR565,33045
#define GL_ONE_MINUS_CONSTANT_COLOR GL_ONE_MINUS_CONSTANT_COLOR566,33095
#define GL_CONSTANT_ALPHA GL_CONSTANT_ALPHA567,33145
#define GL_ONE_MINUS_CONSTANT_ALPHA GL_ONE_MINUS_CONSTANT_ALPHA568,33195
#define GL_FUNC_ADD GL_FUNC_ADD569,33245
#define GL_FUNC_REVERSE_SUBTRACT GL_FUNC_REVERSE_SUBTRACT570,33295
#define GL_FUNC_SUBTRACT GL_FUNC_SUBTRACT571,33345
#define GL_MIN GL_MIN572,33395
#define GL_MAX GL_MAX573,33445
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenuPFNGLBLENDFUNCSEPARATEPROC574,33495
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizePFNGLMULTIDRAWARRAYSPROC575,33630
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum tPFNGLMULTIDRAWELEMENTSPROC576,33757
typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);PFNGLPOINTPARAMETERFPROC577,33906
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);PFNGLPOINTPARAMETERFVPROC578,33988
typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);PFNGLPOINTPARAMETERIPROC579,34079
typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);PFNGLPOINTPARAMETERIVPROC580,34159
typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat PFNGLBLENDCOLORPROC581,34248
typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);PFNGLBLENDEQUATIONPROC582,34353
#define GL_VERSION_1_5 GL_VERSION_1_5597,35322
typedef khronos_ssize_t GLsizeiptr;GLsizeiptr598,35348
typedef khronos_intptr_t GLintptr;GLintptr599,35385
#define GL_BUFFER_SIZE GL_BUFFER_SIZE600,35421
#define GL_BUFFER_USAGE GL_BUFFER_USAGE601,35471
#define GL_QUERY_COUNTER_BITS GL_QUERY_COUNTER_BITS602,35521
#define GL_CURRENT_QUERY GL_CURRENT_QUERY603,35571
#define GL_QUERY_RESULT GL_QUERY_RESULT604,35621
#define GL_QUERY_RESULT_AVAILABLE GL_QUERY_RESULT_AVAILABLE605,35671
#define GL_ARRAY_BUFFER GL_ARRAY_BUFFER606,35721
#define GL_ELEMENT_ARRAY_BUFFER GL_ELEMENT_ARRAY_BUFFER607,35771
#define GL_ARRAY_BUFFER_BINDING GL_ARRAY_BUFFER_BINDING608,35821
#define GL_ELEMENT_ARRAY_BUFFER_BINDING GL_ELEMENT_ARRAY_BUFFER_BINDING609,35871
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING610,35921
#define GL_READ_ONLY GL_READ_ONLY611,35975
#define GL_WRITE_ONLY GL_WRITE_ONLY612,36025
#define GL_READ_WRITE GL_READ_WRITE613,36075
#define GL_BUFFER_ACCESS GL_BUFFER_ACCESS614,36125
#define GL_BUFFER_MAPPED GL_BUFFER_MAPPED615,36175
#define GL_BUFFER_MAP_POINTER GL_BUFFER_MAP_POINTER616,36225
#define GL_STREAM_DRAW GL_STREAM_DRAW617,36275
#define GL_STREAM_READ GL_STREAM_READ618,36325
#define GL_STREAM_COPY GL_STREAM_COPY619,36375
#define GL_STATIC_DRAW GL_STATIC_DRAW620,36425
#define GL_STATIC_READ GL_STATIC_READ621,36475
#define GL_STATIC_COPY GL_STATIC_COPY622,36525
#define GL_DYNAMIC_DRAW GL_DYNAMIC_DRAW623,36575
#define GL_DYNAMIC_READ GL_DYNAMIC_READ624,36625
#define GL_DYNAMIC_COPY GL_DYNAMIC_COPY625,36675
#define GL_SAMPLES_PASSED GL_SAMPLES_PASSED626,36725
#define GL_SRC1_ALPHA GL_SRC1_ALPHA627,36775
typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);PFNGLGENQUERIESPROC628,36825
typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);PFNGLDELETEQUERIESPROC629,36897
typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);PFNGLISQUERYPROC630,36978
typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);PFNGLBEGINQUERYPROC631,37039
typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);PFNGLENDQUERYPROC632,37113
typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);PFNGLGETQUERYIVPROC633,37174
typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);PFNGLGETQUERYOBJECTIVPROC634,37266
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);PFNGLGETQUERYOBJECTUIVPROC635,37360
typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);PFNGLBINDBUFFERPROC636,37456
typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);PFNGLDELETEBUFFERSPROC637,37534
typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);PFNGLGENBUFFERSPROC638,37619
typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);PFNGLISBUFFERPROC639,37695
typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, PFNGLBUFFERDATAPROC640,37761
typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr sizePFNGLBUFFERSUBDATAPROC641,37873
typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr sPFNGLGETBUFFERSUBDATAPROC642,37991
typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);PFNGLMAPBUFFERPROC643,38106
typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);PFNGLUNMAPBUFFERPROC644,38184
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *paraPFNGLGETBUFFERPARAMETERIVPROC645,38253
typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params)PFNGLGETBUFFERPOINTERVPROC646,38355
#define GL_VERSION_2_0 GL_VERSION_2_0671,39946
typedef char GLchar;GLchar672,39972
typedef khronos_int16_t GLshort;GLshort673,39994
typedef khronos_int8_t GLbyte;GLbyte674,40028
typedef khronos_uint16_t GLushort;GLushort675,40060
#define GL_BLEND_EQUATION_RGB GL_BLEND_EQUATION_RGB676,40096
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED GL_VERTEX_ATTRIB_ARRAY_ENABLED677,40146
#define GL_VERTEX_ATTRIB_ARRAY_SIZE GL_VERTEX_ATTRIB_ARRAY_SIZE678,40196
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE GL_VERTEX_ATTRIB_ARRAY_STRIDE679,40246
#define GL_VERTEX_ATTRIB_ARRAY_TYPE GL_VERTEX_ATTRIB_ARRAY_TYPE680,40296
#define GL_CURRENT_VERTEX_ATTRIB GL_CURRENT_VERTEX_ATTRIB681,40346
#define GL_VERTEX_PROGRAM_POINT_SIZE GL_VERTEX_PROGRAM_POINT_SIZE682,40396
#define GL_VERTEX_ATTRIB_ARRAY_POINTER GL_VERTEX_ATTRIB_ARRAY_POINTER683,40446
#define GL_STENCIL_BACK_FUNC GL_STENCIL_BACK_FUNC684,40496
#define GL_STENCIL_BACK_FAIL GL_STENCIL_BACK_FAIL685,40546
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL GL_STENCIL_BACK_PASS_DEPTH_FAIL686,40596
#define GL_STENCIL_BACK_PASS_DEPTH_PASS GL_STENCIL_BACK_PASS_DEPTH_PASS687,40646
#define GL_MAX_DRAW_BUFFERS GL_MAX_DRAW_BUFFERS688,40696
#define GL_DRAW_BUFFER0 GL_DRAW_BUFFER0689,40746
#define GL_DRAW_BUFFER1 GL_DRAW_BUFFER1690,40796
#define GL_DRAW_BUFFER2 GL_DRAW_BUFFER2691,40846
#define GL_DRAW_BUFFER3 GL_DRAW_BUFFER3692,40896
#define GL_DRAW_BUFFER4 GL_DRAW_BUFFER4693,40946
#define GL_DRAW_BUFFER5 GL_DRAW_BUFFER5694,40996
#define GL_DRAW_BUFFER6 GL_DRAW_BUFFER6695,41046
#define GL_DRAW_BUFFER7 GL_DRAW_BUFFER7696,41096
#define GL_DRAW_BUFFER8 GL_DRAW_BUFFER8697,41146
#define GL_DRAW_BUFFER9 GL_DRAW_BUFFER9698,41196
#define GL_DRAW_BUFFER10 GL_DRAW_BUFFER10699,41246
#define GL_DRAW_BUFFER11 GL_DRAW_BUFFER11700,41296
#define GL_DRAW_BUFFER12 GL_DRAW_BUFFER12701,41346
#define GL_DRAW_BUFFER13 GL_DRAW_BUFFER13702,41396
#define GL_DRAW_BUFFER14 GL_DRAW_BUFFER14703,41446
#define GL_DRAW_BUFFER15 GL_DRAW_BUFFER15704,41496
#define GL_BLEND_EQUATION_ALPHA GL_BLEND_EQUATION_ALPHA705,41546
#define GL_MAX_VERTEX_ATTRIBS GL_MAX_VERTEX_ATTRIBS706,41596
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED GL_VERTEX_ATTRIB_ARRAY_NORMALIZED707,41646
#define GL_MAX_TEXTURE_IMAGE_UNITS GL_MAX_TEXTURE_IMAGE_UNITS708,41696
#define GL_FRAGMENT_SHADER GL_FRAGMENT_SHADER709,41746
#define GL_VERTEX_SHADER GL_VERTEX_SHADER710,41796
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS GL_MAX_FRAGMENT_UNIFORM_COMPONENTS711,41846
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS GL_MAX_VERTEX_UNIFORM_COMPONENTS712,41897
#define GL_MAX_VARYING_FLOATS GL_MAX_VARYING_FLOATS713,41947
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS714,41997
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS715,42047
#define GL_SHADER_TYPE GL_SHADER_TYPE716,42099
#define GL_FLOAT_VEC2 GL_FLOAT_VEC2717,42149
#define GL_FLOAT_VEC3 GL_FLOAT_VEC3718,42199
#define GL_FLOAT_VEC4 GL_FLOAT_VEC4719,42249
#define GL_INT_VEC2 GL_INT_VEC2720,42299
#define GL_INT_VEC3 GL_INT_VEC3721,42349
#define GL_INT_VEC4 GL_INT_VEC4722,42399
#define GL_BOOL GL_BOOL723,42449
#define GL_BOOL_VEC2 GL_BOOL_VEC2724,42499
#define GL_BOOL_VEC3 GL_BOOL_VEC3725,42549
#define GL_BOOL_VEC4 GL_BOOL_VEC4726,42599
#define GL_FLOAT_MAT2 GL_FLOAT_MAT2727,42649
#define GL_FLOAT_MAT3 GL_FLOAT_MAT3728,42699
#define GL_FLOAT_MAT4 GL_FLOAT_MAT4729,42749
#define GL_SAMPLER_1D GL_SAMPLER_1D730,42799
#define GL_SAMPLER_2D GL_SAMPLER_2D731,42849
#define GL_SAMPLER_3D GL_SAMPLER_3D732,42899
#define GL_SAMPLER_CUBE GL_SAMPLER_CUBE733,42949
#define GL_SAMPLER_1D_SHADOW GL_SAMPLER_1D_SHADOW734,42999
#define GL_SAMPLER_2D_SHADOW GL_SAMPLER_2D_SHADOW735,43049
#define GL_DELETE_STATUS GL_DELETE_STATUS736,43099
#define GL_COMPILE_STATUS GL_COMPILE_STATUS737,43149
#define GL_LINK_STATUS GL_LINK_STATUS738,43199
#define GL_VALIDATE_STATUS GL_VALIDATE_STATUS739,43249
#define GL_INFO_LOG_LENGTH GL_INFO_LOG_LENGTH740,43299
#define GL_ATTACHED_SHADERS GL_ATTACHED_SHADERS741,43349
#define GL_ACTIVE_UNIFORMS GL_ACTIVE_UNIFORMS742,43399
#define GL_ACTIVE_UNIFORM_MAX_LENGTH GL_ACTIVE_UNIFORM_MAX_LENGTH743,43449
#define GL_SHADER_SOURCE_LENGTH GL_SHADER_SOURCE_LENGTH744,43499
#define GL_ACTIVE_ATTRIBUTES GL_ACTIVE_ATTRIBUTES745,43549
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH GL_ACTIVE_ATTRIBUTE_MAX_LENGTH746,43599
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT GL_FRAGMENT_SHADER_DERIVATIVE_HINT747,43649
#define GL_SHADING_LANGUAGE_VERSION GL_SHADING_LANGUAGE_VERSION748,43700
#define GL_CURRENT_PROGRAM GL_CURRENT_PROGRAM749,43750
#define GL_POINT_SPRITE_COORD_ORIGIN GL_POINT_SPRITE_COORD_ORIGIN750,43800
#define GL_LOWER_LEFT GL_LOWER_LEFT751,43850
#define GL_UPPER_LEFT GL_UPPER_LEFT752,43900
#define GL_STENCIL_BACK_REF GL_STENCIL_BACK_REF753,43950
#define GL_STENCIL_BACK_VALUE_MASK GL_STENCIL_BACK_VALUE_MASK754,44000
#define GL_STENCIL_BACK_WRITEMASK GL_STENCIL_BACK_WRITEMASK755,44050
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);PFNGLBLENDEQUATIONSEPARATEPROC756,44100
typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);PFNGLDRAWBUFFERSPROC757,44193
typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GPFNGLSTENCILOPSEPARATEPROC758,44273
typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuiPFNGLSTENCILFUNCSEPARATEPROC759,44385
typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);PFNGLSTENCILMASKSEPARATEPROC760,44492
typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);PFNGLATTACHSHADERPROC761,44575
typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLcharPFNGLBINDATTRIBLOCATIONPROC762,44656
typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);PFNGLCOMPILESHADERPROC763,44762
typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);PFNGLCREATEPROGRAMPROC764,44828
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);PFNGLCREATESHADERPROC765,44887
typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);PFNGLDELETEPROGRAMPROC766,44952
typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);PFNGLDELETESHADERPROC767,45019
typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);PFNGLDETACHSHADERPROC768,45084
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);PFNGLDISABLEVERTEXATTRIBARRAYPROC769,45165
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);PFNGLENABLEVERTEXATTRIBARRAYPROC770,45241
typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSizePFNGLGETACTIVEATTRIBPROC771,45316
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSizPFNGLGETACTIVEUNIFORMPROC772,45474
typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei PFNGLGETATTACHEDSHADERSPROC773,45633
typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);PFNGLGETATTRIBLOCATIONPROC774,45756
typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);PFNGLGETPROGRAMIVPROC775,45848
typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *lPFNGLGETPROGRAMINFOLOGPROC776,45943
typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);PFNGLGETSHADERIVPROC777,46065
typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *lenPFNGLGETSHADERINFOLOGPROC778,46158
typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *lengPFNGLGETSHADERSOURCEPROC779,46278
typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);PFNGLGETUNIFORMLOCATIONPROC780,46396
typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params)PFNGLGETUNIFORMFVPROC781,46489
typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);PFNGLGETUNIFORMIVPROC782,46588
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *paramPFNGLGETVERTEXATTRIBDVPROC783,46685
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *paramsPFNGLGETVERTEXATTRIBFVPROC784,46786
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);PFNGLGETVERTEXATTRIBIVPROC785,46886
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **poPFNGLGETVERTEXATTRIBPOINTERVPROC786,46984
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);PFNGLISPROGRAMPROC787,47089
typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);PFNGLISSHADERPROC788,47157
typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);PFNGLLINKPROGRAMPROC789,47223
typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *consPFNGLSHADERSOURCEPROC790,47288
typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);PFNGLUSEPROGRAMPROC791,47417
typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);PFNGLUNIFORM1FPROC792,47481
typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);PFNGLUNIFORM2FPROC793,47556
typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)PFNGLUNIFORM3FPROC794,47643
typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2,PFNGLUNIFORM4FPROC795,47742
typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);PFNGLUNIFORM1IPROC796,47853
typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);PFNGLUNIFORM2IPROC797,47926
typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);PFNGLUNIFORM3IPROC798,48009
typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLintPFNGLUNIFORM4IPROC799,48102
typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *valuPFNGLUNIFORM1FVPROC800,48205
typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *valuPFNGLUNIFORM2FVPROC801,48306
typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *valuPFNGLUNIFORM3FVPROC802,48407
typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *valuPFNGLUNIFORM4FVPROC803,48508
typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value)PFNGLUNIFORM1IVPROC804,48609
typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value)PFNGLUNIFORM2IVPROC805,48708
typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value)PFNGLUNIFORM3IVPROC806,48807
typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value)PFNGLUNIFORM4IVPROC807,48906
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean traPFNGLUNIFORMMATRIX2FVPROC808,49005
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean traPFNGLUNIFORMMATRIX3FVPROC809,49133
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean traPFNGLUNIFORMMATRIX4FVPROC810,49261
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);PFNGLVALIDATEPROGRAMPROC811,49389
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);PFNGLVERTEXATTRIB1DPROC812,49458
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIB1DVPROC813,49536
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);PFNGLVERTEXATTRIB1FPROC814,49622
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);PFNGLVERTEXATTRIB1FVPROC815,49699
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);PFNGLVERTEXATTRIB1SPROC816,49784
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);PFNGLVERTEXATTRIB1SVPROC817,49861
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);PFNGLVERTEXATTRIB2DPROC818,49946
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIB2DVPROC819,50036
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);PFNGLVERTEXATTRIB2FPROC820,50122
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);PFNGLVERTEXATTRIB2FVPROC821,50210
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);PFNGLVERTEXATTRIB2SPROC822,50295
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);PFNGLVERTEXATTRIB2SVPROC823,50383
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoublePFNGLVERTEXATTRIB3DPROC824,50468
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIB3DVPROC825,50570
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z)PFNGLVERTEXATTRIB3FPROC826,50656
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);PFNGLVERTEXATTRIB3FVPROC827,50755
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z)PFNGLVERTEXATTRIB3SPROC828,50840
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);PFNGLVERTEXATTRIB3SVPROC829,50939
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);PFNGLVERTEXATTRIB4NBVPROC830,51024
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);PFNGLVERTEXATTRIB4NIVPROC831,51109
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);PFNGLVERTEXATTRIB4NSVPROC832,51193
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte PFNGLVERTEXATTRIB4NUBPROC833,51279
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);PFNGLVERTEXATTRIB4NUBVPROC834,51391
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);PFNGLVERTEXATTRIB4NUIVPROC835,51478
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);PFNGLVERTEXATTRIB4NUSVPROC836,51564
typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);PFNGLVERTEXATTRIB4BVPROC837,51652
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoublePFNGLVERTEXATTRIB4DPROC838,51736
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIB4DVPROC839,51850
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z,PFNGLVERTEXATTRIB4FPROC840,51936
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);PFNGLVERTEXATTRIB4FVPROC841,52046
typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);PFNGLVERTEXATTRIB4IVPROC842,52131
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z,PFNGLVERTEXATTRIB4SPROC843,52214
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);PFNGLVERTEXATTRIB4SVPROC844,52324
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);PFNGLVERTEXATTRIB4UBVPROC845,52409
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);PFNGLVERTEXATTRIB4UIVPROC846,52495
typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);PFNGLVERTEXATTRIB4USVPROC847,52580
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLPFNGLVERTEXATTRIBPOINTERPROC848,52667
#define GL_VERSION_2_1 GL_VERSION_2_1947,60519
#define GL_PIXEL_PACK_BUFFER GL_PIXEL_PACK_BUFFER948,60545
#define GL_PIXEL_UNPACK_BUFFER GL_PIXEL_UNPACK_BUFFER949,60595
#define GL_PIXEL_PACK_BUFFER_BINDING GL_PIXEL_PACK_BUFFER_BINDING950,60645
#define GL_PIXEL_UNPACK_BUFFER_BINDING GL_PIXEL_UNPACK_BUFFER_BINDING951,60695
#define GL_FLOAT_MAT2x3 GL_FLOAT_MAT2x3952,60745
#define GL_FLOAT_MAT2x4 GL_FLOAT_MAT2x4953,60795
#define GL_FLOAT_MAT3x2 GL_FLOAT_MAT3x2954,60845
#define GL_FLOAT_MAT3x4 GL_FLOAT_MAT3x4955,60895
#define GL_FLOAT_MAT4x2 GL_FLOAT_MAT4x2956,60945
#define GL_FLOAT_MAT4x3 GL_FLOAT_MAT4x3957,60995
#define GL_SRGB GL_SRGB958,61045
#define GL_SRGB8 GL_SRGB8959,61095
#define GL_SRGB_ALPHA GL_SRGB_ALPHA960,61145
#define GL_SRGB8_ALPHA8 GL_SRGB8_ALPHA8961,61195
#define GL_COMPRESSED_SRGB GL_COMPRESSED_SRGB962,61245
#define GL_COMPRESSED_SRGB_ALPHA GL_COMPRESSED_SRGB_ALPHA963,61295
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX2X3FVPROC964,61345
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX3X2FVPROC965,61475
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX2X4FVPROC966,61605
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX4X2FVPROC967,61735
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX3X4FVPROC968,61865
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX4X3FVPROC969,61995
#define GL_VERSION_3_0 GL_VERSION_3_0981,62924
typedef khronos_uint16_t GLhalf;GLhalf982,62950
#define GL_COMPARE_REF_TO_TEXTURE GL_COMPARE_REF_TO_TEXTURE983,62984
#define GL_CLIP_DISTANCE0 GL_CLIP_DISTANCE0984,63034
#define GL_CLIP_DISTANCE1 GL_CLIP_DISTANCE1985,63084
#define GL_CLIP_DISTANCE2 GL_CLIP_DISTANCE2986,63134
#define GL_CLIP_DISTANCE3 GL_CLIP_DISTANCE3987,63184
#define GL_CLIP_DISTANCE4 GL_CLIP_DISTANCE4988,63234
#define GL_CLIP_DISTANCE5 GL_CLIP_DISTANCE5989,63284
#define GL_CLIP_DISTANCE6 GL_CLIP_DISTANCE6990,63334
#define GL_CLIP_DISTANCE7 GL_CLIP_DISTANCE7991,63384
#define GL_MAX_CLIP_DISTANCES GL_MAX_CLIP_DISTANCES992,63434
#define GL_MAJOR_VERSION GL_MAJOR_VERSION993,63484
#define GL_MINOR_VERSION GL_MINOR_VERSION994,63534
#define GL_NUM_EXTENSIONS GL_NUM_EXTENSIONS995,63584
#define GL_CONTEXT_FLAGS GL_CONTEXT_FLAGS996,63634
#define GL_COMPRESSED_RED GL_COMPRESSED_RED997,63684
#define GL_COMPRESSED_RG GL_COMPRESSED_RG998,63734
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT999,63784
#define GL_RGBA32F GL_RGBA32F1000,63843
#define GL_RGB32F GL_RGB32F1001,63893
#define GL_RGBA16F GL_RGBA16F1002,63943
#define GL_RGB16F GL_RGB16F1003,63993
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER GL_VERTEX_ATTRIB_ARRAY_INTEGER1004,64043
#define GL_MAX_ARRAY_TEXTURE_LAYERS GL_MAX_ARRAY_TEXTURE_LAYERS1005,64093
#define GL_MIN_PROGRAM_TEXEL_OFFSET GL_MIN_PROGRAM_TEXEL_OFFSET1006,64143
#define GL_MAX_PROGRAM_TEXEL_OFFSET GL_MAX_PROGRAM_TEXEL_OFFSET1007,64193
#define GL_CLAMP_READ_COLOR GL_CLAMP_READ_COLOR1008,64243
#define GL_FIXED_ONLY GL_FIXED_ONLY1009,64293
#define GL_MAX_VARYING_COMPONENTS GL_MAX_VARYING_COMPONENTS1010,64343
#define GL_TEXTURE_1D_ARRAY GL_TEXTURE_1D_ARRAY1011,64393
#define GL_PROXY_TEXTURE_1D_ARRAY GL_PROXY_TEXTURE_1D_ARRAY1012,64443
#define GL_TEXTURE_2D_ARRAY GL_TEXTURE_2D_ARRAY1013,64493
#define GL_PROXY_TEXTURE_2D_ARRAY GL_PROXY_TEXTURE_2D_ARRAY1014,64543
#define GL_TEXTURE_BINDING_1D_ARRAY GL_TEXTURE_BINDING_1D_ARRAY1015,64593
#define GL_TEXTURE_BINDING_2D_ARRAY GL_TEXTURE_BINDING_2D_ARRAY1016,64643
#define GL_R11F_G11F_B10F GL_R11F_G11F_B10F1017,64693
#define GL_UNSIGNED_INT_10F_11F_11F_REV GL_UNSIGNED_INT_10F_11F_11F_REV1018,64743
#define GL_RGB9_E5 GL_RGB9_E51019,64793
#define GL_UNSIGNED_INT_5_9_9_9_REV GL_UNSIGNED_INT_5_9_9_9_REV1020,64843
#define GL_TEXTURE_SHARED_SIZE GL_TEXTURE_SHARED_SIZE1021,64893
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH1022,64943
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE GL_TRANSFORM_FEEDBACK_BUFFER_MODE1023,65000
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS1024,65050
#define GL_TRANSFORM_FEEDBACK_VARYINGS GL_TRANSFORM_FEEDBACK_VARYINGS1025,65112
#define GL_TRANSFORM_FEEDBACK_BUFFER_START GL_TRANSFORM_FEEDBACK_BUFFER_START1026,65162
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE GL_TRANSFORM_FEEDBACK_BUFFER_SIZE1027,65213
#define GL_PRIMITIVES_GENERATED GL_PRIMITIVES_GENERATED1028,65263
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN1029,65313
#define GL_RASTERIZER_DISCARD GL_RASTERIZER_DISCARD1030,65370
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS1031,65420
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS1032,65485
#define GL_INTERLEAVED_ATTRIBS GL_INTERLEAVED_ATTRIBS1033,65544
#define GL_SEPARATE_ATTRIBS GL_SEPARATE_ATTRIBS1034,65594
#define GL_TRANSFORM_FEEDBACK_BUFFER GL_TRANSFORM_FEEDBACK_BUFFER1035,65644
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING GL_TRANSFORM_FEEDBACK_BUFFER_BINDING1036,65694
#define GL_RGBA32UI GL_RGBA32UI1037,65747
#define GL_RGB32UI GL_RGB32UI1038,65797
#define GL_RGBA16UI GL_RGBA16UI1039,65847
#define GL_RGB16UI GL_RGB16UI1040,65897
#define GL_RGBA8UI GL_RGBA8UI1041,65947
#define GL_RGB8UI GL_RGB8UI1042,65997
#define GL_RGBA32I GL_RGBA32I1043,66047
#define GL_RGB32I GL_RGB32I1044,66097
#define GL_RGBA16I GL_RGBA16I1045,66147
#define GL_RGB16I GL_RGB16I1046,66197
#define GL_RGBA8I GL_RGBA8I1047,66247
#define GL_RGB8I GL_RGB8I1048,66297
#define GL_RED_INTEGER GL_RED_INTEGER1049,66347
#define GL_GREEN_INTEGER GL_GREEN_INTEGER1050,66397
#define GL_BLUE_INTEGER GL_BLUE_INTEGER1051,66447
#define GL_RGB_INTEGER GL_RGB_INTEGER1052,66497
#define GL_RGBA_INTEGER GL_RGBA_INTEGER1053,66547
#define GL_BGR_INTEGER GL_BGR_INTEGER1054,66597
#define GL_BGRA_INTEGER GL_BGRA_INTEGER1055,66647
#define GL_SAMPLER_1D_ARRAY GL_SAMPLER_1D_ARRAY1056,66697
#define GL_SAMPLER_2D_ARRAY GL_SAMPLER_2D_ARRAY1057,66747
#define GL_SAMPLER_1D_ARRAY_SHADOW GL_SAMPLER_1D_ARRAY_SHADOW1058,66797
#define GL_SAMPLER_2D_ARRAY_SHADOW GL_SAMPLER_2D_ARRAY_SHADOW1059,66847
#define GL_SAMPLER_CUBE_SHADOW GL_SAMPLER_CUBE_SHADOW1060,66897
#define GL_UNSIGNED_INT_VEC2 GL_UNSIGNED_INT_VEC21061,66947
#define GL_UNSIGNED_INT_VEC3 GL_UNSIGNED_INT_VEC31062,66997
#define GL_UNSIGNED_INT_VEC4 GL_UNSIGNED_INT_VEC41063,67047
#define GL_INT_SAMPLER_1D GL_INT_SAMPLER_1D1064,67097
#define GL_INT_SAMPLER_2D GL_INT_SAMPLER_2D1065,67147
#define GL_INT_SAMPLER_3D GL_INT_SAMPLER_3D1066,67197
#define GL_INT_SAMPLER_CUBE GL_INT_SAMPLER_CUBE1067,67247
#define GL_INT_SAMPLER_1D_ARRAY GL_INT_SAMPLER_1D_ARRAY1068,67297
#define GL_INT_SAMPLER_2D_ARRAY GL_INT_SAMPLER_2D_ARRAY1069,67347
#define GL_UNSIGNED_INT_SAMPLER_1D GL_UNSIGNED_INT_SAMPLER_1D1070,67397
#define GL_UNSIGNED_INT_SAMPLER_2D GL_UNSIGNED_INT_SAMPLER_2D1071,67447
#define GL_UNSIGNED_INT_SAMPLER_3D GL_UNSIGNED_INT_SAMPLER_3D1072,67497
#define GL_UNSIGNED_INT_SAMPLER_CUBE GL_UNSIGNED_INT_SAMPLER_CUBE1073,67547
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY GL_UNSIGNED_INT_SAMPLER_1D_ARRAY1074,67597
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY GL_UNSIGNED_INT_SAMPLER_2D_ARRAY1075,67647
#define GL_QUERY_WAIT GL_QUERY_WAIT1076,67697
#define GL_QUERY_NO_WAIT GL_QUERY_NO_WAIT1077,67747
#define GL_QUERY_BY_REGION_WAIT GL_QUERY_BY_REGION_WAIT1078,67797
#define GL_QUERY_BY_REGION_NO_WAIT GL_QUERY_BY_REGION_NO_WAIT1079,67847
#define GL_BUFFER_ACCESS_FLAGS GL_BUFFER_ACCESS_FLAGS1080,67897
#define GL_BUFFER_MAP_LENGTH GL_BUFFER_MAP_LENGTH1081,67947
#define GL_BUFFER_MAP_OFFSET GL_BUFFER_MAP_OFFSET1082,67997
#define GL_DEPTH_COMPONENT32F GL_DEPTH_COMPONENT32F1083,68047
#define GL_DEPTH32F_STENCIL8 GL_DEPTH32F_STENCIL81084,68097
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV GL_FLOAT_32_UNSIGNED_INT_24_8_REV1085,68147
#define GL_INVALID_FRAMEBUFFER_OPERATION GL_INVALID_FRAMEBUFFER_OPERATION1086,68197
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING1087,68247
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE1088,68304
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE1089,68361
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE1090,68412
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE1091,68465
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE1092,68517
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE1093,68570
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE1094,68623
#define GL_FRAMEBUFFER_DEFAULT GL_FRAMEBUFFER_DEFAULT1095,68678
#define GL_FRAMEBUFFER_UNDEFINED GL_FRAMEBUFFER_UNDEFINED1096,68728
#define GL_DEPTH_STENCIL_ATTACHMENT GL_DEPTH_STENCIL_ATTACHMENT1097,68778
#define GL_MAX_RENDERBUFFER_SIZE GL_MAX_RENDERBUFFER_SIZE1098,68828
#define GL_DEPTH_STENCIL GL_DEPTH_STENCIL1099,68878
#define GL_UNSIGNED_INT_24_8 GL_UNSIGNED_INT_24_81100,68928
#define GL_DEPTH24_STENCIL8 GL_DEPTH24_STENCIL81101,68978
#define GL_TEXTURE_STENCIL_SIZE GL_TEXTURE_STENCIL_SIZE1102,69028
#define GL_TEXTURE_RED_TYPE GL_TEXTURE_RED_TYPE1103,69078
#define GL_TEXTURE_GREEN_TYPE GL_TEXTURE_GREEN_TYPE1104,69128
#define GL_TEXTURE_BLUE_TYPE GL_TEXTURE_BLUE_TYPE1105,69178
#define GL_TEXTURE_ALPHA_TYPE GL_TEXTURE_ALPHA_TYPE1106,69228
#define GL_TEXTURE_DEPTH_TYPE GL_TEXTURE_DEPTH_TYPE1107,69278
#define GL_UNSIGNED_NORMALIZED GL_UNSIGNED_NORMALIZED1108,69328
#define GL_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING1109,69378
#define GL_DRAW_FRAMEBUFFER_BINDING GL_DRAW_FRAMEBUFFER_BINDING1110,69428
#define GL_RENDERBUFFER_BINDING GL_RENDERBUFFER_BINDING1111,69478
#define GL_READ_FRAMEBUFFER GL_READ_FRAMEBUFFER1112,69528
#define GL_DRAW_FRAMEBUFFER GL_DRAW_FRAMEBUFFER1113,69578
#define GL_READ_FRAMEBUFFER_BINDING GL_READ_FRAMEBUFFER_BINDING1114,69628
#define GL_RENDERBUFFER_SAMPLES GL_RENDERBUFFER_SAMPLES1115,69678
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE1116,69728
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME1117,69782
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL1118,69836
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE1119,69892
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER1120,69956
#define GL_FRAMEBUFFER_COMPLETE GL_FRAMEBUFFER_COMPLETE1121,70012
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT1122,70062
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT1123,70115
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER1124,70176
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER1125,70230
#define GL_FRAMEBUFFER_UNSUPPORTED GL_FRAMEBUFFER_UNSUPPORTED1126,70284
#define GL_MAX_COLOR_ATTACHMENTS GL_MAX_COLOR_ATTACHMENTS1127,70334
#define GL_COLOR_ATTACHMENT0 GL_COLOR_ATTACHMENT01128,70384
#define GL_COLOR_ATTACHMENT1 GL_COLOR_ATTACHMENT11129,70434
#define GL_COLOR_ATTACHMENT2 GL_COLOR_ATTACHMENT21130,70484
#define GL_COLOR_ATTACHMENT3 GL_COLOR_ATTACHMENT31131,70534
#define GL_COLOR_ATTACHMENT4 GL_COLOR_ATTACHMENT41132,70584
#define GL_COLOR_ATTACHMENT5 GL_COLOR_ATTACHMENT51133,70634
#define GL_COLOR_ATTACHMENT6 GL_COLOR_ATTACHMENT61134,70684
#define GL_COLOR_ATTACHMENT7 GL_COLOR_ATTACHMENT71135,70734
#define GL_COLOR_ATTACHMENT8 GL_COLOR_ATTACHMENT81136,70784
#define GL_COLOR_ATTACHMENT9 GL_COLOR_ATTACHMENT91137,70834
#define GL_COLOR_ATTACHMENT10 GL_COLOR_ATTACHMENT101138,70884
#define GL_COLOR_ATTACHMENT11 GL_COLOR_ATTACHMENT111139,70934
#define GL_COLOR_ATTACHMENT12 GL_COLOR_ATTACHMENT121140,70984
#define GL_COLOR_ATTACHMENT13 GL_COLOR_ATTACHMENT131141,71034
#define GL_COLOR_ATTACHMENT14 GL_COLOR_ATTACHMENT141142,71084
#define GL_COLOR_ATTACHMENT15 GL_COLOR_ATTACHMENT151143,71134
#define GL_COLOR_ATTACHMENT16 GL_COLOR_ATTACHMENT161144,71184
#define GL_COLOR_ATTACHMENT17 GL_COLOR_ATTACHMENT171145,71234
#define GL_COLOR_ATTACHMENT18 GL_COLOR_ATTACHMENT181146,71284
#define GL_COLOR_ATTACHMENT19 GL_COLOR_ATTACHMENT191147,71334
#define GL_COLOR_ATTACHMENT20 GL_COLOR_ATTACHMENT201148,71384
#define GL_COLOR_ATTACHMENT21 GL_COLOR_ATTACHMENT211149,71434
#define GL_COLOR_ATTACHMENT22 GL_COLOR_ATTACHMENT221150,71484
#define GL_COLOR_ATTACHMENT23 GL_COLOR_ATTACHMENT231151,71534
#define GL_COLOR_ATTACHMENT24 GL_COLOR_ATTACHMENT241152,71584
#define GL_COLOR_ATTACHMENT25 GL_COLOR_ATTACHMENT251153,71634
#define GL_COLOR_ATTACHMENT26 GL_COLOR_ATTACHMENT261154,71684
#define GL_COLOR_ATTACHMENT27 GL_COLOR_ATTACHMENT271155,71734
#define GL_COLOR_ATTACHMENT28 GL_COLOR_ATTACHMENT281156,71784
#define GL_COLOR_ATTACHMENT29 GL_COLOR_ATTACHMENT291157,71834
#define GL_COLOR_ATTACHMENT30 GL_COLOR_ATTACHMENT301158,71884
#define GL_COLOR_ATTACHMENT31 GL_COLOR_ATTACHMENT311159,71934
#define GL_DEPTH_ATTACHMENT GL_DEPTH_ATTACHMENT1160,71984
#define GL_STENCIL_ATTACHMENT GL_STENCIL_ATTACHMENT1161,72034
#define GL_FRAMEBUFFER GL_FRAMEBUFFER1162,72084
#define GL_RENDERBUFFER GL_RENDERBUFFER1163,72134
#define GL_RENDERBUFFER_WIDTH GL_RENDERBUFFER_WIDTH1164,72184
#define GL_RENDERBUFFER_HEIGHT GL_RENDERBUFFER_HEIGHT1165,72234
#define GL_RENDERBUFFER_INTERNAL_FORMAT GL_RENDERBUFFER_INTERNAL_FORMAT1166,72284
#define GL_STENCIL_INDEX1 GL_STENCIL_INDEX11167,72334
#define GL_STENCIL_INDEX4 GL_STENCIL_INDEX41168,72384
#define GL_STENCIL_INDEX8 GL_STENCIL_INDEX81169,72434
#define GL_STENCIL_INDEX16 GL_STENCIL_INDEX161170,72484
#define GL_RENDERBUFFER_RED_SIZE GL_RENDERBUFFER_RED_SIZE1171,72534
#define GL_RENDERBUFFER_GREEN_SIZE GL_RENDERBUFFER_GREEN_SIZE1172,72584
#define GL_RENDERBUFFER_BLUE_SIZE GL_RENDERBUFFER_BLUE_SIZE1173,72634
#define GL_RENDERBUFFER_ALPHA_SIZE GL_RENDERBUFFER_ALPHA_SIZE1174,72684
#define GL_RENDERBUFFER_DEPTH_SIZE GL_RENDERBUFFER_DEPTH_SIZE1175,72734
#define GL_RENDERBUFFER_STENCIL_SIZE GL_RENDERBUFFER_STENCIL_SIZE1176,72784
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE1177,72834
#define GL_MAX_SAMPLES GL_MAX_SAMPLES1178,72888
#define GL_FRAMEBUFFER_SRGB GL_FRAMEBUFFER_SRGB1179,72938
#define GL_HALF_FLOAT GL_HALF_FLOAT1180,72988
#define GL_MAP_READ_BIT GL_MAP_READ_BIT1181,73038
#define GL_MAP_WRITE_BIT GL_MAP_WRITE_BIT1182,73088
#define GL_MAP_INVALIDATE_RANGE_BIT GL_MAP_INVALIDATE_RANGE_BIT1183,73138
#define GL_MAP_INVALIDATE_BUFFER_BIT GL_MAP_INVALIDATE_BUFFER_BIT1184,73188
#define GL_MAP_FLUSH_EXPLICIT_BIT GL_MAP_FLUSH_EXPLICIT_BIT1185,73238
#define GL_MAP_UNSYNCHRONIZED_BIT GL_MAP_UNSYNCHRONIZED_BIT1186,73288
#define GL_COMPRESSED_RED_RGTC1 GL_COMPRESSED_RED_RGTC11187,73338
#define GL_COMPRESSED_SIGNED_RED_RGTC1 GL_COMPRESSED_SIGNED_RED_RGTC11188,73388
#define GL_COMPRESSED_RG_RGTC2 GL_COMPRESSED_RG_RGTC21189,73438
#define GL_COMPRESSED_SIGNED_RG_RGTC2 GL_COMPRESSED_SIGNED_RG_RGTC21190,73488
#define GL_RG GL_RG1191,73538
#define GL_RG_INTEGER GL_RG_INTEGER1192,73588
#define GL_R8 GL_R81193,73638
#define GL_R16 GL_R161194,73688
#define GL_RG8 GL_RG81195,73738
#define GL_RG16 GL_RG161196,73788
#define GL_R16F GL_R16F1197,73838
#define GL_R32F GL_R32F1198,73888
#define GL_RG16F GL_RG16F1199,73938
#define GL_RG32F GL_RG32F1200,73988
#define GL_R8I GL_R8I1201,74038
#define GL_R8UI GL_R8UI1202,74088
#define GL_R16I GL_R16I1203,74138
#define GL_R16UI GL_R16UI1204,74188
#define GL_R32I GL_R32I1205,74238
#define GL_R32UI GL_R32UI1206,74288
#define GL_RG8I GL_RG8I1207,74338
#define GL_RG8UI GL_RG8UI1208,74388
#define GL_RG16I GL_RG16I1209,74438
#define GL_RG16UI GL_RG16UI1210,74488
#define GL_RG32I GL_RG32I1211,74538
#define GL_RG32UI GL_RG32UI1212,74588
#define GL_VERTEX_ARRAY_BINDING GL_VERTEX_ARRAY_BINDING1213,74638
typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean PFNGLCOLORMASKIPROC1214,74688
typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);PFNGLGETBOOLEANI_VPROC1215,74802
typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);PFNGLGETINTEGERI_VPROC1216,74899
typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);PFNGLENABLEIPROC1217,74992
typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);PFNGLDISABLEIPROC1218,75066
typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);PFNGLISENABLEDIPROC1219,75141
typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);PFNGLBEGINTRANSFORMFEEDBACKPROC1220,75223
typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);PFNGLENDTRANSFORMFEEDBACKPROC1221,75305
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GPFNGLBINDBUFFERRANGEPROC1222,75369
typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);PFNGLBINDBUFFERBASEPROC1223,75500
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, consPFNGLTRANSFORMFEEDBACKVARYINGSPROC1224,75596
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsPFNGLGETTRANSFORMFEEDBACKVARYINGPROC1225,75739
typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);PFNGLCLAMPCOLORPROC1226,75911
typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);PFNGLBEGINCONDITIONALRENDERPROC1227,75988
typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);PFNGLENDCONDITIONALRENDERPROC1228,76072
typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GPFNGLVERTEXATTRIBIPOINTERPROC1229,76136
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params)PFNGLGETVERTEXATTRIBIIVPROC1230,76270
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *paramPFNGLGETVERTEXATTRIBIUIVPROC1231,76369
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);PFNGLVERTEXATTRIBI1IPROC1232,76470
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);PFNGLVERTEXATTRIBI2IPROC1233,76546
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);PFNGLVERTEXATTRIBI3IPROC1234,76631
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLinPFNGLVERTEXATTRIBI4IPROC1235,76725
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);PFNGLVERTEXATTRIBI1UIPROC1236,76828
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);PFNGLVERTEXATTRIBI2UIPROC1237,76906
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);PFNGLVERTEXATTRIBI3UIPROC1238,76994
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, PFNGLVERTEXATTRIBI4UIPROC1239,77092
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);PFNGLVERTEXATTRIBI1IVPROC1240,77200
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);PFNGLVERTEXATTRIBI2IVPROC1241,77284
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);PFNGLVERTEXATTRIBI3IVPROC1242,77368
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);PFNGLVERTEXATTRIBI4IVPROC1243,77452
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);PFNGLVERTEXATTRIBI1UIVPROC1244,77536
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);PFNGLVERTEXATTRIBI2UIVPROC1245,77622
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);PFNGLVERTEXATTRIBI3UIVPROC1246,77708
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);PFNGLVERTEXATTRIBI4UIVPROC1247,77794
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);PFNGLVERTEXATTRIBI4BVPROC1248,77880
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);PFNGLVERTEXATTRIBI4SVPROC1249,77965
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);PFNGLVERTEXATTRIBI4UBVPROC1250,78051
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);PFNGLVERTEXATTRIBI4USVPROC1251,78138
typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params)PFNGLGETUNIFORMUIVPROC1252,78226
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchPFNGLBINDFRAGDATALOCATIONPROC1253,78325
typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);PFNGLGETFRAGDATALOCATIONPROC1254,78433
typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);PFNGLUNIFORM1UIPROC1255,78527
typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);PFNGLUNIFORM2UIPROC1256,78602
typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);PFNGLUNIFORM3UIPROC1257,78688
typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GPFNGLUNIFORM4UIPROC1258,78785
typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *valuPFNGLUNIFORM1UIVPROC1259,78893
typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *valuPFNGLUNIFORM2UIVPROC1260,78994
typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *valuPFNGLUNIFORM3UIVPROC1261,79095
typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *valuPFNGLUNIFORM4UIVPROC1262,79196
typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *parPFNGLTEXPARAMETERIIVPROC1263,79297
typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *pPFNGLTEXPARAMETERIUIVPROC1264,79400
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *paramsPFNGLGETTEXPARAMETERIIVPROC1265,79505
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *paraPFNGLGETTEXPARAMETERIUIVPROC1266,79605
typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *vPFNGLCLEARBUFFERIVPROC1267,79707
typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint PFNGLCLEARBUFFERUIVPROC1268,79811
typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat PFNGLCLEARBUFFERFVPROC1269,79917
typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth,PFNGLCLEARBUFFERFIPROC1270,80023
typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);PFNGLGETSTRINGIPROC1271,80137
typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);PFNGLISRENDERBUFFERPROC1272,80222
typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);PFNGLBINDRENDERBUFFERPROC1273,80300
typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);PFNGLDELETERENDERBUFFERSPROC1274,80390
typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);PFNGLGENRENDERBUFFERSPROC1275,80487
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsPFNGLRENDERBUFFERSTORAGEPROC1276,80575
typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLintPFNGLGETRENDERBUFFERPARAMETERIVPROC1277,80701
typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);PFNGLISFRAMEBUFFERPROC1278,80809
typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);PFNGLBINDFRAMEBUFFERPROC1279,80885
typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);PFNGLDELETEFRAMEBUFFERSPROC1280,80973
typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);PFNGLGENFRAMEBUFFERSPROC1281,81068
typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);PFNGLCHECKFRAMEBUFFERSTATUSPROC1282,81154
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenumPFNGLFRAMEBUFFERTEXTURE1DPROC1283,81231
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenumPFNGLFRAMEBUFFERTEXTURE2DPROC1284,81370
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenumPFNGLFRAMEBUFFERTEXTURE3DPROC1285,81509
typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLePFNGLFRAMEBUFFERRENDERBUFFERPROC1286,81663
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC1287,81806
typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);PFNGLGENERATEMIPMAPPROC1288,81942
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint PFNGLBLITFRAMEBUFFERPROC1289,82009
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samplesPFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC1290,82198
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuPFNGLFRAMEBUFFERTEXTURELAYERPROC1291,82352
typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr lePFNGLMAPBUFFERRANGEPROC1292,82489
typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizePFNGLFLUSHMAPPEDBUFFERRANGEPROC1293,82612
typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);PFNGLBINDVERTEXARRAYPROC1294,82723
typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);PFNGLDELETEVERTEXARRAYSPROC1295,82790
typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);PFNGLGENVERTEXARRAYSPROC1296,82879
typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);PFNGLISVERTEXARRAYPROC1297,82959
#define GL_VERSION_3_1 GL_VERSION_3_11387,90453
#define GL_SAMPLER_2D_RECT GL_SAMPLER_2D_RECT1388,90479
#define GL_SAMPLER_2D_RECT_SHADOW GL_SAMPLER_2D_RECT_SHADOW1389,90529
#define GL_SAMPLER_BUFFER GL_SAMPLER_BUFFER1390,90579
#define GL_INT_SAMPLER_2D_RECT GL_INT_SAMPLER_2D_RECT1391,90629
#define GL_INT_SAMPLER_BUFFER GL_INT_SAMPLER_BUFFER1392,90679
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT GL_UNSIGNED_INT_SAMPLER_2D_RECT1393,90729
#define GL_UNSIGNED_INT_SAMPLER_BUFFER GL_UNSIGNED_INT_SAMPLER_BUFFER1394,90779
#define GL_TEXTURE_BUFFER GL_TEXTURE_BUFFER1395,90829
#define GL_MAX_TEXTURE_BUFFER_SIZE GL_MAX_TEXTURE_BUFFER_SIZE1396,90879
#define GL_TEXTURE_BINDING_BUFFER GL_TEXTURE_BINDING_BUFFER1397,90929
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING GL_TEXTURE_BUFFER_DATA_STORE_BINDING1398,90979
#define GL_TEXTURE_RECTANGLE GL_TEXTURE_RECTANGLE1399,91032
#define GL_TEXTURE_BINDING_RECTANGLE GL_TEXTURE_BINDING_RECTANGLE1400,91082
#define GL_PROXY_TEXTURE_RECTANGLE GL_PROXY_TEXTURE_RECTANGLE1401,91132
#define GL_MAX_RECTANGLE_TEXTURE_SIZE GL_MAX_RECTANGLE_TEXTURE_SIZE1402,91182
#define GL_R8_SNORM GL_R8_SNORM1403,91232
#define GL_RG8_SNORM GL_RG8_SNORM1404,91282
#define GL_RGB8_SNORM GL_RGB8_SNORM1405,91332
#define GL_RGBA8_SNORM GL_RGBA8_SNORM1406,91382
#define GL_R16_SNORM GL_R16_SNORM1407,91432
#define GL_RG16_SNORM GL_RG16_SNORM1408,91482
#define GL_RGB16_SNORM GL_RGB16_SNORM1409,91532
#define GL_RGBA16_SNORM GL_RGBA16_SNORM1410,91582
#define GL_SIGNED_NORMALIZED GL_SIGNED_NORMALIZED1411,91632
#define GL_PRIMITIVE_RESTART GL_PRIMITIVE_RESTART1412,91682
#define GL_PRIMITIVE_RESTART_INDEX GL_PRIMITIVE_RESTART_INDEX1413,91732
#define GL_COPY_READ_BUFFER GL_COPY_READ_BUFFER1414,91782
#define GL_COPY_WRITE_BUFFER GL_COPY_WRITE_BUFFER1415,91832
#define GL_UNIFORM_BUFFER GL_UNIFORM_BUFFER1416,91882
#define GL_UNIFORM_BUFFER_BINDING GL_UNIFORM_BUFFER_BINDING1417,91932
#define GL_UNIFORM_BUFFER_START GL_UNIFORM_BUFFER_START1418,91982
#define GL_UNIFORM_BUFFER_SIZE GL_UNIFORM_BUFFER_SIZE1419,92032
#define GL_MAX_VERTEX_UNIFORM_BLOCKS GL_MAX_VERTEX_UNIFORM_BLOCKS1420,92082
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS GL_MAX_GEOMETRY_UNIFORM_BLOCKS1421,92132
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS GL_MAX_FRAGMENT_UNIFORM_BLOCKS1422,92182
#define GL_MAX_COMBINED_UNIFORM_BLOCKS GL_MAX_COMBINED_UNIFORM_BLOCKS1423,92232
#define GL_MAX_UNIFORM_BUFFER_BINDINGS GL_MAX_UNIFORM_BUFFER_BINDINGS1424,92282
#define GL_MAX_UNIFORM_BLOCK_SIZE GL_MAX_UNIFORM_BLOCK_SIZE1425,92332
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS1426,92382
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS1427,92440
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS1428,92500
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT1429,92560
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH1430,92611
#define GL_ACTIVE_UNIFORM_BLOCKS GL_ACTIVE_UNIFORM_BLOCKS1431,92667
#define GL_UNIFORM_TYPE GL_UNIFORM_TYPE1432,92717
#define GL_UNIFORM_SIZE GL_UNIFORM_SIZE1433,92767
#define GL_UNIFORM_NAME_LENGTH GL_UNIFORM_NAME_LENGTH1434,92817
#define GL_UNIFORM_BLOCK_INDEX GL_UNIFORM_BLOCK_INDEX1435,92867
#define GL_UNIFORM_OFFSET GL_UNIFORM_OFFSET1436,92917
#define GL_UNIFORM_ARRAY_STRIDE GL_UNIFORM_ARRAY_STRIDE1437,92967
#define GL_UNIFORM_MATRIX_STRIDE GL_UNIFORM_MATRIX_STRIDE1438,93017
#define GL_UNIFORM_IS_ROW_MAJOR GL_UNIFORM_IS_ROW_MAJOR1439,93067
#define GL_UNIFORM_BLOCK_BINDING GL_UNIFORM_BLOCK_BINDING1440,93117
#define GL_UNIFORM_BLOCK_DATA_SIZE GL_UNIFORM_BLOCK_DATA_SIZE1441,93167
#define GL_UNIFORM_BLOCK_NAME_LENGTH GL_UNIFORM_BLOCK_NAME_LENGTH1442,93217
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS1443,93267
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES1444,93317
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER1445,93373
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER1446,93434
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER1447,93497
#define GL_INVALID_INDEX GL_INVALID_INDEX1448,93560
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, PFNGLDRAWARRAYSINSTANCEDPROC1449,93615
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum typePFNGLDRAWELEMENTSINSTANCEDPROC1450,93736
typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint bufferPFNGLTEXBUFFERPROC1451,93880
typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);PFNGLPRIMITIVERESTARTINDEXPROC1452,93980
typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLinPFNGLCOPYBUFFERSUBDATAPROC1453,94053
typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, constPFNGLGETUNIFORMINDICESPROC1454,94207
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, conPFNGLGETACTIVEUNIFORMSIVPROC1455,94358
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsPFNGLGETACTIVEUNIFORMNAMEPROC1456,94512
typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBPFNGLGETUNIFORMBLOCKINDEXPROC1457,94662
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockInPFNGLGETACTIVEUNIFORMBLOCKIVPROC1458,94770
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockPFNGLGETACTIVEUNIFORMBLOCKNAMEPROC1459,94902
typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex,PFNGLUNIFORMBLOCKBINDINGPROC1460,95067
#define GL_VERSION_3_2 GL_VERSION_3_21478,96720
typedef struct __GLsync *GLsync;GLsync1479,96746
typedef khronos_uint64_t GLuint64;GLuint641480,96780
typedef khronos_int64_t GLint64;GLint641481,96816
#define GL_CONTEXT_CORE_PROFILE_BIT GL_CONTEXT_CORE_PROFILE_BIT1482,96850
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT GL_CONTEXT_COMPATIBILITY_PROFILE_BIT1483,96904
#define GL_LINES_ADJACENCY GL_LINES_ADJACENCY1484,96961
#define GL_LINE_STRIP_ADJACENCY GL_LINE_STRIP_ADJACENCY1485,97011
#define GL_TRIANGLES_ADJACENCY GL_TRIANGLES_ADJACENCY1486,97061
#define GL_TRIANGLE_STRIP_ADJACENCY GL_TRIANGLE_STRIP_ADJACENCY1487,97111
#define GL_PROGRAM_POINT_SIZE GL_PROGRAM_POINT_SIZE1488,97161
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS1489,97211
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED GL_FRAMEBUFFER_ATTACHMENT_LAYERED1490,97263
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS1491,97313
#define GL_GEOMETRY_SHADER GL_GEOMETRY_SHADER1492,97369
#define GL_GEOMETRY_VERTICES_OUT GL_GEOMETRY_VERTICES_OUT1493,97419
#define GL_GEOMETRY_INPUT_TYPE GL_GEOMETRY_INPUT_TYPE1494,97469
#define GL_GEOMETRY_OUTPUT_TYPE GL_GEOMETRY_OUTPUT_TYPE1495,97519
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS GL_MAX_GEOMETRY_UNIFORM_COMPONENTS1496,97569
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES GL_MAX_GEOMETRY_OUTPUT_VERTICES1497,97620
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS1498,97670
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS GL_MAX_VERTEX_OUTPUT_COMPONENTS1499,97726
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS GL_MAX_GEOMETRY_INPUT_COMPONENTS1500,97776
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS GL_MAX_GEOMETRY_OUTPUT_COMPONENTS1501,97826
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS GL_MAX_FRAGMENT_INPUT_COMPONENTS1502,97876
#define GL_CONTEXT_PROFILE_MASK GL_CONTEXT_PROFILE_MASK1503,97926
#define GL_DEPTH_CLAMP GL_DEPTH_CLAMP1504,97976
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION1505,98026
#define GL_FIRST_VERTEX_CONVENTION GL_FIRST_VERTEX_CONVENTION1506,98086
#define GL_LAST_VERTEX_CONVENTION GL_LAST_VERTEX_CONVENTION1507,98136
#define GL_PROVOKING_VERTEX GL_PROVOKING_VERTEX1508,98186
#define GL_TEXTURE_CUBE_MAP_SEAMLESS GL_TEXTURE_CUBE_MAP_SEAMLESS1509,98236
#define GL_MAX_SERVER_WAIT_TIMEOUT GL_MAX_SERVER_WAIT_TIMEOUT1510,98286
#define GL_OBJECT_TYPE GL_OBJECT_TYPE1511,98336
#define GL_SYNC_CONDITION GL_SYNC_CONDITION1512,98386
#define GL_SYNC_STATUS GL_SYNC_STATUS1513,98436
#define GL_SYNC_FLAGS GL_SYNC_FLAGS1514,98486
#define GL_SYNC_FENCE GL_SYNC_FENCE1515,98536
#define GL_SYNC_GPU_COMMANDS_COMPLETE GL_SYNC_GPU_COMMANDS_COMPLETE1516,98586
#define GL_UNSIGNALED GL_UNSIGNALED1517,98636
#define GL_SIGNALED GL_SIGNALED1518,98686
#define GL_ALREADY_SIGNALED GL_ALREADY_SIGNALED1519,98736
#define GL_TIMEOUT_EXPIRED GL_TIMEOUT_EXPIRED1520,98786
#define GL_CONDITION_SATISFIED GL_CONDITION_SATISFIED1521,98836
#define GL_WAIT_FAILED GL_WAIT_FAILED1522,98886
#define GL_TIMEOUT_IGNORED GL_TIMEOUT_IGNORED1523,98936
#define GL_SYNC_FLUSH_COMMANDS_BIT GL_SYNC_FLUSH_COMMANDS_BIT1524,99001
#define GL_SAMPLE_POSITION GL_SAMPLE_POSITION1525,99055
#define GL_SAMPLE_MASK GL_SAMPLE_MASK1526,99105
#define GL_SAMPLE_MASK_VALUE GL_SAMPLE_MASK_VALUE1527,99155
#define GL_MAX_SAMPLE_MASK_WORDS GL_MAX_SAMPLE_MASK_WORDS1528,99205
#define GL_TEXTURE_2D_MULTISAMPLE GL_TEXTURE_2D_MULTISAMPLE1529,99255
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE GL_PROXY_TEXTURE_2D_MULTISAMPLE1530,99305
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY GL_TEXTURE_2D_MULTISAMPLE_ARRAY1531,99355
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY1532,99405
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE GL_TEXTURE_BINDING_2D_MULTISAMPLE1533,99459
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY1534,99509
#define GL_TEXTURE_SAMPLES GL_TEXTURE_SAMPLES1535,99565
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS GL_TEXTURE_FIXED_SAMPLE_LOCATIONS1536,99615
#define GL_SAMPLER_2D_MULTISAMPLE GL_SAMPLER_2D_MULTISAMPLE1537,99665
#define GL_INT_SAMPLER_2D_MULTISAMPLE GL_INT_SAMPLER_2D_MULTISAMPLE1538,99715
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE1539,99765
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY GL_SAMPLER_2D_MULTISAMPLE_ARRAY1540,99820
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY1541,99870
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY1542,99922
#define GL_MAX_COLOR_TEXTURE_SAMPLES GL_MAX_COLOR_TEXTURE_SAMPLES1543,99983
#define GL_MAX_DEPTH_TEXTURE_SAMPLES GL_MAX_DEPTH_TEXTURE_SAMPLES1544,100033
#define GL_MAX_INTEGER_SAMPLES GL_MAX_INTEGER_SAMPLES1545,100083
typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum typPFNGLDRAWELEMENTSBASEVERTEXPROC1546,100133
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuintPFNGLDRAWRANGEELEMENTSBASEVERTEXPROC1547,100273
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC1548,100444
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *countPFNGLMULTIDRAWELEMENTSBASEVERTEXPROC1549,100616
typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);PFNGLPROVOKINGVERTEXPROC1550,100800
typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);PFNGLFENCESYNCPROC1551,100866
typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);PFNGLISSYNCPROC1552,100951
typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);PFNGLDELETESYNCPROC1553,101013
typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timePFNGLCLIENTWAITSYNCPROC1554,101074
typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);PFNGLWAITSYNCPROC1555,101177
typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);PFNGLGETINTEGER64VPROC1556,101272
typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei count, GLsizei *PFNGLGETSYNCIVPROC1557,101352
typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);PFNGLGETINTEGER64I_VPROC1558,101473
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *PFNGLGETBUFFERPARAMETERI64VPROC1559,101570
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint tPFNGLFRAMEBUFFERTEXTUREPROC1560,101676
typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum PFNGLTEXIMAGE2DMULTISAMPLEPROC1561,101795
typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum PFNGLTEXIMAGE3DMULTISAMPLEPROC1562,101972
typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);PFNGLGETMULTISAMPLEFVPROC1563,102164
typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);PFNGLSAMPLEMASKIPROC1564,102260
#define GL_VERSION_3_3 GL_VERSION_3_31589,104420
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR GL_VERTEX_ATTRIB_ARRAY_DIVISOR1590,104446
#define GL_SRC1_COLOR GL_SRC1_COLOR1591,104496
#define GL_ONE_MINUS_SRC1_COLOR GL_ONE_MINUS_SRC1_COLOR1592,104546
#define GL_ONE_MINUS_SRC1_ALPHA GL_ONE_MINUS_SRC1_ALPHA1593,104596
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS GL_MAX_DUAL_SOURCE_DRAW_BUFFERS1594,104646
#define GL_ANY_SAMPLES_PASSED GL_ANY_SAMPLES_PASSED1595,104696
#define GL_SAMPLER_BINDING GL_SAMPLER_BINDING1596,104746
#define GL_RGB10_A2UI GL_RGB10_A2UI1597,104796
#define GL_TEXTURE_SWIZZLE_R GL_TEXTURE_SWIZZLE_R1598,104846
#define GL_TEXTURE_SWIZZLE_G GL_TEXTURE_SWIZZLE_G1599,104896
#define GL_TEXTURE_SWIZZLE_B GL_TEXTURE_SWIZZLE_B1600,104946
#define GL_TEXTURE_SWIZZLE_A GL_TEXTURE_SWIZZLE_A1601,104996
#define GL_TEXTURE_SWIZZLE_RGBA GL_TEXTURE_SWIZZLE_RGBA1602,105046
#define GL_TIME_ELAPSED GL_TIME_ELAPSED1603,105096
#define GL_TIMESTAMP GL_TIMESTAMP1604,105146
#define GL_INT_2_10_10_10_REV GL_INT_2_10_10_10_REV1605,105196
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumbePFNGLBINDFRAGDATALOCATIONINDEXEDPROC1606,105246
typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);PFNGLGETFRAGDATAINDEXPROC1607,105381
typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);PFNGLGENSAMPLERSPROC1608,105472
typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);PFNGLDELETESAMPLERSPROC1609,105554
typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);PFNGLISSAMPLERPROC1610,105645
typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);PFNGLBINDSAMPLERPROC1611,105713
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);PFNGLSAMPLERPARAMETERIPROC1612,105791
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint PFNGLSAMPLERPARAMETERIVPROC1613,105889
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat paramPFNGLSAMPLERPARAMETERFPROC1614,105995
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloaPFNGLSAMPLERPARAMETERFVPROC1615,106095
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLintPFNGLSAMPLERPARAMETERIIVPROC1616,106203
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuiPFNGLSAMPLERPARAMETERIUIVPROC1617,106310
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *paPFNGLGETSAMPLERPARAMETERIVPROC1618,106419
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *pPFNGLGETSAMPLERPARAMETERIIVPROC1619,106523
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *PFNGLGETSAMPLERPARAMETERFVPROC1620,106628
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint PFNGLGETSAMPLERPARAMETERIUIVPROC1621,106734
typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);PFNGLQUERYCOUNTERPROC1622,106841
typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);PFNGLGETQUERYOBJECTI64VPROC1623,106917
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *paramsPFNGLGETQUERYOBJECTUI64VPROC1624,107015
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);PFNGLVERTEXATTRIBDIVISORPROC1625,107115
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normaliPFNGLVERTEXATTRIBP1UIPROC1626,107202
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalPFNGLVERTEXATTRIBP1UIVPROC1627,107319
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normaliPFNGLVERTEXATTRIBP2UIPROC1628,107444
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalPFNGLVERTEXATTRIBP2UIVPROC1629,107561
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normaliPFNGLVERTEXATTRIBP3UIPROC1630,107686
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalPFNGLVERTEXATTRIBP3UIVPROC1631,107803
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normaliPFNGLVERTEXATTRIBP4UIPROC1632,107928
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalPFNGLVERTEXATTRIBP4UIVPROC1633,108045
#define GL_VERSION_4_0 GL_VERSION_4_01667,110849
#define GL_SAMPLE_SHADING GL_SAMPLE_SHADING1668,110875
#define GL_MIN_SAMPLE_SHADING_VALUE GL_MIN_SAMPLE_SHADING_VALUE1669,110925
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET1670,110975
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET1671,111028
#define GL_TEXTURE_CUBE_MAP_ARRAY GL_TEXTURE_CUBE_MAP_ARRAY1672,111081
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY GL_TEXTURE_BINDING_CUBE_MAP_ARRAY1673,111131
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY GL_PROXY_TEXTURE_CUBE_MAP_ARRAY1674,111181
#define GL_SAMPLER_CUBE_MAP_ARRAY GL_SAMPLER_CUBE_MAP_ARRAY1675,111231
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW1676,111281
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY GL_INT_SAMPLER_CUBE_MAP_ARRAY1677,111331
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY1678,111381
#define GL_DRAW_INDIRECT_BUFFER GL_DRAW_INDIRECT_BUFFER1679,111436
#define GL_DRAW_INDIRECT_BUFFER_BINDING GL_DRAW_INDIRECT_BUFFER_BINDING1680,111486
#define GL_GEOMETRY_SHADER_INVOCATIONS GL_GEOMETRY_SHADER_INVOCATIONS1681,111536
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS GL_MAX_GEOMETRY_SHADER_INVOCATIONS1682,111586
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET GL_MIN_FRAGMENT_INTERPOLATION_OFFSET1683,111637
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET GL_MAX_FRAGMENT_INTERPOLATION_OFFSET1684,111690
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS GL_FRAGMENT_INTERPOLATION_OFFSET_BITS1685,111743
#define GL_MAX_VERTEX_STREAMS GL_MAX_VERTEX_STREAMS1686,111797
#define GL_DOUBLE_VEC2 GL_DOUBLE_VEC21687,111847
#define GL_DOUBLE_VEC3 GL_DOUBLE_VEC31688,111897
#define GL_DOUBLE_VEC4 GL_DOUBLE_VEC41689,111947
#define GL_DOUBLE_MAT2 GL_DOUBLE_MAT21690,111997
#define GL_DOUBLE_MAT3 GL_DOUBLE_MAT31691,112047
#define GL_DOUBLE_MAT4 GL_DOUBLE_MAT41692,112097
#define GL_DOUBLE_MAT2x3 GL_DOUBLE_MAT2x31693,112147
#define GL_DOUBLE_MAT2x4 GL_DOUBLE_MAT2x41694,112197
#define GL_DOUBLE_MAT3x2 GL_DOUBLE_MAT3x21695,112247
#define GL_DOUBLE_MAT3x4 GL_DOUBLE_MAT3x41696,112297
#define GL_DOUBLE_MAT4x2 GL_DOUBLE_MAT4x21697,112347
#define GL_DOUBLE_MAT4x3 GL_DOUBLE_MAT4x31698,112397
#define GL_ACTIVE_SUBROUTINES GL_ACTIVE_SUBROUTINES1699,112447
#define GL_ACTIVE_SUBROUTINE_UNIFORMS GL_ACTIVE_SUBROUTINE_UNIFORMS1700,112497
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS1701,112547
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH GL_ACTIVE_SUBROUTINE_MAX_LENGTH1702,112602
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH1703,112652
#define GL_MAX_SUBROUTINES GL_MAX_SUBROUTINES1704,112708
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS1705,112758
#define GL_NUM_COMPATIBLE_SUBROUTINES GL_NUM_COMPATIBLE_SUBROUTINES1706,112810
#define GL_COMPATIBLE_SUBROUTINES GL_COMPATIBLE_SUBROUTINES1707,112860
#define GL_PATCHES GL_PATCHES1708,112910
#define GL_PATCH_VERTICES GL_PATCH_VERTICES1709,112960
#define GL_PATCH_DEFAULT_INNER_LEVEL GL_PATCH_DEFAULT_INNER_LEVEL1710,113010
#define GL_PATCH_DEFAULT_OUTER_LEVEL GL_PATCH_DEFAULT_OUTER_LEVEL1711,113060
#define GL_TESS_CONTROL_OUTPUT_VERTICES GL_TESS_CONTROL_OUTPUT_VERTICES1712,113110
#define GL_TESS_GEN_MODE GL_TESS_GEN_MODE1713,113160
#define GL_TESS_GEN_SPACING GL_TESS_GEN_SPACING1714,113210
#define GL_TESS_GEN_VERTEX_ORDER GL_TESS_GEN_VERTEX_ORDER1715,113260
#define GL_TESS_GEN_POINT_MODE GL_TESS_GEN_POINT_MODE1716,113310
#define GL_ISOLINES GL_ISOLINES1717,113360
#define GL_FRACTIONAL_ODD GL_FRACTIONAL_ODD1718,113410
#define GL_FRACTIONAL_EVEN GL_FRACTIONAL_EVEN1719,113460
#define GL_MAX_PATCH_VERTICES GL_MAX_PATCH_VERTICES1720,113510
#define GL_MAX_TESS_GEN_LEVEL GL_MAX_TESS_GEN_LEVEL1721,113560
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS1722,113610
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS1723,113665
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS1724,113723
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS1725,113779
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS1726,113838
#define GL_MAX_TESS_PATCH_COMPONENTS GL_MAX_TESS_PATCH_COMPONENTS1727,113892
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS1728,113942
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS1729,114002
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS1730,114059
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS1731,114110
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS GL_MAX_TESS_CONTROL_INPUT_COMPONENTS1732,114164
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS1733,114217
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS1734,114273
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS1735,114337
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER1736,114404
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER1737,114471
#define GL_TESS_EVALUATION_SHADER GL_TESS_EVALUATION_SHADER1738,114541
#define GL_TESS_CONTROL_SHADER GL_TESS_CONTROL_SHADER1739,114591
#define GL_TRANSFORM_FEEDBACK GL_TRANSFORM_FEEDBACK1740,114641
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED1741,114691
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE1742,114743
#define GL_TRANSFORM_FEEDBACK_BINDING GL_TRANSFORM_FEEDBACK_BINDING1743,114795
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS GL_MAX_TRANSFORM_FEEDBACK_BUFFERS1744,114845
typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);PFNGLMINSAMPLESHADINGPROC1745,114895
typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);PFNGLBLENDEQUATIONIPROC1746,114964
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modPFNGLBLENDEQUATIONSEPARATEIPROC1747,115041
typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);PFNGLBLENDFUNCIPROC1748,115147
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, PFNGLBLENDFUNCSEPARATEIPROC1749,115231
typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);PFNGLDRAWARRAYSINDIRECTPROC1750,115363
typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *inPFNGLDRAWELEMENTSINDIRECTPROC1751,115454
typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);PFNGLUNIFORM1DPROC1752,115560
typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);PFNGLUNIFORM2DPROC1753,115635
typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z)PFNGLUNIFORM3DPROC1754,115722
typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z,PFNGLUNIFORM4DPROC1755,115821
typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *valPFNGLUNIFORM1DVPROC1756,115932
typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *valPFNGLUNIFORM2DVPROC1757,116034
typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *valPFNGLUNIFORM3DVPROC1758,116136
typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *valPFNGLUNIFORM4DVPROC1759,116238
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean traPFNGLUNIFORMMATRIX2DVPROC1760,116340
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean traPFNGLUNIFORMMATRIX3DVPROC1761,116469
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean traPFNGLUNIFORMMATRIX4DVPROC1762,116598
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX2X3DVPROC1763,116727
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX2X4DVPROC1764,116858
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX3X2DVPROC1765,116989
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX3X4DVPROC1766,117120
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX4X2DVPROC1767,117251
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX4X3DVPROC1768,117382
typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *paramsPFNGLGETUNIFORMDVPROC1769,117513
typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertyPFNGLGETSUBROUTINEUNIFORMLOCATIONPROC1770,117613
typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, constPFNGLGETSUBROUTINEINDEXPROC1771,117735
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertypPFNGLGETACTIVESUBROUTINEUNIFORMIVPROC1772,117848
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertPFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC1773,117992
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLPFNGLGETACTIVESUBROUTINENAMEPROC1774,118157
typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, constPFNGLUNIFORMSUBROUTINESUIVPROC1775,118315
typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLPFNGLGETUNIFORMSUBROUTINEUIVPROC1776,118431
typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pPFNGLGETPROGRAMSTAGEIVPROC1777,118543
typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);PFNGLPATCHPARAMETERIPROC1778,118662
typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);PFNGLPATCHPARAMETERFVPROC1779,118742
typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);PFNGLBINDTRANSFORMFEEDBACKPROC1780,118833
typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);PFNGLDELETETRANSFORMFEEDBACKSPROC1781,118918
typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);PFNGLGENTRANSFORMFEEDBACKSPROC1782,119010
typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);PFNGLISTRANSFORMFEEDBACKPROC1783,119093
typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);PFNGLPAUSETRANSFORMFEEDBACKPROC1784,119166
typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);PFNGLRESUMETRANSFORMFEEDBACKPROC1785,119232
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);PFNGLDRAWTRANSFORMFEEDBACKPROC1786,119299
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stPFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC1787,119382
typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);PFNGLBEGINQUERYINDEXEDPROC1788,119486
typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);PFNGLENDQUERYINDEXEDPROC1789,119581
typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, PFNGLGETQUERYINDEXEDIVPROC1790,119663
#define GL_VERSION_4_1 GL_VERSION_4_11842,124196
#define GL_FIXED GL_FIXED1843,124222
#define GL_IMPLEMENTATION_COLOR_READ_TYPE GL_IMPLEMENTATION_COLOR_READ_TYPE1844,124272
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT GL_IMPLEMENTATION_COLOR_READ_FORMAT1845,124322
#define GL_LOW_FLOAT GL_LOW_FLOAT1846,124374
#define GL_MEDIUM_FLOAT GL_MEDIUM_FLOAT1847,124424
#define GL_HIGH_FLOAT GL_HIGH_FLOAT1848,124474
#define GL_LOW_INT GL_LOW_INT1849,124524
#define GL_MEDIUM_INT GL_MEDIUM_INT1850,124574
#define GL_HIGH_INT GL_HIGH_INT1851,124624
#define GL_SHADER_COMPILER GL_SHADER_COMPILER1852,124674
#define GL_SHADER_BINARY_FORMATS GL_SHADER_BINARY_FORMATS1853,124724
#define GL_NUM_SHADER_BINARY_FORMATS GL_NUM_SHADER_BINARY_FORMATS1854,124774
#define GL_MAX_VERTEX_UNIFORM_VECTORS GL_MAX_VERTEX_UNIFORM_VECTORS1855,124824
#define GL_MAX_VARYING_VECTORS GL_MAX_VARYING_VECTORS1856,124874
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS GL_MAX_FRAGMENT_UNIFORM_VECTORS1857,124924
#define GL_RGB565 GL_RGB5651858,124974
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT GL_PROGRAM_BINARY_RETRIEVABLE_HINT1859,125024
#define GL_PROGRAM_BINARY_LENGTH GL_PROGRAM_BINARY_LENGTH1860,125075
#define GL_NUM_PROGRAM_BINARY_FORMATS GL_NUM_PROGRAM_BINARY_FORMATS1861,125125
#define GL_PROGRAM_BINARY_FORMATS GL_PROGRAM_BINARY_FORMATS1862,125175
#define GL_VERTEX_SHADER_BIT GL_VERTEX_SHADER_BIT1863,125225
#define GL_FRAGMENT_SHADER_BIT GL_FRAGMENT_SHADER_BIT1864,125279
#define GL_GEOMETRY_SHADER_BIT GL_GEOMETRY_SHADER_BIT1865,125333
#define GL_TESS_CONTROL_SHADER_BIT GL_TESS_CONTROL_SHADER_BIT1866,125387
#define GL_TESS_EVALUATION_SHADER_BIT GL_TESS_EVALUATION_SHADER_BIT1867,125441
#define GL_ALL_SHADER_BITS GL_ALL_SHADER_BITS1868,125495
#define GL_PROGRAM_SEPARABLE GL_PROGRAM_SEPARABLE1869,125549
#define GL_ACTIVE_PROGRAM GL_ACTIVE_PROGRAM1870,125599
#define GL_PROGRAM_PIPELINE_BINDING GL_PROGRAM_PIPELINE_BINDING1871,125649
#define GL_MAX_VIEWPORTS GL_MAX_VIEWPORTS1872,125699
#define GL_VIEWPORT_SUBPIXEL_BITS GL_VIEWPORT_SUBPIXEL_BITS1873,125749
#define GL_VIEWPORT_BOUNDS_RANGE GL_VIEWPORT_BOUNDS_RANGE1874,125799
#define GL_LAYER_PROVOKING_VERTEX GL_LAYER_PROVOKING_VERTEX1875,125849
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX GL_VIEWPORT_INDEX_PROVOKING_VERTEX1876,125899
#define GL_UNDEFINED_VERTEX GL_UNDEFINED_VERTEX1877,125950
typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);PFNGLRELEASESHADERCOMPILERPROC1878,126000
typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binPFNGLSHADERBINARYPROC1879,126065
typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontPFNGLGETSHADERPRECISIONFORMATPROC1880,126210
typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);PFNGLDEPTHRANGEFPROC1881,126345
typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);PFNGLCLEARDEPTHFPROC1882,126416
typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *lePFNGLGETPROGRAMBINARYPROC1883,126476
typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const voidPFNGLPROGRAMBINARYPROC1884,126616
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);PFNGLPROGRAMPARAMETERIPROC1885,126740
typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint pPFNGLUSEPROGRAMSTAGESPROC1886,126838
typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);PFNGLACTIVESHADERPROGRAMPROC1887,126944
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchPFNGLCREATESHADERPROGRAMVPROC1888,127034
typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);PFNGLBINDPROGRAMPIPELINEPROC1889,127151
typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);PFNGLDELETEPROGRAMPIPELINESPROC1890,127225
typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);PFNGLGENPROGRAMPIPELINESPROC1891,127321
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);PFNGLISPROGRAMPIPELINEPROC1892,127408
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *paPFNGLGETPROGRAMPIPELINEIVPROC1893,127485
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);PFNGLPROGRAMUNIFORM1IPROC1894,127589
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM1IVPROC1895,127685
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);PFNGLPROGRAMUNIFORM1FPROC1896,127807
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM1FVPROC1897,127905
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0)PFNGLPROGRAMUNIFORM1DPROC1898,128029
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM1DVPROC1899,128128
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);PFNGLPROGRAMUNIFORM1UIPROC1900,128253
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei coPFNGLPROGRAMUNIFORM1UIVPROC1901,128351
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLPFNGLPROGRAMUNIFORM2IPROC1902,128475
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM2IVPROC1903,128581
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, PFNGLPROGRAMUNIFORM2FPROC1904,128703
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM2FVPROC1905,128813
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0,PFNGLPROGRAMUNIFORM2DPROC1906,128937
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM2DVPROC1907,129049
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, PFNGLPROGRAMUNIFORM2UIPROC1908,129174
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei coPFNGLPROGRAMUNIFORM2UIVPROC1909,129283
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLPFNGLPROGRAMUNIFORM3IPROC1910,129407
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM3IVPROC1911,129523
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, PFNGLPROGRAMUNIFORM3FPROC1912,129645
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM3FVPROC1913,129767
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0,PFNGLPROGRAMUNIFORM3DPROC1914,129891
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM3DVPROC1915,130016
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, PFNGLPROGRAMUNIFORM3UIPROC1916,130141
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei coPFNGLPROGRAMUNIFORM3UIVPROC1917,130261
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLPFNGLPROGRAMUNIFORM4IPROC1918,130385
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM4IVPROC1919,130511
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, PFNGLPROGRAMUNIFORM4FPROC1920,130633
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM4FVPROC1921,130767
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0,PFNGLPROGRAMUNIFORM4DPROC1922,130891
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM4DVPROC1923,131029
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, PFNGLPROGRAMUNIFORM4UIPROC1924,131154
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei coPFNGLPROGRAMUNIFORM4UIVPROC1925,131285
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORMMATRIX2FVPROC1926,131409
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORMMATRIX3FVPROC1927,131560
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORMMATRIX4FVPROC1928,131711
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORMMATRIX2DVPROC1929,131862
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORMMATRIX3DVPROC1930,132014
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORMMATRIX4DVPROC1931,132166
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX2X3FVPROC1932,132318
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX3X2FVPROC1933,132471
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX2X4FVPROC1934,132624
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX4X2FVPROC1935,132777
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX3X4FVPROC1936,132930
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX4X3FVPROC1937,133083
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX2X3DVPROC1938,133236
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX3X2DVPROC1939,133390
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX2X4DVPROC1940,133544
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX4X2DVPROC1941,133698
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX3X4DVPROC1942,133852
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX4X3DVPROC1943,134006
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);PFNGLVALIDATEPROGRAMPIPELINEPROC1944,134160
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GPFNGLGETPROGRAMPIPELINEINFOLOGPROC1945,134238
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);PFNGLVERTEXATTRIBL1DPROC1946,134369
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);PFNGLVERTEXATTRIBL2DPROC1947,134448
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoublPFNGLVERTEXATTRIBL3DPROC1948,134539
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoublPFNGLVERTEXATTRIBL4DPROC1949,134642
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIBL1DVPROC1950,134757
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIBL2DVPROC1951,134844
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIBL3DVPROC1952,134931
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIBL4DVPROC1953,135018
typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GPFNGLVERTEXATTRIBLPOINTERPROC1954,135105
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *paraPFNGLGETVERTEXATTRIBLDVPROC1955,135239
typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v)PFNGLVIEWPORTARRAYVPROC1956,135341
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat PFNGLVIEWPORTINDEXEDFPROC1957,135440
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);PFNGLVIEWPORTINDEXEDFVPROC1958,135552
typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);PFNGLSCISSORARRAYVPROC1959,135639
typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizePFNGLSCISSORINDEXEDPROC1960,135735
typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);PFNGLSCISSORINDEXEDVPROC1961,135858
typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble PFNGLDEPTHRANGEARRAYVPROC1962,135941
typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);PFNGLDEPTHRANGEINDEXEDPROC1963,136043
typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);PFNGLGETFLOATI_VPROC1964,136136
typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);PFNGLGETDOUBLEI_VPROC1965,136229
#define GL_VERSION_4_2 GL_VERSION_4_22059,145683
#define GL_COPY_READ_BUFFER_BINDING GL_COPY_READ_BUFFER_BINDING2060,145709
#define GL_COPY_WRITE_BUFFER_BINDING GL_COPY_WRITE_BUFFER_BINDING2061,145759
#define GL_TRANSFORM_FEEDBACK_ACTIVE GL_TRANSFORM_FEEDBACK_ACTIVE2062,145809
#define GL_TRANSFORM_FEEDBACK_PAUSED GL_TRANSFORM_FEEDBACK_PAUSED2063,145859
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH GL_UNPACK_COMPRESSED_BLOCK_WIDTH2064,145909
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT GL_UNPACK_COMPRESSED_BLOCK_HEIGHT2065,145959
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH GL_UNPACK_COMPRESSED_BLOCK_DEPTH2066,146009
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE GL_UNPACK_COMPRESSED_BLOCK_SIZE2067,146059
#define GL_PACK_COMPRESSED_BLOCK_WIDTH GL_PACK_COMPRESSED_BLOCK_WIDTH2068,146109
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT GL_PACK_COMPRESSED_BLOCK_HEIGHT2069,146159
#define GL_PACK_COMPRESSED_BLOCK_DEPTH GL_PACK_COMPRESSED_BLOCK_DEPTH2070,146209
#define GL_PACK_COMPRESSED_BLOCK_SIZE GL_PACK_COMPRESSED_BLOCK_SIZE2071,146259
#define GL_NUM_SAMPLE_COUNTS GL_NUM_SAMPLE_COUNTS2072,146309
#define GL_MIN_MAP_BUFFER_ALIGNMENT GL_MIN_MAP_BUFFER_ALIGNMENT2073,146359
#define GL_ATOMIC_COUNTER_BUFFER GL_ATOMIC_COUNTER_BUFFER2074,146409
#define GL_ATOMIC_COUNTER_BUFFER_BINDING GL_ATOMIC_COUNTER_BUFFER_BINDING2075,146459
#define GL_ATOMIC_COUNTER_BUFFER_START GL_ATOMIC_COUNTER_BUFFER_START2076,146509
#define GL_ATOMIC_COUNTER_BUFFER_SIZE GL_ATOMIC_COUNTER_BUFFER_SIZE2077,146559
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE2078,146609
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS2079,146660
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES2080,146724
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER2081,146795
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER2082,146864
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER2083,146939
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER2084,147017
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER2085,147088
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS2086,147159
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS2087,147212
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS2088,147271
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS2089,147333
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS2090,147388
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS2091,147443
#define GL_MAX_VERTEX_ATOMIC_COUNTERS GL_MAX_VERTEX_ATOMIC_COUNTERS2092,147498
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS2093,147548
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS2094,147600
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS GL_MAX_GEOMETRY_ATOMIC_COUNTERS2095,147655
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS GL_MAX_FRAGMENT_ATOMIC_COUNTERS2096,147705
#define GL_MAX_COMBINED_ATOMIC_COUNTERS GL_MAX_COMBINED_ATOMIC_COUNTERS2097,147755
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE2098,147805
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS2099,147855
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS GL_ACTIVE_ATOMIC_COUNTER_BUFFERS2100,147909
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX2101,147959
#define GL_UNSIGNED_INT_ATOMIC_COUNTER GL_UNSIGNED_INT_ATOMIC_COUNTER2102,148014
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT2103,148064
#define GL_ELEMENT_ARRAY_BARRIER_BIT GL_ELEMENT_ARRAY_BARRIER_BIT2104,148119
#define GL_UNIFORM_BARRIER_BIT GL_UNIFORM_BARRIER_BIT2105,148173
#define GL_TEXTURE_FETCH_BARRIER_BIT GL_TEXTURE_FETCH_BARRIER_BIT2106,148227
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT GL_SHADER_IMAGE_ACCESS_BARRIER_BIT2107,148281
#define GL_COMMAND_BARRIER_BIT GL_COMMAND_BARRIER_BIT2108,148336
#define GL_PIXEL_BUFFER_BARRIER_BIT GL_PIXEL_BUFFER_BARRIER_BIT2109,148390
#define GL_TEXTURE_UPDATE_BARRIER_BIT GL_TEXTURE_UPDATE_BARRIER_BIT2110,148444
#define GL_BUFFER_UPDATE_BARRIER_BIT GL_BUFFER_UPDATE_BARRIER_BIT2111,148498
#define GL_FRAMEBUFFER_BARRIER_BIT GL_FRAMEBUFFER_BARRIER_BIT2112,148552
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT GL_TRANSFORM_FEEDBACK_BARRIER_BIT2113,148606
#define GL_ATOMIC_COUNTER_BARRIER_BIT GL_ATOMIC_COUNTER_BARRIER_BIT2114,148660
#define GL_ALL_BARRIER_BITS GL_ALL_BARRIER_BITS2115,148714
#define GL_MAX_IMAGE_UNITS GL_MAX_IMAGE_UNITS2116,148768
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS2117,148818
#define GL_IMAGE_BINDING_NAME GL_IMAGE_BINDING_NAME2118,148883
#define GL_IMAGE_BINDING_LEVEL GL_IMAGE_BINDING_LEVEL2119,148933
#define GL_IMAGE_BINDING_LAYERED GL_IMAGE_BINDING_LAYERED2120,148983
#define GL_IMAGE_BINDING_LAYER GL_IMAGE_BINDING_LAYER2121,149033
#define GL_IMAGE_BINDING_ACCESS GL_IMAGE_BINDING_ACCESS2122,149083
#define GL_IMAGE_1D GL_IMAGE_1D2123,149133
#define GL_IMAGE_2D GL_IMAGE_2D2124,149183
#define GL_IMAGE_3D GL_IMAGE_3D2125,149233
#define GL_IMAGE_2D_RECT GL_IMAGE_2D_RECT2126,149283
#define GL_IMAGE_CUBE GL_IMAGE_CUBE2127,149333
#define GL_IMAGE_BUFFER GL_IMAGE_BUFFER2128,149383
#define GL_IMAGE_1D_ARRAY GL_IMAGE_1D_ARRAY2129,149433
#define GL_IMAGE_2D_ARRAY GL_IMAGE_2D_ARRAY2130,149483
#define GL_IMAGE_CUBE_MAP_ARRAY GL_IMAGE_CUBE_MAP_ARRAY2131,149533
#define GL_IMAGE_2D_MULTISAMPLE GL_IMAGE_2D_MULTISAMPLE2132,149583
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY GL_IMAGE_2D_MULTISAMPLE_ARRAY2133,149633
#define GL_INT_IMAGE_1D GL_INT_IMAGE_1D2134,149683
#define GL_INT_IMAGE_2D GL_INT_IMAGE_2D2135,149733
#define GL_INT_IMAGE_3D GL_INT_IMAGE_3D2136,149783
#define GL_INT_IMAGE_2D_RECT GL_INT_IMAGE_2D_RECT2137,149833
#define GL_INT_IMAGE_CUBE GL_INT_IMAGE_CUBE2138,149883
#define GL_INT_IMAGE_BUFFER GL_INT_IMAGE_BUFFER2139,149933
#define GL_INT_IMAGE_1D_ARRAY GL_INT_IMAGE_1D_ARRAY2140,149983
#define GL_INT_IMAGE_2D_ARRAY GL_INT_IMAGE_2D_ARRAY2141,150033
#define GL_INT_IMAGE_CUBE_MAP_ARRAY GL_INT_IMAGE_CUBE_MAP_ARRAY2142,150083
#define GL_INT_IMAGE_2D_MULTISAMPLE GL_INT_IMAGE_2D_MULTISAMPLE2143,150133
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY2144,150183
#define GL_UNSIGNED_INT_IMAGE_1D GL_UNSIGNED_INT_IMAGE_1D2145,150233
#define GL_UNSIGNED_INT_IMAGE_2D GL_UNSIGNED_INT_IMAGE_2D2146,150283
#define GL_UNSIGNED_INT_IMAGE_3D GL_UNSIGNED_INT_IMAGE_3D2147,150333
#define GL_UNSIGNED_INT_IMAGE_2D_RECT GL_UNSIGNED_INT_IMAGE_2D_RECT2148,150383
#define GL_UNSIGNED_INT_IMAGE_CUBE GL_UNSIGNED_INT_IMAGE_CUBE2149,150433
#define GL_UNSIGNED_INT_IMAGE_BUFFER GL_UNSIGNED_INT_IMAGE_BUFFER2150,150483
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY GL_UNSIGNED_INT_IMAGE_1D_ARRAY2151,150533
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY GL_UNSIGNED_INT_IMAGE_2D_ARRAY2152,150583
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY2153,150633
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE2154,150686
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY2155,150739
#define GL_MAX_IMAGE_SAMPLES GL_MAX_IMAGE_SAMPLES2156,150798
#define GL_IMAGE_BINDING_FORMAT GL_IMAGE_BINDING_FORMAT2157,150848
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE GL_IMAGE_FORMAT_COMPATIBILITY_TYPE2158,150898
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE2159,150949
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS2160,151003
#define GL_MAX_VERTEX_IMAGE_UNIFORMS GL_MAX_VERTEX_IMAGE_UNIFORMS2161,151058
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS2162,151108
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS2163,151159
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS GL_MAX_GEOMETRY_IMAGE_UNIFORMS2164,151213
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS GL_MAX_FRAGMENT_IMAGE_UNIFORMS2165,151263
#define GL_MAX_COMBINED_IMAGE_UNIFORMS GL_MAX_COMBINED_IMAGE_UNIFORMS2166,151313
#define GL_COMPRESSED_RGBA_BPTC_UNORM GL_COMPRESSED_RGBA_BPTC_UNORM2167,151363
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM2168,151413
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT2169,151465
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT2170,151517
#define GL_TEXTURE_IMMUTABLE_FORMAT GL_TEXTURE_IMMUTABLE_FORMAT2171,151571
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsPFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC2172,151621
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count,PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC2173,151775
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsiPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC2174,151952
typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLePFNGLGETINTERNALFORMATIVPROC2175,152157
typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIPFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC2176,152296
typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLPFNGLBINDIMAGETEXTUREPROC2177,152429
typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);PFNGLMEMORYBARRIERPROC2178,152587
typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalfoPFNGLTEXSTORAGE1DPROC2179,152659
typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalfoPFNGLTEXSTORAGE2DPROC2180,152778
typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalfoPFNGLTEXSTORAGE3DPROC2181,152913
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizePFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC2182,153063
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC2183,153178
#define GL_VERSION_4_3 GL_VERSION_4_32201,154954
typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizeGLDEBUGPROC2202,154980
#define GL_NUM_SHADING_LANGUAGE_VERSIONS GL_NUM_SHADING_LANGUAGE_VERSIONS2203,155132
#define GL_VERTEX_ATTRIB_ARRAY_LONG GL_VERTEX_ATTRIB_ARRAY_LONG2204,155182
#define GL_COMPRESSED_RGB8_ETC2 GL_COMPRESSED_RGB8_ETC22205,155232
#define GL_COMPRESSED_SRGB8_ETC2 GL_COMPRESSED_SRGB8_ETC22206,155282
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC22207,155332
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC22208,155392
#define GL_COMPRESSED_RGBA8_ETC2_EAC GL_COMPRESSED_RGBA8_ETC2_EAC2209,155453
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC2210,155503
#define GL_COMPRESSED_R11_EAC GL_COMPRESSED_R11_EAC2211,155555
#define GL_COMPRESSED_SIGNED_R11_EAC GL_COMPRESSED_SIGNED_R11_EAC2212,155605
#define GL_COMPRESSED_RG11_EAC GL_COMPRESSED_RG11_EAC2213,155655
#define GL_COMPRESSED_SIGNED_RG11_EAC GL_COMPRESSED_SIGNED_RG11_EAC2214,155705
#define GL_PRIMITIVE_RESTART_FIXED_INDEX GL_PRIMITIVE_RESTART_FIXED_INDEX2215,155755
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE GL_ANY_SAMPLES_PASSED_CONSERVATIVE2216,155805
#define GL_MAX_ELEMENT_INDEX GL_MAX_ELEMENT_INDEX2217,155856
#define GL_COMPUTE_SHADER GL_COMPUTE_SHADER2218,155906
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS GL_MAX_COMPUTE_UNIFORM_BLOCKS2219,155956
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS2220,156006
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS GL_MAX_COMPUTE_IMAGE_UNIFORMS2221,156057
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE GL_MAX_COMPUTE_SHARED_MEMORY_SIZE2222,156107
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS GL_MAX_COMPUTE_UNIFORM_COMPONENTS2223,156157
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS2224,156207
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS GL_MAX_COMPUTE_ATOMIC_COUNTERS2225,156261
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS2226,156311
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS2227,156370
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT GL_MAX_COMPUTE_WORK_GROUP_COUNT2228,156424
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE GL_MAX_COMPUTE_WORK_GROUP_SIZE2229,156474
#define GL_COMPUTE_WORK_GROUP_SIZE GL_COMPUTE_WORK_GROUP_SIZE2230,156524
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER2231,156574
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER2232,156636
#define GL_DISPATCH_INDIRECT_BUFFER GL_DISPATCH_INDIRECT_BUFFER2233,156706
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING GL_DISPATCH_INDIRECT_BUFFER_BINDING2234,156756
#define GL_COMPUTE_SHADER_BIT GL_COMPUTE_SHADER_BIT2235,156808
#define GL_DEBUG_OUTPUT_SYNCHRONOUS GL_DEBUG_OUTPUT_SYNCHRONOUS2236,156862
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH2237,156912
#define GL_DEBUG_CALLBACK_FUNCTION GL_DEBUG_CALLBACK_FUNCTION2238,156964
#define GL_DEBUG_CALLBACK_USER_PARAM GL_DEBUG_CALLBACK_USER_PARAM2239,157014
#define GL_DEBUG_SOURCE_API GL_DEBUG_SOURCE_API2240,157064
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM GL_DEBUG_SOURCE_WINDOW_SYSTEM2241,157114
#define GL_DEBUG_SOURCE_SHADER_COMPILER GL_DEBUG_SOURCE_SHADER_COMPILER2242,157164
#define GL_DEBUG_SOURCE_THIRD_PARTY GL_DEBUG_SOURCE_THIRD_PARTY2243,157214
#define GL_DEBUG_SOURCE_APPLICATION GL_DEBUG_SOURCE_APPLICATION2244,157264
#define GL_DEBUG_SOURCE_OTHER GL_DEBUG_SOURCE_OTHER2245,157314
#define GL_DEBUG_TYPE_ERROR GL_DEBUG_TYPE_ERROR2246,157364
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR2247,157414
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR2248,157464
#define GL_DEBUG_TYPE_PORTABILITY GL_DEBUG_TYPE_PORTABILITY2249,157514
#define GL_DEBUG_TYPE_PERFORMANCE GL_DEBUG_TYPE_PERFORMANCE2250,157564
#define GL_DEBUG_TYPE_OTHER GL_DEBUG_TYPE_OTHER2251,157614
#define GL_MAX_DEBUG_MESSAGE_LENGTH GL_MAX_DEBUG_MESSAGE_LENGTH2252,157664
#define GL_MAX_DEBUG_LOGGED_MESSAGES GL_MAX_DEBUG_LOGGED_MESSAGES2253,157714
#define GL_DEBUG_LOGGED_MESSAGES GL_DEBUG_LOGGED_MESSAGES2254,157764
#define GL_DEBUG_SEVERITY_HIGH GL_DEBUG_SEVERITY_HIGH2255,157814
#define GL_DEBUG_SEVERITY_MEDIUM GL_DEBUG_SEVERITY_MEDIUM2256,157864
#define GL_DEBUG_SEVERITY_LOW GL_DEBUG_SEVERITY_LOW2257,157914
#define GL_DEBUG_TYPE_MARKER GL_DEBUG_TYPE_MARKER2258,157964
#define GL_DEBUG_TYPE_PUSH_GROUP GL_DEBUG_TYPE_PUSH_GROUP2259,158014
#define GL_DEBUG_TYPE_POP_GROUP GL_DEBUG_TYPE_POP_GROUP2260,158064
#define GL_DEBUG_SEVERITY_NOTIFICATION GL_DEBUG_SEVERITY_NOTIFICATION2261,158114
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH GL_MAX_DEBUG_GROUP_STACK_DEPTH2262,158164
#define GL_DEBUG_GROUP_STACK_DEPTH GL_DEBUG_GROUP_STACK_DEPTH2263,158214
#define GL_BUFFER GL_BUFFER2264,158264
#define GL_SHADER GL_SHADER2265,158314
#define GL_PROGRAM GL_PROGRAM2266,158364
#define GL_QUERY GL_QUERY2267,158414
#define GL_PROGRAM_PIPELINE GL_PROGRAM_PIPELINE2268,158464
#define GL_SAMPLER GL_SAMPLER2269,158514
#define GL_MAX_LABEL_LENGTH GL_MAX_LABEL_LENGTH2270,158564
#define GL_DEBUG_OUTPUT GL_DEBUG_OUTPUT2271,158614
#define GL_CONTEXT_FLAG_DEBUG_BIT GL_CONTEXT_FLAG_DEBUG_BIT2272,158664
#define GL_MAX_UNIFORM_LOCATIONS GL_MAX_UNIFORM_LOCATIONS2273,158718
#define GL_FRAMEBUFFER_DEFAULT_WIDTH GL_FRAMEBUFFER_DEFAULT_WIDTH2274,158768
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT GL_FRAMEBUFFER_DEFAULT_HEIGHT2275,158818
#define GL_FRAMEBUFFER_DEFAULT_LAYERS GL_FRAMEBUFFER_DEFAULT_LAYERS2276,158868
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES GL_FRAMEBUFFER_DEFAULT_SAMPLES2277,158918
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS2278,158968
#define GL_MAX_FRAMEBUFFER_WIDTH GL_MAX_FRAMEBUFFER_WIDTH2279,159030
#define GL_MAX_FRAMEBUFFER_HEIGHT GL_MAX_FRAMEBUFFER_HEIGHT2280,159080
#define GL_MAX_FRAMEBUFFER_LAYERS GL_MAX_FRAMEBUFFER_LAYERS2281,159130
#define GL_MAX_FRAMEBUFFER_SAMPLES GL_MAX_FRAMEBUFFER_SAMPLES2282,159180
#define GL_INTERNALFORMAT_SUPPORTED GL_INTERNALFORMAT_SUPPORTED2283,159230
#define GL_INTERNALFORMAT_PREFERRED GL_INTERNALFORMAT_PREFERRED2284,159280
#define GL_INTERNALFORMAT_RED_SIZE GL_INTERNALFORMAT_RED_SIZE2285,159330
#define GL_INTERNALFORMAT_GREEN_SIZE GL_INTERNALFORMAT_GREEN_SIZE2286,159380
#define GL_INTERNALFORMAT_BLUE_SIZE GL_INTERNALFORMAT_BLUE_SIZE2287,159430
#define GL_INTERNALFORMAT_ALPHA_SIZE GL_INTERNALFORMAT_ALPHA_SIZE2288,159480
#define GL_INTERNALFORMAT_DEPTH_SIZE GL_INTERNALFORMAT_DEPTH_SIZE2289,159530
#define GL_INTERNALFORMAT_STENCIL_SIZE GL_INTERNALFORMAT_STENCIL_SIZE2290,159580
#define GL_INTERNALFORMAT_SHARED_SIZE GL_INTERNALFORMAT_SHARED_SIZE2291,159630
#define GL_INTERNALFORMAT_RED_TYPE GL_INTERNALFORMAT_RED_TYPE2292,159680
#define GL_INTERNALFORMAT_GREEN_TYPE GL_INTERNALFORMAT_GREEN_TYPE2293,159730
#define GL_INTERNALFORMAT_BLUE_TYPE GL_INTERNALFORMAT_BLUE_TYPE2294,159780
#define GL_INTERNALFORMAT_ALPHA_TYPE GL_INTERNALFORMAT_ALPHA_TYPE2295,159830
#define GL_INTERNALFORMAT_DEPTH_TYPE GL_INTERNALFORMAT_DEPTH_TYPE2296,159880
#define GL_INTERNALFORMAT_STENCIL_TYPE GL_INTERNALFORMAT_STENCIL_TYPE2297,159930
#define GL_MAX_WIDTH GL_MAX_WIDTH2298,159980
#define GL_MAX_HEIGHT GL_MAX_HEIGHT2299,160030
#define GL_MAX_DEPTH GL_MAX_DEPTH2300,160080
#define GL_MAX_LAYERS GL_MAX_LAYERS2301,160130
#define GL_MAX_COMBINED_DIMENSIONS GL_MAX_COMBINED_DIMENSIONS2302,160180
#define GL_COLOR_COMPONENTS GL_COLOR_COMPONENTS2303,160230
#define GL_DEPTH_COMPONENTS GL_DEPTH_COMPONENTS2304,160280
#define GL_STENCIL_COMPONENTS GL_STENCIL_COMPONENTS2305,160330
#define GL_COLOR_RENDERABLE GL_COLOR_RENDERABLE2306,160380
#define GL_DEPTH_RENDERABLE GL_DEPTH_RENDERABLE2307,160430
#define GL_STENCIL_RENDERABLE GL_STENCIL_RENDERABLE2308,160480
#define GL_FRAMEBUFFER_RENDERABLE GL_FRAMEBUFFER_RENDERABLE2309,160530
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED GL_FRAMEBUFFER_RENDERABLE_LAYERED2310,160580
#define GL_FRAMEBUFFER_BLEND GL_FRAMEBUFFER_BLEND2311,160630
#define GL_READ_PIXELS GL_READ_PIXELS2312,160680
#define GL_READ_PIXELS_FORMAT GL_READ_PIXELS_FORMAT2313,160730
#define GL_READ_PIXELS_TYPE GL_READ_PIXELS_TYPE2314,160780
#define GL_TEXTURE_IMAGE_FORMAT GL_TEXTURE_IMAGE_FORMAT2315,160830
#define GL_TEXTURE_IMAGE_TYPE GL_TEXTURE_IMAGE_TYPE2316,160880
#define GL_GET_TEXTURE_IMAGE_FORMAT GL_GET_TEXTURE_IMAGE_FORMAT2317,160930
#define GL_GET_TEXTURE_IMAGE_TYPE GL_GET_TEXTURE_IMAGE_TYPE2318,160980
#define GL_MIPMAP GL_MIPMAP2319,161030
#define GL_MANUAL_GENERATE_MIPMAP GL_MANUAL_GENERATE_MIPMAP2320,161080
#define GL_AUTO_GENERATE_MIPMAP GL_AUTO_GENERATE_MIPMAP2321,161130
#define GL_COLOR_ENCODING GL_COLOR_ENCODING2322,161180
#define GL_SRGB_READ GL_SRGB_READ2323,161230
#define GL_SRGB_WRITE GL_SRGB_WRITE2324,161280
#define GL_FILTER GL_FILTER2325,161330
#define GL_VERTEX_TEXTURE GL_VERTEX_TEXTURE2326,161380
#define GL_TESS_CONTROL_TEXTURE GL_TESS_CONTROL_TEXTURE2327,161430
#define GL_TESS_EVALUATION_TEXTURE GL_TESS_EVALUATION_TEXTURE2328,161480
#define GL_GEOMETRY_TEXTURE GL_GEOMETRY_TEXTURE2329,161530
#define GL_FRAGMENT_TEXTURE GL_FRAGMENT_TEXTURE2330,161580
#define GL_COMPUTE_TEXTURE GL_COMPUTE_TEXTURE2331,161630
#define GL_TEXTURE_SHADOW GL_TEXTURE_SHADOW2332,161680
#define GL_TEXTURE_GATHER GL_TEXTURE_GATHER2333,161730
#define GL_TEXTURE_GATHER_SHADOW GL_TEXTURE_GATHER_SHADOW2334,161780
#define GL_SHADER_IMAGE_LOAD GL_SHADER_IMAGE_LOAD2335,161830
#define GL_SHADER_IMAGE_STORE GL_SHADER_IMAGE_STORE2336,161880
#define GL_SHADER_IMAGE_ATOMIC GL_SHADER_IMAGE_ATOMIC2337,161930
#define GL_IMAGE_TEXEL_SIZE GL_IMAGE_TEXEL_SIZE2338,161980
#define GL_IMAGE_COMPATIBILITY_CLASS GL_IMAGE_COMPATIBILITY_CLASS2339,162030
#define GL_IMAGE_PIXEL_FORMAT GL_IMAGE_PIXEL_FORMAT2340,162080
#define GL_IMAGE_PIXEL_TYPE GL_IMAGE_PIXEL_TYPE2341,162130
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST2342,162180
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST2343,162235
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE2344,162292
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE2345,162348
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH GL_TEXTURE_COMPRESSED_BLOCK_WIDTH2346,162406
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT2347,162456
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE GL_TEXTURE_COMPRESSED_BLOCK_SIZE2348,162507
#define GL_CLEAR_BUFFER GL_CLEAR_BUFFER2349,162557
#define GL_TEXTURE_VIEW GL_TEXTURE_VIEW2350,162607
#define GL_VIEW_COMPATIBILITY_CLASS GL_VIEW_COMPATIBILITY_CLASS2351,162657
#define GL_FULL_SUPPORT GL_FULL_SUPPORT2352,162707
#define GL_CAVEAT_SUPPORT GL_CAVEAT_SUPPORT2353,162757
#define GL_IMAGE_CLASS_4_X_32 GL_IMAGE_CLASS_4_X_322354,162807
#define GL_IMAGE_CLASS_2_X_32 GL_IMAGE_CLASS_2_X_322355,162857
#define GL_IMAGE_CLASS_1_X_32 GL_IMAGE_CLASS_1_X_322356,162907
#define GL_IMAGE_CLASS_4_X_16 GL_IMAGE_CLASS_4_X_162357,162957
#define GL_IMAGE_CLASS_2_X_16 GL_IMAGE_CLASS_2_X_162358,163007
#define GL_IMAGE_CLASS_1_X_16 GL_IMAGE_CLASS_1_X_162359,163057
#define GL_IMAGE_CLASS_4_X_8 GL_IMAGE_CLASS_4_X_82360,163107
#define GL_IMAGE_CLASS_2_X_8 GL_IMAGE_CLASS_2_X_82361,163157
#define GL_IMAGE_CLASS_1_X_8 GL_IMAGE_CLASS_1_X_82362,163207
#define GL_IMAGE_CLASS_11_11_10 GL_IMAGE_CLASS_11_11_102363,163257
#define GL_IMAGE_CLASS_10_10_10_2 GL_IMAGE_CLASS_10_10_10_22364,163307
#define GL_VIEW_CLASS_128_BITS GL_VIEW_CLASS_128_BITS2365,163357
#define GL_VIEW_CLASS_96_BITS GL_VIEW_CLASS_96_BITS2366,163407
#define GL_VIEW_CLASS_64_BITS GL_VIEW_CLASS_64_BITS2367,163457
#define GL_VIEW_CLASS_48_BITS GL_VIEW_CLASS_48_BITS2368,163507
#define GL_VIEW_CLASS_32_BITS GL_VIEW_CLASS_32_BITS2369,163557
#define GL_VIEW_CLASS_24_BITS GL_VIEW_CLASS_24_BITS2370,163607
#define GL_VIEW_CLASS_16_BITS GL_VIEW_CLASS_16_BITS2371,163657
#define GL_VIEW_CLASS_8_BITS GL_VIEW_CLASS_8_BITS2372,163707
#define GL_VIEW_CLASS_S3TC_DXT1_RGB GL_VIEW_CLASS_S3TC_DXT1_RGB2373,163757
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA GL_VIEW_CLASS_S3TC_DXT1_RGBA2374,163807
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA GL_VIEW_CLASS_S3TC_DXT3_RGBA2375,163857
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA GL_VIEW_CLASS_S3TC_DXT5_RGBA2376,163907
#define GL_VIEW_CLASS_RGTC1_RED GL_VIEW_CLASS_RGTC1_RED2377,163957
#define GL_VIEW_CLASS_RGTC2_RG GL_VIEW_CLASS_RGTC2_RG2378,164007
#define GL_VIEW_CLASS_BPTC_UNORM GL_VIEW_CLASS_BPTC_UNORM2379,164057
#define GL_VIEW_CLASS_BPTC_FLOAT GL_VIEW_CLASS_BPTC_FLOAT2380,164107
#define GL_UNIFORM GL_UNIFORM2381,164157
#define GL_UNIFORM_BLOCK GL_UNIFORM_BLOCK2382,164207
#define GL_PROGRAM_INPUT GL_PROGRAM_INPUT2383,164257
#define GL_PROGRAM_OUTPUT GL_PROGRAM_OUTPUT2384,164307
#define GL_BUFFER_VARIABLE GL_BUFFER_VARIABLE2385,164357
#define GL_SHADER_STORAGE_BLOCK GL_SHADER_STORAGE_BLOCK2386,164407
#define GL_VERTEX_SUBROUTINE GL_VERTEX_SUBROUTINE2387,164457
#define GL_TESS_CONTROL_SUBROUTINE GL_TESS_CONTROL_SUBROUTINE2388,164507
#define GL_TESS_EVALUATION_SUBROUTINE GL_TESS_EVALUATION_SUBROUTINE2389,164557
#define GL_GEOMETRY_SUBROUTINE GL_GEOMETRY_SUBROUTINE2390,164607
#define GL_FRAGMENT_SUBROUTINE GL_FRAGMENT_SUBROUTINE2391,164657
#define GL_COMPUTE_SUBROUTINE GL_COMPUTE_SUBROUTINE2392,164707
#define GL_VERTEX_SUBROUTINE_UNIFORM GL_VERTEX_SUBROUTINE_UNIFORM2393,164757
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM GL_TESS_CONTROL_SUBROUTINE_UNIFORM2394,164807
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM GL_TESS_EVALUATION_SUBROUTINE_UNIFORM2395,164858
#define GL_GEOMETRY_SUBROUTINE_UNIFORM GL_GEOMETRY_SUBROUTINE_UNIFORM2396,164912
#define GL_FRAGMENT_SUBROUTINE_UNIFORM GL_FRAGMENT_SUBROUTINE_UNIFORM2397,164962
#define GL_COMPUTE_SUBROUTINE_UNIFORM GL_COMPUTE_SUBROUTINE_UNIFORM2398,165012
#define GL_TRANSFORM_FEEDBACK_VARYING GL_TRANSFORM_FEEDBACK_VARYING2399,165062
#define GL_ACTIVE_RESOURCES GL_ACTIVE_RESOURCES2400,165112
#define GL_MAX_NAME_LENGTH GL_MAX_NAME_LENGTH2401,165162
#define GL_MAX_NUM_ACTIVE_VARIABLES GL_MAX_NUM_ACTIVE_VARIABLES2402,165212
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES GL_MAX_NUM_COMPATIBLE_SUBROUTINES2403,165262
#define GL_NAME_LENGTH GL_NAME_LENGTH2404,165312
#define GL_TYPE GL_TYPE2405,165362
#define GL_ARRAY_SIZE GL_ARRAY_SIZE2406,165412
#define GL_OFFSET GL_OFFSET2407,165462
#define GL_BLOCK_INDEX GL_BLOCK_INDEX2408,165512
#define GL_ARRAY_STRIDE GL_ARRAY_STRIDE2409,165562
#define GL_MATRIX_STRIDE GL_MATRIX_STRIDE2410,165612
#define GL_IS_ROW_MAJOR GL_IS_ROW_MAJOR2411,165662
#define GL_ATOMIC_COUNTER_BUFFER_INDEX GL_ATOMIC_COUNTER_BUFFER_INDEX2412,165712
#define GL_BUFFER_BINDING GL_BUFFER_BINDING2413,165762
#define GL_BUFFER_DATA_SIZE GL_BUFFER_DATA_SIZE2414,165812
#define GL_NUM_ACTIVE_VARIABLES GL_NUM_ACTIVE_VARIABLES2415,165862
#define GL_ACTIVE_VARIABLES GL_ACTIVE_VARIABLES2416,165912
#define GL_REFERENCED_BY_VERTEX_SHADER GL_REFERENCED_BY_VERTEX_SHADER2417,165962
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER GL_REFERENCED_BY_TESS_CONTROL_SHADER2418,166012
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER GL_REFERENCED_BY_TESS_EVALUATION_SHADER2419,166065
#define GL_REFERENCED_BY_GEOMETRY_SHADER GL_REFERENCED_BY_GEOMETRY_SHADER2420,166121
#define GL_REFERENCED_BY_FRAGMENT_SHADER GL_REFERENCED_BY_FRAGMENT_SHADER2421,166171
#define GL_REFERENCED_BY_COMPUTE_SHADER GL_REFERENCED_BY_COMPUTE_SHADER2422,166221
#define GL_TOP_LEVEL_ARRAY_SIZE GL_TOP_LEVEL_ARRAY_SIZE2423,166271
#define GL_TOP_LEVEL_ARRAY_STRIDE GL_TOP_LEVEL_ARRAY_STRIDE2424,166321
#define GL_LOCATION GL_LOCATION2425,166371
#define GL_LOCATION_INDEX GL_LOCATION_INDEX2426,166421
#define GL_IS_PER_PATCH GL_IS_PER_PATCH2427,166471
#define GL_SHADER_STORAGE_BUFFER GL_SHADER_STORAGE_BUFFER2428,166521
#define GL_SHADER_STORAGE_BUFFER_BINDING GL_SHADER_STORAGE_BUFFER_BINDING2429,166571
#define GL_SHADER_STORAGE_BUFFER_START GL_SHADER_STORAGE_BUFFER_START2430,166621
#define GL_SHADER_STORAGE_BUFFER_SIZE GL_SHADER_STORAGE_BUFFER_SIZE2431,166671
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS2432,166721
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS2433,166773
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS2434,166827
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS2435,166885
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS2436,166946
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS2437,167000
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS2438,167053
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS2439,167107
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE GL_MAX_SHADER_STORAGE_BLOCK_SIZE2440,167161
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT2441,167211
#define GL_SHADER_STORAGE_BARRIER_BIT GL_SHADER_STORAGE_BARRIER_BIT2442,167269
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES2443,167323
#define GL_DEPTH_STENCIL_TEXTURE_MODE GL_DEPTH_STENCIL_TEXTURE_MODE2444,167379
#define GL_TEXTURE_BUFFER_OFFSET GL_TEXTURE_BUFFER_OFFSET2445,167429
#define GL_TEXTURE_BUFFER_SIZE GL_TEXTURE_BUFFER_SIZE2446,167479
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT2447,167529
#define GL_TEXTURE_VIEW_MIN_LEVEL GL_TEXTURE_VIEW_MIN_LEVEL2448,167580
#define GL_TEXTURE_VIEW_NUM_LEVELS GL_TEXTURE_VIEW_NUM_LEVELS2449,167630
#define GL_TEXTURE_VIEW_MIN_LAYER GL_TEXTURE_VIEW_MIN_LAYER2450,167680
#define GL_TEXTURE_VIEW_NUM_LAYERS GL_TEXTURE_VIEW_NUM_LAYERS2451,167730
#define GL_TEXTURE_IMMUTABLE_LEVELS GL_TEXTURE_IMMUTABLE_LEVELS2452,167780
#define GL_VERTEX_ATTRIB_BINDING GL_VERTEX_ATTRIB_BINDING2453,167830
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET GL_VERTEX_ATTRIB_RELATIVE_OFFSET2454,167880
#define GL_VERTEX_BINDING_DIVISOR GL_VERTEX_BINDING_DIVISOR2455,167930
#define GL_VERTEX_BINDING_OFFSET GL_VERTEX_BINDING_OFFSET2456,167980
#define GL_VERTEX_BINDING_STRIDE GL_VERTEX_BINDING_STRIDE2457,168030
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET2458,168080
#define GL_MAX_VERTEX_ATTRIB_BINDINGS GL_MAX_VERTEX_ATTRIB_BINDINGS2459,168133
#define GL_VERTEX_BINDING_BUFFER GL_VERTEX_BINDING_BUFFER2460,168183
typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum PFNGLCLEARBUFFERDATAPROC2461,168233
typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLinPFNGLCLEARBUFFERSUBDATAPROC2462,168370
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuPFNGLDISPATCHCOMPUTEPROC2463,168544
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);PFNGLDISPATCHCOMPUTEINDIRECTPROC2464,168660
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLPFNGLCOPYIMAGESUBDATAPROC2465,168740
typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint paraPFNGLFRAMEBUFFERPARAMETERIPROC2466,169021
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint PFNGLGETFRAMEBUFFERPARAMETERIVPROC2467,169122
typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GPFNGLGETINTERNALFORMATI64VPROC2468,169229
typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffPFNGLINVALIDATETEXSUBIMAGEPROC2469,169372
typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);PFNGLINVALIDATETEXIMAGEPROC2470,169551
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizPFNGLINVALIDATEBUFFERSUBDATAPROC2471,169636
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);PFNGLINVALIDATEBUFFERDATAPROC2472,169748
typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, PFNGLINVALIDATEFRAMEBUFFERPROC2473,169821
typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachmentPFNGLINVALIDATESUBFRAMEBUFFERPROC2474,169946
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLPFNGLMULTIDRAWARRAYSINDIRECTPROC2475,170123
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const voiPFNGLMULTIDRAWELEMENTSINDIRECTPROC2476,170254
typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterfacePFNGLGETPROGRAMINTERFACEIVPROC2477,170400
typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterPFNGLGETPROGRAMRESOURCEINDEXPROC2478,170529
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterfacPFNGLGETPROGRAMRESOURCENAMEPROC2479,170653
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface,PFNGLGETPROGRAMRESOURCEIVPROC2480,170816
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programIntPFNGLGETPROGRAMRESOURCELOCATIONPROC2481,171016
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum progrPFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC2482,171142
typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockPFNGLSHADERSTORAGEBLOCKBINDINGPROC2483,171273
typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint bPFNGLTEXBUFFERRANGEPROC2484,171406
typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenuPFNGLTEXSTORAGE2DMULTISAMPLEPROC2485,171545
typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenuPFNGLTEXSTORAGE3DMULTISAMPLEPROC2486,171724
typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexturePFNGLTEXTUREVIEWPROC2487,171918
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptrPFNGLBINDVERTEXBUFFERPROC2488,172111
typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum typPFNGLVERTEXATTRIBFORMATPROC2489,172234
typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum tyPFNGLVERTEXATTRIBIFORMATPROC2490,172380
typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum tyPFNGLVERTEXATTRIBLFORMATPROC2491,172505
typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);PFNGLVERTEXATTRIBBINDINGPROC2492,172630
typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);PFNGLVERTEXBINDINGDIVISORPROC2493,172728
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severiPFNGLDEBUGMESSAGECONTROLPROC2494,172823
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLePFNGLDEBUGMESSAGEINSERTPROC2495,172978
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userPaPFNGLDEBUGMESSAGECALLBACKPROC2496,173125
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *sPFNGLGETDEBUGMESSAGELOGPROC2497,173228
typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, consPFNGLPUSHDEBUGGROUPPROC2498,173420
typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);PFNGLPOPDEBUGGROUPPROC2499,173537
typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, cPFNGLOBJECTLABELPROC2500,173594
typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSizPFNGLGETOBJECTLABELPROC2501,173712
typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar PFNGLOBJECTPTRLABELPROC2502,173845
typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *PFNGLGETOBJECTPTRLABELPROC2503,173951
#define GL_VERSION_4_4 GL_VERSION_4_42552,179486
#define GL_MAX_VERTEX_ATTRIB_STRIDE GL_MAX_VERTEX_ATTRIB_STRIDE2553,179512
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED2554,179562
#define GL_TEXTURE_BUFFER_BINDING GL_TEXTURE_BUFFER_BINDING2555,179621
#define GL_MAP_PERSISTENT_BIT GL_MAP_PERSISTENT_BIT2556,179671
#define GL_MAP_COHERENT_BIT GL_MAP_COHERENT_BIT2557,179721
#define GL_DYNAMIC_STORAGE_BIT GL_DYNAMIC_STORAGE_BIT2558,179771
#define GL_CLIENT_STORAGE_BIT GL_CLIENT_STORAGE_BIT2559,179821
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT2560,179871
#define GL_BUFFER_IMMUTABLE_STORAGE GL_BUFFER_IMMUTABLE_STORAGE2561,179927
#define GL_BUFFER_STORAGE_FLAGS GL_BUFFER_STORAGE_FLAGS2562,179977
#define GL_CLEAR_TEXTURE GL_CLEAR_TEXTURE2563,180027
#define GL_LOCATION_COMPONENT GL_LOCATION_COMPONENT2564,180077
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX GL_TRANSFORM_FEEDBACK_BUFFER_INDEX2565,180127
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE2566,180178
#define GL_QUERY_BUFFER GL_QUERY_BUFFER2567,180230
#define GL_QUERY_BUFFER_BARRIER_BIT GL_QUERY_BUFFER_BARRIER_BIT2568,180280
#define GL_QUERY_BUFFER_BINDING GL_QUERY_BUFFER_BINDING2569,180334
#define GL_QUERY_RESULT_NO_WAIT GL_QUERY_RESULT_NO_WAIT2570,180384
#define GL_MIRROR_CLAMP_TO_EDGE GL_MIRROR_CLAMP_TO_EDGE2571,180434
typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *datPFNGLBUFFERSTORAGEPROC2572,180484
typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLePFNGLCLEARTEXIMAGEPROC2573,180603
typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, PFNGLCLEARTEXSUBIMAGEPROC2574,180729
typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, cPFNGLBINDBUFFERSBASEPROC2575,180949
typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, PFNGLBINDBUFFERSRANGEPROC2576,181069
typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textuPFNGLBINDTEXTURESPROC2577,181240
typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *samplPFNGLBINDSAMPLERSPROC2578,181343
typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint *PFNGLBINDIMAGETEXTURESPROC2579,181446
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint *PFNGLBINDVERTEXBUFFERSPROC2580,181554
#define GL_VERSION_4_5 GL_VERSION_4_52595,182919
#define GL_CONTEXT_LOST GL_CONTEXT_LOST2596,182945
#define GL_NEGATIVE_ONE_TO_ONE GL_NEGATIVE_ONE_TO_ONE2597,182995
#define GL_ZERO_TO_ONE GL_ZERO_TO_ONE2598,183045
#define GL_CLIP_ORIGIN GL_CLIP_ORIGIN2599,183095
#define GL_CLIP_DEPTH_MODE GL_CLIP_DEPTH_MODE2600,183145
#define GL_QUERY_WAIT_INVERTED GL_QUERY_WAIT_INVERTED2601,183195
#define GL_QUERY_NO_WAIT_INVERTED GL_QUERY_NO_WAIT_INVERTED2602,183245
#define GL_QUERY_BY_REGION_WAIT_INVERTED GL_QUERY_BY_REGION_WAIT_INVERTED2603,183295
#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED GL_QUERY_BY_REGION_NO_WAIT_INVERTED2604,183345
#define GL_MAX_CULL_DISTANCES GL_MAX_CULL_DISTANCES2605,183397
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES2606,183447
#define GL_TEXTURE_TARGET GL_TEXTURE_TARGET2607,183503
#define GL_QUERY_TARGET GL_QUERY_TARGET2608,183553
#define GL_GUILTY_CONTEXT_RESET GL_GUILTY_CONTEXT_RESET2609,183603
#define GL_INNOCENT_CONTEXT_RESET GL_INNOCENT_CONTEXT_RESET2610,183653
#define GL_UNKNOWN_CONTEXT_RESET GL_UNKNOWN_CONTEXT_RESET2611,183703
#define GL_RESET_NOTIFICATION_STRATEGY GL_RESET_NOTIFICATION_STRATEGY2612,183753
#define GL_LOSE_CONTEXT_ON_RESET GL_LOSE_CONTEXT_ON_RESET2613,183803
#define GL_NO_RESET_NOTIFICATION GL_NO_RESET_NOTIFICATION2614,183853
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT2615,183903
#define GL_CONTEXT_RELEASE_BEHAVIOR GL_CONTEXT_RELEASE_BEHAVIOR2616,183957
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH2617,184007
typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);PFNGLCLIPCONTROLPROC2618,184057
typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);PFNGLCREATETRANSFORMFEEDBACKSPROC2619,184135
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC2620,184221
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuintPFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC2621,184327
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *paramPFNGLGETTRANSFORMFEEDBACKIVPROC2622,184468
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint indePFNGLGETTRANSFORMFEEDBACKI_VPROC2623,184568
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint inPFNGLGETTRANSFORMFEEDBACKI64_VPROC2624,184683
typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);PFNGLCREATEBUFFERSPROC2625,184802
typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const voidPFNGLNAMEDBUFFERSTORAGEPROC2626,184881
typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void *dPFNGLNAMEDBUFFERDATAPROC2627,185005
typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptrPFNGLNAMEDBUFFERSUBDATAPROC2628,185122
typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer,PFNGLCOPYNAMEDBUFFERSUBDATAPROC2629,185245
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GLPFNGLCLEARNAMEDBUFFERDATAPROC2630,185404
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat,PFNGLCLEARNAMEDBUFFERSUBDATAPROC2631,185546
typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);PFNGLMAPNAMEDBUFFERPROC2632,185725
typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeipPFNGLMAPNAMEDBUFFERRANGEPROC2633,185808
typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);PFNGLUNMAPNAMEDBUFFERPROC2634,185936
typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GPFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC2635,186010
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint PFNGLGETNAMEDBUFFERPARAMETERIVPROC2636,186126
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLinPFNGLGETNAMEDBUFFERPARAMETERI64VPROC2637,186233
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **paPFNGLGETNAMEDBUFFERPOINTERVPROC2638,186344
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiPFNGLGETNAMEDBUFFERSUBDATAPROC2639,186448
typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);PFNGLCREATEFRAMEBUFFERSPROC2640,186568
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attacPFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC2641,186657
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC2642,186810
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachmentPFNGLNAMEDFRAMEBUFFERTEXTUREPROC2643,186921
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attacPFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC2644,187050
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC2645,187197
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, coPFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC2646,187293
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC2647,187409
typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei nuPFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC2648,187505
typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizeiPFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC2649,187644
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GLPFNGLCLEARNAMEDFRAMEBUFFERIVPROC2650,187835
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, GPFNGLCLEARNAMEDFRAMEBUFFERUIVPROC2651,187969
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GLPFNGLCLEARNAMEDFRAMEBUFFERFVPROC2652,188105
typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, GLPFNGLCLEARNAMEDFRAMEBUFFERFIPROC2653,188241
typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFramePFNGLBLITNAMEDFRAMEBUFFERPROC2654,188385
typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum targPFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC2655,188627
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pnaPFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC2656,188729
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC2657,188845
typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);PFNGLCREATERENDERBUFFERSPROC2658,188991
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internalPFNGLNAMEDRENDERBUFFERSTORAGEPROC2659,189082
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsiPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC2660,189219
typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum pPFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC2661,189384
typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);PFNGLCREATETEXTURESPROC2662,189503
typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint bPFNGLTEXTUREBUFFERPROC2663,189599
typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLuPFNGLTEXTUREBUFFERRANGEPROC2664,189704
typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum interPFNGLTEXTURESTORAGE1DPROC2665,189848
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum interPFNGLTEXTURESTORAGE2DPROC2666,189972
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum interPFNGLTEXTURESTORAGE3DPROC2667,190112
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC2668,190267
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC2669,190451
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset,PFNGLTEXTURESUBIMAGE1DPROC2670,190650
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset,PFNGLTEXTURESUBIMAGE2DPROC2671,190812
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset,PFNGLTEXTURESUBIMAGE3DPROC2672,191005
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLinPFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC2673,191228
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLinPFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC2674,191404
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLinPFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC2675,191611
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffPFNGLCOPYTEXTURESUBIMAGE1DPROC2676,191848
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffPFNGLCOPYTEXTURESUBIMAGE2DPROC2677,191984
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffPFNGLCOPYTEXTURESUBIMAGE3DPROC2678,192151
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat paramPFNGLTEXTUREPARAMETERFPROC2679,192333
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloaPFNGLTEXTUREPARAMETERFVPROC2680,192433
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);PFNGLTEXTUREPARAMETERIPROC2681,192541
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLintPFNGLTEXTUREPARAMETERIIVPROC2682,192639
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLuiPFNGLTEXTUREPARAMETERIUIVPROC2683,192747
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint PFNGLTEXTUREPARAMETERIVPROC2684,192857
typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);PFNGLGENERATETEXTUREMIPMAPPROC2685,192963
typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);PFNGLBINDTEXTUREUNITPROC2686,193038
typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, GPFNGLGETTEXTUREIMAGEPROC2687,193120
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsizePFNGLGETCOMPRESSEDTEXTUREIMAGEPROC2688,193261
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenuPFNGLGETTEXTURELEVELPARAMETERFVPROC2689,193384
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenuPFNGLGETTEXTURELEVELPARAMETERIVPROC2690,193508
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat *PFNGLGETTEXTUREPARAMETERFVPROC2691,193630
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *pPFNGLGETTEXTUREPARAMETERIIVPROC2692,193736
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint PFNGLGETTEXTUREPARAMETERIUIVPROC2693,193841
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *paPFNGLGETTEXTUREPARAMETERIVPROC2694,193948
typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);PFNGLCREATEVERTEXARRAYSPROC2695,194052
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);PFNGLDISABLEVERTEXARRAYATTRIBPROC2696,194135
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);PFNGLENABLEVERTEXARRAYATTRIBPROC2697,194225
typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);PFNGLVERTEXARRAYELEMENTBUFFERPROC2698,194314
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GLPFNGLVERTEXARRAYVERTEXBUFFERPROC2699,194405
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei PFNGLVERTEXARRAYVERTEXBUFFERSPROC2700,194549
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GLPFNGLVERTEXARRAYATTRIBBINDINGPROC2701,194726
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLiPFNGLVERTEXARRAYATTRIBFORMATPROC2702,194843
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GLPFNGLVERTEXARRAYATTRIBIFORMATPROC2703,195008
typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GLPFNGLVERTEXARRAYATTRIBLFORMATPROC2704,195152
typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, PFNGLVERTEXARRAYBINDINGDIVISORPROC2705,195296
typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);PFNGLGETVERTEXARRAYIVPROC2706,195410
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pnPFNGLGETVERTEXARRAYINDEXEDIVPROC2707,195506
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum PFNGLGETVERTEXARRAYINDEXED64IVPROC2708,195623
typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);PFNGLCREATESAMPLERSPROC2709,195744
typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);PFNGLCREATEPROGRAMPIPELINESPROC2710,195825
typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);PFNGLCREATEQUERIESPROC2711,195915
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pnaPFNGLGETQUERYBUFFEROBJECTI64VPROC2712,196005
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pnamePFNGLGETQUERYBUFFEROBJECTIVPROC2713,196124
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pnPFNGLGETQUERYBUFFEROBJECTUI64VPROC2714,196241
typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pnamPFNGLGETQUERYBUFFEROBJECTUIVPROC2715,196361
typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);PFNGLMEMORYBARRIERBYREGIONPROC2716,196479
typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffsetPFNGLGETTEXTURESUBIMAGEPROC2717,196559
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLiPFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC2718,196794
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) (void);PFNGLGETGRAPHICSRESETSTATUSPROC2719,197011
typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufSPFNGLGETNCOMPRESSEDTEXIMAGEPROC2720,197079
typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenuPFNGLGETNTEXIMAGEPROC2721,197196
typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSizePFNGLGETNUNIFORMDVPROC2722,197333
typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSizePFNGLGETNUNIFORMFVPROC2723,197451
typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSizePFNGLGETNUNIFORMIVPROC2724,197568
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSizPFNGLGETNUNIFORMUIVPROC2725,197683
typedef void (APIENTRYP PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, PFNGLREADNPIXELSPROC2726,197800
typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) (void);PFNGLTEXTUREBARRIERPROC2727,197955
#define GL_VERSION_4_6 GL_VERSION_4_62843,210740
#define GL_SHADER_BINARY_FORMAT_SPIR_V GL_SHADER_BINARY_FORMAT_SPIR_V2844,210766
#define GL_SPIR_V_BINARY GL_SPIR_V_BINARY2845,210816
#define GL_PARAMETER_BUFFER GL_PARAMETER_BUFFER2846,210866
#define GL_PARAMETER_BUFFER_BINDING GL_PARAMETER_BUFFER_BINDING2847,210916
#define GL_CONTEXT_FLAG_NO_ERROR_BIT GL_CONTEXT_FLAG_NO_ERROR_BIT2848,210966
#define GL_VERTICES_SUBMITTED GL_VERTICES_SUBMITTED2849,211020
#define GL_PRIMITIVES_SUBMITTED GL_PRIMITIVES_SUBMITTED2850,211070
#define GL_VERTEX_SHADER_INVOCATIONS GL_VERTEX_SHADER_INVOCATIONS2851,211120
#define GL_TESS_CONTROL_SHADER_PATCHES GL_TESS_CONTROL_SHADER_PATCHES2852,211170
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS GL_TESS_EVALUATION_SHADER_INVOCATIONS2853,211220
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED2854,211274
#define GL_FRAGMENT_SHADER_INVOCATIONS GL_FRAGMENT_SHADER_INVOCATIONS2855,211328
#define GL_COMPUTE_SHADER_INVOCATIONS GL_COMPUTE_SHADER_INVOCATIONS2856,211378
#define GL_CLIPPING_INPUT_PRIMITIVES GL_CLIPPING_INPUT_PRIMITIVES2857,211428
#define GL_CLIPPING_OUTPUT_PRIMITIVES GL_CLIPPING_OUTPUT_PRIMITIVES2858,211478
#define GL_POLYGON_OFFSET_CLAMP GL_POLYGON_OFFSET_CLAMP2859,211528
#define GL_SPIR_V_EXTENSIONS GL_SPIR_V_EXTENSIONS2860,211578
#define GL_NUM_SPIR_V_EXTENSIONS GL_NUM_SPIR_V_EXTENSIONS2861,211628
#define GL_TEXTURE_MAX_ANISOTROPY GL_TEXTURE_MAX_ANISOTROPY2862,211678
#define GL_MAX_TEXTURE_MAX_ANISOTROPY GL_MAX_TEXTURE_MAX_ANISOTROPY2863,211728
#define GL_TRANSFORM_FEEDBACK_OVERFLOW GL_TRANSFORM_FEEDBACK_OVERFLOW2864,211778
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW2865,211828
typedef void (APIENTRYP PFNGLSPECIALIZESHADERPROC) (GLuint shader, const GLchar *pEntryPoint, GLPFNGLSPECIALIZESHADERPROC2866,211882
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC) (GLenum mode, const void *indirecPFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC2867,212073
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC) (GLenum mode, GLenum type, consPFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC2868,212232
typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPPROC) (GLfloat factor, GLfloat units, GLfloat claPFNGLPOLYGONOFFSETCLAMPPROC2869,212406
#define GL_ARB_ES2_compatibility GL_ARB_ES2_compatibility2879,213187
#define GL_ARB_ES3_1_compatibility GL_ARB_ES3_1_compatibility2883,213300
#define GL_ARB_ES3_2_compatibility GL_ARB_ES3_2_compatibility2887,213417
#define GL_PRIMITIVE_BOUNDING_BOX_ARB GL_PRIMITIVE_BOUNDING_BOX_ARB2888,213455
#define GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB2889,213505
#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB2890,213557
typedef void (APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXARBPROC) (GLfloat minX, GLfloat minY, GLfloat mPFNGLPRIMITIVEBOUNDINGBOXARBPROC2891,213615
#define GL_ARB_ES3_compatibility GL_ARB_ES3_compatibility2898,214062
#define GL_ARB_arrays_of_arrays GL_ARB_arrays_of_arrays2902,214172
#define GL_ARB_base_instance GL_ARB_base_instance2906,214277
#define GL_ARB_bindless_texture GL_ARB_bindless_texture2910,214379
typedef khronos_uint64_t GLuint64EXT;GLuint64EXT2911,214414
#define GL_UNSIGNED_INT64_ARB GL_UNSIGNED_INT64_ARB2912,214453
typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);PFNGLGETTEXTUREHANDLEARBPROC2913,214503
typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint samplerPFNGLGETTEXTURESAMPLERHANDLEARBPROC2914,214580
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);PFNGLMAKETEXTUREHANDLERESIDENTARBPROC2915,214680
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC2916,214763
typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean PFNGLGETIMAGEHANDLEARBPROC2917,214849
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);PFNGLMAKEIMAGEHANDLERESIDENTARBPROC2918,214984
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC2919,215080
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);PFNGLUNIFORMHANDLEUI64ARBPROC2920,215164
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GLPFNGLUNIFORMHANDLEUI64VARBPROC2921,215254
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, GPFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC2922,215367
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC2923,215480
typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);PFNGLISTEXTUREHANDLERESIDENTARBPROC2924,215617
typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);PFNGLISIMAGEHANDLERESIDENTARBPROC2925,215703
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);PFNGLVERTEXATTRIBL1UI64ARBPROC2926,215787
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);PFNGLVERTEXATTRIBL1UI64VARBPROC2927,215875
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64PFNGLGETVERTEXATTRIBLUI64VARBPROC2928,215971
#define GL_ARB_blend_func_extended GL_ARB_blend_func_extended2950,217581
#define GL_ARB_buffer_storage GL_ARB_buffer_storage2954,217693
#define GL_ARB_cl_event GL_ARB_cl_event2958,217789
#define GL_SYNC_CL_EVENT_ARB GL_SYNC_CL_EVENT_ARB2961,217856
#define GL_SYNC_CL_EVENT_COMPLETE_ARB GL_SYNC_CL_EVENT_COMPLETE_ARB2962,217906
typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, strucPFNGLCREATESYNCFROMCLEVENTARBPROC2963,217956
#define GL_ARB_clear_buffer_object GL_ARB_clear_buffer_object2970,218320
#define GL_ARB_clear_texture GL_ARB_clear_texture2974,218431
#define GL_ARB_clip_control GL_ARB_clip_control2978,218529
#define GL_ARB_compressed_texture_pixel_storage GL_ARB_compressed_texture_pixel_storage2982,218645
#define GL_ARB_compute_shader GL_ARB_compute_shader2986,218783
#define GL_ARB_compute_variable_group_size GL_ARB_compute_variable_group_size2990,218898
#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB2991,218944
#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB2992,219006
#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB2993,219065
#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB2994,219120
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_gPFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC2995,219172
#define GL_ARB_conditional_render_inverted GL_ARB_conditional_render_inverted3002,219673
#define GL_ARB_conservative_depth GL_ARB_conservative_depth3006,219805
#define GL_ARB_copy_buffer GL_ARB_copy_buffer3010,219912
#define GL_ARB_copy_image GL_ARB_copy_image3014,220004
#define GL_ARB_cull_distance GL_ARB_cull_distance3018,220097
#define GL_ARB_debug_output GL_ARB_debug_output3022,220195
typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsGLDEBUGPROCARB3023,220226
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB3024,220381
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB3025,220431
#define GL_DEBUG_CALLBACK_FUNCTION_ARB GL_DEBUG_CALLBACK_FUNCTION_ARB3026,220487
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB GL_DEBUG_CALLBACK_USER_PARAM_ARB3027,220537
#define GL_DEBUG_SOURCE_API_ARB GL_DEBUG_SOURCE_API_ARB3028,220587
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB3029,220637
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB GL_DEBUG_SOURCE_SHADER_COMPILER_ARB3030,220687
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB GL_DEBUG_SOURCE_THIRD_PARTY_ARB3031,220739
#define GL_DEBUG_SOURCE_APPLICATION_ARB GL_DEBUG_SOURCE_APPLICATION_ARB3032,220789
#define GL_DEBUG_SOURCE_OTHER_ARB GL_DEBUG_SOURCE_OTHER_ARB3033,220839
#define GL_DEBUG_TYPE_ERROR_ARB GL_DEBUG_TYPE_ERROR_ARB3034,220889
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB3035,220939
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB3036,220993
#define GL_DEBUG_TYPE_PORTABILITY_ARB GL_DEBUG_TYPE_PORTABILITY_ARB3037,221046
#define GL_DEBUG_TYPE_PERFORMANCE_ARB GL_DEBUG_TYPE_PERFORMANCE_ARB3038,221096
#define GL_DEBUG_TYPE_OTHER_ARB GL_DEBUG_TYPE_OTHER_ARB3039,221146
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB GL_MAX_DEBUG_MESSAGE_LENGTH_ARB3040,221196
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB GL_MAX_DEBUG_LOGGED_MESSAGES_ARB3041,221246
#define GL_DEBUG_LOGGED_MESSAGES_ARB GL_DEBUG_LOGGED_MESSAGES_ARB3042,221296
#define GL_DEBUG_SEVERITY_HIGH_ARB GL_DEBUG_SEVERITY_HIGH_ARB3043,221346
#define GL_DEBUG_SEVERITY_MEDIUM_ARB GL_DEBUG_SEVERITY_MEDIUM_ARB3044,221396
#define GL_DEBUG_SEVERITY_LOW_ARB GL_DEBUG_SEVERITY_LOW_ARB3045,221446
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum sevPFNGLDEBUGMESSAGECONTROLARBPROC3046,221496
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, PFNGLDEBUGMESSAGEINSERTARBPROC3047,221654
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void *PFNGLDEBUGMESSAGECALLBACKARBPROC3048,221804
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenumPFNGLGETDEBUGMESSAGELOGARBPROC3049,221913
#define GL_ARB_depth_buffer_float GL_ARB_depth_buffer_float3059,222779
#define GL_ARB_depth_clamp GL_ARB_depth_clamp3063,222886
#define GL_ARB_derivative_control GL_ARB_derivative_control3067,222986
#define GL_ARB_direct_state_access GL_ARB_direct_state_access3071,223101
#define GL_ARB_draw_buffers_blend GL_ARB_draw_buffers_blend3075,223217
typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);PFNGLBLENDEQUATIONIARBPROC3076,223254
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum PFNGLBLENDEQUATIONSEPARATEIARBPROC3077,223334
typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);PFNGLBLENDFUNCIARBPROC3078,223443
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGPFNGLBLENDFUNCSEPARATEIARBPROC3079,223530
#define GL_ARB_draw_elements_base_vertex GL_ARB_draw_elements_base_vertex3089,224148
#define GL_ARB_draw_indirect GL_ARB_draw_indirect3093,224271
#define GL_ARB_draw_instanced GL_ARB_draw_instanced3097,224371
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei counPFNGLDRAWARRAYSINSTANCEDARBPROC3098,224404
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum tPFNGLDRAWELEMENTSINSTANCEDARBPROC3099,224524
#define GL_ARB_enhanced_layouts GL_ARB_enhanced_layouts3107,225013
#define GL_ARB_explicit_attrib_location GL_ARB_explicit_attrib_location3111,225129
#define GL_ARB_explicit_uniform_location GL_ARB_explicit_uniform_location3115,225262
#define GL_ARB_fragment_coord_conventions GL_ARB_fragment_coord_conventions3119,225398
#define GL_ARB_fragment_layer_viewport GL_ARB_fragment_layer_viewport3123,225533
#define GL_ARB_fragment_shader_interlock GL_ARB_fragment_shader_interlock3127,225664
#define GL_ARB_framebuffer_no_attachments GL_ARB_framebuffer_no_attachments3131,225800
#define GL_ARB_framebuffer_object GL_ARB_framebuffer_object3135,225930
#define GL_ARB_framebuffer_sRGB GL_ARB_framebuffer_sRGB3139,226042
#define GL_ARB_geometry_shader4 GL_ARB_geometry_shader43143,226150
#define GL_LINES_ADJACENCY_ARB GL_LINES_ADJACENCY_ARB3144,226185
#define GL_LINE_STRIP_ADJACENCY_ARB GL_LINE_STRIP_ADJACENCY_ARB3145,226235
#define GL_TRIANGLES_ADJACENCY_ARB GL_TRIANGLES_ADJACENCY_ARB3146,226285
#define GL_TRIANGLE_STRIP_ADJACENCY_ARB GL_TRIANGLE_STRIP_ADJACENCY_ARB3147,226335
#define GL_PROGRAM_POINT_SIZE_ARB GL_PROGRAM_POINT_SIZE_ARB3148,226385
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB3149,226435
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB3150,226491
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB3151,226545
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB3152,226605
#define GL_GEOMETRY_SHADER_ARB GL_GEOMETRY_SHADER_ARB3153,226663
#define GL_GEOMETRY_VERTICES_OUT_ARB GL_GEOMETRY_VERTICES_OUT_ARB3154,226713
#define GL_GEOMETRY_INPUT_TYPE_ARB GL_GEOMETRY_INPUT_TYPE_ARB3155,226763
#define GL_GEOMETRY_OUTPUT_TYPE_ARB GL_GEOMETRY_OUTPUT_TYPE_ARB3156,226813
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB3157,226863
#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB GL_MAX_VERTEX_VARYING_COMPONENTS_ARB3158,226918
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB3159,226971
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB3160,227026
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB3161,227078
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint valuPFNGLPROGRAMPARAMETERIARBPROC3162,227138
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuinPFNGLFRAMEBUFFERTEXTUREARBPROC3163,227239
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, PFNGLFRAMEBUFFERTEXTURELAYERARBPROC3164,227361
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GPFNGLFRAMEBUFFERTEXTUREFACEARBPROC3165,227501
#define GL_ARB_get_program_binary GL_ARB_get_program_binary3175,228205
#define GL_ARB_get_texture_sub_image GL_ARB_get_texture_sub_image3179,228322
#define GL_ARB_gl_spirv GL_ARB_gl_spirv3183,228432
#define GL_SHADER_BINARY_FORMAT_SPIR_V_ARB GL_SHADER_BINARY_FORMAT_SPIR_V_ARB3184,228459
#define GL_SPIR_V_BINARY_ARB GL_SPIR_V_BINARY_ARB3185,228510
typedef void (APIENTRYP PFNGLSPECIALIZESHADERARBPROC) (GLuint shader, const GLchar *pEntryPoint,PFNGLSPECIALIZESHADERARBPROC3186,228560
#define GL_ARB_gpu_shader5 GL_ARB_gpu_shader53193,229032
#define GL_ARB_gpu_shader_fp64 GL_ARB_gpu_shader_fp643197,229129
#define GL_ARB_gpu_shader_int64 GL_ARB_gpu_shader_int643201,229235
#define GL_INT64_ARB GL_INT64_ARB3202,229270
#define GL_INT64_VEC2_ARB GL_INT64_VEC2_ARB3203,229320
#define GL_INT64_VEC3_ARB GL_INT64_VEC3_ARB3204,229370
#define GL_INT64_VEC4_ARB GL_INT64_VEC4_ARB3205,229420
#define GL_UNSIGNED_INT64_VEC2_ARB GL_UNSIGNED_INT64_VEC2_ARB3206,229470
#define GL_UNSIGNED_INT64_VEC3_ARB GL_UNSIGNED_INT64_VEC3_ARB3207,229520
#define GL_UNSIGNED_INT64_VEC4_ARB GL_UNSIGNED_INT64_VEC4_ARB3208,229570
typedef void (APIENTRYP PFNGLUNIFORM1I64ARBPROC) (GLint location, GLint64 x);PFNGLUNIFORM1I64ARBPROC3209,229620
typedef void (APIENTRYP PFNGLUNIFORM2I64ARBPROC) (GLint location, GLint64 x, GLint64 y);PFNGLUNIFORM2I64ARBPROC3210,229699
typedef void (APIENTRYP PFNGLUNIFORM3I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 PFNGLUNIFORM3I64ARBPROC3211,229789
typedef void (APIENTRYP PFNGLUNIFORM4I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 PFNGLUNIFORM4I64ARBPROC3212,229890
typedef void (APIENTRYP PFNGLUNIFORM1I64VARBPROC) (GLint location, GLsizei count, const GLint64 PFNGLUNIFORM1I64VARBPROC3213,230002
typedef void (APIENTRYP PFNGLUNIFORM2I64VARBPROC) (GLint location, GLsizei count, const GLint64 PFNGLUNIFORM2I64VARBPROC3214,230108
typedef void (APIENTRYP PFNGLUNIFORM3I64VARBPROC) (GLint location, GLsizei count, const GLint64 PFNGLUNIFORM3I64VARBPROC3215,230214
typedef void (APIENTRYP PFNGLUNIFORM4I64VARBPROC) (GLint location, GLsizei count, const GLint64 PFNGLUNIFORM4I64VARBPROC3216,230320
typedef void (APIENTRYP PFNGLUNIFORM1UI64ARBPROC) (GLint location, GLuint64 x);PFNGLUNIFORM1UI64ARBPROC3217,230426
typedef void (APIENTRYP PFNGLUNIFORM2UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y);PFNGLUNIFORM2UI64ARBPROC3218,230507
typedef void (APIENTRYP PFNGLUNIFORM3UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuinPFNGLUNIFORM3UI64ARBPROC3219,230600
typedef void (APIENTRYP PFNGLUNIFORM4UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuinPFNGLUNIFORM4UI64ARBPROC3220,230705
typedef void (APIENTRYP PFNGLUNIFORM1UI64VARBPROC) (GLint location, GLsizei count, const GLuint6PFNGLUNIFORM1UI64VARBPROC3221,230822
typedef void (APIENTRYP PFNGLUNIFORM2UI64VARBPROC) (GLint location, GLsizei count, const GLuint6PFNGLUNIFORM2UI64VARBPROC3222,230930
typedef void (APIENTRYP PFNGLUNIFORM3UI64VARBPROC) (GLint location, GLsizei count, const GLuint6PFNGLUNIFORM3UI64VARBPROC3223,231038
typedef void (APIENTRYP PFNGLUNIFORM4UI64VARBPROC) (GLint location, GLsizei count, const GLuint6PFNGLUNIFORM4UI64VARBPROC3224,231146
typedef void (APIENTRYP PFNGLGETUNIFORMI64VARBPROC) (GLuint program, GLint location, GLint64 *paPFNGLGETUNIFORMI64VARBPROC3225,231254
typedef void (APIENTRYP PFNGLGETUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLuint64 *PFNGLGETUNIFORMUI64VARBPROC3226,231358
typedef void (APIENTRYP PFNGLGETNUNIFORMI64VARBPROC) (GLuint program, GLint location, GLsizei buPFNGLGETNUNIFORMI64VARBPROC3227,231464
typedef void (APIENTRYP PFNGLGETNUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLsizei bPFNGLGETNUNIFORMUI64VARBPROC3228,231586
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64ARBPROC) (GLuint program, GLint location, GLint64PFNGLPROGRAMUNIFORM1I64ARBPROC3229,231710
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64ARBPROC) (GLuint program, GLint location, GLint64PFNGLPROGRAMUNIFORM2I64ARBPROC3230,231812
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64ARBPROC) (GLuint program, GLint location, GLint64PFNGLPROGRAMUNIFORM3I64ARBPROC3231,231925
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64ARBPROC) (GLuint program, GLint location, GLint64PFNGLPROGRAMUNIFORM4I64ARBPROC3232,232049
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VARBPROC) (GLuint program, GLint location, GLsizePFNGLPROGRAMUNIFORM1I64VARBPROC3233,232184
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VARBPROC) (GLuint program, GLint location, GLsizePFNGLPROGRAMUNIFORM2I64VARBPROC3234,232313
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VARBPROC) (GLuint program, GLint location, GLsizePFNGLPROGRAMUNIFORM3I64VARBPROC3235,232442
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VARBPROC) (GLuint program, GLint location, GLsizePFNGLPROGRAMUNIFORM4I64VARBPROC3236,232571
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64ARBPROC) (GLuint program, GLint location, GLuintPFNGLPROGRAMUNIFORM1UI64ARBPROC3237,232700
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64ARBPROC) (GLuint program, GLint location, GLuintPFNGLPROGRAMUNIFORM2UI64ARBPROC3238,232804
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64ARBPROC) (GLuint program, GLint location, GLuintPFNGLPROGRAMUNIFORM3UI64ARBPROC3239,232920
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64ARBPROC) (GLuint program, GLint location, GLuintPFNGLPROGRAMUNIFORM4UI64ARBPROC3240,233048
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VARBPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORM1UI64VARBPROC3241,233188
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VARBPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORM2UI64VARBPROC3242,233319
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VARBPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORM3UI64VARBPROC3243,233450
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VARBPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORM4UI64VARBPROC3244,233581
#define GL_ARB_half_float_vertex GL_ARB_half_float_vertex3286,237482
#define GL_ARB_imaging GL_ARB_imaging3290,237583
#define GL_ARB_indirect_parameters GL_ARB_indirect_parameters3294,237676
#define GL_PARAMETER_BUFFER_ARB GL_PARAMETER_BUFFER_ARB3295,237714
#define GL_PARAMETER_BUFFER_BINDING_ARB GL_PARAMETER_BUFFER_BINDING_ARB3296,237764
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, const void *indiPFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC3297,237814
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, cPFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC3298,237976
#define GL_ARB_instanced_arrays GL_ARB_instanced_arrays3306,238580
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB3307,238615
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);PFNGLVERTEXATTRIBDIVISORARBPROC3308,238666
#define GL_ARB_internalformat_query GL_ARB_internalformat_query3315,238947
#define GL_ARB_internalformat_query2 GL_ARB_internalformat_query23319,239068
#define GL_SRGB_DECODE_ARB GL_SRGB_DECODE_ARB3320,239108
#define GL_VIEW_CLASS_EAC_R11 GL_VIEW_CLASS_EAC_R113321,239158
#define GL_VIEW_CLASS_EAC_RG11 GL_VIEW_CLASS_EAC_RG113322,239208
#define GL_VIEW_CLASS_ETC2_RGB GL_VIEW_CLASS_ETC2_RGB3323,239258
#define GL_VIEW_CLASS_ETC2_RGBA GL_VIEW_CLASS_ETC2_RGBA3324,239308
#define GL_VIEW_CLASS_ETC2_EAC_RGBA GL_VIEW_CLASS_ETC2_EAC_RGBA3325,239358
#define GL_VIEW_CLASS_ASTC_4x4_RGBA GL_VIEW_CLASS_ASTC_4x4_RGBA3326,239408
#define GL_VIEW_CLASS_ASTC_5x4_RGBA GL_VIEW_CLASS_ASTC_5x4_RGBA3327,239458
#define GL_VIEW_CLASS_ASTC_5x5_RGBA GL_VIEW_CLASS_ASTC_5x5_RGBA3328,239508
#define GL_VIEW_CLASS_ASTC_6x5_RGBA GL_VIEW_CLASS_ASTC_6x5_RGBA3329,239558
#define GL_VIEW_CLASS_ASTC_6x6_RGBA GL_VIEW_CLASS_ASTC_6x6_RGBA3330,239608
#define GL_VIEW_CLASS_ASTC_8x5_RGBA GL_VIEW_CLASS_ASTC_8x5_RGBA3331,239658
#define GL_VIEW_CLASS_ASTC_8x6_RGBA GL_VIEW_CLASS_ASTC_8x6_RGBA3332,239708
#define GL_VIEW_CLASS_ASTC_8x8_RGBA GL_VIEW_CLASS_ASTC_8x8_RGBA3333,239758
#define GL_VIEW_CLASS_ASTC_10x5_RGBA GL_VIEW_CLASS_ASTC_10x5_RGBA3334,239808
#define GL_VIEW_CLASS_ASTC_10x6_RGBA GL_VIEW_CLASS_ASTC_10x6_RGBA3335,239858
#define GL_VIEW_CLASS_ASTC_10x8_RGBA GL_VIEW_CLASS_ASTC_10x8_RGBA3336,239908
#define GL_VIEW_CLASS_ASTC_10x10_RGBA GL_VIEW_CLASS_ASTC_10x10_RGBA3337,239958
#define GL_VIEW_CLASS_ASTC_12x10_RGBA GL_VIEW_CLASS_ASTC_12x10_RGBA3338,240008
#define GL_VIEW_CLASS_ASTC_12x12_RGBA GL_VIEW_CLASS_ASTC_12x12_RGBA3339,240058
#define GL_ARB_invalidate_subdata GL_ARB_invalidate_subdata3343,240188
#define GL_ARB_map_buffer_alignment GL_ARB_map_buffer_alignment3347,240304
#define GL_ARB_map_buffer_range GL_ARB_map_buffer_range3351,240420
#define GL_ARB_multi_bind GL_ARB_multi_bind3355,240522
#define GL_ARB_multi_draw_indirect GL_ARB_multi_draw_indirect3359,240621
#define GL_ARB_occlusion_query2 GL_ARB_occlusion_query23363,240735
#define GL_ARB_parallel_shader_compile GL_ARB_parallel_shader_compile3367,240850
#define GL_MAX_SHADER_COMPILER_THREADS_ARB GL_MAX_SHADER_COMPILER_THREADS_ARB3368,240892
#define GL_COMPLETION_STATUS_ARB GL_COMPLETION_STATUS_ARB3369,240943
typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSARBPROC) (GLuint count);PFNGLMAXSHADERCOMPILERTHREADSARBPROC3370,240993
#define GL_ARB_pipeline_statistics_query GL_ARB_pipeline_statistics_query3377,241264
#define GL_VERTICES_SUBMITTED_ARB GL_VERTICES_SUBMITTED_ARB3378,241308
#define GL_PRIMITIVES_SUBMITTED_ARB GL_PRIMITIVES_SUBMITTED_ARB3379,241358
#define GL_VERTEX_SHADER_INVOCATIONS_ARB GL_VERTEX_SHADER_INVOCATIONS_ARB3380,241408
#define GL_TESS_CONTROL_SHADER_PATCHES_ARB GL_TESS_CONTROL_SHADER_PATCHES_ARB3381,241458
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB3382,241509
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB3383,241567
#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB GL_FRAGMENT_SHADER_INVOCATIONS_ARB3384,241625
#define GL_COMPUTE_SHADER_INVOCATIONS_ARB GL_COMPUTE_SHADER_INVOCATIONS_ARB3385,241676
#define GL_CLIPPING_INPUT_PRIMITIVES_ARB GL_CLIPPING_INPUT_PRIMITIVES_ARB3386,241726
#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB GL_CLIPPING_OUTPUT_PRIMITIVES_ARB3387,241776
#define GL_ARB_pixel_buffer_object GL_ARB_pixel_buffer_object3391,241911
#define GL_PIXEL_PACK_BUFFER_ARB GL_PIXEL_PACK_BUFFER_ARB3392,241949
#define GL_PIXEL_UNPACK_BUFFER_ARB GL_PIXEL_UNPACK_BUFFER_ARB3393,241999
#define GL_PIXEL_PACK_BUFFER_BINDING_ARB GL_PIXEL_PACK_BUFFER_BINDING_ARB3394,242049
#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB GL_PIXEL_UNPACK_BUFFER_BINDING_ARB3395,242099
#define GL_ARB_polygon_offset_clamp GL_ARB_polygon_offset_clamp3399,242230
#define GL_ARB_post_depth_coverage GL_ARB_post_depth_coverage3403,242349
#define GL_ARB_program_interface_query GL_ARB_program_interface_query3407,242470
#define GL_ARB_provoking_vertex GL_ARB_provoking_vertex3411,242592
#define GL_ARB_query_buffer_object GL_ARB_query_buffer_object3415,242703
#define GL_ARB_robust_buffer_access_behavior GL_ARB_robust_buffer_access_behavior3419,242830
#define GL_ARB_robustness GL_ARB_robustness3423,242958
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB3424,242987
#define GL_LOSE_CONTEXT_ON_RESET_ARB GL_LOSE_CONTEXT_ON_RESET_ARB3425,243045
#define GL_GUILTY_CONTEXT_RESET_ARB GL_GUILTY_CONTEXT_RESET_ARB3426,243095
#define GL_INNOCENT_CONTEXT_RESET_ARB GL_INNOCENT_CONTEXT_RESET_ARB3427,243145
#define GL_UNKNOWN_CONTEXT_RESET_ARB GL_UNKNOWN_CONTEXT_RESET_ARB3428,243195
#define GL_RESET_NOTIFICATION_STRATEGY_ARB GL_RESET_NOTIFICATION_STRATEGY_ARB3429,243245
#define GL_NO_RESET_NOTIFICATION_ARB GL_NO_RESET_NOTIFICATION_ARB3430,243296
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);PFNGLGETGRAPHICSRESETSTATUSARBPROC3431,243346
typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLPFNGLGETNTEXIMAGEARBPROC3432,243417
typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei heighPFNGLREADNPIXELSARBPROC3433,243554
typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bPFNGLGETNCOMPRESSEDTEXIMAGEARBPROC3434,243712
typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSPFNGLGETNUNIFORMFVARBPROC3435,243829
typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSPFNGLGETNUNIFORMIVARBPROC3436,243949
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufPFNGLGETNUNIFORMUIVARBPROC3437,244067
typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSPFNGLGETNUNIFORMDVARBPROC3438,244187
#define GL_ARB_robustness_isolation GL_ARB_robustness_isolation3452,245281
#define GL_ARB_sample_locations GL_ARB_sample_locations3456,245397
#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB3457,245432
#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB3458,245485
#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB3459,245541
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB3460,245598
#define GL_SAMPLE_LOCATION_ARB GL_SAMPLE_LOCATION_ARB3461,245661
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB3462,245711
#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB3463,245763
#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB3464,245828
typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLenum target, GLuint start, PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC3465,245890
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLuint framebuffer, GLuiPFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC3466,246021
typedef void (APIENTRYP PFNGLEVALUATEDEPTHVALUESARBPROC) (void);PFNGLEVALUATEDEPTHVALUESARBPROC3467,246162
#define GL_ARB_sample_shading GL_ARB_sample_shading3476,246637
#define GL_SAMPLE_SHADING_ARB GL_SAMPLE_SHADING_ARB3477,246670
#define GL_MIN_SAMPLE_SHADING_VALUE_ARB GL_MIN_SAMPLE_SHADING_VALUE_ARB3478,246720
typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);PFNGLMINSAMPLESHADINGARBPROC3479,246770
#define GL_ARB_sampler_objects GL_ARB_sampler_objects3486,247008
#define GL_ARB_seamless_cube_map GL_ARB_seamless_cube_map3490,247115
#define GL_ARB_seamless_cubemap_per_texture GL_ARB_seamless_cubemap_per_texture3494,247237
#define GL_ARB_separate_shader_objects GL_ARB_separate_shader_objects3498,247376
#define GL_ARB_shader_atomic_counter_ops GL_ARB_shader_atomic_counter_ops3502,247507
#define GL_ARB_shader_atomic_counters GL_ARB_shader_atomic_counters3506,247639
#define GL_ARB_shader_ballot GL_ARB_shader_ballot3510,247756
#define GL_ARB_shader_bit_encoding GL_ARB_shader_bit_encoding3514,247861
#define GL_ARB_shader_clock GL_ARB_shader_clock3518,247971
#define GL_ARB_shader_draw_parameters GL_ARB_shader_draw_parameters3522,248077
#define GL_ARB_shader_group_vote GL_ARB_shader_group_vote3526,248198
#define GL_ARB_shader_image_load_store GL_ARB_shader_image_load_store3530,248315
#define GL_ARB_shader_image_size GL_ARB_shader_image_size3534,248438
#define GL_ARB_shader_precision GL_ARB_shader_precision3538,248548
#define GL_ARB_shader_stencil_export GL_ARB_shader_stencil_export3542,248661
#define GL_ARB_shader_storage_buffer_object GL_ARB_shader_storage_buffer_object3546,248791
#define GL_ARB_shader_subroutine GL_ARB_shader_subroutine3550,248924
#define GL_ARB_shader_texture_image_samples GL_ARB_shader_texture_image_samples3554,249046
#define GL_ARB_shader_viewport_layer_array GL_ARB_shader_viewport_layer_array3558,249189
#define GL_ARB_shading_language_420pack GL_ARB_shading_language_420pack3562,249327
#define GL_ARB_shading_language_include GL_ARB_shading_language_include3566,249459
#define GL_SHADER_INCLUDE_ARB GL_SHADER_INCLUDE_ARB3567,249502
#define GL_NAMED_STRING_LENGTH_ARB GL_NAMED_STRING_LENGTH_ARB3568,249552
#define GL_NAMED_STRING_TYPE_ARB GL_NAMED_STRING_TYPE_ARB3569,249602
typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *namePFNGLNAMEDSTRINGARBPROC3570,249652
typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);PFNGLDELETENAMEDSTRINGARBPROC3571,249791
typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GPFNGLCOMPILESHADERINCLUDEARBPROC3572,249884
typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);PFNGLISNAMEDSTRINGARBPROC3573,250022
typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei PFNGLGETNAMEDSTRINGARBPROC3574,250116
typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenumPFNGLGETNAMEDSTRINGIVARBPROC3575,250257
#define GL_ARB_shading_language_packing GL_ARB_shading_language_packing3587,251157
#define GL_ARB_sparse_buffer GL_ARB_sparse_buffer3591,251278
#define GL_SPARSE_STORAGE_BIT_ARB GL_SPARSE_STORAGE_BIT_ARB3592,251310
#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB GL_SPARSE_BUFFER_PAGE_SIZE_ARB3593,251360
typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GLsizPFNGLBUFFERPAGECOMMITMENTARBPROC3594,251410
typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) (GLuint buffer, GLintptr offset, PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC3595,251538
typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) (GLuint buffer, GLintptr offset, PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC3596,251671
#define GL_ARB_sparse_texture GL_ARB_sparse_texture3605,252266
#define GL_TEXTURE_SPARSE_ARB GL_TEXTURE_SPARSE_ARB3606,252299
#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB GL_VIRTUAL_PAGE_SIZE_INDEX_ARB3607,252349
#define GL_NUM_SPARSE_LEVELS_ARB GL_NUM_SPARSE_LEVELS_ARB3608,252399
#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB GL_NUM_VIRTUAL_PAGE_SIZES_ARB3609,252449
#define GL_VIRTUAL_PAGE_SIZE_X_ARB GL_VIRTUAL_PAGE_SIZE_X_ARB3610,252499
#define GL_VIRTUAL_PAGE_SIZE_Y_ARB GL_VIRTUAL_PAGE_SIZE_Y_ARB3611,252549
#define GL_VIRTUAL_PAGE_SIZE_Z_ARB GL_VIRTUAL_PAGE_SIZE_Z_ARB3612,252599
#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB GL_MAX_SPARSE_TEXTURE_SIZE_ARB3613,252649
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB3614,252699
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB3615,252749
#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB3616,252804
typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffsePFNGLTEXPAGECOMMITMENTARBPROC3617,252866
#define GL_ARB_sparse_texture2 GL_ARB_sparse_texture23624,253350
#define GL_ARB_sparse_texture_clamp GL_ARB_sparse_texture_clamp3628,253460
#define GL_ARB_spirv_extensions GL_ARB_spirv_extensions3632,253576
#define GL_ARB_stencil_texturing GL_ARB_stencil_texturing3636,253685
#define GL_ARB_sync GL_ARB_sync3640,253783
#define GL_ARB_tessellation_shader GL_ARB_tessellation_shader3644,253870
#define GL_ARB_texture_barrier GL_ARB_texture_barrier3648,253983
#define GL_ARB_texture_border_clamp GL_ARB_texture_border_clamp3652,254093
#define GL_CLAMP_TO_BORDER_ARB GL_CLAMP_TO_BORDER_ARB3653,254132
#define GL_ARB_texture_buffer_object GL_ARB_texture_buffer_object3657,254264
#define GL_TEXTURE_BUFFER_ARB GL_TEXTURE_BUFFER_ARB3658,254304
#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB GL_MAX_TEXTURE_BUFFER_SIZE_ARB3659,254354
#define GL_TEXTURE_BINDING_BUFFER_ARB GL_TEXTURE_BINDING_BUFFER_ARB3660,254404
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB3661,254454
#define GL_TEXTURE_BUFFER_FORMAT_ARB GL_TEXTURE_BUFFER_FORMAT_ARB3662,254511
typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint bufPFNGLTEXBUFFERARBPROC3663,254561
#define GL_ARB_texture_buffer_object_rgb32 GL_ARB_texture_buffer_object_rgb323670,254880
#define GL_ARB_texture_buffer_range GL_ARB_texture_buffer_range3674,255014
#define GL_ARB_texture_compression_bptc GL_ARB_texture_compression_bptc3678,255138
#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB GL_COMPRESSED_RGBA_BPTC_UNORM_ARB3679,255181
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB3680,255231
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB3681,255287
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB3682,255343
#define GL_ARB_texture_compression_rgtc GL_ARB_texture_compression_rgtc3686,255490
#define GL_ARB_texture_cube_map_array GL_ARB_texture_cube_map_array3690,255620
#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB GL_TEXTURE_CUBE_MAP_ARRAY_ARB3691,255661
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB3692,255711
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB3693,255765
#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB GL_SAMPLER_CUBE_MAP_ARRAY_ARB3694,255817
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB3695,255867
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB3696,255920
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB3697,255970
#define GL_ARB_texture_filter_anisotropic GL_ARB_texture_filter_anisotropic3701,256118
#define GL_ARB_texture_filter_minmax GL_ARB_texture_filter_minmax3705,256251
#define GL_TEXTURE_REDUCTION_MODE_ARB GL_TEXTURE_REDUCTION_MODE_ARB3706,256291
#define GL_WEIGHTED_AVERAGE_ARB GL_WEIGHTED_AVERAGE_ARB3707,256341
#define GL_ARB_texture_gather GL_ARB_texture_gather3711,256467
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB3712,256500
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB3713,256557
#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB3714,256614
#define GL_ARB_texture_mirror_clamp_to_edge GL_ARB_texture_mirror_clamp_to_edge3718,256758
#define GL_ARB_texture_mirrored_repeat GL_ARB_texture_mirrored_repeat3722,256897
#define GL_MIRRORED_REPEAT_ARB GL_MIRRORED_REPEAT_ARB3723,256939
#define GL_ARB_texture_multisample GL_ARB_texture_multisample3727,257072
#define GL_ARB_texture_non_power_of_two GL_ARB_texture_non_power_of_two3731,257194
#define GL_ARB_texture_query_levels GL_ARB_texture_query_levels3735,257322
#define GL_ARB_texture_query_lod GL_ARB_texture_query_lod3739,257439
#define GL_ARB_texture_rg GL_ARB_texture_rg3743,257543
#define GL_ARB_texture_rgb10_a2ui GL_ARB_texture_rgb10_a2ui3747,257641
#define GL_ARB_texture_stencil8 GL_ARB_texture_stencil83751,257753
#define GL_ARB_texture_storage GL_ARB_texture_storage3755,257860
#define GL_ARB_texture_storage_multisample GL_ARB_texture_storage_multisample3759,257977
#define GL_ARB_texture_swizzle GL_ARB_texture_swizzle3763,258106
#define GL_ARB_texture_view GL_ARB_texture_view3767,258208
#define GL_ARB_timer_query GL_ARB_timer_query3771,258303
#define GL_ARB_transform_feedback2 GL_ARB_transform_feedback23775,258404
#define GL_ARB_transform_feedback3 GL_ARB_transform_feedback33779,258521
#define GL_ARB_transform_feedback_instanced GL_ARB_transform_feedback_instanced3783,258647
#define GL_ARB_transform_feedback_overflow_query GL_ARB_transform_feedback_overflow_query3787,258796
#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB3788,258848
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB3789,258899
#define GL_ARB_uniform_buffer_object GL_ARB_uniform_buffer_object3793,259052
#define GL_ARB_vertex_array_bgra GL_ARB_vertex_array_bgra3797,259171
#define GL_ARB_vertex_array_object GL_ARB_vertex_array_object3801,259284
#define GL_ARB_vertex_attrib_64bit GL_ARB_vertex_attrib_64bit3805,259401
#define GL_ARB_vertex_attrib_binding GL_ARB_vertex_attrib_binding3809,259520
#define GL_ARB_vertex_type_10f_11f_11f_rev GL_ARB_vertex_type_10f_11f_11f_rev3813,259649
#define GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_vertex_type_2_10_10_10_rev3817,259789
#define GL_ARB_viewport_array GL_ARB_viewport_array3821,259915
typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYDVNVPROC) (GLuint first, GLsizei count, const GLdoubPFNGLDEPTHRANGEARRAYDVNVPROC3822,259948
typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDDNVPROC) (GLuint index, GLdouble n, GLdouble f);PFNGLDEPTHRANGEINDEXEDDNVPROC3823,260053
#define GL_KHR_blend_equation_advanced GL_KHR_blend_equation_advanced3831,260440
#define GL_MULTIPLY_KHR GL_MULTIPLY_KHR3832,260482
#define GL_SCREEN_KHR GL_SCREEN_KHR3833,260532
#define GL_OVERLAY_KHR GL_OVERLAY_KHR3834,260582
#define GL_DARKEN_KHR GL_DARKEN_KHR3835,260632
#define GL_LIGHTEN_KHR GL_LIGHTEN_KHR3836,260682
#define GL_COLORDODGE_KHR GL_COLORDODGE_KHR3837,260732
#define GL_COLORBURN_KHR GL_COLORBURN_KHR3838,260782
#define GL_HARDLIGHT_KHR GL_HARDLIGHT_KHR3839,260832
#define GL_SOFTLIGHT_KHR GL_SOFTLIGHT_KHR3840,260882
#define GL_DIFFERENCE_KHR GL_DIFFERENCE_KHR3841,260932
#define GL_EXCLUSION_KHR GL_EXCLUSION_KHR3842,260982
#define GL_HSL_HUE_KHR GL_HSL_HUE_KHR3843,261032
#define GL_HSL_SATURATION_KHR GL_HSL_SATURATION_KHR3844,261082
#define GL_HSL_COLOR_KHR GL_HSL_COLOR_KHR3845,261132
#define GL_HSL_LUMINOSITY_KHR GL_HSL_LUMINOSITY_KHR3846,261182
typedef void (APIENTRYP PFNGLBLENDBARRIERKHRPROC) (void);PFNGLBLENDBARRIERKHRPROC3847,261232
#define GL_KHR_blend_equation_advanced_coherent GL_KHR_blend_equation_advanced_coherent3854,261470
#define GL_BLEND_ADVANCED_COHERENT_KHR GL_BLEND_ADVANCED_COHERENT_KHR3855,261521
#define GL_KHR_context_flush_control GL_KHR_context_flush_control3859,261665
#define GL_KHR_debug GL_KHR_debug3863,261772
#define GL_KHR_no_error GL_KHR_no_error3867,261850
#define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR3868,261877
#define GL_KHR_parallel_shader_compile GL_KHR_parallel_shader_compile3872,262003
#define GL_MAX_SHADER_COMPILER_THREADS_KHR GL_MAX_SHADER_COMPILER_THREADS_KHR3873,262045
#define GL_COMPLETION_STATUS_KHR GL_COMPLETION_STATUS_KHR3874,262096
typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSKHRPROC) (GLuint count);PFNGLMAXSHADERCOMPILERTHREADSKHRPROC3875,262146
#define GL_KHR_robust_buffer_access_behavior GL_KHR_robust_buffer_access_behavior3882,262421
#define GL_KHR_robustness GL_KHR_robustness3886,262549
#define GL_CONTEXT_ROBUST_ACCESS GL_CONTEXT_ROBUST_ACCESS3887,262578
#define GL_KHR_shader_subgroup GL_KHR_shader_subgroup3891,262694
#define GL_SUBGROUP_SIZE_KHR GL_SUBGROUP_SIZE_KHR3892,262728
#define GL_SUBGROUP_SUPPORTED_STAGES_KHR GL_SUBGROUP_SUPPORTED_STAGES_KHR3893,262778
#define GL_SUBGROUP_SUPPORTED_FEATURES_KHR GL_SUBGROUP_SUPPORTED_FEATURES_KHR3894,262828
#define GL_SUBGROUP_QUAD_ALL_STAGES_KHR GL_SUBGROUP_QUAD_ALL_STAGES_KHR3895,262879
#define GL_SUBGROUP_FEATURE_BASIC_BIT_KHR GL_SUBGROUP_FEATURE_BASIC_BIT_KHR3896,262929
#define GL_SUBGROUP_FEATURE_VOTE_BIT_KHR GL_SUBGROUP_FEATURE_VOTE_BIT_KHR3897,262983
#define GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR3898,263037
#define GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR3899,263096
#define GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR3900,263151
#define GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR3901,263207
#define GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR3902,263272
#define GL_SUBGROUP_FEATURE_QUAD_BIT_KHR GL_SUBGROUP_FEATURE_QUAD_BIT_KHR3903,263330
#define GL_KHR_texture_compression_astc_hdr GL_KHR_texture_compression_astc_hdr3907,263468
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR GL_COMPRESSED_RGBA_ASTC_4x4_KHR3908,263515
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR GL_COMPRESSED_RGBA_ASTC_5x4_KHR3909,263565
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR GL_COMPRESSED_RGBA_ASTC_5x5_KHR3910,263615
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR GL_COMPRESSED_RGBA_ASTC_6x5_KHR3911,263665
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR GL_COMPRESSED_RGBA_ASTC_6x6_KHR3912,263715
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR GL_COMPRESSED_RGBA_ASTC_8x5_KHR3913,263765
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR GL_COMPRESSED_RGBA_ASTC_8x6_KHR3914,263815
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR GL_COMPRESSED_RGBA_ASTC_8x8_KHR3915,263865
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR GL_COMPRESSED_RGBA_ASTC_10x5_KHR3916,263915
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR GL_COMPRESSED_RGBA_ASTC_10x6_KHR3917,263965
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR GL_COMPRESSED_RGBA_ASTC_10x8_KHR3918,264015
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR GL_COMPRESSED_RGBA_ASTC_10x10_KHR3919,264065
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR GL_COMPRESSED_RGBA_ASTC_12x10_KHR3920,264115
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR GL_COMPRESSED_RGBA_ASTC_12x12_KHR3921,264165
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR3922,264215
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR3923,264271
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR3924,264327
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR3925,264383
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR3926,264439
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR3927,264495
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR3928,264551
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR3929,264607
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR3930,264663
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR3931,264720
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR3932,264777
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR3933,264834
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR3934,264892
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR3935,264950
#define GL_KHR_texture_compression_astc_ldr GL_KHR_texture_compression_astc_ldr3939,265105
#define GL_KHR_texture_compression_astc_sliced_3d GL_KHR_texture_compression_astc_sliced_3d3943,265255
#define GL_AMD_framebuffer_multisample_advanced GL_AMD_framebuffer_multisample_advanced3947,265415
#define GL_RENDERBUFFER_STORAGE_SAMPLES_AMD GL_RENDERBUFFER_STORAGE_SAMPLES_AMD3948,265466
#define GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD3949,265518
#define GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD3950,265571
#define GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD3951,265632
#define GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD3952,265693
#define GL_SUPPORTED_MULTISAMPLE_MODES_AMD GL_SUPPORTED_MULTISAMPLE_MODES_AMD3953,265748
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) (GLenum target, GLsiPFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC3954,265799
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC) (GLuint renderbPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC3955,265988
#define GL_AMD_performance_monitor GL_AMD_performance_monitor3963,266681
#define GL_COUNTER_TYPE_AMD GL_COUNTER_TYPE_AMD3964,266719
#define GL_COUNTER_RANGE_AMD GL_COUNTER_RANGE_AMD3965,266769
#define GL_UNSIGNED_INT64_AMD GL_UNSIGNED_INT64_AMD3966,266819
#define GL_PERCENTAGE_AMD GL_PERCENTAGE_AMD3967,266869
#define GL_PERFMON_RESULT_AVAILABLE_AMD GL_PERFMON_RESULT_AVAILABLE_AMD3968,266919
#define GL_PERFMON_RESULT_SIZE_AMD GL_PERFMON_RESULT_SIZE_AMD3969,266969
#define GL_PERFMON_RESULT_AMD GL_PERFMON_RESULT_AMD3970,267019
typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize,PFNGLGETPERFMONITORGROUPSAMDPROC3971,267069
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GPFNGLGETPERFMONITORCOUNTERSAMDPROC3972,267184
typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GPFNGLGETPERFMONITORGROUPSTRINGAMDPROC3973,267346
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC3974,267481
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLPFNGLGETPERFMONITORCOUNTERINFOAMDPROC3975,267636
typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);PFNGLGENPERFMONITORSAMDPROC3976,267758
typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);PFNGLDELETEPERFMONITORSAMDPROC3977,267843
typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enablePFNGLSELECTPERFMONITORCOUNTERSAMDPROC3978,267931
typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);PFNGLBEGINPERFMONITORAMDPROC3979,268085
typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);PFNGLENDPERFMONITORAMDPROC3980,268158
typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLPFNGLGETPERFMONITORCOUNTERDATAAMDPROC3981,268229
#define GL_APPLE_rgb_422 GL_APPLE_rgb_4223998,269660
#define GL_RGB_422_APPLE GL_RGB_422_APPLE3999,269688
#define GL_UNSIGNED_SHORT_8_8_APPLE GL_UNSIGNED_SHORT_8_8_APPLE4000,269738
#define GL_UNSIGNED_SHORT_8_8_REV_APPLE GL_UNSIGNED_SHORT_8_8_REV_APPLE4001,269788
#define GL_RGB_RAW_422_APPLE GL_RGB_RAW_422_APPLE4002,269838
#define GL_EXT_EGL_image_storage GL_EXT_EGL_image_storage4006,269955
typedef void *GLeglImageOES;GLeglImageOES4007,269991
typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC) (GLenum target, GLeglImageOES imagPFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC4008,270021
typedef void (APIENTRYP PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC) (GLuint texture, GLeglImageOESPFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC4009,270148
#define GL_EXT_EGL_sync GL_EXT_EGL_sync4017,270617
#define GL_EXT_debug_label GL_EXT_debug_label4021,270704
#define GL_PROGRAM_PIPELINE_OBJECT_EXT GL_PROGRAM_PIPELINE_OBJECT_EXT4022,270734
#define GL_PROGRAM_OBJECT_EXT GL_PROGRAM_OBJECT_EXT4023,270784
#define GL_SHADER_OBJECT_EXT GL_SHADER_OBJECT_EXT4024,270834
#define GL_BUFFER_OBJECT_EXT GL_BUFFER_OBJECT_EXT4025,270884
#define GL_QUERY_OBJECT_EXT GL_QUERY_OBJECT_EXT4026,270934
#define GL_VERTEX_ARRAY_OBJECT_EXT GL_VERTEX_ARRAY_OBJECT_EXT4027,270984
typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, coPFNGLLABELOBJECTEXTPROC4028,271034
typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSizePFNGLGETOBJECTLABELEXTPROC4029,271151
#define GL_EXT_debug_marker GL_EXT_debug_marker4037,271608
typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);PFNGLINSERTEVENTMARKEREXTPROC4038,271639
typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);PFNGLPUSHGROUPMARKEREXTPROC4039,271735
typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);PFNGLPOPGROUPMARKEREXTPROC4040,271829
#define GL_EXT_direct_state_access GL_EXT_direct_state_access4049,272213
#define GL_PROGRAM_MATRIX_EXT GL_PROGRAM_MATRIX_EXT4050,272251
#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT GL_TRANSPOSE_PROGRAM_MATRIX_EXT4051,272301
#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT GL_PROGRAM_MATRIX_STACK_DEPTH_EXT4052,272351
typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);PFNGLMATRIXLOADFEXTPROC4053,272401
typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);PFNGLMATRIXLOADDEXTPROC4054,272484
typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);PFNGLMATRIXMULTFEXTPROC4055,272568
typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);PFNGLMATRIXMULTDEXTPROC4056,272651
typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);PFNGLMATRIXLOADIDENTITYEXTPROC4057,272735
typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLfloPFNGLMATRIXROTATEFEXTPROC4058,272807
typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLdPFNGLMATRIXROTATEDEXTPROC4059,272922
typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z)PFNGLMATRIXSCALEFEXTPROC4060,273041
typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdoublePFNGLMATRIXSCALEDEXTPROC4061,273140
typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloaPFNGLMATRIXTRANSLATEFEXTPROC4062,273242
typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdoPFNGLMATRIXTRANSLATEDEXTPROC4063,273345
typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, PFNGLMATRIXFRUSTUMEXTPROC4064,273451
typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLPFNGLMATRIXORTHOEXTPROC4065,273611
typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);PFNGLMATRIXPOPEXTPROC4066,273769
typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);PFNGLMATRIXPUSHEXTPROC4067,273832
typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);PFNGLCLIENTATTRIBDEFAULTEXTPROC4068,273896
typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC4069,273973
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pnPFNGLTEXTUREPARAMETERFEXTPROC4070,274054
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pPFNGLTEXTUREPARAMETERFVEXTPROC4071,274172
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pnPFNGLTEXTUREPARAMETERIEXTPROC4072,274299
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pPFNGLTEXTUREPARAMETERIVEXTPROC4073,274415
typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level,PFNGLTEXTUREIMAGE1DEXTPROC4074,274540
typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level,PFNGLTEXTUREIMAGE2DEXTPROC4075,274738
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint levPFNGLTEXTURESUBIMAGE1DEXTPROC4076,274952
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint levPFNGLTEXTURESUBIMAGE2DEXTPROC4077,275132
typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint lePFNGLCOPYTEXTUREIMAGE1DEXTPROC4078,275343
typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint lePFNGLCOPYTEXTUREIMAGE2DEXTPROC4079,275516
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLintPFNGLCOPYTEXTURESUBIMAGE1DEXTPROC4080,275705
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLintPFNGLCOPYTEXTURESUBIMAGE2DEXTPROC4081,275859
typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint levelPFNGLGETTEXTUREIMAGEEXTPROC4082,276044
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenuPFNGLGETTEXTUREPARAMETERFVEXTPROC4083,276186
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenuPFNGLGETTEXTUREPARAMETERIVEXTPROC4084,276310
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC4085,276432
typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC4086,276574
typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level,PFNGLTEXTUREIMAGE3DEXTPROC4087,276714
typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint levPFNGLTEXTURESUBIMAGE3DEXTPROC4088,276943
typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLintPFNGLCOPYTEXTURESUBIMAGE3DEXTPROC4089,277184
typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texPFNGLBINDMULTITEXTUREEXTPROC4090,277384
typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum tyPFNGLMULTITEXCOORDPOINTEREXTPROC4091,277488
typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, PFNGLMULTITEXENVFEXTPROC4092,277627
typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,PFNGLMULTITEXENVFVEXTPROC4093,277740
typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, PFNGLMULTITEXENVIEXTPROC4094,277862
typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname,PFNGLMULTITEXENVIVEXTPROC4095,277973
typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GPFNGLMULTITEXGENDEXTPROC4096,278093
typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, PFNGLMULTITEXGENDVEXTPROC4097,278206
typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GPFNGLMULTITEXGENFEXTPROC4098,278328
typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, PFNGLMULTITEXGENFVEXTPROC4099,278440
typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GPFNGLMULTITEXGENIEXTPROC4100,278561
typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, PFNGLMULTITEXGENIVEXTPROC4101,278671
typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pnaPFNGLGETMULTITEXENVFVEXTPROC4102,278790
typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pnaPFNGLGETMULTITEXENVIVEXTPROC4103,278909
typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnamPFNGLGETMULTITEXGENDVEXTPROC4104,279026
typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnamPFNGLGETMULTITEXGENFVEXTPROC4105,279145
typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pnamPFNGLGETMULTITEXGENIVEXTPROC4106,279263
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pPFNGLMULTITEXPARAMETERIEXTPROC4107,279379
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum PFNGLMULTITEXPARAMETERIVEXTPROC4108,279496
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pPFNGLMULTITEXPARAMETERFEXTPROC4109,279622
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum PFNGLMULTITEXPARAMETERFVEXTPROC4110,279741
typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint levelPFNGLMULTITEXIMAGE1DEXTPROC4111,279869
typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint levelPFNGLMULTITEXIMAGE2DEXTPROC4112,280068
typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint lePFNGLMULTITEXSUBIMAGE1DEXTPROC4113,280283
typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint lePFNGLMULTITEXSUBIMAGE2DEXTPROC4114,280464
typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint lPFNGLCOPYMULTITEXIMAGE1DEXTPROC4115,280676
typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint lPFNGLCOPYMULTITEXIMAGE2DEXTPROC4116,280850
typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLinPFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC4117,281040
typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLinPFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC4118,281195
typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint levePFNGLGETMULTITEXIMAGEEXTPROC4119,281381
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenPFNGLGETMULTITEXPARAMETERFVEXTPROC4120,281524
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenPFNGLGETMULTITEXPARAMETERIVEXTPROC4121,281649
typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target,PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC4122,281772
typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target,PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC4123,281915
typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint levelPFNGLMULTITEXIMAGE3DEXTPROC4124,282056
typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint lePFNGLMULTITEXSUBIMAGE3DEXTPROC4125,282286
typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLinPFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC4126,282528
typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);PFNGLENABLECLIENTSTATEINDEXEDEXTPROC4127,282729
typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC4128,282822
typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *datPFNGLGETFLOATINDEXEDVEXTPROC4129,282916
typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *dPFNGLGETDOUBLEINDEXEDVEXTPROC4130,283017
typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **datPFNGLGETPOINTERINDEXEDVEXTPROC4131,283120
typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);PFNGLENABLEINDEXEDEXTPROC4132,283221
typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);PFNGLDISABLEINDEXEDEXTPROC4133,283304
typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);PFNGLISENABLEDINDEXEDEXTPROC4134,283388
typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *datPFNGLGETINTEGERINDEXEDVEXTPROC4135,283479
typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean PFNGLGETBOOLEANINDEXEDVEXTPROC4136,283580
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLPFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC4137,283685
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLPFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC4138,283914
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLPFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC4139,284128
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target,PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC4140,284326
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target,PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC4141,284581
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target,PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC4142,284806
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GPFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC4143,285000
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GPFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC4144,285119
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GPFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC4145,285349
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GPFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC4146,285564
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum targetPFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC4147,285763
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum targetPFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC4148,286019
typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum targetPFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC4149,286245
typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC4150,286440
typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);PFNGLMATRIXLOADTRANSPOSEFEXTPROC4151,286560
typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);PFNGLMATRIXLOADTRANSPOSEDEXTPROC4152,286652
typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);PFNGLMATRIXMULTTRANSPOSEFEXTPROC4153,286745
typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);PFNGLMATRIXMULTTRANSPOSEDEXTPROC4154,286837
typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const voidPFNGLNAMEDBUFFERDATAEXTPROC4155,286930
typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiPFNGLNAMEDBUFFERSUBDATAEXTPROC4156,287050
typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);PFNGLMAPNAMEDBUFFEREXTPROC4157,287176
typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);PFNGLUNMAPNAMEDBUFFEREXTPROC4158,287262
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLiPFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC4159,287339
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void *PFNGLGETNAMEDBUFFERPOINTERVEXTPROC4160,287449
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsiPFNGLGETNAMEDBUFFERSUBDATAEXTPROC4161,287556
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat vPFNGLPROGRAMUNIFORM1FEXTPROC4162,287679
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat vPFNGLPROGRAMUNIFORM2FEXTPROC4163,287780
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat vPFNGLPROGRAMUNIFORM3FEXTPROC4164,287893
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat vPFNGLPROGRAMUNIFORM4FEXTPROC4165,288018
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0)PFNGLPROGRAMUNIFORM1IEXTPROC4166,288155
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0,PFNGLPROGRAMUNIFORM2IEXTPROC4167,288254
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0,PFNGLPROGRAMUNIFORM3IEXTPROC4168,288363
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0,PFNGLPROGRAMUNIFORM4IEXTPROC4169,288482
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei PFNGLPROGRAMUNIFORM1FVEXTPROC4170,288611
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei PFNGLPROGRAMUNIFORM2FVEXTPROC4171,288738
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei PFNGLPROGRAMUNIFORM3FVEXTPROC4172,288865
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei PFNGLPROGRAMUNIFORM4FVEXTPROC4173,288992
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei PFNGLPROGRAMUNIFORM1IVEXTPROC4174,289119
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei PFNGLPROGRAMUNIFORM2IVEXTPROC4175,289244
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei PFNGLPROGRAMUNIFORM3IVEXTPROC4176,289369
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei PFNGLPROGRAMUNIFORM4IVEXTPROC4177,289494
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLPFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC4178,289619
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLPFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC4179,289773
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLPFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC4180,289927
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC4181,290081
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC4182,290237
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC4183,290393
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC4184,290549
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC4185,290705
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC4186,290861
typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internPFNGLTEXTUREBUFFEREXTPROC4187,291017
typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum interPFNGLMULTITEXBUFFEREXTPROC4188,291140
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum PFNGLTEXTUREPARAMETERIIVEXTPROC4189,291264
typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenumPFNGLTEXTUREPARAMETERIUIVEXTPROC4190,291390
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenPFNGLGETTEXTUREPARAMETERIIVEXTPROC4191,291518
typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLePFNGLGETTEXTUREPARAMETERIUIVEXTPROC4192,291641
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenumPFNGLMULTITEXPARAMETERIIVEXTPROC4193,291766
typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenuPFNGLMULTITEXPARAMETERIUIVEXTPROC4194,291893
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLePFNGLGETMULTITEXPARAMETERIIVEXTPROC4195,292022
typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLPFNGLGETMULTITEXPARAMETERIUIVEXTPROC4196,292146
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint vPFNGLPROGRAMUNIFORM1UIEXTPROC4197,292272
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint vPFNGLPROGRAMUNIFORM2UIEXTPROC4198,292373
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint vPFNGLPROGRAMUNIFORM3UIEXTPROC4199,292485
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint vPFNGLPROGRAMUNIFORM4UIEXTPROC4200,292608
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizeiPFNGLPROGRAMUNIFORM1UIVEXTPROC4201,292742
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizeiPFNGLPROGRAMUNIFORM2UIVEXTPROC4202,292869
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizeiPFNGLPROGRAMUNIFORM3UIVEXTPROC4203,292996
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizeiPFNGLPROGRAMUNIFORM4UIVEXTPROC4204,293123
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum targPFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC4205,293250
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum targePFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC4206,293404
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum targPFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC4207,293555
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum tarPFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC4208,293692
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum targPFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC4209,293845
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum tarPFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC4210,294001
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum taPFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC4211,294140
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum taPFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC4212,294295
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum tPFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC4213,294428
typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);PFNGLENABLECLIENTSTATEIEXTPROC4214,294563
typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);PFNGLDISABLECLIENTSTATEIEXTPROC4215,294650
typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);PFNGLGETFLOATI_VEXTPROC4216,294738
typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params)PFNGLGETDOUBLEI_VEXTPROC4217,294835
typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);PFNGLGETPOINTERI_VEXTPROC4218,294934
typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum fPFNGLNAMEDPROGRAMSTRINGEXTPROC4219,295031
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum targetPFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC4220,295169
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum targePFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC4221,295331
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum targetPFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC4222,295470
typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum targePFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC4223,295628
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum tarPFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC4224,295766
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum tarPFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC4225,295901
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pnPFNGLGETNAMEDPROGRAMIVEXTPROC4226,296035
typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenuPFNGLGETNAMEDPROGRAMSTRINGEXTPROC4227,296153
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum interPFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC4228,296274
typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenuPFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC4229,296414
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC4230,296536
typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbPFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC4231,296704
typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum tPFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC4232,296910
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attacPFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC4233,297015
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attacPFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC4234,297167
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attacPFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC4235,297319
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum atPFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC4236,297486
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffePFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC4237,297642
typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);PFNGLGENERATETEXTUREMIPMAPEXTPROC4238,297791
typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);PFNGLGENERATEMULTITEXMIPMAPEXTPROC4239,297884
typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC4240,297978
typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, consPFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC4241,298073
typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);PFNGLFRAMEBUFFERREADBUFFEREXTPROC4242,298187
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pnamePFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC4243,298282
typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuffPFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC4244,298397
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachmPFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC4245,298559
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum atPFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC4246,298691
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attPFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC4247,298841
typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint PFNGLTEXTURERENDERBUFFEREXTPROC4248,298990
typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuintPFNGLMULTITEXRENDERBUFFEREXTPROC4249,299102
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLintPFNGLVERTEXARRAYVERTEXOFFSETEXTPROC4250,299215
typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint PFNGLVERTEXARRAYCOLOROFFSETEXTPROC4251,299366
typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLsPFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC4252,299516
typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenumPFNGLVERTEXARRAYINDEXOFFSETEXTPROC4253,299644
typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenuPFNGLVERTEXARRAYNORMALOFFSETEXTPROC4254,299782
typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLiPFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC4255,299921
typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint bufferPFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC4256,300074
typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLePFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC4257,300248
typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffePFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC4258,300389
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer,PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC4259,300548
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint bufferPFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC4260,300741
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);PFNGLENABLEVERTEXARRAYEXTPROC4261,300913
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);PFNGLDISABLEVERTEXARRAYEXTPROC4262,300999
typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);PFNGLENABLEVERTEXARRAYATTRIBEXTPROC4263,301086
typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC4264,301178
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint *PFNGLGETVERTEXARRAYINTEGERVEXTPROC4265,301271
typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **PFNGLGETVERTEXARRAYPOINTERVEXTPROC4266,301376
typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenuPFNGLGETVERTEXARRAYINTEGERI_VEXTPROC4267,301481
typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenuPFNGLGETVERTEXARRAYPOINTERI_VEXTPROC4268,301602
typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizPFNGLMAPNAMEDBUFFERRANGEEXTPROC4269,301723
typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offsetPFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC4270,301854
typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const vPFNGLNAMEDBUFFERSTORAGEEXTPROC4271,301973
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat,PFNGLCLEARNAMEDBUFFERDATAEXTPROC4272,302100
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformPFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC4273,302245
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pnamPFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC4274,302429
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC4275,302543
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble PFNGLPROGRAMUNIFORM1DEXTPROC4276,302663
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble PFNGLPROGRAMUNIFORM2DEXTPROC4277,302764
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble PFNGLPROGRAMUNIFORM3DEXTPROC4278,302877
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble PFNGLPROGRAMUNIFORM4DEXTPROC4279,303002
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei PFNGLPROGRAMUNIFORM1DVEXTPROC4280,303139
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei PFNGLPROGRAMUNIFORM2DVEXTPROC4281,303267
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei PFNGLPROGRAMUNIFORM3DVEXTPROC4282,303395
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei PFNGLPROGRAMUNIFORM4DVEXTPROC4283,303523
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GLPFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC4284,303651
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GLPFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC4285,303806
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GLPFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC4286,303961
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC4287,304116
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC4288,304273
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC4289,304430
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC4290,304587
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC4291,304744
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC4292,304901
typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum iPFNGLTEXTUREBUFFERRANGEEXTPROC4293,305058
typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei lePFNGLTEXTURESTORAGE1DEXTPROC4294,305220
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei lePFNGLTEXTURESTORAGE2DEXTPROC4295,305362
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei lePFNGLTEXTURESTORAGE3DEXTPROC4296,305520
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC4297,305693
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC4298,305895
typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindinginPFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC4299,306112
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribiPFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC4300,306263
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribPFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC4301,306437
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribPFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC4302,306590
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribPFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC4303,306743
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindiPFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC4304,306869
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint bufferPFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC4305,306992
typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint xPFNGLTEXTUREPAGECOMMITMENTEXTPROC4306,307164
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index,PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC4307,307364
#define GL_EXT_draw_instanced GL_EXT_draw_instanced4568,339607
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei counPFNGLDRAWARRAYSINSTANCEDEXTPROC4569,339640
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum tPFNGLDRAWELEMENTSINSTANCEDEXTPROC4570,339760
#define GL_EXT_multiview_tessellation_geometry_shader GL_EXT_multiview_tessellation_geometry_shader4578,340271
#define GL_EXT_multiview_texture_multisample GL_EXT_multiview_texture_multisample4582,340436
#define GL_EXT_multiview_timer_query GL_EXT_multiview_timer_query4586,340575
#define GL_EXT_polygon_offset_clamp GL_EXT_polygon_offset_clamp4590,340697
#define GL_POLYGON_OFFSET_CLAMP_EXT GL_POLYGON_OFFSET_CLAMP_EXT4591,340736
typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPEXTPROC) (GLfloat factor, GLfloat units, GLfloat PFNGLPOLYGONOFFSETCLAMPEXTPROC4592,340786
#define GL_EXT_post_depth_coverage GL_EXT_post_depth_coverage4599,341100
#define GL_EXT_raster_multisample GL_EXT_raster_multisample4603,341216
#define GL_RASTER_MULTISAMPLE_EXT GL_RASTER_MULTISAMPLE_EXT4604,341253
#define GL_RASTER_SAMPLES_EXT GL_RASTER_SAMPLES_EXT4605,341303
#define GL_MAX_RASTER_SAMPLES_EXT GL_MAX_RASTER_SAMPLES_EXT4606,341353
#define GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT4607,341403
#define GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT4608,341456
#define GL_EFFECTIVE_RASTER_SAMPLES_EXT GL_EFFECTIVE_RASTER_SAMPLES_EXT4609,341513
typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) (GLuint samples, GLboolean fixedsamplelocatioPFNGLRASTERSAMPLESEXTPROC4610,341563
#define GL_EXT_separate_shader_objects GL_EXT_separate_shader_objects4617,341873
#define GL_ACTIVE_PROGRAM_EXT GL_ACTIVE_PROGRAM_EXT4618,341915
typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);PFNGLUSESHADERPROGRAMEXTPROC4619,341965
typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);PFNGLACTIVEPROGRAMEXTPROC4620,342051
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);PFNGLCREATESHADERPROGRAMEXTPROC4621,342121
#define GL_EXT_shader_framebuffer_fetch GL_EXT_shader_framebuffer_fetch4630,342559
#define GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT4631,342602
#define GL_EXT_shader_framebuffer_fetch_non_coherent GL_EXT_shader_framebuffer_fetch_non_coherent4635,342760
typedef void (APIENTRYP PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC) (void);PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC4636,342816
#define GL_EXT_shader_integer_mix GL_EXT_shader_integer_mix4643,343076
#define GL_EXT_texture_compression_s3tc GL_EXT_texture_compression_s3tc4647,343196
#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT GL_COMPRESSED_RGB_S3TC_DXT1_EXT4648,343239
#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT GL_COMPRESSED_RGBA_S3TC_DXT1_EXT4649,343289
#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT GL_COMPRESSED_RGBA_S3TC_DXT3_EXT4650,343339
#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT GL_COMPRESSED_RGBA_S3TC_DXT5_EXT4651,343389
#define GL_EXT_texture_filter_minmax GL_EXT_texture_filter_minmax4655,343525
#define GL_TEXTURE_REDUCTION_MODE_EXT GL_TEXTURE_REDUCTION_MODE_EXT4656,343565
#define GL_WEIGHTED_AVERAGE_EXT GL_WEIGHTED_AVERAGE_EXT4657,343615
#define GL_EXT_texture_sRGB_R8 GL_EXT_texture_sRGB_R84661,343742
#define GL_SR8_EXT GL_SR8_EXT4662,343776
#define GL_EXT_texture_sRGB_decode GL_EXT_texture_sRGB_decode4666,343901
#define GL_TEXTURE_SRGB_DECODE_EXT GL_TEXTURE_SRGB_DECODE_EXT4667,343939
#define GL_DECODE_EXT GL_DECODE_EXT4668,343989
#define GL_SKIP_DECODE_EXT GL_SKIP_DECODE_EXT4669,344039
#define GL_EXT_texture_shadow_lod GL_EXT_texture_shadow_lod4673,344167
#define GL_EXT_window_rectangles GL_EXT_window_rectangles4677,344280
#define GL_INCLUSIVE_EXT GL_INCLUSIVE_EXT4678,344316
#define GL_EXCLUSIVE_EXT GL_EXCLUSIVE_EXT4679,344366
#define GL_WINDOW_RECTANGLE_EXT GL_WINDOW_RECTANGLE_EXT4680,344416
#define GL_WINDOW_RECTANGLE_MODE_EXT GL_WINDOW_RECTANGLE_MODE_EXT4681,344466
#define GL_MAX_WINDOW_RECTANGLES_EXT GL_MAX_WINDOW_RECTANGLES_EXT4682,344516
#define GL_NUM_WINDOW_RECTANGLES_EXT GL_NUM_WINDOW_RECTANGLES_EXT4683,344566
typedef void (APIENTRYP PFNGLWINDOWRECTANGLESEXTPROC) (GLenum mode, GLsizei count, const GLint *PFNGLWINDOWRECTANGLESEXTPROC4684,344616
#define GL_INTEL_blackhole_render GL_INTEL_blackhole_render4691,344922
#define GL_BLACKHOLE_RENDER_INTEL GL_BLACKHOLE_RENDER_INTEL4692,344959
#define GL_INTEL_conservative_rasterization GL_INTEL_conservative_rasterization4696,345096
#define GL_CONSERVATIVE_RASTERIZATION_INTEL GL_CONSERVATIVE_RASTERIZATION_INTEL4697,345143
#define GL_INTEL_framebuffer_CMAA GL_INTEL_framebuffer_CMAA4701,345282
typedef void (APIENTRYP PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC) (void);PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC4702,345319
#define GL_INTEL_performance_query GL_INTEL_performance_query4709,345579
#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL GL_PERFQUERY_SINGLE_CONTEXT_INTEL4710,345617
#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL GL_PERFQUERY_GLOBAL_CONTEXT_INTEL4711,345671
#define GL_PERFQUERY_WAIT_INTEL GL_PERFQUERY_WAIT_INTEL4712,345725
#define GL_PERFQUERY_FLUSH_INTEL GL_PERFQUERY_FLUSH_INTEL4713,345775
#define GL_PERFQUERY_DONOT_FLUSH_INTEL GL_PERFQUERY_DONOT_FLUSH_INTEL4714,345825
#define GL_PERFQUERY_COUNTER_EVENT_INTEL GL_PERFQUERY_COUNTER_EVENT_INTEL4715,345875
#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL4716,345925
#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL4717,345982
#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL4718,346038
#define GL_PERFQUERY_COUNTER_RAW_INTEL GL_PERFQUERY_COUNTER_RAW_INTEL4719,346092
#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL4720,346142
#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL4721,346195
#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL4722,346250
#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL4723,346305
#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL4724,346359
#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL4725,346414
#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL4726,346469
#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL4727,346526
#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL4728,346585
#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL4729,346644
typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);PFNGLBEGINPERFQUERYINTELPROC4730,346701
typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);PFNGLCREATEPERFQUERYINTELPROC4731,346778
typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);PFNGLDELETEPERFQUERYINTELPROC4732,346873
typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);PFNGLENDPERFQUERYINTELPROC4733,346951
typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);PFNGLGETFIRSTPERFQUERYIDINTELPROC4734,347026
typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);PFNGLGETNEXTPERFQUERYIDINTELPROC4735,347105
typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLuPFNGLGETPERFCOUNTERINFOINTELPROC4736,347203
typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsizPFNGLGETPERFQUERYDATAINTELPROC4737,347524
typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId)PFNGLGETPERFQUERYIDBYNAMEINTELPROC4738,347669
typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength,PFNGLGETPERFQUERYINFOINTELPROC4739,347768
#define GL_MESA_framebuffer_flip_x GL_MESA_framebuffer_flip_x4755,349220
#define GL_FRAMEBUFFER_FLIP_X_MESA GL_FRAMEBUFFER_FLIP_X_MESA4756,349258
#define GL_MESA_framebuffer_flip_y GL_MESA_framebuffer_flip_y4760,349387
#define GL_FRAMEBUFFER_FLIP_Y_MESA GL_FRAMEBUFFER_FLIP_Y_MESA4761,349425
typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIMESAPROC) (GLenum target, GLenum pname, GLint PFNGLFRAMEBUFFERPARAMETERIMESAPROC4762,349475
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC) (GLenum target, GLenum pname, GLPFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC4763,349580
#define GL_MESA_framebuffer_swap_xy GL_MESA_framebuffer_swap_xy4771,349999
#define GL_FRAMEBUFFER_SWAP_XY_MESA GL_FRAMEBUFFER_SWAP_XY_MESA4772,350038
#define GL_NV_bindless_multi_draw_indirect GL_NV_bindless_multi_draw_indirect4776,350176
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *inPFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC4777,350222
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type,PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC4778,350388
#define GL_NV_bindless_multi_draw_indirect_count GL_NV_bindless_multi_draw_indirect_count4786,351029
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, const voiPFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC4787,351081
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, GLenum PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC4788,351274
#define GL_NV_bindless_texture GL_NV_bindless_texture4796,351984
typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);PFNGLGETTEXTUREHANDLENVPROC4797,352018
typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler)PFNGLGETTEXTURESAMPLERHANDLENVPROC4798,352094
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);PFNGLMAKETEXTUREHANDLERESIDENTNVPROC4799,352193
typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC4800,352275
typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean lPFNGLGETIMAGEHANDLENVPROC4801,352360
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);PFNGLMAKEIMAGEHANDLERESIDENTNVPROC4802,352494
typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC4803,352589
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);PFNGLUNIFORMHANDLEUI64NVPROC4804,352672
typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLuPFNGLUNIFORMHANDLEUI64VNVPROC4805,352761
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GLPFNGLPROGRAMUNIFORMHANDLEUI64NVPROC4806,352873
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, GPFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC4807,352985
typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);PFNGLISTEXTUREHANDLERESIDENTNVPROC4808,353121
typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);PFNGLISIMAGEHANDLERESIDENTNVPROC4809,353206
#define GL_NV_blend_equation_advanced GL_NV_blend_equation_advanced4828,354518
#define GL_BLEND_OVERLAP_NV GL_BLEND_OVERLAP_NV4829,354559
#define GL_BLEND_PREMULTIPLIED_SRC_NV GL_BLEND_PREMULTIPLIED_SRC_NV4830,354609
#define GL_BLUE_NV GL_BLUE_NV4831,354659
#define GL_COLORBURN_NV GL_COLORBURN_NV4832,354709
#define GL_COLORDODGE_NV GL_COLORDODGE_NV4833,354759
#define GL_CONJOINT_NV GL_CONJOINT_NV4834,354809
#define GL_CONTRAST_NV GL_CONTRAST_NV4835,354859
#define GL_DARKEN_NV GL_DARKEN_NV4836,354909
#define GL_DIFFERENCE_NV GL_DIFFERENCE_NV4837,354959
#define GL_DISJOINT_NV GL_DISJOINT_NV4838,355009
#define GL_DST_ATOP_NV GL_DST_ATOP_NV4839,355059
#define GL_DST_IN_NV GL_DST_IN_NV4840,355109
#define GL_DST_NV GL_DST_NV4841,355159
#define GL_DST_OUT_NV GL_DST_OUT_NV4842,355209
#define GL_DST_OVER_NV GL_DST_OVER_NV4843,355259
#define GL_EXCLUSION_NV GL_EXCLUSION_NV4844,355309
#define GL_GREEN_NV GL_GREEN_NV4845,355359
#define GL_HARDLIGHT_NV GL_HARDLIGHT_NV4846,355409
#define GL_HARDMIX_NV GL_HARDMIX_NV4847,355459
#define GL_HSL_COLOR_NV GL_HSL_COLOR_NV4848,355509
#define GL_HSL_HUE_NV GL_HSL_HUE_NV4849,355559
#define GL_HSL_LUMINOSITY_NV GL_HSL_LUMINOSITY_NV4850,355609
#define GL_HSL_SATURATION_NV GL_HSL_SATURATION_NV4851,355659
#define GL_INVERT_OVG_NV GL_INVERT_OVG_NV4852,355709
#define GL_INVERT_RGB_NV GL_INVERT_RGB_NV4853,355759
#define GL_LIGHTEN_NV GL_LIGHTEN_NV4854,355809
#define GL_LINEARBURN_NV GL_LINEARBURN_NV4855,355859
#define GL_LINEARDODGE_NV GL_LINEARDODGE_NV4856,355909
#define GL_LINEARLIGHT_NV GL_LINEARLIGHT_NV4857,355959
#define GL_MINUS_CLAMPED_NV GL_MINUS_CLAMPED_NV4858,356009
#define GL_MINUS_NV GL_MINUS_NV4859,356059
#define GL_MULTIPLY_NV GL_MULTIPLY_NV4860,356109
#define GL_OVERLAY_NV GL_OVERLAY_NV4861,356159
#define GL_PINLIGHT_NV GL_PINLIGHT_NV4862,356209
#define GL_PLUS_CLAMPED_ALPHA_NV GL_PLUS_CLAMPED_ALPHA_NV4863,356259
#define GL_PLUS_CLAMPED_NV GL_PLUS_CLAMPED_NV4864,356309
#define GL_PLUS_DARKER_NV GL_PLUS_DARKER_NV4865,356359
#define GL_PLUS_NV GL_PLUS_NV4866,356409
#define GL_RED_NV GL_RED_NV4867,356459
#define GL_SCREEN_NV GL_SCREEN_NV4868,356509
#define GL_SOFTLIGHT_NV GL_SOFTLIGHT_NV4869,356559
#define GL_SRC_ATOP_NV GL_SRC_ATOP_NV4870,356609
#define GL_SRC_IN_NV GL_SRC_IN_NV4871,356659
#define GL_SRC_NV GL_SRC_NV4872,356709
#define GL_SRC_OUT_NV GL_SRC_OUT_NV4873,356759
#define GL_SRC_OVER_NV GL_SRC_OVER_NV4874,356809
#define GL_UNCORRELATED_NV GL_UNCORRELATED_NV4875,356859
#define GL_VIVIDLIGHT_NV GL_VIVIDLIGHT_NV4876,356909
#define GL_XOR_NV GL_XOR_NV4877,356959
typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);PFNGLBLENDPARAMETERINVPROC4878,357009
typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);PFNGLBLENDBARRIERNVPROC4879,357091
#define GL_NV_blend_equation_advanced_coherent GL_NV_blend_equation_advanced_coherent4887,357395
#define GL_BLEND_ADVANCED_COHERENT_NV GL_BLEND_ADVANCED_COHERENT_NV4888,357445
#define GL_NV_blend_minmax_factor GL_NV_blend_minmax_factor4892,357585
#define GL_FACTOR_MIN_AMD GL_FACTOR_MIN_AMD4893,357622
#define GL_FACTOR_MAX_AMD GL_FACTOR_MAX_AMD4894,357672
#define GL_NV_clip_space_w_scaling GL_NV_clip_space_w_scaling4898,357800
#define GL_VIEWPORT_POSITION_W_SCALE_NV GL_VIEWPORT_POSITION_W_SCALE_NV4899,357838
#define GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV4900,357888
#define GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV4901,357944
typedef void (APIENTRYP PFNGLVIEWPORTPOSITIONWSCALENVPROC) (GLuint index, GLfloat xcoeff, GLfloaPFNGLVIEWPORTPOSITIONWSCALENVPROC4902,358000
#define GL_NV_command_list GL_NV_command_list4909,358311
#define GL_TERMINATE_SEQUENCE_COMMAND_NV GL_TERMINATE_SEQUENCE_COMMAND_NV4910,358341
#define GL_NOP_COMMAND_NV GL_NOP_COMMAND_NV4911,358391
#define GL_DRAW_ELEMENTS_COMMAND_NV GL_DRAW_ELEMENTS_COMMAND_NV4912,358441
#define GL_DRAW_ARRAYS_COMMAND_NV GL_DRAW_ARRAYS_COMMAND_NV4913,358491
#define GL_DRAW_ELEMENTS_STRIP_COMMAND_NV GL_DRAW_ELEMENTS_STRIP_COMMAND_NV4914,358541
#define GL_DRAW_ARRAYS_STRIP_COMMAND_NV GL_DRAW_ARRAYS_STRIP_COMMAND_NV4915,358591
#define GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV4916,358641
#define GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV4917,358695
#define GL_ELEMENT_ADDRESS_COMMAND_NV GL_ELEMENT_ADDRESS_COMMAND_NV4918,358747
#define GL_ATTRIBUTE_ADDRESS_COMMAND_NV GL_ATTRIBUTE_ADDRESS_COMMAND_NV4919,358797
#define GL_UNIFORM_ADDRESS_COMMAND_NV GL_UNIFORM_ADDRESS_COMMAND_NV4920,358847
#define GL_BLEND_COLOR_COMMAND_NV GL_BLEND_COLOR_COMMAND_NV4921,358897
#define GL_STENCIL_REF_COMMAND_NV GL_STENCIL_REF_COMMAND_NV4922,358947
#define GL_LINE_WIDTH_COMMAND_NV GL_LINE_WIDTH_COMMAND_NV4923,358997
#define GL_POLYGON_OFFSET_COMMAND_NV GL_POLYGON_OFFSET_COMMAND_NV4924,359047
#define GL_ALPHA_REF_COMMAND_NV GL_ALPHA_REF_COMMAND_NV4925,359097
#define GL_VIEWPORT_COMMAND_NV GL_VIEWPORT_COMMAND_NV4926,359147
#define GL_SCISSOR_COMMAND_NV GL_SCISSOR_COMMAND_NV4927,359197
#define GL_FRONT_FACE_COMMAND_NV GL_FRONT_FACE_COMMAND_NV4928,359247
typedef void (APIENTRYP PFNGLCREATESTATESNVPROC) (GLsizei n, GLuint *states);PFNGLCREATESTATESNVPROC4929,359297
typedef void (APIENTRYP PFNGLDELETESTATESNVPROC) (GLsizei n, const GLuint *states);PFNGLDELETESTATESNVPROC4930,359376
typedef GLboolean (APIENTRYP PFNGLISSTATENVPROC) (GLuint state);PFNGLISSTATENVPROC4931,359461
typedef void (APIENTRYP PFNGLSTATECAPTURENVPROC) (GLuint state, GLenum mode);PFNGLSTATECAPTURENVPROC4932,359527
typedef GLuint (APIENTRYP PFNGLGETCOMMANDHEADERNVPROC) (GLenum tokenID, GLuint size);PFNGLGETCOMMANDHEADERNVPROC4933,359606
typedef GLushort (APIENTRYP PFNGLGETSTAGEINDEXNVPROC) (GLenum shadertype);PFNGLGETSTAGEINDEXNVPROC4934,359693
typedef void (APIENTRYP PFNGLDRAWCOMMANDSNVPROC) (GLenum primitiveMode, GLuint buffer, const GLiPFNGLDRAWCOMMANDSNVPROC4935,359769
typedef void (APIENTRYP PFNGLDRAWCOMMANDSADDRESSNVPROC) (GLenum primitiveMode, const GLuint64 *iPFNGLDRAWCOMMANDSADDRESSNVPROC4936,359921
typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESNVPROC) (GLuint buffer, const GLintptr *indirectsPFNGLDRAWCOMMANDSSTATESNVPROC4937,360065
typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) (const GLuint64 *indirects, const PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC4938,360243
typedef void (APIENTRYP PFNGLCREATECOMMANDLISTSNVPROC) (GLsizei n, GLuint *lists);PFNGLCREATECOMMANDLISTSNVPROC4939,360413
typedef void (APIENTRYP PFNGLDELETECOMMANDLISTSNVPROC) (GLsizei n, const GLuint *lists);PFNGLDELETECOMMANDLISTSNVPROC4940,360497
typedef GLboolean (APIENTRYP PFNGLISCOMMANDLISTNVPROC) (GLuint list);PFNGLISCOMMANDLISTNVPROC4941,360587
typedef void (APIENTRYP PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) (GLuint list, GLuint segment, cPFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC4942,360658
typedef void (APIENTRYP PFNGLCOMMANDLISTSEGMENTSNVPROC) (GLuint list, GLuint segments);PFNGLCOMMANDLISTSEGMENTSNVPROC4943,360857
typedef void (APIENTRYP PFNGLCOMPILECOMMANDLISTNVPROC) (GLuint list);PFNGLCOMPILECOMMANDLISTNVPROC4944,360946
typedef void (APIENTRYP PFNGLCALLCOMMANDLISTNVPROC) (GLuint list);PFNGLCALLCOMMANDLISTNVPROC4945,361017
#define GL_NV_compute_shader_derivatives GL_NV_compute_shader_derivatives4968,362782
#define GL_NV_conditional_render GL_NV_conditional_render4972,362909
#define GL_QUERY_WAIT_NV GL_QUERY_WAIT_NV4973,362945
#define GL_QUERY_NO_WAIT_NV GL_QUERY_NO_WAIT_NV4974,362995
#define GL_QUERY_BY_REGION_WAIT_NV GL_QUERY_BY_REGION_WAIT_NV4975,363045
#define GL_QUERY_BY_REGION_NO_WAIT_NV GL_QUERY_BY_REGION_NO_WAIT_NV4976,363095
typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);PFNGLBEGINCONDITIONALRENDERNVPROC4977,363145
typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);PFNGLENDCONDITIONALRENDERNVPROC4978,363231
#define GL_NV_conservative_raster GL_NV_conservative_raster4986,363537
#define GL_CONSERVATIVE_RASTERIZATION_NV GL_CONSERVATIVE_RASTERIZATION_NV4987,363574
#define GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV4988,363624
#define GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV4989,363677
#define GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV4990,363730
typedef void (APIENTRYP PFNGLSUBPIXELPRECISIONBIASNVPROC) (GLuint xbits, GLuint ybits);PFNGLSUBPIXELPRECISIONBIASNVPROC4991,363785
#define GL_NV_conservative_raster_dilate GL_NV_conservative_raster_dilate4998,364071
#define GL_CONSERVATIVE_RASTER_DILATE_NV GL_CONSERVATIVE_RASTER_DILATE_NV4999,364115
#define GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV5000,364165
#define GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV5001,364220
typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) (GLenum pname, GLfloat value);PFNGLCONSERVATIVERASTERPARAMETERFNVPROC5002,364281
#define GL_NV_conservative_raster_pre_snap GL_NV_conservative_raster_pre_snap5009,364592
#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV5010,364638
#define GL_NV_conservative_raster_pre_snap_triangles GL_NV_conservative_raster_pre_snap_triangles5014,364799
#define GL_CONSERVATIVE_RASTER_MODE_NV GL_CONSERVATIVE_RASTER_MODE_NV5015,364855
#define GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV5016,364905
#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV5017,364962
typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERINVPROC) (GLenum pname, GLint param);PFNGLCONSERVATIVERASTERPARAMETERINVPROC5018,365028
#define GL_NV_conservative_raster_underestimation GL_NV_conservative_raster_underestimation5025,365354
#define GL_NV_depth_buffer_float GL_NV_depth_buffer_float5029,365499
#define GL_DEPTH_COMPONENT32F_NV GL_DEPTH_COMPONENT32F_NV5030,365535
#define GL_DEPTH32F_STENCIL8_NV GL_DEPTH32F_STENCIL8_NV5031,365585
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV5032,365635
#define GL_DEPTH_BUFFER_FLOAT_MODE_NV GL_DEPTH_BUFFER_FLOAT_MODE_NV5033,365688
typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);PFNGLDEPTHRANGEDNVPROC5034,365738
typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);PFNGLCLEARDEPTHDNVPROC5035,365820
typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);PFNGLDEPTHBOUNDSDNVPROC5036,365887
#define GL_NV_draw_vulkan_image GL_NV_draw_vulkan_image5045,366274
typedef void (APIENTRY  *GLVULKANPROCNV)(void);GLVULKANPROCNV5046,366309
typedef void (APIENTRYP PFNGLDRAWVKIMAGENVPROC) (GLuint64 vkImage, GLuint sampler, GLfloat x0, GPFNGLDRAWVKIMAGENVPROC5047,366358
typedef GLVULKANPROCNV (APIENTRYP PFNGLGETVKPROCADDRNVPROC) (const GLchar *name);PFNGLGETVKPROCADDRNVPROC5048,366550
typedef void (APIENTRYP PFNGLWAITVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);PFNGLWAITVKSEMAPHORENVPROC5049,366633
typedef void (APIENTRYP PFNGLSIGNALVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);PFNGLSIGNALVKSEMAPHORENVPROC5050,366710
typedef void (APIENTRYP PFNGLSIGNALVKFENCENVPROC) (GLuint64 vkFence);PFNGLSIGNALVKFENCENVPROC5051,366789
#define GL_NV_fill_rectangle GL_NV_fill_rectangle5062,367408
#define GL_FILL_RECTANGLE_NV GL_FILL_RECTANGLE_NV5063,367440
#define GL_NV_fragment_coverage_to_color GL_NV_fragment_coverage_to_color5067,367569
#define GL_FRAGMENT_COVERAGE_TO_COLOR_NV GL_FRAGMENT_COVERAGE_TO_COLOR_NV5068,367613
#define GL_FRAGMENT_COVERAGE_COLOR_NV GL_FRAGMENT_COVERAGE_COLOR_NV5069,367663
typedef void (APIENTRYP PFNGLFRAGMENTCOVERAGECOLORNVPROC) (GLuint color);PFNGLFRAGMENTCOVERAGECOLORNVPROC5070,367713
#define GL_NV_fragment_shader_barycentric GL_NV_fragment_shader_barycentric5077,367979
#define GL_NV_fragment_shader_interlock GL_NV_fragment_shader_interlock5081,368115
#define GL_NV_framebuffer_mixed_samples GL_NV_framebuffer_mixed_samples5085,368247
#define GL_COVERAGE_MODULATION_TABLE_NV GL_COVERAGE_MODULATION_TABLE_NV5086,368290
#define GL_COLOR_SAMPLES_NV GL_COLOR_SAMPLES_NV5087,368340
#define GL_DEPTH_SAMPLES_NV GL_DEPTH_SAMPLES_NV5088,368390
#define GL_STENCIL_SAMPLES_NV GL_STENCIL_SAMPLES_NV5089,368440
#define GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV5090,368490
#define GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV5091,368542
#define GL_COVERAGE_MODULATION_NV GL_COVERAGE_MODULATION_NV5092,368596
#define GL_COVERAGE_MODULATION_TABLE_SIZE_NV GL_COVERAGE_MODULATION_TABLE_SIZE_NV5093,368646
typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);PFNGLCOVERAGEMODULATIONTABLENVPROC5094,368699
typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufSize, GLfloat *v);PFNGLGETCOVERAGEMODULATIONTABLENVPROC5095,368791
typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);PFNGLCOVERAGEMODULATIONNVPROC5096,368886
#define GL_NV_framebuffer_multisample_coverage GL_NV_framebuffer_multisample_coverage5105,369323
#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV GL_RENDERBUFFER_COVERAGE_SAMPLES_NV5106,369373
#define GL_RENDERBUFFER_COLOR_SAMPLES_NV GL_RENDERBUFFER_COLOR_SAMPLES_NV5107,369425
#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV5108,369475
#define GL_MULTISAMPLE_COVERAGE_MODES_NV GL_MULTISAMPLE_COVERAGE_MODES_NV5109,369528
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizPFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC5110,369578
#define GL_NV_geometry_shader_passthrough GL_NV_geometry_shader_passthrough5117,370088
#define GL_NV_gpu_shader5 GL_NV_gpu_shader55121,370210
typedef khronos_int64_t GLint64EXT;GLint64EXT5122,370239
#define GL_INT64_NV GL_INT64_NV5123,370276
#define GL_UNSIGNED_INT64_NV GL_UNSIGNED_INT64_NV5124,370326
#define GL_INT8_NV GL_INT8_NV5125,370376
#define GL_INT8_VEC2_NV GL_INT8_VEC2_NV5126,370426
#define GL_INT8_VEC3_NV GL_INT8_VEC3_NV5127,370476
#define GL_INT8_VEC4_NV GL_INT8_VEC4_NV5128,370526
#define GL_INT16_NV GL_INT16_NV5129,370576
#define GL_INT16_VEC2_NV GL_INT16_VEC2_NV5130,370626
#define GL_INT16_VEC3_NV GL_INT16_VEC3_NV5131,370676
#define GL_INT16_VEC4_NV GL_INT16_VEC4_NV5132,370726
#define GL_INT64_VEC2_NV GL_INT64_VEC2_NV5133,370776
#define GL_INT64_VEC3_NV GL_INT64_VEC3_NV5134,370826
#define GL_INT64_VEC4_NV GL_INT64_VEC4_NV5135,370876
#define GL_UNSIGNED_INT8_NV GL_UNSIGNED_INT8_NV5136,370926
#define GL_UNSIGNED_INT8_VEC2_NV GL_UNSIGNED_INT8_VEC2_NV5137,370976
#define GL_UNSIGNED_INT8_VEC3_NV GL_UNSIGNED_INT8_VEC3_NV5138,371026
#define GL_UNSIGNED_INT8_VEC4_NV GL_UNSIGNED_INT8_VEC4_NV5139,371076
#define GL_UNSIGNED_INT16_NV GL_UNSIGNED_INT16_NV5140,371126
#define GL_UNSIGNED_INT16_VEC2_NV GL_UNSIGNED_INT16_VEC2_NV5141,371176
#define GL_UNSIGNED_INT16_VEC3_NV GL_UNSIGNED_INT16_VEC3_NV5142,371226
#define GL_UNSIGNED_INT16_VEC4_NV GL_UNSIGNED_INT16_VEC4_NV5143,371276
#define GL_UNSIGNED_INT64_VEC2_NV GL_UNSIGNED_INT64_VEC2_NV5144,371326
#define GL_UNSIGNED_INT64_VEC3_NV GL_UNSIGNED_INT64_VEC3_NV5145,371376
#define GL_UNSIGNED_INT64_VEC4_NV GL_UNSIGNED_INT64_VEC4_NV5146,371426
#define GL_FLOAT16_NV GL_FLOAT16_NV5147,371476
#define GL_FLOAT16_VEC2_NV GL_FLOAT16_VEC2_NV5148,371526
#define GL_FLOAT16_VEC3_NV GL_FLOAT16_VEC3_NV5149,371576
#define GL_FLOAT16_VEC4_NV GL_FLOAT16_VEC4_NV5150,371626
typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);PFNGLUNIFORM1I64NVPROC5151,371676
typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);PFNGLUNIFORM2I64NVPROC5152,371757
typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLiPFNGLUNIFORM3I64NVPROC5153,371852
typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLiPFNGLUNIFORM4I64NVPROC5154,371961
typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EXPFNGLUNIFORM1I64VNVPROC5155,372084
typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EXPFNGLUNIFORM2I64VNVPROC5156,372192
typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EXPFNGLUNIFORM3I64VNVPROC5157,372300
typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EXPFNGLUNIFORM4I64VNVPROC5158,372408
typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);PFNGLUNIFORM1UI64NVPROC5159,372516
typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);PFNGLUNIFORM2UI64NVPROC5160,372599
typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, PFNGLUNIFORM3UI64NVPROC5161,372697
typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, PFNGLUNIFORM4UI64NVPROC5162,372810
typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64PFNGLUNIFORM1UI64VNVPROC5163,372938
typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64PFNGLUNIFORM2UI64VNVPROC5164,373048
typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64PFNGLUNIFORM3UI64VNVPROC5165,373158
typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64PFNGLUNIFORM4UI64VNVPROC5166,373268
typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT *PFNGLGETUNIFORMI64VNVPROC5167,373378
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64EPFNGLPROGRAMUNIFORM1I64NVPROC5168,373484
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64EPFNGLPROGRAMUNIFORM2I64NVPROC5169,373588
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64EPFNGLPROGRAMUNIFORM3I64NVPROC5170,373706
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64EPFNGLPROGRAMUNIFORM4I64NVPROC5171,373838
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizeiPFNGLPROGRAMUNIFORM1I64VNVPROC5172,373984
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizeiPFNGLPROGRAMUNIFORM2I64VNVPROC5173,374115
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizeiPFNGLPROGRAMUNIFORM3I64VNVPROC5174,374246
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizeiPFNGLPROGRAMUNIFORM4I64VNVPROC5175,374377
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint6PFNGLPROGRAMUNIFORM1UI64NVPROC5176,374508
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint6PFNGLPROGRAMUNIFORM2UI64NVPROC5177,374614
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint6PFNGLPROGRAMUNIFORM3UI64NVPROC5178,374735
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint6PFNGLPROGRAMUNIFORM4UI64NVPROC5179,374871
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsizePFNGLPROGRAMUNIFORM1UI64VNVPROC5180,375022
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsizePFNGLPROGRAMUNIFORM2UI64VNVPROC5181,375155
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsizePFNGLPROGRAMUNIFORM3UI64VNVPROC5182,375288
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsizePFNGLPROGRAMUNIFORM4UI64VNVPROC5183,375421
#define GL_NV_internalformat_sample_query GL_NV_internalformat_sample_query5222,379149
#define GL_MULTISAMPLES_NV GL_MULTISAMPLES_NV5223,379194
#define GL_SUPERSAMPLE_SCALE_X_NV GL_SUPERSAMPLE_SCALE_X_NV5224,379244
#define GL_SUPERSAMPLE_SCALE_Y_NV GL_SUPERSAMPLE_SCALE_Y_NV5225,379294
#define GL_CONFORMANT_NV GL_CONFORMANT_NV5226,379344
typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalforPFNGLGETINTERNALFORMATSAMPLEIVNVPROC5227,379394
#define GL_NV_memory_attachment GL_NV_memory_attachment5234,379829
#define GL_ATTACHED_MEMORY_OBJECT_NV GL_ATTACHED_MEMORY_OBJECT_NV5235,379864
#define GL_ATTACHED_MEMORY_OFFSET_NV GL_ATTACHED_MEMORY_OFFSET_NV5236,379914
#define GL_MEMORY_ATTACHABLE_ALIGNMENT_NV GL_MEMORY_ATTACHABLE_ALIGNMENT_NV5237,379964
#define GL_MEMORY_ATTACHABLE_SIZE_NV GL_MEMORY_ATTACHABLE_SIZE_NV5238,380014
#define GL_MEMORY_ATTACHABLE_NV GL_MEMORY_ATTACHABLE_NV5239,380064
#define GL_DETACHED_MEMORY_INCARNATION_NV GL_DETACHED_MEMORY_INCARNATION_NV5240,380114
#define GL_DETACHED_TEXTURES_NV GL_DETACHED_TEXTURES_NV5241,380164
#define GL_DETACHED_BUFFERS_NV GL_DETACHED_BUFFERS_NV5242,380214
#define GL_MAX_DETACHED_TEXTURES_NV GL_MAX_DETACHED_TEXTURES_NV5243,380264
#define GL_MAX_DETACHED_BUFFERS_NV GL_MAX_DETACHED_BUFFERS_NV5244,380314
typedef void (APIENTRYP PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC) (GLuint memory, GLenum pPFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC5245,380364
typedef void (APIENTRYP PFNGLRESETMEMORYOBJECTPARAMETERNVPROC) (GLuint memory, GLenum pname);PFNGLRESETMEMORYOBJECTPARAMETERNVPROC5246,380512
typedef void (APIENTRYP PFNGLTEXATTACHMEMORYNVPROC) (GLenum target, GLuint memory, GLuint64 offsPFNGLTEXATTACHMEMORYNVPROC5247,380607
typedef void (APIENTRYP PFNGLBUFFERATTACHMEMORYNVPROC) (GLenum target, GLuint memory, GLuint64 oPFNGLBUFFERATTACHMEMORYNVPROC5248,380709
typedef void (APIENTRYP PFNGLTEXTUREATTACHMEMORYNVPROC) (GLuint texture, GLuint memory, GLuint64PFNGLTEXTUREATTACHMEMORYNVPROC5249,380814
typedef void (APIENTRYP PFNGLNAMEDBUFFERATTACHMEMORYNVPROC) (GLuint buffer, GLuint memory, GLuinPFNGLNAMEDBUFFERATTACHMEMORYNVPROC5250,380921
#define GL_NV_memory_object_sparse GL_NV_memory_object_sparse5262,381738
typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTMEMNVPROC) (GLenum target, GLintptr offset, GLsPFNGLBUFFERPAGECOMMITMENTMEMNVPROC5263,381776
typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTMEMNVPROC) (GLenum target, GLint layer, GLint levePFNGLTEXPAGECOMMITMENTMEMNVPROC5264,381941
typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC) (GLuint buffer, GLintptr offsetPFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC5265,382183
typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC) (GLuint texture, GLint layer, GLintPFNGLTEXTUREPAGECOMMITMENTMEMNVPROC5266,382353
#define GL_NV_mesh_shader GL_NV_mesh_shader5276,383482
#define GL_MESH_SHADER_NV GL_MESH_SHADER_NV5277,383511
#define GL_TASK_SHADER_NV GL_TASK_SHADER_NV5278,383561
#define GL_MAX_MESH_UNIFORM_BLOCKS_NV GL_MAX_MESH_UNIFORM_BLOCKS_NV5279,383611
#define GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV5280,383661
#define GL_MAX_MESH_IMAGE_UNIFORMS_NV GL_MAX_MESH_IMAGE_UNIFORMS_NV5281,383712
#define GL_MAX_MESH_UNIFORM_COMPONENTS_NV GL_MAX_MESH_UNIFORM_COMPONENTS_NV5282,383762
#define GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV5283,383812
#define GL_MAX_MESH_ATOMIC_COUNTERS_NV GL_MAX_MESH_ATOMIC_COUNTERS_NV5284,383866
#define GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV5285,383916
#define GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV5286,383969
#define GL_MAX_TASK_UNIFORM_BLOCKS_NV GL_MAX_TASK_UNIFORM_BLOCKS_NV5287,384028
#define GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV5288,384078
#define GL_MAX_TASK_IMAGE_UNIFORMS_NV GL_MAX_TASK_IMAGE_UNIFORMS_NV5289,384129
#define GL_MAX_TASK_UNIFORM_COMPONENTS_NV GL_MAX_TASK_UNIFORM_COMPONENTS_NV5290,384179
#define GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV5291,384229
#define GL_MAX_TASK_ATOMIC_COUNTERS_NV GL_MAX_TASK_ATOMIC_COUNTERS_NV5292,384283
#define GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV5293,384333
#define GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV5294,384386
#define GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV5295,384445
#define GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV5296,384499
#define GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV5297,384553
#define GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV5298,384603
#define GL_MAX_MESH_OUTPUT_VERTICES_NV GL_MAX_MESH_OUTPUT_VERTICES_NV5299,384653
#define GL_MAX_MESH_OUTPUT_PRIMITIVES_NV GL_MAX_MESH_OUTPUT_PRIMITIVES_NV5300,384703
#define GL_MAX_TASK_OUTPUT_COUNT_NV GL_MAX_TASK_OUTPUT_COUNT_NV5301,384753
#define GL_MAX_DRAW_MESH_TASKS_COUNT_NV GL_MAX_DRAW_MESH_TASKS_COUNT_NV5302,384803
#define GL_MAX_MESH_VIEWS_NV GL_MAX_MESH_VIEWS_NV5303,384853
#define GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV5304,384903
#define GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV5305,384960
#define GL_MAX_MESH_WORK_GROUP_SIZE_NV GL_MAX_MESH_WORK_GROUP_SIZE_NV5306,385020
#define GL_MAX_TASK_WORK_GROUP_SIZE_NV GL_MAX_TASK_WORK_GROUP_SIZE_NV5307,385070
#define GL_MESH_WORK_GROUP_SIZE_NV GL_MESH_WORK_GROUP_SIZE_NV5308,385120
#define GL_TASK_WORK_GROUP_SIZE_NV GL_TASK_WORK_GROUP_SIZE_NV5309,385170
#define GL_MESH_VERTICES_OUT_NV GL_MESH_VERTICES_OUT_NV5310,385220
#define GL_MESH_PRIMITIVES_OUT_NV GL_MESH_PRIMITIVES_OUT_NV5311,385270
#define GL_MESH_OUTPUT_TYPE_NV GL_MESH_OUTPUT_TYPE_NV5312,385320
#define GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV5313,385370
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV5314,385432
#define GL_REFERENCED_BY_MESH_SHADER_NV GL_REFERENCED_BY_MESH_SHADER_NV5315,385494
#define GL_REFERENCED_BY_TASK_SHADER_NV GL_REFERENCED_BY_TASK_SHADER_NV5316,385544
#define GL_MESH_SHADER_BIT_NV GL_MESH_SHADER_BIT_NV5317,385594
#define GL_TASK_SHADER_BIT_NV GL_TASK_SHADER_BIT_NV5318,385648
#define GL_MESH_SUBROUTINE_NV GL_MESH_SUBROUTINE_NV5319,385702
#define GL_TASK_SUBROUTINE_NV GL_TASK_SUBROUTINE_NV5320,385752
#define GL_MESH_SUBROUTINE_UNIFORM_NV GL_MESH_SUBROUTINE_UNIFORM_NV5321,385802
#define GL_TASK_SUBROUTINE_UNIFORM_NV GL_TASK_SUBROUTINE_UNIFORM_NV5322,385852
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV5323,385902
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV5324,385972
typedef void (APIENTRYP PFNGLDRAWMESHTASKSNVPROC) (GLuint first, GLuint count);PFNGLDRAWMESHTASKSNVPROC5325,386042
typedef void (APIENTRYP PFNGLDRAWMESHTASKSINDIRECTNVPROC) (GLintptr indirect);PFNGLDRAWMESHTASKSINDIRECTNVPROC5326,386123
typedef void (APIENTRYP PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC) (GLintptr indirect, GLsizei drawcPFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC5327,386203
typedef void (APIENTRYP PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC) (GLintptr indirect, GLintptrPFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC5328,386323
#define GL_NV_path_rendering GL_NV_path_rendering5338,386952
#define GL_PATH_FORMAT_SVG_NV GL_PATH_FORMAT_SVG_NV5339,386984
#define GL_PATH_FORMAT_PS_NV GL_PATH_FORMAT_PS_NV5340,387034
#define GL_STANDARD_FONT_NAME_NV GL_STANDARD_FONT_NAME_NV5341,387084
#define GL_SYSTEM_FONT_NAME_NV GL_SYSTEM_FONT_NAME_NV5342,387134
#define GL_FILE_NAME_NV GL_FILE_NAME_NV5343,387184
#define GL_PATH_STROKE_WIDTH_NV GL_PATH_STROKE_WIDTH_NV5344,387234
#define GL_PATH_END_CAPS_NV GL_PATH_END_CAPS_NV5345,387284
#define GL_PATH_INITIAL_END_CAP_NV GL_PATH_INITIAL_END_CAP_NV5346,387334
#define GL_PATH_TERMINAL_END_CAP_NV GL_PATH_TERMINAL_END_CAP_NV5347,387384
#define GL_PATH_JOIN_STYLE_NV GL_PATH_JOIN_STYLE_NV5348,387434
#define GL_PATH_MITER_LIMIT_NV GL_PATH_MITER_LIMIT_NV5349,387484
#define GL_PATH_DASH_CAPS_NV GL_PATH_DASH_CAPS_NV5350,387534
#define GL_PATH_INITIAL_DASH_CAP_NV GL_PATH_INITIAL_DASH_CAP_NV5351,387584
#define GL_PATH_TERMINAL_DASH_CAP_NV GL_PATH_TERMINAL_DASH_CAP_NV5352,387634
#define GL_PATH_DASH_OFFSET_NV GL_PATH_DASH_OFFSET_NV5353,387684
#define GL_PATH_CLIENT_LENGTH_NV GL_PATH_CLIENT_LENGTH_NV5354,387734
#define GL_PATH_FILL_MODE_NV GL_PATH_FILL_MODE_NV5355,387784
#define GL_PATH_FILL_MASK_NV GL_PATH_FILL_MASK_NV5356,387834
#define GL_PATH_FILL_COVER_MODE_NV GL_PATH_FILL_COVER_MODE_NV5357,387884
#define GL_PATH_STROKE_COVER_MODE_NV GL_PATH_STROKE_COVER_MODE_NV5358,387934
#define GL_PATH_STROKE_MASK_NV GL_PATH_STROKE_MASK_NV5359,387984
#define GL_COUNT_UP_NV GL_COUNT_UP_NV5360,388034
#define GL_COUNT_DOWN_NV GL_COUNT_DOWN_NV5361,388084
#define GL_PATH_OBJECT_BOUNDING_BOX_NV GL_PATH_OBJECT_BOUNDING_BOX_NV5362,388134
#define GL_CONVEX_HULL_NV GL_CONVEX_HULL_NV5363,388184
#define GL_BOUNDING_BOX_NV GL_BOUNDING_BOX_NV5364,388234
#define GL_TRANSLATE_X_NV GL_TRANSLATE_X_NV5365,388284
#define GL_TRANSLATE_Y_NV GL_TRANSLATE_Y_NV5366,388334
#define GL_TRANSLATE_2D_NV GL_TRANSLATE_2D_NV5367,388384
#define GL_TRANSLATE_3D_NV GL_TRANSLATE_3D_NV5368,388434
#define GL_AFFINE_2D_NV GL_AFFINE_2D_NV5369,388484
#define GL_AFFINE_3D_NV GL_AFFINE_3D_NV5370,388534
#define GL_TRANSPOSE_AFFINE_2D_NV GL_TRANSPOSE_AFFINE_2D_NV5371,388584
#define GL_TRANSPOSE_AFFINE_3D_NV GL_TRANSPOSE_AFFINE_3D_NV5372,388634
#define GL_UTF8_NV GL_UTF8_NV5373,388684
#define GL_UTF16_NV GL_UTF16_NV5374,388734
#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV5375,388784
#define GL_PATH_COMMAND_COUNT_NV GL_PATH_COMMAND_COUNT_NV5376,388837
#define GL_PATH_COORD_COUNT_NV GL_PATH_COORD_COUNT_NV5377,388887
#define GL_PATH_DASH_ARRAY_COUNT_NV GL_PATH_DASH_ARRAY_COUNT_NV5378,388937
#define GL_PATH_COMPUTED_LENGTH_NV GL_PATH_COMPUTED_LENGTH_NV5379,388987
#define GL_PATH_FILL_BOUNDING_BOX_NV GL_PATH_FILL_BOUNDING_BOX_NV5380,389037
#define GL_PATH_STROKE_BOUNDING_BOX_NV GL_PATH_STROKE_BOUNDING_BOX_NV5381,389087
#define GL_SQUARE_NV GL_SQUARE_NV5382,389137
#define GL_ROUND_NV GL_ROUND_NV5383,389187
#define GL_TRIANGULAR_NV GL_TRIANGULAR_NV5384,389237
#define GL_BEVEL_NV GL_BEVEL_NV5385,389287
#define GL_MITER_REVERT_NV GL_MITER_REVERT_NV5386,389337
#define GL_MITER_TRUNCATE_NV GL_MITER_TRUNCATE_NV5387,389387
#define GL_SKIP_MISSING_GLYPH_NV GL_SKIP_MISSING_GLYPH_NV5388,389437
#define GL_USE_MISSING_GLYPH_NV GL_USE_MISSING_GLYPH_NV5389,389487
#define GL_PATH_ERROR_POSITION_NV GL_PATH_ERROR_POSITION_NV5390,389537
#define GL_ACCUM_ADJACENT_PAIRS_NV GL_ACCUM_ADJACENT_PAIRS_NV5391,389587
#define GL_ADJACENT_PAIRS_NV GL_ADJACENT_PAIRS_NV5392,389637
#define GL_FIRST_TO_REST_NV GL_FIRST_TO_REST_NV5393,389687
#define GL_PATH_GEN_MODE_NV GL_PATH_GEN_MODE_NV5394,389737
#define GL_PATH_GEN_COEFF_NV GL_PATH_GEN_COEFF_NV5395,389787
#define GL_PATH_GEN_COMPONENTS_NV GL_PATH_GEN_COMPONENTS_NV5396,389837
#define GL_PATH_STENCIL_FUNC_NV GL_PATH_STENCIL_FUNC_NV5397,389887
#define GL_PATH_STENCIL_REF_NV GL_PATH_STENCIL_REF_NV5398,389937
#define GL_PATH_STENCIL_VALUE_MASK_NV GL_PATH_STENCIL_VALUE_MASK_NV5399,389987
#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV5400,390037
#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV5401,390092
#define GL_PATH_COVER_DEPTH_FUNC_NV GL_PATH_COVER_DEPTH_FUNC_NV5402,390146
#define GL_PATH_DASH_OFFSET_RESET_NV GL_PATH_DASH_OFFSET_RESET_NV5403,390196
#define GL_MOVE_TO_RESETS_NV GL_MOVE_TO_RESETS_NV5404,390246
#define GL_MOVE_TO_CONTINUES_NV GL_MOVE_TO_CONTINUES_NV5405,390296
#define GL_CLOSE_PATH_NV GL_CLOSE_PATH_NV5406,390346
#define GL_MOVE_TO_NV GL_MOVE_TO_NV5407,390394
#define GL_RELATIVE_MOVE_TO_NV GL_RELATIVE_MOVE_TO_NV5408,390442
#define GL_LINE_TO_NV GL_LINE_TO_NV5409,390490
#define GL_RELATIVE_LINE_TO_NV GL_RELATIVE_LINE_TO_NV5410,390538
#define GL_HORIZONTAL_LINE_TO_NV GL_HORIZONTAL_LINE_TO_NV5411,390586
#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV GL_RELATIVE_HORIZONTAL_LINE_TO_NV5412,390634
#define GL_VERTICAL_LINE_TO_NV GL_VERTICAL_LINE_TO_NV5413,390682
#define GL_RELATIVE_VERTICAL_LINE_TO_NV GL_RELATIVE_VERTICAL_LINE_TO_NV5414,390730
#define GL_QUADRATIC_CURVE_TO_NV GL_QUADRATIC_CURVE_TO_NV5415,390778
#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV GL_RELATIVE_QUADRATIC_CURVE_TO_NV5416,390826
#define GL_CUBIC_CURVE_TO_NV GL_CUBIC_CURVE_TO_NV5417,390874
#define GL_RELATIVE_CUBIC_CURVE_TO_NV GL_RELATIVE_CUBIC_CURVE_TO_NV5418,390922
#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV GL_SMOOTH_QUADRATIC_CURVE_TO_NV5419,390970
#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV5420,391018
#define GL_SMOOTH_CUBIC_CURVE_TO_NV GL_SMOOTH_CUBIC_CURVE_TO_NV5421,391073
#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV5422,391121
#define GL_SMALL_CCW_ARC_TO_NV GL_SMALL_CCW_ARC_TO_NV5423,391172
#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV GL_RELATIVE_SMALL_CCW_ARC_TO_NV5424,391220
#define GL_SMALL_CW_ARC_TO_NV GL_SMALL_CW_ARC_TO_NV5425,391268
#define GL_RELATIVE_SMALL_CW_ARC_TO_NV GL_RELATIVE_SMALL_CW_ARC_TO_NV5426,391316
#define GL_LARGE_CCW_ARC_TO_NV GL_LARGE_CCW_ARC_TO_NV5427,391364
#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV GL_RELATIVE_LARGE_CCW_ARC_TO_NV5428,391412
#define GL_LARGE_CW_ARC_TO_NV GL_LARGE_CW_ARC_TO_NV5429,391460
#define GL_RELATIVE_LARGE_CW_ARC_TO_NV GL_RELATIVE_LARGE_CW_ARC_TO_NV5430,391508
#define GL_RESTART_PATH_NV GL_RESTART_PATH_NV5431,391556
#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV GL_DUP_FIRST_CUBIC_CURVE_TO_NV5432,391604
#define GL_DUP_LAST_CUBIC_CURVE_TO_NV GL_DUP_LAST_CUBIC_CURVE_TO_NV5433,391652
#define GL_RECT_NV GL_RECT_NV5434,391700
#define GL_CIRCULAR_CCW_ARC_TO_NV GL_CIRCULAR_CCW_ARC_TO_NV5435,391748
#define GL_CIRCULAR_CW_ARC_TO_NV GL_CIRCULAR_CW_ARC_TO_NV5436,391796
#define GL_CIRCULAR_TANGENT_ARC_TO_NV GL_CIRCULAR_TANGENT_ARC_TO_NV5437,391844
#define GL_ARC_TO_NV GL_ARC_TO_NV5438,391892
#define GL_RELATIVE_ARC_TO_NV GL_RELATIVE_ARC_TO_NV5439,391940
#define GL_BOLD_BIT_NV GL_BOLD_BIT_NV5440,391988
#define GL_ITALIC_BIT_NV GL_ITALIC_BIT_NV5441,392036
#define GL_GLYPH_WIDTH_BIT_NV GL_GLYPH_WIDTH_BIT_NV5442,392084
#define GL_GLYPH_HEIGHT_BIT_NV GL_GLYPH_HEIGHT_BIT_NV5443,392132
#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV5444,392180
#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV5445,392231
#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV5446,392282
#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV GL_GLYPH_VERTICAL_BEARING_X_BIT_NV5447,392339
#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV5448,392388
#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV5449,392437
#define GL_GLYPH_HAS_KERNING_BIT_NV GL_GLYPH_HAS_KERNING_BIT_NV5450,392492
#define GL_FONT_X_MIN_BOUNDS_BIT_NV GL_FONT_X_MIN_BOUNDS_BIT_NV5451,392541
#define GL_FONT_Y_MIN_BOUNDS_BIT_NV GL_FONT_Y_MIN_BOUNDS_BIT_NV5452,392595
#define GL_FONT_X_MAX_BOUNDS_BIT_NV GL_FONT_X_MAX_BOUNDS_BIT_NV5453,392649
#define GL_FONT_Y_MAX_BOUNDS_BIT_NV GL_FONT_Y_MAX_BOUNDS_BIT_NV5454,392703
#define GL_FONT_UNITS_PER_EM_BIT_NV GL_FONT_UNITS_PER_EM_BIT_NV5455,392757
#define GL_FONT_ASCENDER_BIT_NV GL_FONT_ASCENDER_BIT_NV5456,392811
#define GL_FONT_DESCENDER_BIT_NV GL_FONT_DESCENDER_BIT_NV5457,392865
#define GL_FONT_HEIGHT_BIT_NV GL_FONT_HEIGHT_BIT_NV5458,392919
#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV5459,392973
#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV5460,393027
#define GL_FONT_UNDERLINE_POSITION_BIT_NV GL_FONT_UNDERLINE_POSITION_BIT_NV5461,393081
#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV GL_FONT_UNDERLINE_THICKNESS_BIT_NV5462,393135
#define GL_FONT_HAS_KERNING_BIT_NV GL_FONT_HAS_KERNING_BIT_NV5463,393190
#define GL_ROUNDED_RECT_NV GL_ROUNDED_RECT_NV5464,393244
#define GL_RELATIVE_ROUNDED_RECT_NV GL_RELATIVE_ROUNDED_RECT_NV5465,393292
#define GL_ROUNDED_RECT2_NV GL_ROUNDED_RECT2_NV5466,393340
#define GL_RELATIVE_ROUNDED_RECT2_NV GL_RELATIVE_ROUNDED_RECT2_NV5467,393388
#define GL_ROUNDED_RECT4_NV GL_ROUNDED_RECT4_NV5468,393436
#define GL_RELATIVE_ROUNDED_RECT4_NV GL_RELATIVE_ROUNDED_RECT4_NV5469,393484
#define GL_ROUNDED_RECT8_NV GL_ROUNDED_RECT8_NV5470,393532
#define GL_RELATIVE_ROUNDED_RECT8_NV GL_RELATIVE_ROUNDED_RECT8_NV5471,393580
#define GL_RELATIVE_RECT_NV GL_RELATIVE_RECT_NV5472,393628
#define GL_FONT_GLYPHS_AVAILABLE_NV GL_FONT_GLYPHS_AVAILABLE_NV5473,393676
#define GL_FONT_TARGET_UNAVAILABLE_NV GL_FONT_TARGET_UNAVAILABLE_NV5474,393726
#define GL_FONT_UNAVAILABLE_NV GL_FONT_UNAVAILABLE_NV5475,393776
#define GL_FONT_UNINTELLIGIBLE_NV GL_FONT_UNINTELLIGIBLE_NV5476,393826
#define GL_CONIC_CURVE_TO_NV GL_CONIC_CURVE_TO_NV5477,393876
#define GL_RELATIVE_CONIC_CURVE_TO_NV GL_RELATIVE_CONIC_CURVE_TO_NV5478,393924
#define GL_FONT_NUM_GLYPH_INDICES_BIT_NV GL_FONT_NUM_GLYPH_INDICES_BIT_NV5479,393972
#define GL_STANDARD_FONT_FORMAT_NV GL_STANDARD_FONT_FORMAT_NV5480,394026
#define GL_PATH_PROJECTION_NV GL_PATH_PROJECTION_NV5481,394076
#define GL_PATH_MODELVIEW_NV GL_PATH_MODELVIEW_NV5482,394126
#define GL_PATH_MODELVIEW_STACK_DEPTH_NV GL_PATH_MODELVIEW_STACK_DEPTH_NV5483,394176
#define GL_PATH_MODELVIEW_MATRIX_NV GL_PATH_MODELVIEW_MATRIX_NV5484,394226
#define GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV5485,394276
#define GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV5486,394329
#define GL_PATH_PROJECTION_STACK_DEPTH_NV GL_PATH_PROJECTION_STACK_DEPTH_NV5487,394383
#define GL_PATH_PROJECTION_MATRIX_NV GL_PATH_PROJECTION_MATRIX_NV5488,394433
#define GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV5489,394483
#define GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV5490,394537
#define GL_FRAGMENT_INPUT_NV GL_FRAGMENT_INPUT_NV5491,394592
typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);PFNGLGENPATHSNVPROC5492,394642
typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);PFNGLDELETEPATHSNVPROC5493,394707
typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);PFNGLISPATHNVPROC5494,394786
typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubytPFNGLPATHCOMMANDSNVPROC5495,394850
typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordTypePFNGLPATHCOORDSNVPROC5496,395018
typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei PFNGLPATHSUBCOMMANDSNVPROC5497,395138
typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numCPFNGLPATHSUBCOORDSNVPROC5498,395357
typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, consPFNGLPATHSTRINGNVPROC5499,395500
typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const vPFNGLPATHGLYPHSNVPROC5500,395618
typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, conPFNGLPATHGLYPHRANGENVPROC5501,395883
typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLuiPFNGLWEIGHTPATHSNVPROC5502,396135
typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);PFNGLCOPYPATHNVPROC5503,396268
typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint paPFNGLINTERPOLATEPATHSNVPROC5504,396351
typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum traPFNGLTRANSFORMPATHNVPROC5505,396470
typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *valPFNGLPATHPARAMETERIVNVPROC5506,396612
typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);PFNGLPATHPARAMETERINVPROC5507,396714
typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *vPFNGLPATHPARAMETERFVNVPROC5508,396808
typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);PFNGLPATHPARAMETERFNVPROC5509,396912
typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloatPFNGLPATHDASHARRAYNVPROC5510,397008
typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);PFNGLPATHSTENCILFUNCNVPROC5511,397119
typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);PFNGLPATHSTENCILDEPTHOFFSETNVPROC5512,397211
typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);PFNGLSTENCILFILLPATHNVPROC5513,397304
typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint maskPFNGLSTENCILSTROKEPATHNVPROC5514,397402
typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameTPFNGLSTENCILFILLPATHINSTANCEDNVPROC5515,397502
typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNamPFNGLSTENCILSTROKEPATHINSTANCEDNVPROC5516,397725
typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);PFNGLPATHCOVERDEPTHFUNCNVPROC5517,397950
typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);PFNGLCOVERFILLPATHNVPROC5518,398021
typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);PFNGLCOVERSTROKEPATHNVPROC5519,398105
typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameTypPFNGLCOVERFILLPATHINSTANCEDNVPROC5520,398191
typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameTPFNGLCOVERSTROKEPATHINSTANCEDNVPROC5521,398400
typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value)PFNGLGETPATHPARAMETERIVNVPROC5522,398611
typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *valuPFNGLGETPATHPARAMETERFVNVPROC5523,398710
typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);PFNGLGETPATHCOMMANDSNVPROC5524,398811
typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);PFNGLGETPATHCOORDSNVPROC5525,398898
typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);PFNGLGETPATHDASHARRAYNVPROC5526,398981
typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPathsPFNGLGETPATHMETRICSNVPROC5527,399070
typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint firstPFNGLGETPATHMETRICRANGENVPROC5528,399261
typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenuPFNGLGETPATHSPACINGNVPROC5529,399421
typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x,PFNGLISPOINTINFILLPATHNVPROC5530,399663
typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y)PFNGLISPOINTINSTROKEPATHNVPROC5531,399773
typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizeiPFNGLGETPATHLENGTHNVPROC5532,399872
typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsiPFNGLPOINTALONGPATHNVPROC5533,399984
typedef void (APIENTRYP PFNGLMATRIXLOAD3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);PFNGLMATRIXLOAD3X2FNVPROC5534,400179
typedef void (APIENTRYP PFNGLMATRIXLOAD3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);PFNGLMATRIXLOAD3X3FNVPROC5535,400270
typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *mPFNGLMATRIXLOADTRANSPOSE3X3FNVPROC5536,400361
typedef void (APIENTRYP PFNGLMATRIXMULT3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);PFNGLMATRIXMULT3X2FNVPROC5537,400461
typedef void (APIENTRYP PFNGLMATRIXMULT3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);PFNGLMATRIXMULT3X3FNVPROC5538,400552
typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *mPFNGLMATRIXMULTTRANSPOSE3X3FNVPROC5539,400643
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuiPFNGLSTENCILTHENCOVERFILLPATHNVPROC5540,400743
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GLPFNGLSTENCILTHENCOVERSTROKEPATHNVPROC5541,400868
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC5542,400995
typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenuPFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC5543,401245
typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontNaPFNGLPATHGLYPHINDEXRANGENVPROC5544,401497
typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTargPFNGLPATHGLYPHINDEXARRAYNVPROC5545,401692
typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum foPFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC5546,401928
typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location,PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC5547,402188
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterfacPFNGLGETPROGRAMRESOURCEFVNVPROC5548,402344
#define GL_NV_path_rendering_shared_edge GL_NV_path_rendering_shared_edge5611,409885
#define GL_SHARED_EDGE_NV GL_SHARED_EDGE_NV5612,409929
#define GL_NV_primitive_shading_rate GL_NV_primitive_shading_rate5616,410064
#define GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV5617,410104
#define GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV5618,410159
#define GL_NV_representative_fragment_test GL_NV_representative_fragment_test5622,410303
#define GL_REPRESENTATIVE_FRAGMENT_TEST_NV GL_REPRESENTATIVE_FRAGMENT_TEST_NV5623,410349
#define GL_NV_sample_locations GL_NV_sample_locations5627,410483
#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV5628,410517
#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV5629,410569
#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV5630,410624
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV5631,410680
#define GL_SAMPLE_LOCATION_NV GL_SAMPLE_LOCATION_NV5632,410742
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_NV GL_PROGRAMMABLE_SAMPLE_LOCATION_NV5633,410792
#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV5634,410843
#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV5635,410907
typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLenum target, GLuint start, GPFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC5636,410968
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint framebuffer, GLuinPFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC5637,411098
typedef void (APIENTRYP PFNGLRESOLVEDEPTHVALUESNVPROC) (void);PFNGLRESOLVEDEPTHVALUESNVPROC5638,411238
#define GL_NV_sample_mask_override_coverage GL_NV_sample_mask_override_coverage5647,411720
#define GL_NV_scissor_exclusive GL_NV_scissor_exclusive5651,411852
#define GL_SCISSOR_TEST_EXCLUSIVE_NV GL_SCISSOR_TEST_EXCLUSIVE_NV5652,411887
#define GL_SCISSOR_BOX_EXCLUSIVE_NV GL_SCISSOR_BOX_EXCLUSIVE_NV5653,411937
typedef void (APIENTRYP PFNGLSCISSOREXCLUSIVENVPROC) (GLint x, GLint y, GLsizei width, GLsizei hPFNGLSCISSOREXCLUSIVENVPROC5654,411987
typedef void (APIENTRYP PFNGLSCISSOREXCLUSIVEARRAYVNVPROC) (GLuint first, GLsizei count, const GPFNGLSCISSOREXCLUSIVEARRAYVNVPROC5655,412092
#define GL_NV_shader_atomic_counters GL_NV_shader_atomic_counters5663,412501
#define GL_NV_shader_atomic_float GL_NV_shader_atomic_float5667,412621
#define GL_NV_shader_atomic_float64 GL_NV_shader_atomic_float645671,412737
#define GL_NV_shader_atomic_fp16_vector GL_NV_shader_atomic_fp16_vector5675,412861
#define GL_NV_shader_atomic_int64 GL_NV_shader_atomic_int645679,412987
#define GL_NV_shader_buffer_load GL_NV_shader_buffer_load5683,413100
#define GL_BUFFER_GPU_ADDRESS_NV GL_BUFFER_GPU_ADDRESS_NV5684,413136
#define GL_GPU_ADDRESS_NV GL_GPU_ADDRESS_NV5685,413186
#define GL_MAX_SHADER_BUFFER_ADDRESS_NV GL_MAX_SHADER_BUFFER_ADDRESS_NV5686,413236
typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);PFNGLMAKEBUFFERRESIDENTNVPROC5687,413286
typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);PFNGLMAKEBUFFERNONRESIDENTNVPROC5688,413374
typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);PFNGLISBUFFERRESIDENTNVPROC5689,413450
typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);PFNGLMAKENAMEDBUFFERRESIDENTNVPROC5690,413526
typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC5691,413619
typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);PFNGLISNAMEDBUFFERRESIDENTNVPROC5692,413700
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuintPFNGLGETBUFFERPARAMETERUI64VNVPROC5693,413781
typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GPFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC5694,413894
typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);PFNGLGETINTEGERUI64VNVPROC5695,414012
typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);PFNGLUNIFORMUI64NVPROC5696,414102
typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EPFNGLUNIFORMUI64VNVPROC5697,414188
typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXTPFNGLGETUNIFORMUI64VNVPROC5698,414297
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64PFNGLPROGRAMUNIFORMUI64NVPROC5699,414405
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizeiPFNGLPROGRAMUNIFORMUI64VNVPROC5700,414514
#define GL_NV_shader_buffer_store GL_NV_shader_buffer_store5720,415950
#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV5721,415987
#define GL_NV_shader_subgroup_partitioned GL_NV_shader_subgroup_partitioned5725,416131
#define GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV5726,416176
#define GL_NV_shader_texture_footprint GL_NV_shader_texture_footprint5730,416325
#define GL_NV_shader_thread_group GL_NV_shader_thread_group5734,416449
#define GL_WARP_SIZE_NV GL_WARP_SIZE_NV5735,416486
#define GL_WARPS_PER_SM_NV GL_WARPS_PER_SM_NV5736,416536
#define GL_SM_COUNT_NV GL_SM_COUNT_NV5737,416586
#define GL_NV_shader_thread_shuffle GL_NV_shader_thread_shuffle5741,416715
#define GL_NV_shading_rate_image GL_NV_shading_rate_image5745,416832
#define GL_SHADING_RATE_IMAGE_NV GL_SHADING_RATE_IMAGE_NV5746,416868
#define GL_SHADING_RATE_NO_INVOCATIONS_NV GL_SHADING_RATE_NO_INVOCATIONS_NV5747,416918
#define GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV5748,416968
#define GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV5749,417026
#define GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV5750,417089
#define GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV5751,417152
#define GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV5752,417215
#define GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV5753,417278
#define GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV5754,417341
#define GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV5755,417404
#define GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV5756,417463
#define GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV5757,417522
#define GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV5758,417581
#define GL_SHADING_RATE_IMAGE_BINDING_NV GL_SHADING_RATE_IMAGE_BINDING_NV5759,417641
#define GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV5760,417691
#define GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV5761,417744
#define GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV5762,417798
#define GL_MAX_COARSE_FRAGMENT_SAMPLES_NV GL_MAX_COARSE_FRAGMENT_SAMPLES_NV5763,417852
#define GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV5764,417902
#define GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV5765,417958
#define GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV5766,418018
typedef void (APIENTRYP PFNGLBINDSHADINGRATEIMAGENVPROC) (GLuint texture);PFNGLBINDSHADINGRATEIMAGENVPROC5767,418079
typedef void (APIENTRYP PFNGLGETSHADINGRATEIMAGEPALETTENVPROC) (GLuint viewport, GLuint entry, GPFNGLGETSHADINGRATEIMAGEPALETTENVPROC5768,418155
typedef void (APIENTRYP PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC) (GLenum rate, GLuint samples,PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC5769,418266
typedef void (APIENTRYP PFNGLSHADINGRATEIMAGEBARRIERNVPROC) (GLboolean synchronize);PFNGLSHADINGRATEIMAGEBARRIERNVPROC5770,418396
typedef void (APIENTRYP PFNGLSHADINGRATEIMAGEPALETTENVPROC) (GLuint viewport, GLuint first, GLsiPFNGLSHADINGRATEIMAGEPALETTENVPROC5771,418482
typedef void (APIENTRYP PFNGLSHADINGRATESAMPLEORDERNVPROC) (GLenum order);PFNGLSHADINGRATESAMPLEORDERNVPROC5772,418612
typedef void (APIENTRYP PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC) (GLenum rate, GLuint samples, cPFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC5773,418688
#define GL_NV_stereo_view_rendering GL_NV_stereo_view_rendering5786,419569
#define GL_NV_texture_barrier GL_NV_texture_barrier5790,419683
typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);PFNGLTEXTUREBARRIERNVPROC5791,419716
#define GL_NV_texture_rectangle_compressed GL_NV_texture_rectangle_compressed5798,419942
#define GL_NV_uniform_buffer_unified_memory GL_NV_uniform_buffer_unified_memory5802,420084
#define GL_UNIFORM_BUFFER_UNIFIED_NV GL_UNIFORM_BUFFER_UNIFIED_NV5803,420131
#define GL_UNIFORM_BUFFER_ADDRESS_NV GL_UNIFORM_BUFFER_ADDRESS_NV5804,420181
#define GL_UNIFORM_BUFFER_LENGTH_NV GL_UNIFORM_BUFFER_LENGTH_NV5805,420231
#define GL_NV_vertex_attrib_integer_64bit GL_NV_vertex_attrib_integer_64bit5809,420376
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);PFNGLVERTEXATTRIBL1I64NVPROC5810,420421
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y)PFNGLVERTEXATTRIBL2I64NVPROC5811,420506
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,PFNGLVERTEXATTRIBL3I64NVPROC5812,420605
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y,PFNGLVERTEXATTRIBL4I64NVPROC5813,420718
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);PFNGLVERTEXATTRIBL1I64VNVPROC5814,420845
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);PFNGLVERTEXATTRIBL2I64VNVPROC5815,420938
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);PFNGLVERTEXATTRIBL3I64VNVPROC5816,421031
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);PFNGLVERTEXATTRIBL4I64VNVPROC5817,421124
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);PFNGLVERTEXATTRIBL1UI64NVPROC5818,421217
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXTPFNGLVERTEXATTRIBL2UI64NVPROC5819,421304
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXTPFNGLVERTEXATTRIBL3UI64NVPROC5820,421406
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXTPFNGLVERTEXATTRIBL4UI64NVPROC5821,421523
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);PFNGLVERTEXATTRIBL1UI64VNVPROC5822,421655
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);PFNGLVERTEXATTRIBL2UI64VNVPROC5823,421750
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);PFNGLVERTEXATTRIBL3UI64VNVPROC5824,421845
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);PFNGLVERTEXATTRIBL4UI64VNVPROC5825,421940
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXTPFNGLGETVERTEXATTRIBLI64VNVPROC5826,422035
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64EPFNGLGETVERTEXATTRIBLUI64VNVPROC5827,422143
typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, PFNGLVERTEXATTRIBLFORMATNVPROC5828,422253
#define GL_NV_vertex_buffer_unified_memory GL_NV_vertex_buffer_unified_memory5853,424215
#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV5854,424261
#define GL_ELEMENT_ARRAY_UNIFIED_NV GL_ELEMENT_ARRAY_UNIFIED_NV5855,424311
#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV5856,424361
#define GL_VERTEX_ARRAY_ADDRESS_NV GL_VERTEX_ARRAY_ADDRESS_NV5857,424411
#define GL_NORMAL_ARRAY_ADDRESS_NV GL_NORMAL_ARRAY_ADDRESS_NV5858,424461
#define GL_COLOR_ARRAY_ADDRESS_NV GL_COLOR_ARRAY_ADDRESS_NV5859,424511
#define GL_INDEX_ARRAY_ADDRESS_NV GL_INDEX_ARRAY_ADDRESS_NV5860,424561
#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV GL_TEXTURE_COORD_ARRAY_ADDRESS_NV5861,424611
#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV GL_EDGE_FLAG_ARRAY_ADDRESS_NV5862,424661
#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV5863,424711
#define GL_FOG_COORD_ARRAY_ADDRESS_NV GL_FOG_COORD_ARRAY_ADDRESS_NV5864,424763
#define GL_ELEMENT_ARRAY_ADDRESS_NV GL_ELEMENT_ARRAY_ADDRESS_NV5865,424813
#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV5866,424863
#define GL_VERTEX_ARRAY_LENGTH_NV GL_VERTEX_ARRAY_LENGTH_NV5867,424913
#define GL_NORMAL_ARRAY_LENGTH_NV GL_NORMAL_ARRAY_LENGTH_NV5868,424963
#define GL_COLOR_ARRAY_LENGTH_NV GL_COLOR_ARRAY_LENGTH_NV5869,425013
#define GL_INDEX_ARRAY_LENGTH_NV GL_INDEX_ARRAY_LENGTH_NV5870,425063
#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV GL_TEXTURE_COORD_ARRAY_LENGTH_NV5871,425113
#define GL_EDGE_FLAG_ARRAY_LENGTH_NV GL_EDGE_FLAG_ARRAY_LENGTH_NV5872,425163
#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV GL_SECONDARY_COLOR_ARRAY_LENGTH_NV5873,425213
#define GL_FOG_COORD_ARRAY_LENGTH_NV GL_FOG_COORD_ARRAY_LENGTH_NV5874,425264
#define GL_ELEMENT_ARRAY_LENGTH_NV GL_ELEMENT_ARRAY_LENGTH_NV5875,425314
#define GL_DRAW_INDIRECT_UNIFIED_NV GL_DRAW_INDIRECT_UNIFIED_NV5876,425364
#define GL_DRAW_INDIRECT_ADDRESS_NV GL_DRAW_INDIRECT_ADDRESS_NV5877,425414
#define GL_DRAW_INDIRECT_LENGTH_NV GL_DRAW_INDIRECT_LENGTH_NV5878,425464
typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT PFNGLBUFFERADDRESSRANGENVPROC5879,425514
typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);PFNGLVERTEXFORMATNVPROC5880,425640
typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);PFNGLNORMALFORMATNVPROC5881,425733
typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);PFNGLCOLORFORMATNVPROC5882,425814
typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);PFNGLINDEXFORMATNVPROC5883,425906
typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);PFNGLTEXCOORDFORMATNVPROC5884,425986
typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);PFNGLEDGEFLAGFORMATNVPROC5885,426081
typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stridPFNGLSECONDARYCOLORFORMATNVPROC5886,426151
typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);PFNGLFOGCOORDFORMATNVPROC5887,426252
typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GPFNGLVERTEXATTRIBFORMATNVPROC5888,426335
typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, PFNGLVERTEXATTRIBIFORMATNVPROC5889,426470
typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *PFNGLGETINTEGERUI64I_VNVPROC5890,426584
#define GL_NV_viewport_array2 GL_NV_viewport_array25908,427840
#define GL_NV_viewport_swizzle GL_NV_viewport_swizzle5912,427943
#define GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV5913,427977
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV5914,428027
#define GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV5915,428077
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV5916,428127
#define GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV5917,428177
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV5918,428227
#define GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV5919,428277
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV5920,428327
#define GL_VIEWPORT_SWIZZLE_X_NV GL_VIEWPORT_SWIZZLE_X_NV5921,428377
#define GL_VIEWPORT_SWIZZLE_Y_NV GL_VIEWPORT_SWIZZLE_Y_NV5922,428427
#define GL_VIEWPORT_SWIZZLE_Z_NV GL_VIEWPORT_SWIZZLE_Z_NV5923,428477
#define GL_VIEWPORT_SWIZZLE_W_NV GL_VIEWPORT_SWIZZLE_W_NV5924,428527
typedef void (APIENTRYP PFNGLVIEWPORTSWIZZLENVPROC) (GLuint index, GLenum swizzlex, GLenum swizzPFNGLVIEWPORTSWIZZLENVPROC5925,428577
#define GL_OVR_multiview GL_OVR_multiview5932,428940
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR5933,428968
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR5934,429032
#define GL_MAX_VIEWS_OVR GL_MAX_VIEWS_OVR5935,429102
#define GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR5936,429152
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) (GLenum target, GLenum attachmePFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC5937,429211
#define GL_OVR_multiview2 GL_OVR_multiview25944,429635

../gejo/libs/imgui/.editorconfig,0

../gejo/libs/imgui/.github/FUNDING.yml,0

../gejo/libs/imgui/.github/issue_template.md,0

../gejo/libs/imgui/.github/pull_request_template.md,0

../gejo/libs/imgui/.github/workflows/build.yml,0

../gejo/libs/imgui/.github/workflows/scheduled.yml,0

../gejo/libs/imgui/.github/workflows/static-analysis.yml,0

../gejo/libs/imgui/backends/imgui_impl_allegro5.cpp,1728
#define ALLEGRO_HAS_CLIPBOARD ALLEGRO_HAS_CLIPBOARD48,3225
static ALLEGRO_DISPLAY*         g_Display = NULL;g_Display56,3504
static ALLEGRO_BITMAP*          g_Texture = NULL;g_Texture57,3555
static double                   g_Time = 0.0;g_Time58,3606
static ALLEGRO_MOUSE_CURSOR*    g_MouseCursorInvisible = NULL;g_MouseCursorInvisible59,3653
static ALLEGRO_VERTEX_DECL*     g_VertexDecl = NULL;g_VertexDecl60,3717
static char*                    g_ClipboardTextData = NULL;g_ClipboardTextData61,3771
struct ImDrawVertAllegroImDrawVertAllegro63,3834
    ImVec2 pos;pos65,3863
    ImVec2 uv;uv66,3880
    ALLEGRO_COLOR col;col67,3896
static void ImGui_ImplAllegro5_SetupRenderState(ImDrawData* draw_data)ImGui_ImplAllegro5_SetupRenderState70,3926
void ImGui_ImplAllegro5_RenderDrawData(ImDrawData* draw_data)ImGui_ImplAllegro5_RenderDrawData91,4854
bool ImGui_ImplAllegro5_CreateDeviceObjects()ImGui_ImplAllegro5_CreateDeviceObjects176,9027
void ImGui_ImplAllegro5_InvalidateDeviceObjects()ImGui_ImplAllegro5_InvalidateDeviceObjects223,10612
static const char* ImGui_ImplAllegro5_GetClipboardText(void*)ImGui_ImplAllegro5_GetClipboardText240,11017
static void ImGui_ImplAllegro5_SetClipboardText(void*, const char* text)ImGui_ImplAllegro5_SetClipboardText248,11251
bool ImGui_ImplAllegro5_Init(ALLEGRO_DISPLAY* display)ImGui_ImplAllegro5_Init254,11386
void ImGui_ImplAllegro5_Shutdown()ImGui_ImplAllegro5_Shutdown308,13868
bool ImGui_ImplAllegro5_ProcessEvent(ALLEGRO_EVENT* ev)ImGui_ImplAllegro5_ProcessEvent328,14654
static void ImGui_ImplAllegro5_UpdateMouseCursor()ImGui_ImplAllegro5_UpdateMouseCursor375,16407
void ImGui_ImplAllegro5_NewFrame()ImGui_ImplAllegro5_NewFrame404,17810

../gejo/libs/imgui/backends/imgui_impl_allegro5.h,0

../gejo/libs/imgui/backends/imgui_impl_android.cpp,703
static double                                   g_Time = 0.0;g_Time33,1508
static ANativeWindow*                           g_Window;g_Window34,1571
static char                                     g_LogTag[] = "ImGuiExample";g_LogTag35,1630
static std::map<int32_t, std::queue<int32_t>>   g_KeyEventQueues; // FIXME: Remove dependency ong_KeyEventQueues36,1708
int32_t ImGui_ImplAndroid_HandleInputEvent(AInputEvent* input_event)ImGui_ImplAndroid_HandleInputEvent38,1856
bool ImGui_ImplAndroid_Init(ANativeWindow* window)ImGui_ImplAndroid_Init116,5720
void ImGui_ImplAndroid_Shutdown()ImGui_ImplAndroid_Shutdown152,7351
void ImGui_ImplAndroid_NewFrame()ImGui_ImplAndroid_NewFrame156,7394

../gejo/libs/imgui/backends/imgui_impl_android.h,0

../gejo/libs/imgui/backends/imgui_impl_dx10.cpp,4162
static ID3D10Device*            g_pd3dDevice = NULL;g_pd3dDevice42,2734
static IDXGIFactory*            g_pFactory = NULL;g_pFactory43,2788
static ID3D10Buffer*            g_pVB = NULL;g_pVB44,2840
static ID3D10Buffer*            g_pIB = NULL;g_pIB45,2887
static ID3D10VertexShader*      g_pVertexShader = NULL;g_pVertexShader46,2934
static ID3D10InputLayout*       g_pInputLayout = NULL;g_pInputLayout47,2991
static ID3D10Buffer*            g_pVertexConstantBuffer = NULL;g_pVertexConstantBuffer48,3047
static ID3D10PixelShader*       g_pPixelShader = NULL;g_pPixelShader49,3112
static ID3D10SamplerState*      g_pFontSampler = NULL;g_pFontSampler50,3168
static ID3D10ShaderResourceView*g_pFontTextureView = NULL;g_pFontTextureView51,3224
static ID3D10RasterizerState*   g_pRasterizerState = NULL;g_pRasterizerState52,3284
static ID3D10BlendState*        g_pBlendState = NULL;g_pBlendState53,3344
static ID3D10DepthStencilState* g_pDepthStencilState = NULL;g_pDepthStencilState54,3399
static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;g_VertexBufferSize55,3461
static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;g_IndexBufferSize55,3461
struct VERTEX_CONSTANT_BUFFERVERTEX_CONSTANT_BUFFER57,3550
    float   mvp[4][4];mvp59,3584
static void ImGui_ImplDX10_SetupRenderState(ImDrawData* draw_data, ID3D10Device* ctx)ImGui_ImplDX10_SetupRenderState62,3614
void ImGui_ImplDX10_RenderDrawData(ImDrawData* draw_data)ImGui_ImplDX10_RenderDrawData95,4920
    struct BACKUP_DX10_STATEBACKUP_DX10_STATE172,8430
        UINT                        ScissorRectsCount, ViewportsCount;ScissorRectsCount174,8467
        UINT                        ScissorRectsCount, ViewportsCount;ViewportsCount174,8467
        D3D10_RECT                  ScissorRects[D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PERScissorRects175,8539
        D3D10_VIEWPORT              Viewports[D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIViewports176,8648
        ID3D10RasterizerState*      RS;RS177,8754
        ID3D10BlendState*           BlendState;BlendState178,8795
        FLOAT                       BlendFactor[4];BlendFactor179,8844
        UINT                        SampleMask;SampleMask180,8897
        UINT                        StencilRef;StencilRef181,8946
        ID3D10DepthStencilState*    DepthStencilState;DepthStencilState182,8995
        ID3D10ShaderResourceView*   PSShaderResource;PSShaderResource183,9051
        ID3D10SamplerState*         PSSampler;PSSampler184,9106
        ID3D10PixelShader*          PS;PS185,9154
        ID3D10VertexShader*         VS;VS186,9195
        ID3D10GeometryShader*       GS;GS187,9236
        D3D10_PRIMITIVE_TOPOLOGY    PrimitiveTopology;PrimitiveTopology188,9277
        ID3D10Buffer*               IndexBuffer, *VertexBuffer, *VSConstantBuffer;IndexBuffer189,9333
        ID3D10Buffer*               IndexBuffer, *VertexBuffer, *VSConstantBuffer;VertexBuffer189,9333
        ID3D10Buffer*               IndexBuffer, *VertexBuffer, *VSConstantBuffer;VSConstantBuffer189,9333
        UINT                        IndexBufferOffset, VertexBufferStride, VertexBufferOffset;IndexBufferOffset190,9417
        UINT                        IndexBufferOffset, VertexBufferStride, VertexBufferOffset;VertexBufferStride190,9417
        UINT                        IndexBufferOffset, VertexBufferStride, VertexBufferOffset;VertexBufferOffset190,9417
        DXGI_FORMAT                 IndexBufferFormat;IndexBufferFormat191,9513
        ID3D10InputLayout*          InputLayout;InputLayout192,9569
static void ImGui_ImplDX10_CreateFontsTexture()ImGui_ImplDX10_CreateFontsTexture269,14029
bool    ImGui_ImplDX10_CreateDeviceObjects()ImGui_ImplDX10_CreateDeviceObjects329,16186
void    ImGui_ImplDX10_InvalidateDeviceObjects()ImGui_ImplDX10_InvalidateDeviceObjects482,22561
bool    ImGui_ImplDX10_Init(ID3D10Device* device)ImGui_ImplDX10_Init501,23666
void ImGui_ImplDX10_Shutdown()ImGui_ImplDX10_Shutdown527,24611
void ImGui_ImplDX10_NewFrame()ImGui_ImplDX10_NewFrame534,24838

../gejo/libs/imgui/backends/imgui_impl_dx10.h,0

../gejo/libs/imgui/backends/imgui_impl_dx11.cpp,5012
static ID3D11Device*            g_pd3dDevice = NULL;g_pd3dDevice42,2830
static ID3D11DeviceContext*     g_pd3dDeviceContext = NULL;g_pd3dDeviceContext43,2884
static IDXGIFactory*            g_pFactory = NULL;g_pFactory44,2945
static ID3D11Buffer*            g_pVB = NULL;g_pVB45,2997
static ID3D11Buffer*            g_pIB = NULL;g_pIB46,3044
static ID3D11VertexShader*      g_pVertexShader = NULL;g_pVertexShader47,3091
static ID3D11InputLayout*       g_pInputLayout = NULL;g_pInputLayout48,3148
static ID3D11Buffer*            g_pVertexConstantBuffer = NULL;g_pVertexConstantBuffer49,3204
static ID3D11PixelShader*       g_pPixelShader = NULL;g_pPixelShader50,3269
static ID3D11SamplerState*      g_pFontSampler = NULL;g_pFontSampler51,3325
static ID3D11ShaderResourceView*g_pFontTextureView = NULL;g_pFontTextureView52,3381
static ID3D11RasterizerState*   g_pRasterizerState = NULL;g_pRasterizerState53,3441
static ID3D11BlendState*        g_pBlendState = NULL;g_pBlendState54,3501
static ID3D11DepthStencilState* g_pDepthStencilState = NULL;g_pDepthStencilState55,3556
static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;g_VertexBufferSize56,3618
static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;g_IndexBufferSize56,3618
struct VERTEX_CONSTANT_BUFFERVERTEX_CONSTANT_BUFFER58,3707
    float   mvp[4][4];mvp60,3741
static void ImGui_ImplDX11_SetupRenderState(ImDrawData* draw_data, ID3D11DeviceContext* ctx)ImGui_ImplDX11_SetupRenderState63,3771
void ImGui_ImplDX11_RenderDrawData(ImDrawData* draw_data)ImGui_ImplDX11_RenderDrawData99,5459
    struct BACKUP_DX11_STATEBACKUP_DX11_STATE178,9228
        UINT                        ScissorRectsCount, ViewportsCount;ScissorRectsCount180,9265
        UINT                        ScissorRectsCount, ViewportsCount;ViewportsCount180,9265
        D3D11_RECT                  ScissorRects[D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PERScissorRects181,9337
        D3D11_VIEWPORT              Viewports[D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIViewports182,9446
        ID3D11RasterizerState*      RS;RS183,9552
        ID3D11BlendState*           BlendState;BlendState184,9593
        FLOAT                       BlendFactor[4];BlendFactor185,9642
        UINT                        SampleMask;SampleMask186,9695
        UINT                        StencilRef;StencilRef187,9744
        ID3D11DepthStencilState*    DepthStencilState;DepthStencilState188,9793
        ID3D11ShaderResourceView*   PSShaderResource;PSShaderResource189,9849
        ID3D11SamplerState*         PSSampler;PSSampler190,9904
        ID3D11PixelShader*          PS;PS191,9952
        ID3D11VertexShader*         VS;VS192,9993
        ID3D11GeometryShader*       GS;GS193,10034
        UINT                        PSInstancesCount, VSInstancesCount, GSInstancesCount;PSInstancesCount194,10075
        UINT                        PSInstancesCount, VSInstancesCount, GSInstancesCount;VSInstancesCount194,10075
        UINT                        PSInstancesCount, VSInstancesCount, GSInstancesCount;GSInstancesCount194,10075
        ID3D11ClassInstance         *PSInstances[256], *VSInstances[256], *GSInstances[256];   /PSInstances195,10166
        ID3D11ClassInstance         *PSInstances[256], *VSInstances[256], *GSInstances[256];   /VSInstances195,10166
        ID3D11ClassInstance         *PSInstances[256], *VSInstances[256], *GSInstances[256];   /GSInstances195,10166
        D3D11_PRIMITIVE_TOPOLOGY    PrimitiveTopology;PrimitiveTopology196,10315
        ID3D11Buffer*               IndexBuffer, *VertexBuffer, *VSConstantBuffer;IndexBuffer197,10371
        ID3D11Buffer*               IndexBuffer, *VertexBuffer, *VSConstantBuffer;VertexBuffer197,10371
        ID3D11Buffer*               IndexBuffer, *VertexBuffer, *VSConstantBuffer;VSConstantBuffer197,10371
        UINT                        IndexBufferOffset, VertexBufferStride, VertexBufferOffset;IndexBufferOffset198,10455
        UINT                        IndexBufferOffset, VertexBufferStride, VertexBufferOffset;VertexBufferStride198,10455
        UINT                        IndexBufferOffset, VertexBufferStride, VertexBufferOffset;VertexBufferOffset198,10455
        DXGI_FORMAT                 IndexBufferFormat;IndexBufferFormat199,10551
        ID3D11InputLayout*          InputLayout;InputLayout200,10607
static void ImGui_ImplDX11_CreateFontsTexture()ImGui_ImplDX11_CreateFontsTexture281,15610
bool    ImGui_ImplDX11_CreateDeviceObjects()ImGui_ImplDX11_CreateDeviceObjects341,17759
void    ImGui_ImplDX11_InvalidateDeviceObjects()ImGui_ImplDX11_InvalidateDeviceObjects494,24268
bool    ImGui_ImplDX11_Init(ID3D11Device* device, ID3D11DeviceContext* device_context)ImGui_ImplDX11_Init513,25373
void ImGui_ImplDX11_Shutdown()ImGui_ImplDX11_Shutdown541,26446
void ImGui_ImplDX11_NewFrame()ImGui_ImplDX11_NewFrame549,26767

../gejo/libs/imgui/backends/imgui_impl_dx11.h,0

../gejo/libs/imgui/backends/imgui_impl_dx12.cpp,2103
static ID3D12Device*                g_pd3dDevice = NULL;g_pd3dDevice46,3092
static ID3D12RootSignature*         g_pRootSignature = NULL;g_pRootSignature47,3150
static ID3D12PipelineState*         g_pPipelineState = NULL;g_pPipelineState48,3212
static DXGI_FORMAT                  g_RTVFormat = DXGI_FORMAT_UNKNOWN;g_RTVFormat49,3274
static ID3D12Resource*              g_pFontTextureResource = NULL;g_pFontTextureResource50,3346
static D3D12_CPU_DESCRIPTOR_HANDLE  g_hFontSrvCpuDescHandle = {};g_hFontSrvCpuDescHandle51,3414
static D3D12_GPU_DESCRIPTOR_HANDLE  g_hFontSrvGpuDescHandle = {};g_hFontSrvGpuDescHandle52,3481
struct FrameResourcesFrameResources54,3550
    ID3D12Resource*     IndexBuffer;IndexBuffer56,3576
    ID3D12Resource*     VertexBuffer;VertexBuffer57,3614
    int                 IndexBufferSize;IndexBufferSize58,3653
    int                 VertexBufferSize;VertexBufferSize59,3695
static FrameResources*  g_pFrameResources = NULL;g_pFrameResources61,3742
static UINT             g_numFramesInFlight = 0;g_numFramesInFlight62,3793
static UINT             g_frameIndex = UINT_MAX;g_frameIndex63,3843
static void SafeRelease(T*& res)SafeRelease66,3917
struct VERTEX_CONSTANT_BUFFERVERTEX_CONSTANT_BUFFER73,4015
    float   mvp[4][4];mvp75,4049
static void ImGui_ImplDX12_SetupRenderState(ImDrawData* draw_data, ID3D12GraphicsCommandList* ctImGui_ImplDX12_SetupRenderState78,4079
void ImGui_ImplDX12_RenderDrawData(ImDrawData* draw_data, ID3D12GraphicsCommandList* ctx)ImGui_ImplDX12_RenderDrawData134,6542
static void ImGui_ImplDX12_CreateFontsTexture()ImGui_ImplDX12_CreateFontsTexture256,12455
bool    ImGui_ImplDX12_CreateDeviceObjects()ImGui_ImplDX12_CreateDeviceObjects405,18888
void    ImGui_ImplDX12_InvalidateDeviceObjects()ImGui_ImplDX12_InvalidateDeviceObjects637,29581
bool ImGui_ImplDX12_Init(ID3D12Device* device, int num_frames_in_flight, DXGI_FORMAT rtv_format,ImGui_ImplDX12_Init657,30144
void ImGui_ImplDX12_Shutdown()ImGui_ImplDX12_Shutdown687,31461
void ImGui_ImplDX12_NewFrame()ImGui_ImplDX12_NewFrame699,31774

../gejo/libs/imgui/backends/imgui_impl_dx12.h,0

../gejo/libs/imgui/backends/imgui_impl_dx9.cpp,1482
static LPDIRECT3DDEVICE9        g_pd3dDevice = NULL;g_pd3dDevice37,2627
static LPDIRECT3DVERTEXBUFFER9  g_pVB = NULL;g_pVB38,2681
static LPDIRECT3DINDEXBUFFER9   g_pIB = NULL;g_pIB39,2728
static LPDIRECT3DTEXTURE9       g_FontTexture = NULL;g_FontTexture40,2775
static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;g_VertexBufferSize41,2830
static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;g_IndexBufferSize41,2830
struct CUSTOMVERTEXCUSTOMVERTEX43,2919
    float    pos[3];pos45,2943
    D3DCOLOR col;col46,2965
    float    uv[2];uv47,2984
#define D3DFVF_CUSTOMVERTEX D3DFVF_CUSTOMVERTEX49,3009
#define IMGUI_COL_TO_DX9_ARGB(IMGUI_COL_TO_DX9_ARGB52,3116
#define IMGUI_COL_TO_DX9_ARGB(IMGUI_COL_TO_DX9_ARGB54,3171
static void ImGui_ImplDX9_SetupRenderState(ImDrawData* draw_data)ImGui_ImplDX9_SetupRenderState57,3302
void ImGui_ImplDX9_RenderDrawData(ImDrawData* draw_data)ImGui_ImplDX9_RenderDrawData123,7125
bool ImGui_ImplDX9_Init(IDirect3DDevice9* device)ImGui_ImplDX9_Init250,12929
void ImGui_ImplDX9_Shutdown()ImGui_ImplDX9_Shutdown262,13329
static bool ImGui_ImplDX9_CreateFontsTexture()ImGui_ImplDX9_CreateFontsTexture268,13487
bool ImGui_ImplDX9_CreateDeviceObjects()ImGui_ImplDX9_CreateDeviceObjects309,15060
void ImGui_ImplDX9_InvalidateDeviceObjects()ImGui_ImplDX9_InvalidateDeviceObjects318,15244
void ImGui_ImplDX9_NewFrame()ImGui_ImplDX9_NewFrame327,15637

../gejo/libs/imgui/backends/imgui_impl_dx9.h,0

../gejo/libs/imgui/backends/imgui_impl_glfw.cpp,3285
#define GLFW_EXPOSE_NATIVE_WIN32GLFW_EXPOSE_NATIVE_WIN3247,3412
#define GLFW_HAS_WINDOW_TOPMOST GLFW_HAS_WINDOW_TOPMOST50,3513
#define GLFW_HAS_WINDOW_HOVERED GLFW_HAS_WINDOW_HOVERED51,3637
#define GLFW_HAS_WINDOW_ALPHA GLFW_HAS_WINDOW_ALPHA52,3760
#define GLFW_HAS_PER_MONITOR_DPI GLFW_HAS_PER_MONITOR_DPI53,3891
#define GLFW_HAS_VULKAN GLFW_HAS_VULKAN54,4028
#define GLFW_HAS_NEW_CURSORS GLFW_HAS_NEW_CURSORS56,4347
#define GLFW_HAS_NEW_CURSORS GLFW_HAS_NEW_CURSORS58,4562
enum GlfwClientApiGlfwClientApi62,4624
    GlfwClientApi_Unknown,GlfwClientApi_Unknown64,4647
    GlfwClientApi_OpenGL,GlfwClientApi_OpenGL65,4675
    GlfwClientApi_VulkanGlfwClientApi_Vulkan66,4702
static GLFWwindow*          g_Window = NULL;    // Main windowg_Window68,4732
static GlfwClientApi        g_ClientApi = GlfwClientApi_Unknown;g_ClientApi69,4796
static double               g_Time = 0.0;g_Time70,4862
static bool                 g_MouseJustPressed[ImGuiMouseButton_COUNT] = {};g_MouseJustPressed71,4905
static GLFWcursor*          g_MouseCursors[ImGuiMouseCursor_COUNT] = {};g_MouseCursors72,4983
static bool                 g_InstalledCallbacks = false;g_InstalledCallbacks73,5057
static GLFWmousebuttonfun   g_PrevUserCallbackMousebutton = NULL;g_PrevUserCallbackMousebutton76,5219
static GLFWscrollfun        g_PrevUserCallbackScroll = NULL;g_PrevUserCallbackScroll77,5286
static GLFWkeyfun           g_PrevUserCallbackKey = NULL;g_PrevUserCallbackKey78,5348
static GLFWcharfun          g_PrevUserCallbackChar = NULL;g_PrevUserCallbackChar79,5407
static const char* ImGui_ImplGlfw_GetClipboardText(void* user_data)ImGui_ImplGlfw_GetClipboardText81,5469
static void ImGui_ImplGlfw_SetClipboardText(void* user_data, const char* text)ImGui_ImplGlfw_SetClipboardText86,5606
void ImGui_ImplGlfw_MouseButtonCallback(GLFWwindow* window, int button, int action, int mods)ImGui_ImplGlfw_MouseButtonCallback91,5753
void ImGui_ImplGlfw_ScrollCallback(GLFWwindow* window, double xoffset, double yoffset)ImGui_ImplGlfw_ScrollCallback100,6111
void ImGui_ImplGlfw_KeyCallback(GLFWwindow* window, int key, int scancode, int action, int mods)ImGui_ImplGlfw_KeyCallback110,6425
void ImGui_ImplGlfw_CharCallback(GLFWwindow* window, unsigned int c)ImGui_ImplGlfw_CharCallback135,7359
static bool ImGui_ImplGlfw_Init(GLFWwindow* window, bool install_callbacks, GlfwClientApi clientImGui_ImplGlfw_Init144,7589
bool ImGui_ImplGlfw_InitForOpenGL(GLFWwindow* window, bool install_callbacks)ImGui_ImplGlfw_InitForOpenGL227,12117
bool ImGui_ImplGlfw_InitForVulkan(GLFWwindow* window, bool install_callbacks)ImGui_ImplGlfw_InitForVulkan232,12286
bool ImGui_ImplGlfw_InitForOther(GLFWwindow* window, bool install_callbacks)ImGui_ImplGlfw_InitForOther237,12455
void ImGui_ImplGlfw_Shutdown()ImGui_ImplGlfw_Shutdown242,12624
static void ImGui_ImplGlfw_UpdateMousePosAndButtons()ImGui_ImplGlfw_UpdateMousePosAndButtons261,13262
static void ImGui_ImplGlfw_UpdateMouseCursor()ImGui_ImplGlfw_UpdateMouseCursor295,14413
static void ImGui_ImplGlfw_UpdateGamepads()ImGui_ImplGlfw_UpdateGamepads316,15337
    #define MAP_BUTTON(MAP_BUTTON324,15589
    #define MAP_ANALOG(MAP_ANALOG325,15738
void ImGui_ImplGlfw_NewFrame()ImGui_ImplGlfw_NewFrame353,17393

../gejo/libs/imgui/backends/imgui_impl_glfw.h,0

../gejo/libs/imgui/backends/imgui_impl_glut.cpp,1192
static int g_Time = 0;          // Current time, in millisecondsg_Time37,1634
bool ImGui_ImplGLUT_Init()ImGui_ImplGLUT_Init39,1702
void ImGui_ImplGLUT_InstallFuncs()ImGui_ImplGLUT_InstallFuncs78,3264
void ImGui_ImplGLUT_Shutdown()ImGui_ImplGLUT_Shutdown93,3810
void ImGui_ImplGLUT_NewFrame()ImGui_ImplGLUT_NewFrame97,3850
static void ImGui_ImplGLUT_UpdateKeyboardMods()ImGui_ImplGLUT_UpdateKeyboardMods112,4231
void ImGui_ImplGLUT_KeyboardFunc(unsigned char c, int x, int y)ImGui_ImplGLUT_KeyboardFunc121,4509
void ImGui_ImplGLUT_KeyboardUpFunc(unsigned char c, int x, int y)ImGui_ImplGLUT_KeyboardUpFunc143,5451
void ImGui_ImplGLUT_SpecialFunc(int key, int x, int y)ImGui_ImplGLUT_SpecialFunc159,6037
void ImGui_ImplGLUT_SpecialUpFunc(int key, int x, int y)ImGui_ImplGLUT_SpecialUpFunc169,6341
void ImGui_ImplGLUT_MouseFunc(int glut_button, int state, int x, int y)ImGui_ImplGLUT_MouseFunc179,6646
void ImGui_ImplGLUT_MouseWheelFunc(int button, int dir, int x, int y)ImGui_ImplGLUT_MouseWheelFunc194,7188
void ImGui_ImplGLUT_ReshapeFunc(int w, int h)ImGui_ImplGLUT_ReshapeFunc206,7489
void ImGui_ImplGLUT_MotionFunc(int x, int y)ImGui_ImplGLUT_MotionFunc212,7629

../gejo/libs/imgui/backends/imgui_impl_glut.h,0

../gejo/libs/imgui/backends/imgui_impl_marmalade.cpp,1523
static double       g_Time = 0.0f;g_Time33,1754
static bool         g_MousePressed[3] = { false, false, false };g_MousePressed34,1790
static CIwTexture*  g_FontTexture = NULL;g_FontTexture35,1856
static char*        g_ClipboardText = NULL;g_ClipboardText36,1899
static bool         g_osdKeyboardEnabled = false;g_osdKeyboardEnabled37,1944
static ImVec2       g_RenderScale = ImVec2(1.0f, 1.0f);g_RenderScale40,2092
void ImGui_Marmalade_RenderDrawData(ImDrawData* draw_data)ImGui_Marmalade_RenderDrawData43,2172
static const char* ImGui_Marmalade_GetClipboardText(void* /*user_data*/)ImGui_Marmalade_GetClipboardText103,4765
static void ImGui_Marmalade_SetClipboardText(void* /*user_data*/, const char* text)ImGui_Marmalade_SetClipboardText120,5202
int32 ImGui_Marmalade_PointerButtonEventCallback(void* system_data, void* user_data)ImGui_Marmalade_PointerButtonEventCallback126,5365
int32 ImGui_Marmalade_KeyCallback(void* system_data, void* user_data)ImGui_Marmalade_KeyCallback150,6308
int32 ImGui_Marmalade_CharCallback(void* system_data, void* user_data)ImGui_Marmalade_CharCallback167,7204
bool ImGui_Marmalade_CreateDeviceObjects()ImGui_Marmalade_CreateDeviceObjects176,7455
void    ImGui_Marmalade_InvalidateDeviceObjects()ImGui_Marmalade_InvalidateDeviceObjects203,8295
bool    ImGui_Marmalade_Init(bool install_callbacks)ImGui_Marmalade_Init219,8608
void ImGui_Marmalade_Shutdown()ImGui_Marmalade_Shutdown261,10346
void ImGui_Marmalade_NewFrame()ImGui_Marmalade_NewFrame266,10435

../gejo/libs/imgui/backends/imgui_impl_marmalade.h,0

../gejo/libs/imgui/backends/imgui_impl_metal.h,767
@protocol MTLDevice, MTLCommandBuffer, MTLRenderCommandEncoder;MTLDevice15,699
IMGUI_IMPL_API bool ImGui_ImplMetal_Init(id<MTLDevice> device);id17,766
IMGUI_IMPL_API void ImGui_ImplMetal_NewFrame(MTLRenderPassDescriptor* renderPassDescriptor);IMGUI_IMPL_API19,880
IMGUI_IMPL_API void ImGui_ImplMetal_NewFrame(MTLRenderPassDescriptor* renderPassDescriptor);MTLRenderPassDescriptor19,880
IMGUI_IMPL_API void ImGui_ImplMetal_RenderDrawData(ImDrawData* draw_data,ImDrawData20,974
IMGUI_IMPL_API bool ImGui_ImplMetal_CreateFontsTexture(id<MTLDevice> device);id25,1273
IMGUI_IMPL_API bool ImGui_ImplMetal_CreateDeviceObjects(id<MTLDevice> device);IMGUI_IMPL_API27,1412
IMGUI_IMPL_API bool ImGui_ImplMetal_CreateDeviceObjects(id<MTLDevice> device);id27,1412

../gejo/libs/imgui/backends/imgui_impl_metal.mm,4047
@interface MetalBuffer : NSObjectMetalBuffer33,1949
@property (nonatomic, strong) id<MTLBuffer> buffer;buffer34,1984
@property (nonatomic, assign) NSTimeInterval lastReuseTime;lastReuseTime35,2037
- (instancetype)initWithBuffer:(id<MTLBuffer>)buffer;initWithBuffer:36,2098
@interface FramebufferDescriptor : NSObject<NSCopying>FramebufferDescriptor41,2292
@property (nonatomic, assign) unsigned long sampleCount;sampleCount42,2348
@property (nonatomic, assign) MTLPixelFormat colorPixelFormat;colorPixelFormat43,2406
@property (nonatomic, assign) MTLPixelFormat depthPixelFormat;depthPixelFormat44,2470
@property (nonatomic, assign) MTLPixelFormat stencilPixelFormat;stencilPixelFormat45,2534
- (instancetype)initWithRenderPassDescriptor:(MTLRenderPassDescriptor *)renderPassDescriptor;initWithRenderPassDescriptor:46,2600
@interface MetalContext : NSObjectMetalContext52,2913
@property (nonatomic, strong) id<MTLDepthStencilState> depthStencilState;depthStencilState53,2949
@property (nonatomic, strong) FramebufferDescriptor *framebufferDescriptor; // framebuffer descrframebufferDescriptor54,3024
@property (nonatomic, strong) NSMutableDictionary *renderPipelineStateCache; // pipeline cache; renderPipelineStateCache55,3156
@property (nonatomic, strong, nullable) id<MTLTexture> fontTexture;fontTexture56,3286
@property (nonatomic, strong) NSMutableArray<MetalBuffer *> *bufferCache;bufferCache57,3355
@property (nonatomic, assign) NSTimeInterval lastBufferCachePurge;lastBufferCachePurge58,3430
- (void)makeDeviceObjectsWithDevice:(id<MTLDevice>)device;makeDeviceObjectsWithDevice:59,3498
- (void)makeFontTextureWithDevice:(id<MTLDevice>)device;makeFontTextureWithDevice:60,3558
- (MetalBuffer *)dequeueReusableBufferOfLength:(NSUInteger)length device:(id<MTLDevice>)device;dequeueReusableBufferOfLength:device:61,3616
- (void)enqueueReusableBuffer:(MetalBuffer *)buffer;enqueueReusableBuffer:62,3713
- (id<MTLRenderPipelineState>)renderPipelineStateForFrameAndDevice:(id<MTLDevice>)device;renderPipelineStateForFrameAndDevice:63,3767
- (void)emptyRenderPipelineStateCache;emptyRenderPipelineStateCache64,3858
      vertexBufferOffset:(size_t)vertexBufferOffset;setupRenderState:commandBuffer:commandEncoder:renderPipelineState:vertexBuffer:vertexBufferOffset:70,4207
        commandEncoder:(id<MTLRenderCommandEncoder>)commandEncoder;renderDrawData:commandBuffer:commandEncoder:73,4368
bool ImGui_ImplMetal_Init(id<MTLDevice> device)ImGui_ImplMetal_Init80,4540
void ImGui_ImplMetal_Shutdown()ImGui_ImplMetal_Shutdown96,5039
void ImGui_ImplMetal_NewFrame(MTLRenderPassDescriptor *renderPassDescriptor)ImGui_ImplMetal_NewFrame101,5125
void ImGui_ImplMetal_RenderDrawData(ImDrawData* draw_data, id<MTLCommandBuffer> commandBuffer, iImGui_ImplMetal_RenderDrawData109,5479
bool ImGui_ImplMetal_CreateFontsTexture(id<MTLDevice> device)ImGui_ImplMetal_CreateFontsTexture114,5739
void ImGui_ImplMetal_DestroyFontsTexture()ImGui_ImplMetal_DestroyFontsTexture124,6066
bool ImGui_ImplMetal_CreateDeviceObjects(id<MTLDevice> device)ImGui_ImplMetal_CreateDeviceObjects131,6232
void ImGui_ImplMetal_DestroyDeviceObjects()ImGui_ImplMetal_DestroyDeviceObjects140,6439
@implementation MetalBufferMetalBuffer148,6640
{initWithBuffer:150,6723
@implementation FramebufferDescriptorFramebufferDescriptor162,6946
{initWithRenderPassDescriptor:164,7079
{copyWithZone:176,7558
{hash186,7892
{isEqual:196,8198
@implementation MetalContextMetalContext210,8619
- (instancetype)init {init211,8649
{makeDeviceObjectsWithDevice:222,8990
{makeFontTextureWithDevice:234,9784
{dequeueReusableBufferOfLength:device:255,11028
{enqueueReusableBuffer:292,12352
{renderPipelineStateForFrameAndDevice:297,12502
{_renderPipelineStateForFramebufferDescriptor:device:314,13349
{emptyRenderPipelineStateCache409,17877
{setupRenderState:commandBuffer:commandEncoder:renderPipelineState:vertexBuffer:vertexBufferOffset:419,18302
{renderDrawData:commandBuffer:commandEncoder:461,20119

../gejo/libs/imgui/backends/imgui_impl_opengl2.cpp,1024
#define APIENTRY APIENTRY45,3326
#define WINGDIAPI WINGDIAPI48,3574
#define GL_SILENCE_DEPRECATIONGL_SILENCE_DEPRECATION51,3692
static GLuint       g_FontTexture = 0;g_FontTexture58,3801
bool    ImGui_ImplOpenGL2_Init()ImGui_ImplOpenGL2_Init61,3857
void    ImGui_ImplOpenGL2_Shutdown()ImGui_ImplOpenGL2_Shutdown69,4045
void    ImGui_ImplOpenGL2_NewFrame()ImGui_ImplOpenGL2_NewFrame74,4138
static void ImGui_ImplOpenGL2_SetupRenderState(ImDrawData* draw_data, int fb_width, int fb_heighImGui_ImplOpenGL2_SetupRenderState80,4259
void ImGui_ImplOpenGL2_RenderDrawData(ImDrawData* draw_data)ImGui_ImplOpenGL2_RenderDrawData127,6924
bool ImGui_ImplOpenGL2_CreateFontsTexture()ImGui_ImplOpenGL2_CreateFontsTexture213,11701
void ImGui_ImplOpenGL2_DestroyFontsTexture()ImGui_ImplOpenGL2_DestroyFontsTexture240,12926
bool    ImGui_ImplOpenGL2_CreateDeviceObjects()ImGui_ImplOpenGL2_CreateDeviceObjects251,13163
void    ImGui_ImplOpenGL2_DestroyDeviceObjects()ImGui_ImplOpenGL2_DestroyDeviceObjects256,13272

../gejo/libs/imgui/backends/imgui_impl_opengl2.h,0

../gejo/libs/imgui/backends/imgui_impl_opengl3.cpp,3080
#define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS80,6614
#define GLFW_INCLUDE_NONE GLFW_INCLUDE_NONE116,8225
#define GLFW_INCLUDE_NONE GLFW_INCLUDE_NONE123,8591
#define IMGUI_IMPL_OPENGL_MAY_HAVE_VTX_OFFSETIMGUI_IMPL_OPENGL_MAY_HAVE_VTX_OFFSET135,9120
#define IMGUI_IMPL_OPENGL_MAY_HAVE_BIND_SAMPLERIMGUI_IMPL_OPENGL_MAY_HAVE_BIND_SAMPLER140,9316
#define IMGUI_IMPL_OPENGL_MAY_HAVE_PRIMITIVE_RESTARTIMGUI_IMPL_OPENGL_MAY_HAVE_PRIMITIVE_RESTART145,9525
#define IMGUI_IMPL_OPENGL_MAY_HAVE_EXTENSIONSIMGUI_IMPL_OPENGL_MAY_HAVE_EXTENSIONS150,9700
static GLuint       g_GlVersion = 0;                // Extracted at runtime using GL_MAJOR_VERSIg_GlVersion154,9773
static char         g_GlslVersionString[32] = "";   // Specified by user or detected based on cog_GlslVersionString155,9921
static GLuint       g_FontTexture = 0;g_FontTexture156,10042
static GLuint       g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;g_ShaderHandle157,10082
static GLuint       g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;g_VertHandle157,10082
static GLuint       g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;g_FragHandle157,10082
static GLint        g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;                       g_AttribLocationTex158,10159
static GLint        g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;                       g_AttribLocationProjMtx158,10159
static GLuint       g_AttribLocationVtxPos = 0, g_AttribLocationVtxUV = 0, g_AttribLocationVtxCog_AttribLocationVtxPos159,10286
static GLuint       g_AttribLocationVtxPos = 0, g_AttribLocationVtxUV = 0, g_AttribLocationVtxCog_AttribLocationVtxUV159,10286
static GLuint       g_AttribLocationVtxPos = 0, g_AttribLocationVtxUV = 0, g_AttribLocationVtxCog_AttribLocationVtxColor159,10286
static unsigned int g_VboHandle = 0, g_ElementsHandle = 0;g_VboHandle160,10422
static unsigned int g_VboHandle = 0, g_ElementsHandle = 0;g_ElementsHandle160,10422
static bool         g_HasClipOrigin = false;g_HasClipOrigin161,10482
bool    ImGui_ImplOpenGL3_Init(const char* glsl_version)ImGui_ImplOpenGL3_Init164,10544
void    ImGui_ImplOpenGL3_Shutdown()ImGui_ImplOpenGL3_Shutdown257,14318
void    ImGui_ImplOpenGL3_NewFrame()ImGui_ImplOpenGL3_NewFrame262,14411
static void ImGui_ImplOpenGL3_SetupRenderState(ImDrawData* draw_data, int fb_width, int fb_heighImGui_ImplOpenGL3_SetupRenderState268,14533
void    ImGui_ImplOpenGL3_RenderDrawData(ImDrawData* draw_data)ImGui_ImplOpenGL3_RenderDrawData342,18135
bool ImGui_ImplOpenGL3_CreateFontsTexture()ImGui_ImplOpenGL3_CreateFontsTexture478,26050
void ImGui_ImplOpenGL3_DestroyFontsTexture()ImGui_ImplOpenGL3_DestroyFontsTexture507,27312
static bool CheckShader(GLuint handle, const char* desc)CheckShader519,27708
static bool CheckProgram(GLuint handle, const char* desc)CheckProgram537,28460
bool    ImGui_ImplOpenGL3_CreateDeviceObjects()ImGui_ImplOpenGL3_CreateDeviceObjects554,29141
void    ImGui_ImplOpenGL3_DestroyDeviceObjects()ImGui_ImplOpenGL3_DestroyDeviceObjects734,35341

../gejo/libs/imgui/backends/imgui_impl_opengl3.h,709
#define IMGUI_IMPL_OPENGL_ES3 IMGUI_IMPL_OPENGL_ES362,3443
#define IMGUI_IMPL_OPENGL_ES2 IMGUI_IMPL_OPENGL_ES264,3566
    #define IMGUI_IMPL_OPENGL_LOADER_GLEWIMGUI_IMPL_OPENGL_LOADER_GLEW69,3782
    #define IMGUI_IMPL_OPENGL_LOADER_GLADIMGUI_IMPL_OPENGL_LOADER_GLAD71,3861
    #define IMGUI_IMPL_OPENGL_LOADER_GLAD2IMGUI_IMPL_OPENGL_LOADER_GLAD273,3938
    #define IMGUI_IMPL_OPENGL_LOADER_GL3WIMGUI_IMPL_OPENGL_LOADER_GL3W75,4016
    #define IMGUI_IMPL_OPENGL_LOADER_GLBINDING3IMGUI_IMPL_OPENGL_LOADER_GLBINDING377,4105
    #define IMGUI_IMPL_OPENGL_LOADER_GLBINDING2IMGUI_IMPL_OPENGL_LOADER_GLBINDING279,4198
    #define IMGUI_IMPL_OPENGL_LOADER_GL3W IMGUI_IMPL_OPENGL_LOADER_GL3W84,4312

../gejo/libs/imgui/backends/imgui_impl_osx.h,0

../gejo/libs/imgui/backends/imgui_impl_osx.mm,1094
@interface NSCursor()NSCursor45,2649
+ (id)_windowResizeNorthWestSouthEastCursor;id46,2672
+ (id)_windowResizeNorthEastSouthWestCursor;_windowResizeNorthEastSouthWestCursor47,2718
+ (id)_windowResizeNorthSouthCursor;_windowResizeNorthSouthCursor48,2764
+ (id)_windowResizeEastWestCursor;_windowResizeEastWestCursor49,2802
static void resetKeys()resetKeys52,2846
@interface ImFocusObserver : NSObjectImFocusObserver59,3029
- (void)onApplicationBecomeInactive:(NSNotification*)aNotification;onApplicationBecomeInactive:61,3070
@implementation ImFocusObserverImFocusObserver65,3149
{onApplicationBecomeInactive:68,3252
bool ImGui_ImplOSX_Init()ImGui_ImplOSX_Init78,3557
void ImGui_ImplOSX_Shutdown()ImGui_ImplOSX_Shutdown164,9078
static void ImGui_ImplOSX_UpdateMouseCursorAndButtons()ImGui_ImplOSX_UpdateMouseCursorAndButtons169,9146
void ImGui_ImplOSX_NewFrame(NSView* view)ImGui_ImplOSX_NewFrame205,10330
static int mapCharacterToKey(int c)mapCharacterToKey226,10984
bool ImGui_ImplOSX_HandleEvent(NSEvent* event, NSView* view)ImGui_ImplOSX_HandleEvent239,11287

../gejo/libs/imgui/backends/imgui_impl_sdl.cpp,1852
#define SDL_HAS_CAPTURE_AND_GLOBAL_MOUSE SDL_HAS_CAPTURE_AND_GLOBAL_MOUSE58,4485
#define SDL_HAS_VULKAN SDL_HAS_VULKAN59,4557
static SDL_Window*  g_Window = NULL;g_Window62,4640
static Uint64       g_Time = 0;g_Time63,4678
static bool         g_MousePressed[3] = { false, false, false };g_MousePressed64,4711
static SDL_Cursor*  g_MouseCursors[ImGuiMouseCursor_COUNT] = {};g_MouseCursors65,4777
static char*        g_ClipboardTextData = NULL;g_ClipboardTextData66,4843
static bool         g_MouseCanUseGlobalState = true;g_MouseCanUseGlobalState67,4892
static const char* ImGui_ImplSDL2_GetClipboardText(void*)ImGui_ImplSDL2_GetClipboardText69,4948
static void ImGui_ImplSDL2_SetClipboardText(void*, const char* text)ImGui_ImplSDL2_SetClipboardText77,5169
bool ImGui_ImplSDL2_ProcessEvent(const SDL_Event* event)ImGui_ImplSDL2_ProcessEvent87,5879
static bool ImGui_ImplSDL2_Init(SDL_Window* window)ImGui_ImplSDL2_Init132,7410
bool ImGui_ImplSDL2_InitForOpenGL(SDL_Window* window, void* sdl_gl_context)ImGui_ImplSDL2_InitForOpenGL202,11024
bool ImGui_ImplSDL2_InitForVulkan(SDL_Window* window)ImGui_ImplSDL2_InitForVulkan208,11212
bool ImGui_ImplSDL2_InitForD3D(SDL_Window* window)ImGui_ImplSDL2_InitForD3D216,11381
bool ImGui_ImplSDL2_InitForMetal(SDL_Window* window)ImGui_ImplSDL2_InitForMetal224,11548
void ImGui_ImplSDL2_Shutdown()ImGui_ImplSDL2_Shutdown229,11651
static void ImGui_ImplSDL2_UpdateMousePosAndButtons()ImGui_ImplSDL2_UpdateMousePosAndButtons244,12091
static void ImGui_ImplSDL2_UpdateMouseCursor()ImGui_ImplSDL2_UpdateMouseCursor289,14485
static void ImGui_ImplSDL2_UpdateGamepads()ImGui_ImplSDL2_UpdateGamepads309,15140
    #define MAP_BUTTON(MAP_BUTTON325,15601
    #define MAP_ANALOG(MAP_ANALOG326,15755
void ImGui_ImplSDL2_NewFrame(SDL_Window* window)ImGui_ImplSDL2_NewFrame350,17781

../gejo/libs/imgui/backends/imgui_impl_sdl.h,53
typedef union SDL_Event SDL_Event;SDL_Event21,1259

../gejo/libs/imgui/backends/imgui_impl_vulkan.cpp,6623
struct ImGui_ImplVulkanH_FrameRenderBuffersImGui_ImplVulkanH_FrameRenderBuffers59,5369
    VkDeviceMemory      VertexBufferMemory;VertexBufferMemory61,5417
    VkDeviceMemory      IndexBufferMemory;IndexBufferMemory62,5462
    VkDeviceSize        VertexBufferSize;VertexBufferSize63,5506
    VkDeviceSize        IndexBufferSize;IndexBufferSize64,5549
    VkBuffer            VertexBuffer;VertexBuffer65,5591
    VkBuffer            IndexBuffer;IndexBuffer66,5630
struct ImGui_ImplVulkanH_WindowRenderBuffersImGui_ImplVulkanH_WindowRenderBuffers71,5778
    uint32_t            Index;Index73,5827
    uint32_t            Count;Count74,5859
    ImGui_ImplVulkanH_FrameRenderBuffers*   FrameRenderBuffers;FrameRenderBuffers75,5891
static ImGui_ImplVulkan_InitInfo g_VulkanInitInfo = {};g_VulkanInitInfo79,5978
static VkRenderPass             g_RenderPass = VK_NULL_HANDLE;g_RenderPass80,6035
static VkDeviceSize             g_BufferMemoryAlignment = 256;g_BufferMemoryAlignment81,6099
static VkPipelineCreateFlags    g_PipelineCreateFlags = 0x00;g_PipelineCreateFlags82,6163
static VkDescriptorSetLayout    g_DescriptorSetLayout = VK_NULL_HANDLE;g_DescriptorSetLayout83,6226
static VkPipelineLayout         g_PipelineLayout = VK_NULL_HANDLE;g_PipelineLayout84,6299
static VkDescriptorSet          g_DescriptorSet = VK_NULL_HANDLE;g_DescriptorSet85,6367
static VkPipeline               g_Pipeline = VK_NULL_HANDLE;g_Pipeline86,6434
static uint32_t                 g_Subpass = 0;g_Subpass87,6496
static VkShaderModule           g_ShaderModuleVert;g_ShaderModuleVert88,6544
static VkShaderModule           g_ShaderModuleFrag;g_ShaderModuleFrag89,6597
static bool                     g_FunctionsLoaded = false;g_FunctionsLoaded91,6675
static bool                     g_FunctionsLoaded = true;g_FunctionsLoaded93,6742
static VkSampler                g_FontSampler = VK_NULL_HANDLE;g_FontSampler97,6825
static VkDeviceMemory           g_FontMemory = VK_NULL_HANDLE;g_FontMemory98,6890
static VkImage                  g_FontImage = VK_NULL_HANDLE;g_FontImage99,6954
static VkImageView              g_FontView = VK_NULL_HANDLE;g_FontView100,7017
static VkDeviceMemory           g_UploadBufferMemory = VK_NULL_HANDLE;g_UploadBufferMemory101,7079
static VkBuffer                 g_UploadBuffer = VK_NULL_HANDLE;g_UploadBuffer102,7151
static ImGui_ImplVulkanH_WindowRenderBuffers    g_MainWindowRenderBuffers;g_MainWindowRenderBuffers105,7238
#define IMGUI_VULKAN_FUNC_MAP(IMGUI_VULKAN_FUNC_MAP120,8575
#define IMGUI_VULKAN_FUNC_DEF(IMGUI_VULKAN_FUNC_DEF181,11994
static uint32_t __glsl_shader_frag_spv[] =__glsl_shader_frag_spv266,17122
static uint32_t ImGui_ImplVulkan_MemoryType(VkMemoryPropertyFlags properties, uint32_t type_bitsImGui_ImplVulkan_MemoryType299,19625
static void check_vk_result(VkResult err)check_vk_result310,20133
static void CreateOrResizeBuffer(VkBuffer& buffer, VkDeviceMemory& buffer_memory, VkDeviceSize& CreateOrResizeBuffer317,20302
static void ImGui_ImplVulkan_SetupRenderState(ImDrawData* draw_data, VkPipeline pipeline, VkCommImGui_ImplVulkan_SetupRenderState350,21931
void ImGui_ImplVulkan_RenderDrawData(ImDrawData* draw_data, VkCommandBuffer command_buffer, VkPiImGui_ImplVulkan_RenderDrawData395,24055
bool ImGui_ImplVulkan_CreateFontsTexture(VkCommandBuffer command_buffer)ImGui_ImplVulkan_CreateFontsTexture519,30641
static void ImGui_ImplVulkan_CreateShaderModules(VkDevice device, const VkAllocationCallbacks* aImGui_ImplVulkan_CreateShaderModules671,37847
static void ImGui_ImplVulkan_CreateFontSampler(VkDevice device, const VkAllocationCallbacks* allImGui_ImplVulkan_CreateFontSampler694,38848
static void ImGui_ImplVulkan_CreateDescriptorSetLayout(VkDevice device, const VkAllocationCallbaImGui_ImplVulkan_CreateDescriptorSetLayout714,39591
static void ImGui_ImplVulkan_CreatePipelineLayout(VkDevice device, const VkAllocationCallbacks* ImGui_ImplVulkan_CreatePipelineLayout734,40443
static void ImGui_ImplVulkan_CreatePipeline(VkDevice device, const VkAllocationCallbacks* allocaImGui_ImplVulkan_CreatePipeline756,41484
bool ImGui_ImplVulkan_CreateDeviceObjects()ImGui_ImplVulkan_CreateDeviceObjects861,46771
void    ImGui_ImplVulkan_DestroyFontUploadObjects()ImGui_ImplVulkan_DestroyFontUploadObjects933,49800
void    ImGui_ImplVulkan_DestroyDeviceObjects()ImGui_ImplVulkan_DestroyDeviceObjects948,50227
bool    ImGui_ImplVulkan_LoadFunctions(PFN_vkVoidFunction(*loader_func)(const char* function_namImGui_ImplVulkan_LoadFunctions965,51688
#define IMGUI_VULKAN_FUNC_LOAD(IMGUI_VULKAN_FUNC_LOAD972,52155
bool    ImGui_ImplVulkan_Init(ImGui_ImplVulkan_InitInfo* info, VkRenderPass render_pass)ImGui_ImplVulkan_Init986,52531
void ImGui_ImplVulkan_Shutdown()ImGui_ImplVulkan_Shutdown1013,53618
void ImGui_ImplVulkan_NewFrame()ImGui_ImplVulkan_NewFrame1018,53706
void ImGui_ImplVulkan_SetMinImageCount(uint32_t min_image_count)ImGui_ImplVulkan_SetMinImageCount1022,53748
VkSurfaceFormatKHR ImGui_ImplVulkanH_SelectSurfaceFormat(VkPhysicalDevice physical_device, VkSurImGui_ImplVulkanH_SelectSurfaceFormat1052,55455
VkPresentModeKHR ImGui_ImplVulkanH_SelectPresentMode(VkPhysicalDevice physical_device, VkSurfaceImGui_ImplVulkanH_SelectPresentMode1097,57810
void ImGui_ImplVulkanH_CreateWindowCommandBuffers(VkPhysicalDevice physical_device, VkDevice devImGui_ImplVulkanH_CreateWindowCommandBuffers1120,59140
int ImGui_ImplVulkanH_GetMinImageCountFromPresentMode(VkPresentModeKHR present_mode)ImGui_ImplVulkanH_GetMinImageCountFromPresentMode1167,61201
void ImGui_ImplVulkanH_CreateWindowSwapChain(VkPhysicalDevice physical_device, VkDevice device, ImGui_ImplVulkanH_CreateWindowSwapChain1180,61666
void ImGui_ImplVulkanH_CreateOrResizeWindow(VkInstance instance, VkPhysicalDevice physical_devicImGui_ImplVulkanH_CreateOrResizeWindow1348,69605
void ImGui_ImplVulkanH_DestroyWindow(VkInstance instance, VkDevice device, ImGui_ImplVulkanH_WinImGui_ImplVulkanH_DestroyWindow1356,70266
void ImGui_ImplVulkanH_DestroyFrame(VkDevice device, ImGui_ImplVulkanH_Frame* fd, const VkAllocaImGui_ImplVulkanH_DestroyFrame1378,71234
void ImGui_ImplVulkanH_DestroyFrameSemaphores(VkDevice device, ImGui_ImplVulkanH_FrameSemaphoresImGui_ImplVulkanH_DestroyFrameSemaphores1391,71796
void ImGui_ImplVulkanH_DestroyFrameRenderBuffers(VkDevice device, ImGui_ImplVulkanH_FrameRenderBImGui_ImplVulkanH_DestroyFrameRenderBuffers1398,72177
void ImGui_ImplVulkanH_DestroyWindowRenderBuffers(VkDevice device, ImGui_ImplVulkanH_WindowRendeImGui_ImplVulkanH_DestroyWindowRenderBuffers1408,72974

../gejo/libs/imgui/backends/imgui_impl_vulkan.h,2994
#define VK_NO_PROTOTYPESVK_NO_PROTOTYPES40,2457
struct ImGui_ImplVulkan_InitInfoImGui_ImplVulkan_InitInfo46,2610
    VkInstance                      Instance;Instance48,2647
    VkPhysicalDevice                PhysicalDevice;PhysicalDevice49,2694
    VkDevice                        Device;Device50,2747
    uint32_t                        QueueFamily;QueueFamily51,2792
    VkQueue                         Queue;Queue52,2842
    VkPipelineCache                 PipelineCache;PipelineCache53,2886
    VkDescriptorPool                DescriptorPool;DescriptorPool54,2938
    uint32_t                        Subpass;Subpass55,2991
    uint32_t                        MinImageCount;          // >= 2MinImageCount56,3037
    uint32_t                        ImageCount;             // >= MinImageCountImageCount57,3106
    VkSampleCountFlagBits           MSAASamples;            // >= VK_SAMPLE_COUNT_1_BITMSAASamples58,3187
    const VkAllocationCallbacks*    Allocator;Allocator59,3276
    void                            (*CheckVkResultFn)(VkResult err);CheckVkResultFn60,3324
struct ImGui_ImplVulkanH_FrameImGui_ImplVulkanH_Frame105,6965
    VkCommandPool       CommandPool;CommandPool107,7000
    VkCommandBuffer     CommandBuffer;CommandBuffer108,7038
    VkFence             Fence;Fence109,7078
    VkImage             Backbuffer;Backbuffer110,7110
    VkImageView         BackbufferView;BackbufferView111,7147
    VkFramebuffer       Framebuffer;Framebuffer112,7188
struct ImGui_ImplVulkanH_FrameSemaphoresImGui_ImplVulkanH_FrameSemaphores115,7232
    VkSemaphore         ImageAcquiredSemaphore;ImageAcquiredSemaphore117,7277
    VkSemaphore         RenderCompleteSemaphore;RenderCompleteSemaphore118,7326
struct ImGui_ImplVulkanH_WindowImGui_ImplVulkanH_Window123,7580
    int                 Width;Width125,7616
    int                 Height;Height126,7648
    VkSwapchainKHR      Swapchain;Swapchain127,7681
    VkSurfaceKHR        Surface;Surface128,7717
    VkSurfaceFormatKHR  SurfaceFormat;SurfaceFormat129,7751
    VkPresentModeKHR    PresentMode;PresentMode130,7791
    VkRenderPass        RenderPass;RenderPass131,7829
    VkPipeline          Pipeline;               // The window pipeline may uses a different VkRePipeline132,7866
    bool                ClearEnable;ClearEnable133,8021
    VkClearValue        ClearValue;ClearValue134,8059
    uint32_t            FrameIndex;             // Current frame being rendered to (0 <= FrameInFrameIndex135,8096
    uint32_t            ImageCount;             // Number of simultaneous in-flight frames (retuImageCount136,8219
    uint32_t            SemaphoreIndex;         // Current set of swapchain wait semaphores we'rSemaphoreIndex137,8387
    ImGui_ImplVulkanH_Frame*            Frames;Frames138,8535
    ImGui_ImplVulkanH_FrameSemaphores*  FrameSemaphores;FrameSemaphores139,8584
    ImGui_ImplVulkanH_Window()ImGui_ImplVulkanH_Window141,8644

../gejo/libs/imgui/backends/imgui_impl_wgpu.cpp,4155
#define HAS_EMSCRIPTEN_VERSION(HAS_EMSCRIPTEN_VERSION26,1333
static WGPUDevice               g_wgpuDevice = NULL;g_wgpuDevice36,1866
static WGPUQueue                g_defaultQueue = NULL;g_defaultQueue37,1920
static WGPUTextureFormat        g_renderTargetFormat = WGPUTextureFormat_Undefined;g_renderTargetFormat38,1976
static WGPURenderPipeline       g_pipelineState = NULL;g_pipelineState39,2061
struct RenderResourcesRenderResources41,2120
    WGPUTexture         FontTexture;            // Font textureFontTexture43,2147
    WGPUTextureView     FontTextureView;        // Texture view for font textureFontTextureView44,2212
    WGPUSampler         Sampler;                // Sampler for the font textureSampler45,2294
    WGPUBuffer          Uniforms;               // Shader uniformsUniforms46,2375
    WGPUBindGroup       CommonBindGroup;        // Resources bind-group to bind the common resouCommonBindGroup47,2443
    ImGuiStorage        ImageBindGroups;        // Resources bind-group to bind the font/image rImageBindGroups48,2557
    WGPUBindGroup       ImageBindGroup;         // Default font-resource of Dear ImGuiImageBindGroup49,2702
    WGPUBindGroupLayout ImageBindGroupLayout;   // Cache layout used for the image bind group. AImageBindGroupLayout50,2790
static RenderResources  g_resources;g_resources52,2956
struct FrameResourcesFrameResources54,2996
    WGPUBuffer  IndexBuffer;IndexBuffer56,3022
    WGPUBuffer  VertexBuffer;VertexBuffer57,3052
    ImDrawIdx*  IndexBufferHost;IndexBufferHost58,3083
    ImDrawVert* VertexBufferHost;VertexBufferHost59,3117
    int         IndexBufferSize;IndexBufferSize60,3152
    int         VertexBufferSize;VertexBufferSize61,3186
static FrameResources*  g_pFrameResources = NULL;g_pFrameResources63,3225
static unsigned int     g_numFramesInFlight = 0;g_numFramesInFlight64,3276
static unsigned int     g_frameIndex = UINT_MAX;g_frameIndex65,3326
struct UniformsUniforms67,3378
    float MVP[4][4];MVP69,3398
static uint32_t __glsl_shader_vert_spv[] =__glsl_shader_vert_spv95,4120
static uint32_t __glsl_shader_frag_spv[] =__glsl_shader_frag_spv152,8305
static void SafeRelease(ImDrawIdx*& res)SafeRelease184,10956
static void SafeRelease(ImDrawVert*& res)SafeRelease190,11058
static void SafeRelease(WGPUBindGroupLayout& res)SafeRelease196,11161
static void SafeRelease(WGPUBindGroup& res)SafeRelease202,11291
static void SafeRelease(WGPUBuffer& res)SafeRelease208,11409
static void SafeRelease(WGPURenderPipeline& res)SafeRelease214,11521
static void SafeRelease(WGPUSampler& res)SafeRelease220,11649
static void SafeRelease(WGPUShaderModule& res)SafeRelease226,11763
static void SafeRelease(WGPUTextureView& res)SafeRelease232,11887
static void SafeRelease(WGPUTexture& res)SafeRelease238,12009
static void SafeRelease(RenderResources& res)SafeRelease245,12125
static void SafeRelease(FrameResources& res)SafeRelease256,12439
static WGPUProgrammableStageDescriptor ImGui_ImplWGPU_CreateShaderModule(uint32_t* binary_data, ImGui_ImplWGPU_CreateShaderModule264,12643
static WGPUBindGroup ImGui_ImplWGPU_CreateImageBindGroup(WGPUBindGroupLayout layout, WGPUTextureImGui_ImplWGPU_CreateImageBindGroup280,13287
static void ImGui_ImplWGPU_SetupRenderState(ImDrawData* draw_data, WGPURenderPassEncoder ctx, FrImGui_ImplWGPU_SetupRenderState291,13803
void ImGui_ImplWGPU_RenderDrawData(ImDrawData* draw_data, WGPURenderPassEncoder pass_encoder)ImGui_ImplWGPU_RenderDrawData326,15684
static void ImGui_ImplWGPU_CreateFontsTexture()ImGui_ImplWGPU_CreateFontsTexture459,21889
static void ImGui_ImplWGPU_CreateUniformBuffer()ImGui_ImplWGPU_CreateUniformBuffer525,24727
bool ImGui_ImplWGPU_CreateDeviceObjects()ImGui_ImplWGPU_CreateDeviceObjects538,25067
void ImGui_ImplWGPU_InvalidateDeviceObjects()ImGui_ImplWGPU_InvalidateDeviceObjects646,29896
bool ImGui_ImplWGPU_Init(WGPUDevice device, int num_frames_in_flight, WGPUTextureFormat rt_formaImGui_ImplWGPU_Init661,30314
void ImGui_ImplWGPU_Shutdown()ImGui_ImplWGPU_Shutdown699,31725
void ImGui_ImplWGPU_NewFrame()ImGui_ImplWGPU_NewFrame710,32001

../gejo/libs/imgui/backends/imgui_impl_wgpu.h,0

../gejo/libs/imgui/backends/imgui_impl_win32.cpp,4491
#define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN17,1016
typedef DWORD (WINAPI *PFN_XInputGetCapabilities)(DWORD, DWORD, XINPUT_CAPABILITIES*);PFN_XInputGetCapabilities29,1494
typedef DWORD (WINAPI *PFN_XInputGetState)(DWORD, XINPUT_STATE*);PFN_XInputGetState30,1582
static HWND                 g_hWnd = NULL;g_hWnd65,4992
static INT64                g_Time = 0;g_Time66,5036
static INT64                g_TicksPerSecond = 0;g_TicksPerSecond67,5077
static ImGuiMouseCursor     g_LastMouseCursor = ImGuiMouseCursor_COUNT;g_LastMouseCursor68,5128
static bool                 g_HasGamepad = false;g_HasGamepad69,5201
static bool                 g_WantUpdateHasGamepad = true;g_WantUpdateHasGamepad70,5252
static HMODULE                      g_XInputDLL = NULL;g_XInputDLL74,5385
static PFN_XInputGetCapabilities    g_XInputGetCapabilities = NULL;g_XInputGetCapabilities75,5442
static PFN_XInputGetState           g_XInputGetState = NULL;g_XInputGetState76,5511
bool    ImGui_ImplWin32_Init(void* hwnd)ImGui_ImplWin32_Init80,5597
void    ImGui_ImplWin32_Shutdown()ImGui_ImplWin32_Shutdown142,8167
static bool ImGui_ImplWin32_UpdateMouseCursor()ImGui_ImplWin32_UpdateMouseCursor161,8656
static void ImGui_ImplWin32_UpdateMousePos()ImGui_ImplWin32_UpdateMousePos194,10026
static void ImGui_ImplWin32_UpdateGamepads()ImGui_ImplWin32_UpdateGamepads217,10859
        #define MAP_BUTTON(MAP_BUTTON241,11917
        #define MAP_ANALOG(MAP_ANALOG242,12045
void    ImGui_ImplWin32_NewFrame()ImGui_ImplWin32_NewFrame265,13952
#define WM_MOUSEHWHEEL WM_MOUSEHWHEEL305,15655
#define DBT_DEVNODES_CHANGED DBT_DEVNODES_CHANGED308,15724
IMGUI_IMPL_API LRESULT ImGui_ImplWin32_WndProcHandler(HWND hwnd, UINT msg, WPARAM wParam, LPARAMImGui_ImplWin32_WndProcHandler323,16943
static BOOL IsWindowsVersionOrGreater(WORD major, WORD minor, WORD sp)IsWindowsVersionOrGreater414,21191
#define IsWindowsVistaOrGreater(IsWindowsVistaOrGreater423,21735
#define IsWindows8OrGreater(IsWindows8OrGreater424,21855
#define IsWindows8Point1OrGreater(IsWindows8Point1OrGreater425,21974
typedef enum { PROCESS_DPI_UNAWARE = 0, PROCESS_SYSTEM_DPI_AWARE = 1, PROCESS_PER_MONITOR_DPI_AW__anonab1bd4cd0103429,22134
typedef enum { PROCESS_DPI_UNAWARE = 0, PROCESS_SYSTEM_DPI_AWARE = 1, PROCESS_PER_MONITOR_DPI_AWPROCESS_DPI_UNAWARE429,22134
typedef enum { PROCESS_DPI_UNAWARE = 0, PROCESS_SYSTEM_DPI_AWARE = 1, PROCESS_PER_MONITOR_DPI_AWPROCESS_SYSTEM_DPI_AWARE429,22134
typedef enum { PROCESS_DPI_UNAWARE = 0, PROCESS_SYSTEM_DPI_AWARE = 1, PROCESS_PER_MONITOR_DPI_AWPROCESS_PER_MONITOR_DPI_AWARE429,22134
typedef enum { PROCESS_DPI_UNAWARE = 0, PROCESS_SYSTEM_DPI_AWARE = 1, PROCESS_PER_MONITOR_DPI_AWPROCESS_DPI_AWARENESS429,22134
typedef enum { MDT_EFFECTIVE_DPI = 0, MDT_ANGULAR_DPI = 1, MDT_RAW_DPI = 2, MDT_DEFAULT = MDT_EF__anonab1bd4cd0203430,22264
typedef enum { MDT_EFFECTIVE_DPI = 0, MDT_ANGULAR_DPI = 1, MDT_RAW_DPI = 2, MDT_DEFAULT = MDT_EFMDT_EFFECTIVE_DPI430,22264
typedef enum { MDT_EFFECTIVE_DPI = 0, MDT_ANGULAR_DPI = 1, MDT_RAW_DPI = 2, MDT_DEFAULT = MDT_EFMDT_ANGULAR_DPI430,22264
typedef enum { MDT_EFFECTIVE_DPI = 0, MDT_ANGULAR_DPI = 1, MDT_RAW_DPI = 2, MDT_DEFAULT = MDT_EFMDT_RAW_DPI430,22264
typedef enum { MDT_EFFECTIVE_DPI = 0, MDT_ANGULAR_DPI = 1, MDT_RAW_DPI = 2, MDT_DEFAULT = MDT_EFMDT_DEFAULT430,22264
typedef enum { MDT_EFFECTIVE_DPI = 0, MDT_ANGULAR_DPI = 1, MDT_RAW_DPI = 2, MDT_DEFAULT = MDT_EFMONITOR_DPI_TYPE430,22264
#define DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE434,22475
#define DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2 DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2437,22613
typedef HRESULT(WINAPI* PFN_SetProcessDpiAwareness)(PROCESS_DPI_AWARENESS);                     PFN_SetProcessDpiAwareness439,22699
typedef HRESULT(WINAPI* PFN_GetDpiForMonitor)(HMONITOR, MONITOR_DPI_TYPE, UINT*, UINT*);        PFN_GetDpiForMonitor440,22830
typedef DPI_AWARENESS_CONTEXT(WINAPI* PFN_SetThreadDpiAwarenessContext)(DPI_AWARENESS_CONTEXT); PFN_SetThreadDpiAwarenessContext441,22961
void ImGui_ImplWin32_EnableDpiAwareness()ImGui_ImplWin32_EnableDpiAwareness444,23191
float ImGui_ImplWin32_GetDpiScaleForMonitor(void* monitor)ImGui_ImplWin32_GetDpiScaleForMonitor473,24437
float ImGui_ImplWin32_GetDpiScaleForHwnd(void* hwnd)ImGui_ImplWin32_GetDpiScaleForHwnd496,25294
void ImGui_ImplWin32_EnableAlphaCompositing(void* hwnd)ImGui_ImplWin32_EnableAlphaCompositing513,26089

../gejo/libs/imgui/backends/imgui_impl_win32.h,0

../gejo/libs/imgui/backends/vulkan/generate_spv.sh,0

../gejo/libs/imgui/backends/vulkan/glsl_shader.frag,0

../gejo/libs/imgui/backends/vulkan/glsl_shader.vert,0

../gejo/libs/imgui/docs/BACKENDS.md,464
## Dear ImGui: BackendsDear ImGui: Backends3,135
### What are backendsWhat are backends23,2398
### Integrating a backendIntegrating a backend51,3726
### List of backendsList of backends56,3888
### Backends for third-party frameworks, graphics API or other languagesBackends for third-party frameworks, graphics API or other languages89,5459
### Recommended BackendsRecommended Backends93,5608
### Using a custom engine?Using a custom engine?104,6103

../gejo/libs/imgui/docs/CHANGELOG.txt,0

../gejo/libs/imgui/docs/EXAMPLES.md,192
## Dear ImGui: ExamplesDear ImGui: Examples3,135
### Getting StartedGetting Started16,965
### Examples ApplicationsExamples Applications80,3374
### MiscallaneousMiscallaneous209,11614

../gejo/libs/imgui/docs/FAQ.md,5351
# FAQ (Frequenty Asked Questions)FAQ (Frequenty Asked Questions)1,0
## IndexIndex10,250
# Q&A: BasicsQ&A: Basics46,3602
### Q: Where is the documentation?Q: Where is the documentation?48,3619
##### [Return to Index](#index)[Return to Index](#index)61,5428
### Q. What is this library called?Q. What is this library called?65,5470
##### [Return to Index](#index)[Return to Index](#index)71,6152
### Q: Which version should I get?Q: Which version should I get?75,6194
##### [Return to Index](#index)[Return to Index](#index)84,6782
# Q&A: IntegrationQ&A: Integration88,6825
### Q: How to get started?Q: How to get started?90,6847
##### [Return to Index](#index)[Return to Index](#index)97,7256
### Q: How can I tell whether to dispatch mouse/keyboard to Dear ImGui or my application?Q: How can I tell whether to dispatch mouse/keyboard to Dear ImGui or my application?101,7298
##### [Return to Index](#index)[Return to Index](#index)132,9905
### Q: How can I enable keyboard or gamepad controls?Q: How can I enable keyboard or gamepad controls?136,9947
##### [Return to Index](#index)[Return to Index](#index)143,10797
### Q: How can I use this on a machine without mouse, keyboard or screen? (input share, remote dQ: How can I use this on a machine without mouse, keyboard or screen? (input share, remote display)147,10839
##### [Return to Index](#index)[Return to Index](#index)158,12402
### Q: I integrated Dear ImGui in my engine and little squares are showing instead of text...Q: I integrated Dear ImGui in my engine and little squares are showing instead of text...162,12444
##### [Return to Index](#index)[Return to Index](#index)166,12964
### Q: I integrated Dear ImGui in my engine and some elements are clipping or disappearing when Q: I integrated Dear ImGui in my engine and some elements are clipping or disappearing when I move windows around...170,13006
### Q: I integrated Dear ImGui in my engine and some elements are displaying outside their expecQ: I integrated Dear ImGui in my engine and some elements are displaying outside their expected windows boundaries...171,13128
##### [Return to Index](#index)[Return to Index](#index)180,13763
# Q&A: UsageQ&A: Usage184,13805
### Q: Why is my widget not reacting when I click on it?Q: Why is my widget not reacting when I click on it?186,13821
### Q: How can I have widgets with an empty label?Q: How can I have widgets with an empty label?187,13879
### Q: How can I have multiple widgets with the same label?Q: How can I have multiple widgets with the same label?188,13931
##### [Return to Index](#index)[Return to Index](#index)316,19547
### Q: How can I display an image? What is ImTextureID, how does it work?Q: How can I display an image? What is ImTextureID, how does it work?320,19589
##### [Return to Index](#index)[Return to Index](#index)398,25604
### Q: How can I use my own math types instead of ImVec2/ImVec4?Q: How can I use my own math types instead of ImVec2/ImVec4?402,25646
##### [Return to Index](#index)[Return to Index](#index)407,26038
### Q: How can I interact with standard C++ types (such as std::string and std::vector)?Q: How can I interact with standard C++ types (such as std::string and std::vector)?411,26080
##### [Return to Index](#index)[Return to Index](#index)431,28426
### Q: How can I display custom shapes? (using low-level ImDrawList API)Q: How can I display custom shapes? (using low-level ImDrawList API)435,28468
##### [Return to Index](#index)[Return to Index](#index)467,31410
# Q&A: Fonts, TextQ&A: Fonts, Text471,31452
### Q: How should I handle DPI in my application?Q: How should I handle DPI in my application?473,31474
### Q: How can I load a different font than the default?Q: How can I load a different font than the default?496,33826
##### [Return to Index](#index)[Return to Index](#index)520,34923
### Q: How can I easily use icons in my application?Q: How can I easily use icons in my application?524,34965
##### [Return to Index](#index)[Return to Index](#index)532,35644
### Q: How can I load multiple fonts?Q: How can I load multiple fonts?536,35686
##### [Return to Index](#index)[Return to Index](#index)566,37080
### Q: How can I display and input non-Latin characters such as Chinese, Japanese, Korean, CyrilQ: How can I display and input non-Latin characters such as Chinese, Japanese, Korean, Cyrillic?570,37122
##### [Return to Index](#index)[Return to Index](#index)599,39204
# Q&A: ConcernsQ&A: Concerns603,39246
### Q: Who uses Dear ImGui?Q: Who uses Dear ImGui?605,39265
##### [Return to Index](#index)[Return to Index](#index)614,39600
### Q: Can you create elaborate/serious tools with Dear ImGui?Q: Can you create elaborate/serious tools with Dear ImGui?618,39642
##### [Return to Index](#index)[Return to Index](#index)626,40690
### Q: Can you reskin the look of Dear ImGui?Q: Can you reskin the look of Dear ImGui?630,40732
##### [Return to Index](#index)[Return to Index](#index)637,41495
### Q: Why using C++ (as opposed to C)?Q: Why using C++ (as opposed to C)?641,41537
##### [Return to Index](#index)[Return to Index](#index)647,42680
# Q&A: CommunityQ&A: Community651,42722
### Q: How can I help?Q: How can I help?653,42742
##### [Return to Index](#index)[Return to Index](#index)661,44222

../gejo/libs/imgui/docs/FONTS.md,1852
## Dear ImGui: Using FontsDear ImGui: Using Fonts3,132
## IndexIndex13,866
##### [Return to Index](#index)[Return to Index](#index)44,2558
## How should I handle DPI in my application?How should I handle DPI in my application?46,2593
##### [Return to Index](#index)[Return to Index](#index)50,2764
## Font Loading InstructionsFont Loading Instructions53,2801
##### [Return to Index](#index)[Return to Index](#index)162,7616
## Using Icon FontsUsing Icon Fonts164,7651
##### [Return to Index](#index)[Return to Index](#index)199,9323
## Using FreeType Rasterizer (imgui_freetype)Using FreeType Rasterizer (imgui_freetype)201,9358
##### [Return to Index](#index)[Return to Index](#index)209,10109
## Using Colorful Glyphs/EmojisUsing Colorful Glyphs/Emojis211,10144
##### [Return to Index](#index)[Return to Index](#index)231,11184
## Using Custom Glyph RangesUsing Custom Glyph Ranges233,11219
##### [Return to Index](#index)[Return to Index](#index)248,12208
## Using Custom Colorful IconsUsing Custom Colorful Icons250,12243
#### Pseudo-code:Pseudo-code:258,13147
##### [Return to Index](#index)[Return to Index](#index)290,14274
## Using Font Data Embedded In Source CodeUsing Font Data Embedded In Source Code292,14309
##### [Return to Index](#index)[Return to Index](#index)308,15366
## About filenamesAbout filenames310,15401
##### [Return to Index](#index)[Return to Index](#index)330,16703
## Credits/Licenses For Fonts Included In RepositoryCredits/Licenses For Fonts Included In Repository332,16738
##### [Return to Index](#index)[Return to Index](#index)362,17707
## Font LinksFont Links364,17742
#### ICON FONTSICON FONTS366,17759
#### REGULAR FONTSREGULAR FONTS375,18247
#### MONOSPACE FONTSMONOSPACE FONTS381,18519
##### [Return to Index](#index)[Return to Index](#index)397,19433

../gejo/libs/imgui/docs/README.md,494
Dear ImGuiDear ImGui1,0
### UsageUsage28,2635
### How it worksHow it works88,6153
### Releases & ChangelogsReleases & Changelogs96,7654
### DemoDemo101,7932
### IntegrationIntegration112,8951
### Upcoming ChangesUpcoming Changes133,11638
### GalleryGallery142,12414
### Support, Frequently Asked Questions (FAQ)Support, Frequently Asked Questions (FAQ)157,13342
How to helpHow to help179,15059
SponsorsSponsors193,15965
CreditsCredits214,17697
LicenseLicense232,19559

../gejo/libs/imgui/docs/TODO.txt,0

../gejo/libs/imgui/examples/example_allegro5/example_allegro5.vcxproj,0

../gejo/libs/imgui/examples/example_allegro5/example_allegro5.vcxproj.filters,0

../gejo/libs/imgui/examples/example_allegro5/imconfig_allegro5.h,36
#define ImDrawIdx ImDrawIdx11,543

../gejo/libs/imgui/examples/example_allegro5/main.cpp,34
int main(int, char**)main11,384

../gejo/libs/imgui/examples/example_allegro5/README.md,217
# ConfigurationConfiguration2,2
# How to BuildHow to Build10,609
### On Ubuntu 14.04+ and macOSOn Ubuntu 14.04+ and macOS12,627
### On Windows with Visual Studio's CLIOn Windows with Visual Studio's CLI20,966

../gejo/libs/imgui/examples/example_android_opengl3/android/app/build.gradle,0

../gejo/libs/imgui/examples/example_android_opengl3/android/app/src/main/AndroidManifest.xml,51
    package="imgui.example.android">android3,110

../gejo/libs/imgui/examples/example_android_opengl3/android/app/src/main/java/MainActivity.kt,797
package imgui.example.androidimgui.example.android1,0
class MainActivity : NativeActivity() {MainActivity10,259
    public override fun onCreate(savedInstanceState: Bundle?) {onCreate11,300
    fun showSoftInput() {showSoftInput15,418
        val inputMethodManager = getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodMainputMethodManager16,445
    fun hideSoftInput() {hideSoftInput20,625
        val inputMethodManager = getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodMainputMethodManager21,652
    private var unicodeCharacterQueue: LinkedBlockingQueue<Int> = LinkedBlockingQueue()unicodeCharacterQueue26,949
    override fun dispatchKeyEvent(event: KeyEvent): Boolean {dispatchKeyEvent30,1197
    fun pollUnicodeChar(): Int {pollUnicodeChar37,1459

../gejo/libs/imgui/examples/example_android_opengl3/android/build.gradle,0

../gejo/libs/imgui/examples/example_android_opengl3/android/settings.gradle,0

../gejo/libs/imgui/examples/example_android_opengl3/CMakeLists.txt,280
project(ImGuiExample)ImGuiExample3,39
set(CMAKE_CXX_STANDARD 11)CMAKE_CXX_STANDARD5,64
set(CMAKE_CXX_STANDARD_REQUIRED ON)CMAKE_CXX_STANDARD_REQUIRED6,92
set(CMAKE_CXX_EXTENSIONS OFF)CMAKE_CXX_EXTENSIONS7,129
set(CMAKE_SHARED_LINKER_FLAGSCMAKE_SHARED_LINKER_FLAGS21,723

../gejo/libs/imgui/examples/example_android_opengl3/main.cpp,1016
static EGLDisplay           g_EglDisplay = EGL_NO_DISPLAY;g_EglDisplay14,419
static EGLSurface           g_EglSurface = EGL_NO_SURFACE;g_EglSurface15,479
static EGLContext           g_EglContext = EGL_NO_CONTEXT;g_EglContext16,539
static struct android_app*  g_App = NULL;g_App17,599
static bool                 g_Initialized = false;g_Initialized18,642
static char                 g_LogTag[] = "ImGuiExample";g_LogTag19,694
void init(struct android_app* app)init26,935
void tick()tick125,6172
void shutdown()shutdown197,9226
static void handleAppCmd(struct android_app* app, int32_t appCmd)handleAppCmd228,9991
static int32_t handleInputEvent(struct android_app* app, AInputEvent* inputEvent)handleInputEvent247,10376
void android_main(struct android_app* app)android_main252,10527
static int ShowSoftKeyboardInput()ShowSoftKeyboardInput288,11755
static int PollUnicodeChars()PollUnicodeChars321,12855
static int GetAssetData(const char* filename, void** outData)GetAssetData356,13989

../gejo/libs/imgui/examples/example_apple_metal/example_apple_metal.xcodeproj/project.pbxproj,0

../gejo/libs/imgui/examples/example_apple_metal/iOS/Info-iOS.plist,985
	<key>CFBundleDevelopmentRegion</key>CFBundleDevelopmentRegion5,171
	<key>CFBundleExecutable</key>CFBundleExecutable7,251
	<key>CFBundleIdentifier</key>CFBundleIdentifier9,319
	<key>CFBundleInfoDictionaryVersion</key>CFBundleInfoDictionaryVersion11,397
	<key>CFBundleName</key>CFBundleName13,461
	<key>CFBundlePackageType</key>CFBundlePackageType15,510
	<key>CFBundleShortVersionString</key>CFBundleShortVersionString17,565
	<key>CFBundleVersion</key>CFBundleVersion19,626
	<key>LSRequiresIPhoneOS</key>LSRequiresIPhoneOS21,674
	<key>UILaunchStoryboardName</key>UILaunchStoryboardName23,714
	<key>UIRequiredDeviceCapabilities</key>UIRequiredDeviceCapabilities25,780
	<key>UIRequiresFullScreen</key>UIRequiresFullScreen30,890
	<key>UIStatusBarHidden</key>UIStatusBarHidden32,932
	<key>UISupportedInterfaceOrientations</key>UISupportedInterfaceOrientations34,971
	<key>UISupportedInterfaceOrientations~ipad</key>UISupportedInterfaceOrientations~ipad41,1256

../gejo/libs/imgui/examples/example_apple_metal/iOS/LaunchScreen.storyboard,0

../gejo/libs/imgui/examples/example_apple_metal/macOS/Info-macOS.plist,721
	<key>CFBundleDevelopmentRegion</key>CFBundleDevelopmentRegion5,171
	<key>CFBundleExecutable</key>CFBundleExecutable7,251
	<key>CFBundleIconFile</key>CFBundleIconFile9,319
	<key>CFBundleIdentifier</key>CFBundleIdentifier11,367
	<key>CFBundleInfoDictionaryVersion</key>CFBundleInfoDictionaryVersion13,445
	<key>CFBundleName</key>CFBundleName15,509
	<key>CFBundlePackageType</key>CFBundlePackageType17,558
	<key>CFBundleShortVersionString</key>CFBundleShortVersionString19,613
	<key>CFBundleVersion</key>CFBundleVersion21,674
	<key>LSMinimumSystemVersion</key>LSMinimumSystemVersion23,722
	<key>NSMainStoryboardFile</key>NSMainStoryboardFile25,803
	<key>NSPrincipalClass</key>NSPrincipalClass27,863

../gejo/libs/imgui/examples/example_apple_metal/macOS/MainMenu.storyboard,0

../gejo/libs/imgui/examples/example_apple_metal/main.mm,2214
@interface ViewController : NSViewControllerViewController22,521
@interface ViewController : UIViewControllerViewController25,580
@interface ViewController () <MTKViewDelegate>ViewController29,642
@interface ViewController () <MTKViewDelegate>MTKViewDelegate29,642
@property (nonatomic, readonly) MTKView *mtkView;mtkView30,690
@property (nonatomic, strong) id <MTLDevice> device;device31,741
@property (nonatomic, strong) id <MTLCommandQueue> commandQueue;commandQueue32,795
@implementation ViewControllerViewController35,869
{initWithNibName:bundle:38,1013
{mtkView84,3280
{loadView89,3340
{viewDidLoad94,3447
- (void)mouseMoved:(NSEvent *)event {mouseMoved:129,5028
- (void)mouseDown:(NSEvent *)event {mouseDown:133,5122
- (void)rightMouseDown:(NSEvent *)event {rightMouseDown:137,5215
- (void)otherMouseDown:(NSEvent *)event {otherMouseDown:141,5313
- (void)mouseUp:(NSEvent *)event {mouseUp:145,5411
- (void)rightMouseUp:(NSEvent *)event {rightMouseUp:149,5502
- (void)otherMouseUp:(NSEvent *)event {otherMouseUp:153,5598
- (void)mouseDragged:(NSEvent *)event {mouseDragged:157,5694
- (void)rightMouseDragged:(NSEvent *)event {rightMouseDragged:161,5790
- (void)otherMouseDragged:(NSEvent *)event {otherMouseDragged:165,5891
- (void)scrollWheel:(NSEvent *)event {scrollWheel:169,5992
{updateIOWithTouchEvent:181,6517
{touchesBegan:withEvent:200,7113
{touchesMoved:withEvent:205,7240
{touchesCancelled:withEvent:210,7371
{touchesEnded:withEvent:215,7498
{drawInMTKView:224,7630
{mtkView:drawableSizeWillChange:314,11753
@interface AppDelegate : NSObject <NSApplicationDelegate>AppDelegate323,11829
@property (nonatomic, strong) NSWindow *window;window324,11888
@implementation AppDelegateAppDelegate327,11945
{init330,11998
{applicationShouldTerminateAfterLastWindowClosed:347,12828
@interface AppDelegate : UIResponder <UIApplicationDelegate>AppDelegate355,12870
@property (strong, nonatomic) UIWindow *window;window356,12932
@implementation AppDelegateAppDelegate359,12989
{application:didFinishLaunchingWithOptions:363,13169
int main(int argc, const char * argv[])main379,13509
int main(int argc, char * argv[])main386,13610

../gejo/libs/imgui/examples/example_apple_metal/README.md,88
# iOS / OSX Metal exampleiOS / OSX Metal example1,0
## IntroductionIntroduction3,29

../gejo/libs/imgui/examples/example_apple_opengl2/example_apple_opengl2.xcodeproj/project.pbxproj,0

../gejo/libs/imgui/examples/example_apple_opengl2/main.mm,2648
@interface ImGuiExampleView : NSOpenGLViewImGuiExampleView17,670
    NSTimer*    animationTimer;animationTimer19,717
@implementation ImGuiExampleViewImGuiExampleView23,761
{animationTimerFired:26,841
{prepareOpenGL31,904
{updateAndDrawDemoView43,1194
{reshape112,4305
{drawRect:118,4416
{acceptsFirstResponder123,4489
{becomeFirstResponder128,4545
{resignFirstResponder133,4601
{dealloc138,4644
-(void)keyUp:(NSEvent *)event               { ImGui_ImplOSX_HandleEvent(event, self); }keyUp:143,4740
-(void)keyDown:(NSEvent *)event             { ImGui_ImplOSX_HandleEvent(event, self); }keyDown:144,4829
-(void)flagsChanged:(NSEvent *)event        { ImGui_ImplOSX_HandleEvent(event, self); }flagsChanged:145,4918
-(void)mouseDown:(NSEvent *)event           { ImGui_ImplOSX_HandleEvent(event, self); }mouseDown:146,5007
-(void)rightMouseDown:(NSEvent *)event      { ImGui_ImplOSX_HandleEvent(event, self); }rightMouseDown:147,5096
-(void)otherMouseDown:(NSEvent *)event      { ImGui_ImplOSX_HandleEvent(event, self); }otherMouseDown:148,5185
-(void)mouseUp:(NSEvent *)event             { ImGui_ImplOSX_HandleEvent(event, self); }mouseUp:149,5274
-(void)rightMouseUp:(NSEvent *)event        { ImGui_ImplOSX_HandleEvent(event, self); }rightMouseUp:150,5363
-(void)otherMouseUp:(NSEvent *)event        { ImGui_ImplOSX_HandleEvent(event, self); }otherMouseUp:151,5452
-(void)mouseMoved:(NSEvent *)event          { ImGui_ImplOSX_HandleEvent(event, self); }mouseMoved:152,5541
-(void)rightMouseMoved:(NSEvent *)event     { ImGui_ImplOSX_HandleEvent(event, self); }rightMouseMoved:153,5630
-(void)otherMouseMoved:(NSEvent *)event     { ImGui_ImplOSX_HandleEvent(event, self); }otherMouseMoved:154,5719
-(void)mouseDragged:(NSEvent *)event        { ImGui_ImplOSX_HandleEvent(event, self); }mouseDragged:155,5808
-(void)rightMouseDragged:(NSEvent *)event   { ImGui_ImplOSX_HandleEvent(event, self); }rightMouseDragged:156,5897
-(void)otherMouseDragged:(NSEvent *)event   { ImGui_ImplOSX_HandleEvent(event, self); }otherMouseDragged:157,5986
-(void)scrollWheel:(NSEvent *)event         { ImGui_ImplOSX_HandleEvent(event, self); }scrollWheel:158,6075
@interface ImGuiExampleAppDelegate : NSObject <NSApplicationDelegate>ImGuiExampleAppDelegate166,6378
@property (nonatomic, readonly) NSWindow* window;window167,6449
@implementation ImGuiExampleAppDelegateImGuiExampleAppDelegate170,6508
{applicationShouldTerminateAfterLastWindowClosed:174,6670
{window179,6715
{setupMenu195,7303
{dealloc214,7890
{applicationDidFinishLaunching:219,7988
int main(int argc, const char* argv[])main280,10927

../gejo/libs/imgui/examples/example_emscripten_opengl3/main.cpp,193
SDL_Window*     g_Window = NULL;g_Window20,1160
SDL_GLContext   g_GLContext = NULL;g_GLContext21,1194
int main(int, char**)main26,1326
static void main_loop(void* arg)main_loop102,5476

../gejo/libs/imgui/examples/example_emscripten_opengl3/Makefile,655
CC = emccCC16,427
CXX = em++CXX17,437
EXE = $(WEB_DIR)/index.htmlEXE19,462
IMGUI_DIR = ../..IMGUI_DIR20,490
SOURCES = main.cppSOURCES21,508
OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))OBJS24,775
UNAME_S := $(shell uname -s)UNAME_S25,832
USE_FILE_SYSTEM ?= 0USE_FILE_SYSTEM44,1830
CPPFLAGS = -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backendsCPPFLAGS56,2210
%.o:%.cpp%.o67,2545
%.o:$(IMGUI_DIR)/%.cpp%.o70,2600
%.o:$(IMGUI_DIR)/backends/%.cpp%.o73,2668
%.o:../libs/gl3w/GL/%.c%.o76,2745
all: $(EXE)all79,2811
$(WEB_DIR):$(WEB_DIR)82,2857
serve: allserve85,2880
$(EXE): $(OBJS) $(WEB_DIR)$(EXE)88,2930
clean:clean91,2999

../gejo/libs/imgui/examples/example_emscripten_opengl3/README.md,113
## How to BuildHow to Build1,0
## How to RunHow to Run8,638
## Obsolete features:Obsolete features:19,1959

../gejo/libs/imgui/examples/example_emscripten_opengl3/shell_minimal.html,107
    <canvas class="emscripten" id="canvas" oncontextmenu="event.preventDefault()"></canvas>canvas31,1015

../gejo/libs/imgui/examples/example_emscripten_wgpu/main.cpp,893
static WGPUDevice    wgpu_device = NULL;wgpu_device18,690
static WGPUSurface   wgpu_surface = NULL;wgpu_surface19,732
static WGPUSwapChain wgpu_swap_chain = NULL;wgpu_swap_chain20,775
static int           wgpu_swap_chain_width = 0;wgpu_swap_chain_width21,821
static int           wgpu_swap_chain_height = 0;wgpu_swap_chain_height22,870
static bool show_demo_window = true;show_demo_window25,962
static bool show_another_window = false;show_another_window26,1000
static ImVec4 clear_color = ImVec4(0.45f, 0.55f, 0.60f, 1.00f);clear_color27,1042
int main(int, char**)main35,1352
static bool init_wgpu()init_wgpu107,4670
static void main_loop(void* window)main_loop131,5464
static void print_glfw_error(int error, const char* description)print_glfw_error228,9776
static void print_wgpu_error(WGPUErrorType error_type, const char* message, void*)print_wgpu_error233,9906

../gejo/libs/imgui/examples/example_emscripten_wgpu/Makefile,617
CC = emccCC16,462
CXX = em++CXX17,472
EXE = $(WEB_DIR)/index.jsEXE19,497
IMGUI_DIR = ../..IMGUI_DIR20,523
SOURCES = main.cppSOURCES21,541
OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))OBJS24,806
UNAME_S := $(shell uname -s)UNAME_S25,863
USE_FILE_SYSTEM ?= 0USE_FILE_SYSTEM40,1656
CPPFLAGS = -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backendsCPPFLAGS52,2036
%.o:%.cpp%.o63,2372
%.o:$(IMGUI_DIR)/%.cpp%.o66,2427
%.o:$(IMGUI_DIR)/backends/%.cpp%.o69,2495
all: $(EXE)all72,2572
$(WEB_DIR):$(WEB_DIR)75,2618
serve: allserve78,2641
$(EXE): $(OBJS) $(WEB_DIR)$(EXE)81,2691
clean:clean84,2760

../gejo/libs/imgui/examples/example_emscripten_wgpu/README.md,32
# How to BuildHow to Build2,2

../gejo/libs/imgui/examples/example_emscripten_wgpu/web/index.html,107
    <canvas class="emscripten" id="canvas" oncontextmenu="event.preventDefault()"></canvas>canvas31,1022

../gejo/libs/imgui/examples/example_glfw_metal/main.mm,245
#define GLFW_INCLUDE_NONEGLFW_INCLUDE_NONE11,506
#define GLFW_EXPOSE_NATIVE_COCOAGLFW_EXPOSE_NATIVE_COCOA12,533
static void glfw_error_callback(int error, const char* description)glfw_error_callback19,687
int main(int, char**)main24,829

../gejo/libs/imgui/examples/example_glfw_metal/Makefile,663
EXE = example_glfw_metalEXE9,98
IMGUI_DIR = ../..IMGUI_DIR10,123
SOURCES = main.mmSOURCES11,141
OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))OBJS14,405
LIBS = -framework Metal -framework MetalKit -framework Cocoa -framework IOKit -framework CoreVidLIBS16,463
CXXFLAGS = -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends -I/usr/local/include -I/opt/homebrew/includeCXXFLAGS20,645
CFLAGS = $(CXXFLAGS)CFLAGS22,767
%.o:%.cpp%.o24,789
%.o:$(IMGUI_DIR)/%.cpp%.o27,832
%.o:$(IMGUI_DIR)/backends/%.cpp%.o30,888
%.o:%.mm%.o33,953
%.o:$(IMGUI_DIR)/backends/%.mm%.o36,1026
all: $(EXE)all39,1121
$(EXE): $(OBJS)$(EXE)42,1156
clean:clean45,1210

../gejo/libs/imgui/examples/example_glfw_opengl2/build_win32.bat,371
@set OUT_DIR=DebugOUT_DIR2,119
@set OUT_EXE=example_glfw_opengl2OUT_EXE3,139
@set INCLUDES=/I..\.. /I..\..\backends /I..\libs\glfw\includeINCLUDES4,174
@set SOURCES=main.cpp ..\..\backends\imgui_impl_opengl2.cpp ..\..\backends\imgui_impl_glfw.cpp .SOURCES5,237
@set LIBS=/LIBPATH:..\libs\glfw\lib-vc2010-32 glfw3.lib opengl32.lib gdi32.lib shell32.libLIBS6,350

../gejo/libs/imgui/examples/example_glfw_opengl2/example_glfw_opengl2.vcxproj,0

../gejo/libs/imgui/examples/example_glfw_opengl2/example_glfw_opengl2.vcxproj.filters,0

../gejo/libs/imgui/examples/example_glfw_opengl2/main.cpp,192
#define GL_SILENCE_DEPRECATIONGL_SILENCE_DEPRECATION15,733
static void glfw_error_callback(int error, const char* description)glfw_error_callback26,1376
int main(int, char**)main31,1518

../gejo/libs/imgui/examples/example_glfw_opengl2/Makefile,731
EXE = example_glfw_opengl2EXE17,331
IMGUI_DIR = ../..IMGUI_DIR18,358
SOURCES = main.cppSOURCES19,376
OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))OBJS22,644
UNAME_S := $(shell uname -s)UNAME_S23,701
CXXFLAGS = -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backendsCXXFLAGS25,731
LIBS =LIBS27,811
	ECHO_MESSAGE = "Linux"ECHO_MESSAGE34,1024
	CFLAGS = $(CXXFLAGS)CFLAGS38,1139
	ECHO_MESSAGE = "Mac OS X"ECHO_MESSAGE42,1201
	CFLAGS = $(CXXFLAGS)CFLAGS49,1487
	ECHO_MESSAGE = "MinGW"ECHO_MESSAGE53,1541
	CFLAGS = $(CXXFLAGS)CFLAGS57,1651
%.o:%.cpp%.o64,1840
%.o:$(IMGUI_DIR)/%.cpp%.o67,1883
%.o:$(IMGUI_DIR)/backends/%.cpp%.o70,1939
all: $(EXE)all73,2004
$(EXE): $(OBJS)$(EXE)76,2059
clean:clean79,2113

../gejo/libs/imgui/examples/example_glfw_opengl3/build_win32.bat,386
@set OUT_DIR=DebugOUT_DIR2,119
@set OUT_EXE=example_glfw_opengl3OUT_EXE3,139
@set INCLUDES=/I..\.. /I..\..\backends /I..\libs\glfw\include /I..\libs\gl3wINCLUDES4,174
@set SOURCES=main.cpp ..\..\backends\imgui_impl_glfw.cpp ..\..\backends\imgui_impl_opengl3.cpp .SOURCES5,252
@set LIBS=/LIBPATH:..\libs\glfw\lib-vc2010-32 glfw3.lib opengl32.lib gdi32.lib shell32.libLIBS6,389

../gejo/libs/imgui/examples/example_glfw_opengl3/example_glfw_opengl3.vcxproj,0

../gejo/libs/imgui/examples/example_glfw_opengl3/example_glfw_opengl3.vcxproj.filters,0

../gejo/libs/imgui/examples/example_glfw_opengl3/main.cpp,362
#define GLFW_INCLUDE_NONE GLFW_INCLUDE_NONE26,1475
#define GLFW_INCLUDE_NONE GLFW_INCLUDE_NONE31,1777
static void glfw_error_callback(int error, const char* description)glfw_error_callback49,2729
int main(int, char**)main54,2871
    glbinding::initialize([](const char* name) { return (glbinding::ProcAddress)glfwGetProcAddre__anonf85287390102105,4984

../gejo/libs/imgui/examples/example_glfw_opengl3/Makefile,854
EXE = example_glfw_opengl3EXE17,331
IMGUI_DIR = ../..IMGUI_DIR18,358
SOURCES = main.cppSOURCES19,376
OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))OBJS22,644
UNAME_S := $(shell uname -s)UNAME_S23,701
LINUX_GL_LIBS = -lGLLINUX_GL_LIBS24,730
CXXFLAGS = -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backendsCXXFLAGS26,752
LIBS =LIBS28,832
	ECHO_MESSAGE = "Linux"ECHO_MESSAGE73,2373
	CFLAGS = $(CXXFLAGS)CFLAGS77,2500
	ECHO_MESSAGE = "Mac OS X"ECHO_MESSAGE81,2562
	CFLAGS = $(CXXFLAGS)CFLAGS88,2848
	ECHO_MESSAGE = "MinGW"ECHO_MESSAGE92,2902
	CFLAGS = $(CXXFLAGS)CFLAGS96,3012
%.o:%.cpp%.o103,3201
%.o:$(IMGUI_DIR)/%.cpp%.o106,3244
%.o:$(IMGUI_DIR)/backends/%.cpp%.o109,3300
%.o:../libs/gl3w/GL/%.c%.o112,3365
%.o:../libs/glad/src/%.c%.o115,3419
all: $(EXE)all118,3474
$(EXE): $(OBJS)$(EXE)121,3529
clean:clean124,3583

../gejo/libs/imgui/examples/example_glfw_vulkan/build_win32.bat,436
@set OUT_EXE=example_glfw_vulkanOUT_EXE3,121
@set INCLUDES=/I..\.. /I..\..\backends /I..\libs\glfw\include /I %VULKAN_SDK%\includeINCLUDES4,155
@set SOURCES=main.cpp ..\..\backends\imgui_impl_vulkan.cpp ..\..\backends\imgui_impl_glfw.cpp ..SOURCES5,242
@set LIBS=/LIBPATH:..\libs\glfw\lib-vc2010-32 /libpath:%VULKAN_SDK%\lib32 glfw3.lib opengl32.libLIBS6,354
@set OUT_DIR=DebugOUT_DIR8,489
@set OUT_DIR=ReleaseOUT_DIR12,623

../gejo/libs/imgui/examples/example_glfw_vulkan/build_win64.bat,389
@set INCLUDES=/I..\.. /I..\..\backends /I..\libs\glfw\include /I %VULKAN_SDK%\includeINCLUDES3,117
@set SOURCES=main.cpp ..\..\backends\imgui_impl_vulkan.cpp ..\..\backends\imgui_impl_glfw.cpp ..SOURCES4,204
@set LIBS=/LIBPATH:..\libs\glfw\lib-vc2010-64 /libpath:%VULKAN_SDK%\lib glfw3.lib opengl32.lib gLIBS5,316
@set OUT_DIR=DebugOUT_DIR7,449
@set OUT_DIR=ReleaseOUT_DIR11,583

../gejo/libs/imgui/examples/example_glfw_vulkan/CMakeLists.txt,1056
project(imgui_example_glfw_vulkan C CXX)imgui_example_glfw_vulkan7,126
  set(CMAKE_BUILD_TYPE Debug CACHE STRING "" FORCE)CMAKE_BUILD_TYPE10,196
set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -DVK_PROTOTYPES")CMAKE_C_FLAGS13,260
set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DVK_PROTOTYPES")CMAKE_CXX_FLAGS14,316
set(GLFW_DIR ../../../glfw) # Set this to point to an up-to-date GLFW repoGLFW_DIR17,386
option(GLFW_BUILD_EXAMPLES "Build the GLFW example programs" OFF)GLFW_BUILD_EXAMPLES18,462
option(GLFW_BUILD_TESTS "Build the GLFW test programs" OFF)GLFW_BUILD_TESTS19,529
option(GLFW_BUILD_DOCS "Build the GLFW documentation" OFF)GLFW_BUILD_DOCS20,590
option(GLFW_INSTALL "Generate installation target" OFF)GLFW_INSTALL21,650
option(GLFW_DOCUMENT_INTERNALS "Include internals in documentation" OFF)GLFW_DOCUMENT_INTERNALS22,707
set(IMGUI_DIR ../../)IMGUI_DIR27,898
set(LIBRARIES "glfw;Vulkan::Vulkan")LIBRARIES35,1126
add_executable(example_glfw_vulkan ${sources} ${IMGUI_DIR}/backends/imgui_impl_glfw.cpp ${IMGUI_example_glfw_vulkan42,1268

../gejo/libs/imgui/examples/example_glfw_vulkan/example_glfw_vulkan.vcxproj,0

../gejo/libs/imgui/examples/example_glfw_vulkan/example_glfw_vulkan.vcxproj.filters,0

../gejo/libs/imgui/examples/example_glfw_vulkan/main.cpp,1992
#define GLFW_INCLUDE_NONEGLFW_INCLUDE_NONE17,973
#define GLFW_INCLUDE_VULKANGLFW_INCLUDE_VULKAN18,1000
#define IMGUI_VULKAN_DEBUG_REPORTIMGUI_VULKAN_DEBUG_REPORT31,1713
static VkAllocationCallbacks*   g_Allocator = NULL;g_Allocator34,1758
static VkInstance               g_Instance = VK_NULL_HANDLE;g_Instance35,1811
static VkPhysicalDevice         g_PhysicalDevice = VK_NULL_HANDLE;g_PhysicalDevice36,1873
static VkDevice                 g_Device = VK_NULL_HANDLE;g_Device37,1941
static uint32_t                 g_QueueFamily = (uint32_t)-1;g_QueueFamily38,2001
static VkQueue                  g_Queue = VK_NULL_HANDLE;g_Queue39,2064
static VkDebugReportCallbackEXT g_DebugReport = VK_NULL_HANDLE;g_DebugReport40,2123
static VkPipelineCache          g_PipelineCache = VK_NULL_HANDLE;g_PipelineCache41,2188
static VkDescriptorPool         g_DescriptorPool = VK_NULL_HANDLE;g_DescriptorPool42,2255
static ImGui_ImplVulkanH_Window g_MainWindowData;g_MainWindowData44,2325
static int                      g_MinImageCount = 2;g_MinImageCount45,2376
static bool                     g_SwapChainRebuild = false;g_SwapChainRebuild46,2430
static void check_vk_result(VkResult err)check_vk_result48,2493
static VKAPI_ATTR VkBool32 VKAPI_CALL debug_report(VkDebugReportFlagsEXT flags, VkDebugReportObjdebug_report58,2712
static void SetupVulkan(const char** extensions, uint32_t extensions_count)SetupVulkan66,3249
static void SetupVulkanWindow(ImGui_ImplVulkanH_Window* wd, VkSurfaceKHR surface, int width, intSetupVulkanWindow210,9930
static void CleanupVulkan()CleanupVulkan242,11556
static void CleanupVulkanWindow()CleanupVulkanWindow256,12103
static void FrameRender(ImGui_ImplVulkanH_Window* wd, ImDrawData* draw_data)FrameRender261,12238
static void FramePresent(ImGui_ImplVulkanH_Window* wd)FramePresent328,14961
static void glfw_error_callback(int error, const char* description)glfw_error_callback350,15804
int main(int, char**)main355,15946

../gejo/libs/imgui/examples/example_glut_opengl2/example_glut_opengl2.vcxproj,0

../gejo/libs/imgui/examples/example_glut_opengl2/example_glut_opengl2.vcxproj.filters,0

../gejo/libs/imgui/examples/example_glut_opengl2/main.cpp,355
static bool show_demo_window = true;show_demo_window23,867
static bool show_another_window = false;show_another_window24,905
static ImVec4 clear_color = ImVec4(0.45f, 0.55f, 0.60f, 1.00f);clear_color25,947
void my_display_code()my_display_code27,1014
void glut_display_func()glut_display_func67,2948
int main(int argc, char** argv)main93,4134

../gejo/libs/imgui/examples/example_glut_opengl2/Makefile,728
EXE = example_glut_opengl2EXE12,162
IMGUI_DIR = ../..IMGUI_DIR13,189
SOURCES = main.cppSOURCES14,207
OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))OBJS17,475
UNAME_S := $(shell uname -s)UNAME_S18,532
CXXFLAGS = -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backendsCXXFLAGS20,562
LIBS =LIBS22,642
	ECHO_MESSAGE = "Linux"ECHO_MESSAGE29,855
	CFLAGS = $(CXXFLAGS)CFLAGS31,900
	ECHO_MESSAGE = "Mac OS X"ECHO_MESSAGE35,962
	CFLAGS = $(CXXFLAGS)CFLAGS40,1131
	ECHO_MESSAGE = "MinGW"ECHO_MESSAGE44,1185
	CFLAGS = $(CXXFLAGS)CFLAGS52,1453
%.o:%.cpp%.o59,1642
%.o:$(IMGUI_DIR)/%.cpp%.o62,1685
%.o:$(IMGUI_DIR)/backends/%.cpp%.o65,1741
all: $(EXE)all68,1806
$(EXE): $(OBJS)$(EXE)71,1861
clean:clean74,1915

../gejo/libs/imgui/examples/example_marmalade/data/app.icf,0

../gejo/libs/imgui/examples/example_marmalade/main.cpp,34
int main(int, char**)main16,461

../gejo/libs/imgui/examples/example_marmalade/marmalade_example.mkb,0

../gejo/libs/imgui/examples/example_null/build_win32.bat,0

../gejo/libs/imgui/examples/example_null/main.cpp,33
int main(int, char**)main7,260

../gejo/libs/imgui/examples/example_null/Makefile,761
WITH_EXTRA_WARNINGS ?= 0WITH_EXTRA_WARNINGS10,288
WITH_FREETYPE ?= 0WITH_FREETYPE11,313
EXE = example_nullEXE13,333
IMGUI_DIR = ../..IMGUI_DIR14,352
SOURCES = main.cppSOURCES15,370
OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))OBJS17,540
UNAME_S := $(shell uname -s)UNAME_S18,597
LIBS =LIBS22,684
	ECHO_MESSAGE = "Linux"ECHO_MESSAGE42,1500
	CFLAGS = $(CXXFLAGS)CFLAGS49,1711
	ECHO_MESSAGE = "Mac OS X"ECHO_MESSAGE53,1773
	ECHO_MESSAGE = "MinGW"ECHO_MESSAGE61,2006
	CFLAGS = $(CXXFLAGS)CFLAGS66,2122
%.o:%.cpp%.o73,2311
%.o:$(IMGUI_DIR)/%.cpp%.o76,2354
%.o:$(IMGUI_DIR)/backends/%.cpp%.o79,2410
%.o:$(IMGUI_DIR)/misc/freetype/%.cpp%.o82,2475
all: $(EXE)all85,2545
$(EXE): $(OBJS)$(EXE)88,2600
clean:clean91,2654

../gejo/libs/imgui/examples/example_sdl_directx11/build_win32.bat,413
@set OUT_DIR=DebugOUT_DIR2,119
@set OUT_EXE=example_sdl_directx11OUT_EXE3,139
@set INCLUDES=/I..\.. /I..\..\backends /I%SDL2_DIR%\include /I "%WindowsSdkDir%Include\um" /I "%INCLUDES4,175
@set SOURCES=main.cpp ..\..\backends\imgui_impl_sdl.cpp ..\..\backends\imgui_impl_dx11.cpp ..\..SOURCES5,326
@set LIBS=/LIBPATH:%SDL2_DIR%\lib\x86 SDL2.lib SDL2main.lib /LIBPATH:"%DXSDK_DIR%/Lib/x86" d3d11LIBS6,435

../gejo/libs/imgui/examples/example_sdl_directx11/example_sdl_directx11.vcxproj,0

../gejo/libs/imgui/examples/example_sdl_directx11/example_sdl_directx11.vcxproj.filters,0

../gejo/libs/imgui/examples/example_sdl_directx11/main.cpp,578
static ID3D11Device*            g_pd3dDevice = NULL;g_pd3dDevice15,550
static ID3D11DeviceContext*     g_pd3dDeviceContext = NULL;g_pd3dDeviceContext16,604
static IDXGISwapChain*          g_pSwapChain = NULL;g_pSwapChain17,665
static ID3D11RenderTargetView*  g_mainRenderTargetView = NULL;g_mainRenderTargetView18,719
int main(int, char**)main27,963
bool CreateDeviceD3D(HWND hWnd)CreateDeviceD3D181,8527
void CleanupDeviceD3D()CleanupDeviceD3D211,9688
void CreateRenderTarget()CreateRenderTarget219,9989
void CleanupRenderTarget()CleanupRenderTarget227,10236

../gejo/libs/imgui/examples/example_sdl_metal/main.mm,34
int main(int, char**)main15,555

../gejo/libs/imgui/examples/example_sdl_metal/Makefile,639
EXE = example_sdl_metalEXE9,100
IMGUI_DIR = ../..IMGUI_DIR10,124
SOURCES = main.mmSOURCES11,142
OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))OBJS14,405
LIBS = -framework Metal -framework MetalKit -framework Cocoa -framework IOKit -framework CoreVidLIBS16,463
CXXFLAGS = -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backends -I/usr/local/includeCXXFLAGS20,639
CFLAGS = $(CXXFLAGS)CFLAGS23,772
%.o:%.cpp%.o25,794
%.o:$(IMGUI_DIR)/%.cpp%.o28,837
%.o:$(IMGUI_DIR)/backends/%.cpp%.o31,893
%.o:%.mm%.o34,958
%.o:$(IMGUI_DIR)/backends/%.mm%.o37,1031
all: $(EXE)all40,1126
$(EXE): $(OBJS)$(EXE)43,1161
clean:clean46,1215

../gejo/libs/imgui/examples/example_sdl_opengl2/build_win32.bat,362
@set OUT_DIR=DebugOUT_DIR2,119
@set OUT_EXE=example_sdl_opengl2OUT_EXE3,139
@set INCLUDES=/I..\.. /I..\..\backends /I%SDL2_DIR%\includeINCLUDES4,173
@set SOURCES=main.cpp ..\..\backends\imgui_impl_sdl.cpp ..\..\backends\imgui_impl_opengl2.cpp ..SOURCES5,234
@set LIBS=/LIBPATH:%SDL2_DIR%\lib\x86 SDL2.lib SDL2main.lib opengl32.lib shell32.libLIBS6,346

../gejo/libs/imgui/examples/example_sdl_opengl2/example_sdl_opengl2.vcxproj,0

../gejo/libs/imgui/examples/example_sdl_opengl2/example_sdl_opengl2.vcxproj.filters,0

../gejo/libs/imgui/examples/example_sdl_opengl2/main.cpp,34
int main(int, char**)main18,740

../gejo/libs/imgui/examples/example_sdl_opengl2/Makefile,729
EXE = example_sdl_opengl2EXE17,283
IMGUI_DIR = ../..IMGUI_DIR18,309
SOURCES = main.cppSOURCES19,327
OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))OBJS22,594
UNAME_S := $(shell uname -s)UNAME_S23,651
CXXFLAGS = -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backendsCXXFLAGS25,681
LIBS =LIBS27,761
	ECHO_MESSAGE = "Linux"ECHO_MESSAGE34,974
	CFLAGS = $(CXXFLAGS)CFLAGS38,1075
	ECHO_MESSAGE = "Mac OS X"ECHO_MESSAGE42,1137
	CFLAGS = $(CXXFLAGS)CFLAGS48,1402
	ECHO_MESSAGE = "MinGW"ECHO_MESSAGE52,1456
	CFLAGS = $(CXXFLAGS)CFLAGS56,1591
%.o:%.cpp%.o63,1780
%.o:$(IMGUI_DIR)/%.cpp%.o66,1823
%.o:$(IMGUI_DIR)/backends/%.cpp%.o69,1879
all: $(EXE)all72,1944
$(EXE): $(OBJS)$(EXE)75,1999
clean:clean78,2053

../gejo/libs/imgui/examples/example_sdl_opengl2/README.md,32
# How to BuildHow to Build2,2

../gejo/libs/imgui/examples/example_sdl_opengl3/build_win32.bat,377
@set OUT_DIR=DebugOUT_DIR2,119
@set OUT_EXE=example_sdl_opengl3OUT_EXE3,139
@set INCLUDES=/I..\.. /I..\..\backends /I%SDL2_DIR%\include /I..\libs\gl3wINCLUDES4,173
@set SOURCES=main.cpp ..\..\backends\imgui_impl_sdl.cpp ..\..\backends\imgui_impl_opengl3.cpp ..SOURCES5,249
@set LIBS=/LIBPATH:%SDL2_DIR%\lib\x86 SDL2.lib SDL2main.lib opengl32.lib shell32.libLIBS6,384

../gejo/libs/imgui/examples/example_sdl_opengl3/example_sdl_opengl3.vcxproj,0

../gejo/libs/imgui/examples/example_sdl_opengl3/example_sdl_opengl3.vcxproj.filters,0

../gejo/libs/imgui/examples/example_sdl_opengl3/main.cpp,266
#define GLFW_INCLUDE_NONE GLFW_INCLUDE_NONE28,1628
#define GLFW_INCLUDE_NONE GLFW_INCLUDE_NONE33,1930
int main(int, char**)main42,2244
    glbinding::initialize([](const char* name) { return (glbinding::ProcAddress)SDL_GL_GetProcAd__anonca85b86c0102101,5171

../gejo/libs/imgui/examples/example_sdl_opengl3/Makefile,859
EXE = example_sdl_opengl3EXE17,283
IMGUI_DIR = ../..IMGUI_DIR18,309
SOURCES = main.cppSOURCES19,327
OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))OBJS22,594
UNAME_S := $(shell uname -s)UNAME_S23,651
LINUX_GL_LIBS = -lGLLINUX_GL_LIBS24,680
CXXFLAGS = -I$(IMGUI_DIR) -I$(IMGUI_DIR)/backendsCXXFLAGS26,702
LIBS =LIBS28,782
	ECHO_MESSAGE = "Linux"ECHO_MESSAGE76,2465
	CFLAGS = $(CXXFLAGS)CFLAGS80,2578
	ECHO_MESSAGE = "Mac OS X"ECHO_MESSAGE84,2640
	CFLAGS = $(CXXFLAGS)CFLAGS90,2905
    ECHO_MESSAGE = "MinGW"ECHO_MESSAGE94,2959
    CFLAGS = $(CXXFLAGS)CFLAGS98,3103
%.o:%.cpp%.o105,3295
%.o:$(IMGUI_DIR)/%.cpp%.o108,3338
%.o:$(IMGUI_DIR)/backends/%.cpp%.o111,3394
%.o:../libs/gl3w/GL/%.c%.o114,3459
%.o:../libs/glad/src/%.c%.o117,3513
all: $(EXE)all120,3568
$(EXE): $(OBJS)$(EXE)123,3623
clean:clean126,3677

../gejo/libs/imgui/examples/example_sdl_opengl3/README.md,32
# How to BuildHow to Build2,2

../gejo/libs/imgui/examples/example_sdl_vulkan/build_win32.bat,397
@set OUT_EXE=example_sdl_vulkanOUT_EXE3,121
@set INCLUDES=/I..\.. /I..\..\backends /I%SDL2_DIR%\include /I %VULKAN_SDK%\includeINCLUDES4,154
@set SOURCES=main.cpp ..\..\backends\imgui_impl_sdl.cpp ..\..\backends\imgui_impl_vulkan.cpp ..\SOURCES5,239
@set LIBS=/LIBPATH:%SDL2_DIR%\lib\x86 /libpath:%VULKAN_SDK%\lib32 SDL2.lib SDL2main.lib shell32.LIBS6,350
@set OUT_DIR=DebugOUT_DIR8,466

../gejo/libs/imgui/examples/example_sdl_vulkan/example_sdl_vulkan.vcxproj,0

../gejo/libs/imgui/examples/example_sdl_vulkan/example_sdl_vulkan.vcxproj.filters,0

../gejo/libs/imgui/examples/example_sdl_vulkan/main.cpp,1787
#define IMGUI_VULKAN_DEBUG_REPORTIMGUI_VULKAN_DEBUG_REPORT23,1098
static VkAllocationCallbacks*   g_Allocator = NULL;g_Allocator26,1143
static VkInstance               g_Instance = VK_NULL_HANDLE;g_Instance27,1196
static VkPhysicalDevice         g_PhysicalDevice = VK_NULL_HANDLE;g_PhysicalDevice28,1258
static VkDevice                 g_Device = VK_NULL_HANDLE;g_Device29,1326
static uint32_t                 g_QueueFamily = (uint32_t)-1;g_QueueFamily30,1386
static VkQueue                  g_Queue = VK_NULL_HANDLE;g_Queue31,1449
static VkDebugReportCallbackEXT g_DebugReport = VK_NULL_HANDLE;g_DebugReport32,1508
static VkPipelineCache          g_PipelineCache = VK_NULL_HANDLE;g_PipelineCache33,1573
static VkDescriptorPool         g_DescriptorPool = VK_NULL_HANDLE;g_DescriptorPool34,1640
static ImGui_ImplVulkanH_Window g_MainWindowData;g_MainWindowData36,1710
static uint32_t                 g_MinImageCount = 2;g_MinImageCount37,1761
static bool                     g_SwapChainRebuild = false;g_SwapChainRebuild38,1815
static void check_vk_result(VkResult err)check_vk_result40,1878
static VKAPI_ATTR VkBool32 VKAPI_CALL debug_report(VkDebugReportFlagsEXT flags, VkDebugReportObjdebug_report50,2097
static void SetupVulkan(const char** extensions, uint32_t extensions_count)SetupVulkan58,2634
static void SetupVulkanWindow(ImGui_ImplVulkanH_Window* wd, VkSurfaceKHR surface, int width, intSetupVulkanWindow202,9315
static void CleanupVulkan()CleanupVulkan234,10941
static void CleanupVulkanWindow()CleanupVulkanWindow248,11488
static void FrameRender(ImGui_ImplVulkanH_Window* wd, ImDrawData* draw_data)FrameRender253,11623
static void FramePresent(ImGui_ImplVulkanH_Window* wd)FramePresent320,14346
int main(int, char**)main342,15189

../gejo/libs/imgui/examples/example_win32_directx10/build_win32.bat,385
@set OUT_DIR=DebugOUT_DIR2,119
@set OUT_EXE=example_win32_directx10OUT_EXE3,139
@set INCLUDES=/I..\.. /I..\..\backends /I "%WindowsSdkDir%Include\um" /I "%WindowsSdkDir%IncludeINCLUDES4,177
@set SOURCES=main.cpp ..\..\backends\imgui_impl_win32.cpp ..\..\backends\imgui_impl_dx10.cpp ..\SOURCES5,307
@set LIBS=/LIBPATH:"%DXSDK_DIR%/Lib/x86" d3d10.lib d3dcompiler.libLIBS6,418

../gejo/libs/imgui/examples/example_win32_directx10/example_win32_directx10.vcxproj,0

../gejo/libs/imgui/examples/example_win32_directx10/example_win32_directx10.vcxproj.filters,0

../gejo/libs/imgui/examples/example_win32_directx10/main.cpp,581
static ID3D10Device*            g_pd3dDevice = NULL;g_pd3dDevice13,389
static IDXGISwapChain*          g_pSwapChain = NULL;g_pSwapChain14,443
static ID3D10RenderTargetView*  g_mainRenderTargetView = NULL;g_mainRenderTargetView15,497
int main(int, char**)main25,817
bool CreateDeviceD3D(HWND hWnd)CreateDeviceD3D166,7526
void CleanupDeviceD3D()CleanupDeviceD3D194,8488
void CreateRenderTarget()CreateRenderTarget201,8695
void CleanupRenderTarget()CleanupRenderTarget209,8942
LRESULT WINAPI WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)WndProc218,9285

../gejo/libs/imgui/examples/example_win32_directx11/build_win32.bat,385
@set OUT_DIR=DebugOUT_DIR2,119
@set OUT_EXE=example_win32_directx11OUT_EXE3,139
@set INCLUDES=/I..\.. /I..\..\backends /I "%WindowsSdkDir%Include\um" /I "%WindowsSdkDir%IncludeINCLUDES4,177
@set SOURCES=main.cpp ..\..\backends\imgui_impl_dx11.cpp ..\..\backends\imgui_impl_win32.cpp ..\SOURCES5,307
@set LIBS=/LIBPATH:"%DXSDK_DIR%/Lib/x86" d3d11.lib d3dcompiler.libLIBS6,418

../gejo/libs/imgui/examples/example_win32_directx11/example_win32_directx11.vcxproj,0

../gejo/libs/imgui/examples/example_win32_directx11/example_win32_directx11.vcxproj.filters,0

../gejo/libs/imgui/examples/example_win32_directx11/main.cpp,668
static ID3D11Device*            g_pd3dDevice = NULL;g_pd3dDevice12,367
static ID3D11DeviceContext*     g_pd3dDeviceContext = NULL;g_pd3dDeviceContext13,421
static IDXGISwapChain*          g_pSwapChain = NULL;g_pSwapChain14,482
static ID3D11RenderTargetView*  g_mainRenderTargetView = NULL;g_mainRenderTargetView15,536
int main(int, char**)main25,856
bool CreateDeviceD3D(HWND hWnd)CreateDeviceD3D167,7616
void CleanupDeviceD3D()CleanupDeviceD3D197,8777
void CreateRenderTarget()CreateRenderTarget205,9078
void CleanupRenderTarget()CleanupRenderTarget213,9325
LRESULT WINAPI WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)WndProc222,9668

../gejo/libs/imgui/examples/example_win32_directx12/build_win32.bat,363
@set OUT_DIR=DebugOUT_DIR3,237
@set OUT_EXE=example_win32_directx12OUT_EXE4,257
@set INCLUDES=/I..\.. /I..\..\backends /I "%WindowsSdkDir%Include\um" /I "%WindowsSdkDir%IncludeINCLUDES5,295
@set SOURCES=main.cpp ..\..\backends\imgui_impl_dx12.cpp ..\..\backends\imgui_impl_win32.cpp ..\SOURCES6,401
@set LIBS=d3d12.lib d3dcompiler.lib dxgi.libLIBS7,512

../gejo/libs/imgui/examples/example_win32_directx12/example_win32_directx12.vcxproj,0

../gejo/libs/imgui/examples/example_win32_directx12/example_win32_directx12.vcxproj.filters,0

../gejo/libs/imgui/examples/example_win32_directx12/main.cpp,2267
#define DX12_ENABLE_DEBUG_LAYERDX12_ENABLE_DEBUG_LAYER17,770
struct FrameContextFrameContext25,915
    ID3D12CommandAllocator* CommandAllocator;CommandAllocator27,939
    UINT64                  FenceValue;FenceValue28,986
static int const                    NUM_FRAMES_IN_FLIGHT = 3;NUM_FRAMES_IN_FLIGHT32,1042
static FrameContext                 g_frameContext[NUM_FRAMES_IN_FLIGHT] = {};g_frameContext33,1105
static UINT                         g_frameIndex = 0;g_frameIndex34,1185
static int const                    NUM_BACK_BUFFERS = 3;NUM_BACK_BUFFERS36,1242
static ID3D12Device*                g_pd3dDevice = NULL;g_pd3dDevice37,1301
static ID3D12DescriptorHeap*        g_pd3dRtvDescHeap = NULL;g_pd3dRtvDescHeap38,1359
static ID3D12DescriptorHeap*        g_pd3dSrvDescHeap = NULL;g_pd3dSrvDescHeap39,1422
static ID3D12CommandQueue*          g_pd3dCommandQueue = NULL;g_pd3dCommandQueue40,1485
static ID3D12GraphicsCommandList*   g_pd3dCommandList = NULL;g_pd3dCommandList41,1549
static ID3D12Fence*                 g_fence = NULL;g_fence42,1612
static HANDLE                       g_fenceEvent = NULL;g_fenceEvent43,1665
static UINT64                       g_fenceLastSignaledValue = 0;g_fenceLastSignaledValue44,1723
static IDXGISwapChain3*             g_pSwapChain = NULL;g_pSwapChain45,1790
static HANDLE                       g_hSwapChainWaitableObject = NULL;g_hSwapChainWaitableObject46,1848
static ID3D12Resource*              g_mainRenderTargetResource[NUM_BACK_BUFFERS] = {};g_mainRenderTargetResource47,1920
static D3D12_CPU_DESCRIPTOR_HANDLE  g_mainRenderTargetDescriptor[NUM_BACK_BUFFERS] = {};g_mainRenderTargetDescriptor48,2008
int main(int, char**)main61,2490
bool CreateDeviceD3D(HWND hWnd)CreateDeviceD3D236,11053
void CleanupDeviceD3D()CleanupDeviceD3D352,15562
void CreateRenderTarget()CreateRenderTarget377,16806
void CleanupRenderTarget()CleanupRenderTarget388,17167
void WaitForLastSubmittedFrame()WaitForLastSubmittedFrame396,17416
FrameContext* WaitForNextFrameResources()WaitForNextFrameResources412,17876
void ResizeSwapChain(HWND hWnd, int width, int height)ResizeSwapChain435,18607
LRESULT WINAPI WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)WndProc464,19621

../gejo/libs/imgui/examples/example_win32_directx9/build_win32.bat,334
@set OUT_DIR=DebugOUT_DIR2,119
@set OUT_EXE=example_win32_directx9OUT_EXE3,139
@set INCLUDES=/I..\.. /I..\..\backends /I "%DXSDK_DIR%/Include"INCLUDES4,176
@set SOURCES=main.cpp ..\..\backends\imgui_impl_dx9.cpp ..\..\backends\imgui_impl_win32.cpp ..\.SOURCES5,241
@set LIBS=/LIBPATH:"%DXSDK_DIR%/Lib/x86" d3d9.libLIBS6,351

../gejo/libs/imgui/examples/example_win32_directx9/example_win32_directx9.vcxproj,0

../gejo/libs/imgui/examples/example_win32_directx9/example_win32_directx9.vcxproj.filters,0

../gejo/libs/imgui/examples/example_win32_directx9/main.cpp,467
static LPDIRECT3D9              g_pD3D = NULL;g_pD3D12,364
static LPDIRECT3DDEVICE9        g_pd3dDevice = NULL;g_pd3dDevice13,412
static D3DPRESENT_PARAMETERS    g_d3dpp = {};g_d3dpp14,466
int main(int, char**)main23,733
bool CreateDeviceD3D(HWND hWnd)CreateDeviceD3D173,7876
void CleanupDeviceD3D()CleanupDeviceD3D193,8785
void ResetDevice()ResetDevice199,8946
LRESULT WINAPI WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)WndProc212,9373

../gejo/libs/imgui/examples/imgui_examples.sln,0

../gejo/libs/imgui/examples/libs/gl3w/GL/gl3w.c,49413
#define WIN32_LEAN_AND_MEAN WIN32_LEAN_AND_MEAN9,299
static HMODULE libgl;libgl12,354
static void open_libgl(void)open_libgl14,379
static void close_libgl(void)close_libgl19,457
static void *get_proc(const char *proc)get_proc24,518
CFBundleRef bundle;bundle36,758
CFURLRef bundleURL;bundleURL37,779
static void open_libgl(void)open_libgl39,802
static void close_libgl(void)close_libgl49,1081
static void *get_proc(const char *proc)get_proc55,1165
static void *libgl;libgl69,1481
static void open_libgl(void)open_libgl71,1504
static void close_libgl(void)close_libgl76,1599
static void *get_proc(const char *proc)get_proc81,1656
static struct {__anon4e23e937010892,1841
	int major, minor;major93,1858
	int major, minor;minor93,1858
} version;version94,1878
static int parse_version(void)parse_version96,1892
int gl3wInit(void)gl3wInit111,2158
int gl3wIsSupported(int major, int minor)gl3wIsSupported119,2261
void *gl3wGetProcAddress(const char *proc)gl3wGetProcAddress128,2439
PFNGLCULLFACEPROC gl3wCullFace;gl3wCullFace133,2516
PFNGLFRONTFACEPROC gl3wFrontFace;gl3wFrontFace134,2549
PFNGLHINTPROC gl3wHint;gl3wHint135,2584
PFNGLLINEWIDTHPROC gl3wLineWidth;gl3wLineWidth136,2609
PFNGLPOINTSIZEPROC gl3wPointSize;gl3wPointSize137,2644
PFNGLPOLYGONMODEPROC gl3wPolygonMode;gl3wPolygonMode138,2679
PFNGLSCISSORPROC gl3wScissor;gl3wScissor139,2718
PFNGLTEXPARAMETERFPROC gl3wTexParameterf;gl3wTexParameterf140,2749
PFNGLTEXPARAMETERFVPROC gl3wTexParameterfv;gl3wTexParameterfv141,2792
PFNGLTEXPARAMETERIPROC gl3wTexParameteri;gl3wTexParameteri142,2837
PFNGLTEXPARAMETERIVPROC gl3wTexParameteriv;gl3wTexParameteriv143,2880
PFNGLTEXIMAGE1DPROC gl3wTexImage1D;gl3wTexImage1D144,2925
PFNGLTEXIMAGE2DPROC gl3wTexImage2D;gl3wTexImage2D145,2962
PFNGLDRAWBUFFERPROC gl3wDrawBuffer;gl3wDrawBuffer146,2999
PFNGLCLEARPROC gl3wClear;gl3wClear147,3036
PFNGLCLEARCOLORPROC gl3wClearColor;gl3wClearColor148,3063
PFNGLCLEARSTENCILPROC gl3wClearStencil;gl3wClearStencil149,3100
PFNGLCLEARDEPTHPROC gl3wClearDepth;gl3wClearDepth150,3141
PFNGLSTENCILMASKPROC gl3wStencilMask;gl3wStencilMask151,3178
PFNGLCOLORMASKPROC gl3wColorMask;gl3wColorMask152,3217
PFNGLDEPTHMASKPROC gl3wDepthMask;gl3wDepthMask153,3252
PFNGLDISABLEPROC gl3wDisable;gl3wDisable154,3287
PFNGLENABLEPROC gl3wEnable;gl3wEnable155,3318
PFNGLFINISHPROC gl3wFinish;gl3wFinish156,3347
PFNGLFLUSHPROC gl3wFlush;gl3wFlush157,3376
PFNGLBLENDFUNCPROC gl3wBlendFunc;gl3wBlendFunc158,3403
PFNGLLOGICOPPROC gl3wLogicOp;gl3wLogicOp159,3438
PFNGLSTENCILFUNCPROC gl3wStencilFunc;gl3wStencilFunc160,3469
PFNGLSTENCILOPPROC gl3wStencilOp;gl3wStencilOp161,3508
PFNGLDEPTHFUNCPROC gl3wDepthFunc;gl3wDepthFunc162,3543
PFNGLPIXELSTOREFPROC gl3wPixelStoref;gl3wPixelStoref163,3578
PFNGLPIXELSTOREIPROC gl3wPixelStorei;gl3wPixelStorei164,3617
PFNGLREADBUFFERPROC gl3wReadBuffer;gl3wReadBuffer165,3656
PFNGLREADPIXELSPROC gl3wReadPixels;gl3wReadPixels166,3693
PFNGLGETBOOLEANVPROC gl3wGetBooleanv;gl3wGetBooleanv167,3730
PFNGLGETDOUBLEVPROC gl3wGetDoublev;gl3wGetDoublev168,3769
PFNGLGETERRORPROC gl3wGetError;gl3wGetError169,3806
PFNGLGETFLOATVPROC gl3wGetFloatv;gl3wGetFloatv170,3839
PFNGLGETINTEGERVPROC gl3wGetIntegerv;gl3wGetIntegerv171,3874
PFNGLGETSTRINGPROC gl3wGetString;gl3wGetString172,3913
PFNGLGETTEXIMAGEPROC gl3wGetTexImage;gl3wGetTexImage173,3948
PFNGLGETTEXPARAMETERFVPROC gl3wGetTexParameterfv;gl3wGetTexParameterfv174,3987
PFNGLGETTEXPARAMETERIVPROC gl3wGetTexParameteriv;gl3wGetTexParameteriv175,4038
PFNGLGETTEXLEVELPARAMETERFVPROC gl3wGetTexLevelParameterfv;gl3wGetTexLevelParameterfv176,4089
PFNGLGETTEXLEVELPARAMETERIVPROC gl3wGetTexLevelParameteriv;gl3wGetTexLevelParameteriv177,4150
PFNGLISENABLEDPROC gl3wIsEnabled;gl3wIsEnabled178,4211
PFNGLDEPTHRANGEPROC gl3wDepthRange;gl3wDepthRange179,4246
PFNGLVIEWPORTPROC gl3wViewport;gl3wViewport180,4283
PFNGLDRAWARRAYSPROC gl3wDrawArrays;gl3wDrawArrays181,4316
PFNGLDRAWELEMENTSPROC gl3wDrawElements;gl3wDrawElements182,4353
PFNGLGETPOINTERVPROC gl3wGetPointerv;gl3wGetPointerv183,4394
PFNGLPOLYGONOFFSETPROC gl3wPolygonOffset;gl3wPolygonOffset184,4433
PFNGLCOPYTEXIMAGE1DPROC gl3wCopyTexImage1D;gl3wCopyTexImage1D185,4476
PFNGLCOPYTEXIMAGE2DPROC gl3wCopyTexImage2D;gl3wCopyTexImage2D186,4521
PFNGLCOPYTEXSUBIMAGE1DPROC gl3wCopyTexSubImage1D;gl3wCopyTexSubImage1D187,4566
PFNGLCOPYTEXSUBIMAGE2DPROC gl3wCopyTexSubImage2D;gl3wCopyTexSubImage2D188,4617
PFNGLTEXSUBIMAGE1DPROC gl3wTexSubImage1D;gl3wTexSubImage1D189,4668
PFNGLTEXSUBIMAGE2DPROC gl3wTexSubImage2D;gl3wTexSubImage2D190,4711
PFNGLBINDTEXTUREPROC gl3wBindTexture;gl3wBindTexture191,4754
PFNGLDELETETEXTURESPROC gl3wDeleteTextures;gl3wDeleteTextures192,4793
PFNGLGENTEXTURESPROC gl3wGenTextures;gl3wGenTextures193,4838
PFNGLISTEXTUREPROC gl3wIsTexture;gl3wIsTexture194,4877
PFNGLBLENDCOLORPROC gl3wBlendColor;gl3wBlendColor195,4912
PFNGLBLENDEQUATIONPROC gl3wBlendEquation;gl3wBlendEquation196,4949
PFNGLDRAWRANGEELEMENTSPROC gl3wDrawRangeElements;gl3wDrawRangeElements197,4992
PFNGLTEXIMAGE3DPROC gl3wTexImage3D;gl3wTexImage3D198,5043
PFNGLTEXSUBIMAGE3DPROC gl3wTexSubImage3D;gl3wTexSubImage3D199,5080
PFNGLCOPYTEXSUBIMAGE3DPROC gl3wCopyTexSubImage3D;gl3wCopyTexSubImage3D200,5123
PFNGLACTIVETEXTUREPROC gl3wActiveTexture;gl3wActiveTexture201,5174
PFNGLSAMPLECOVERAGEPROC gl3wSampleCoverage;gl3wSampleCoverage202,5217
PFNGLCOMPRESSEDTEXIMAGE3DPROC gl3wCompressedTexImage3D;gl3wCompressedTexImage3D203,5262
PFNGLCOMPRESSEDTEXIMAGE2DPROC gl3wCompressedTexImage2D;gl3wCompressedTexImage2D204,5319
PFNGLCOMPRESSEDTEXIMAGE1DPROC gl3wCompressedTexImage1D;gl3wCompressedTexImage1D205,5376
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC gl3wCompressedTexSubImage3D;gl3wCompressedTexSubImage3D206,5433
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC gl3wCompressedTexSubImage2D;gl3wCompressedTexSubImage2D207,5496
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC gl3wCompressedTexSubImage1D;gl3wCompressedTexSubImage1D208,5559
PFNGLGETCOMPRESSEDTEXIMAGEPROC gl3wGetCompressedTexImage;gl3wGetCompressedTexImage209,5622
PFNGLBLENDFUNCSEPARATEPROC gl3wBlendFuncSeparate;gl3wBlendFuncSeparate210,5681
PFNGLMULTIDRAWARRAYSPROC gl3wMultiDrawArrays;gl3wMultiDrawArrays211,5732
PFNGLMULTIDRAWELEMENTSPROC gl3wMultiDrawElements;gl3wMultiDrawElements212,5779
PFNGLPOINTPARAMETERFPROC gl3wPointParameterf;gl3wPointParameterf213,5830
PFNGLPOINTPARAMETERFVPROC gl3wPointParameterfv;gl3wPointParameterfv214,5877
PFNGLPOINTPARAMETERIPROC gl3wPointParameteri;gl3wPointParameteri215,5926
PFNGLPOINTPARAMETERIVPROC gl3wPointParameteriv;gl3wPointParameteriv216,5973
PFNGLGENQUERIESPROC gl3wGenQueries;gl3wGenQueries217,6022
PFNGLDELETEQUERIESPROC gl3wDeleteQueries;gl3wDeleteQueries218,6059
PFNGLISQUERYPROC gl3wIsQuery;gl3wIsQuery219,6102
PFNGLBEGINQUERYPROC gl3wBeginQuery;gl3wBeginQuery220,6133
PFNGLENDQUERYPROC gl3wEndQuery;gl3wEndQuery221,6170
PFNGLGETQUERYIVPROC gl3wGetQueryiv;gl3wGetQueryiv222,6203
PFNGLGETQUERYOBJECTIVPROC gl3wGetQueryObjectiv;gl3wGetQueryObjectiv223,6240
PFNGLGETQUERYOBJECTUIVPROC gl3wGetQueryObjectuiv;gl3wGetQueryObjectuiv224,6289
PFNGLBINDBUFFERPROC gl3wBindBuffer;gl3wBindBuffer225,6340
PFNGLDELETEBUFFERSPROC gl3wDeleteBuffers;gl3wDeleteBuffers226,6377
PFNGLGENBUFFERSPROC gl3wGenBuffers;gl3wGenBuffers227,6420
PFNGLISBUFFERPROC gl3wIsBuffer;gl3wIsBuffer228,6457
PFNGLBUFFERDATAPROC gl3wBufferData;gl3wBufferData229,6490
PFNGLBUFFERSUBDATAPROC gl3wBufferSubData;gl3wBufferSubData230,6527
PFNGLGETBUFFERSUBDATAPROC gl3wGetBufferSubData;gl3wGetBufferSubData231,6570
PFNGLMAPBUFFERPROC gl3wMapBuffer;gl3wMapBuffer232,6619
PFNGLUNMAPBUFFERPROC gl3wUnmapBuffer;gl3wUnmapBuffer233,6654
PFNGLGETBUFFERPARAMETERIVPROC gl3wGetBufferParameteriv;gl3wGetBufferParameteriv234,6693
PFNGLGETBUFFERPOINTERVPROC gl3wGetBufferPointerv;gl3wGetBufferPointerv235,6750
PFNGLBLENDEQUATIONSEPARATEPROC gl3wBlendEquationSeparate;gl3wBlendEquationSeparate236,6801
PFNGLDRAWBUFFERSPROC gl3wDrawBuffers;gl3wDrawBuffers237,6860
PFNGLSTENCILOPSEPARATEPROC gl3wStencilOpSeparate;gl3wStencilOpSeparate238,6899
PFNGLSTENCILFUNCSEPARATEPROC gl3wStencilFuncSeparate;gl3wStencilFuncSeparate239,6950
PFNGLSTENCILMASKSEPARATEPROC gl3wStencilMaskSeparate;gl3wStencilMaskSeparate240,7005
PFNGLATTACHSHADERPROC gl3wAttachShader;gl3wAttachShader241,7060
PFNGLBINDATTRIBLOCATIONPROC gl3wBindAttribLocation;gl3wBindAttribLocation242,7101
PFNGLCOMPILESHADERPROC gl3wCompileShader;gl3wCompileShader243,7154
PFNGLCREATEPROGRAMPROC gl3wCreateProgram;gl3wCreateProgram244,7197
PFNGLCREATESHADERPROC gl3wCreateShader;gl3wCreateShader245,7240
PFNGLDELETEPROGRAMPROC gl3wDeleteProgram;gl3wDeleteProgram246,7281
PFNGLDELETESHADERPROC gl3wDeleteShader;gl3wDeleteShader247,7324
PFNGLDETACHSHADERPROC gl3wDetachShader;gl3wDetachShader248,7365
PFNGLDISABLEVERTEXATTRIBARRAYPROC gl3wDisableVertexAttribArray;gl3wDisableVertexAttribArray249,7406
PFNGLENABLEVERTEXATTRIBARRAYPROC gl3wEnableVertexAttribArray;gl3wEnableVertexAttribArray250,7471
PFNGLGETACTIVEATTRIBPROC gl3wGetActiveAttrib;gl3wGetActiveAttrib251,7534
PFNGLGETACTIVEUNIFORMPROC gl3wGetActiveUniform;gl3wGetActiveUniform252,7581
PFNGLGETATTACHEDSHADERSPROC gl3wGetAttachedShaders;gl3wGetAttachedShaders253,7630
PFNGLGETATTRIBLOCATIONPROC gl3wGetAttribLocation;gl3wGetAttribLocation254,7683
PFNGLGETPROGRAMIVPROC gl3wGetProgramiv;gl3wGetProgramiv255,7734
PFNGLGETPROGRAMINFOLOGPROC gl3wGetProgramInfoLog;gl3wGetProgramInfoLog256,7775
PFNGLGETSHADERIVPROC gl3wGetShaderiv;gl3wGetShaderiv257,7826
PFNGLGETSHADERINFOLOGPROC gl3wGetShaderInfoLog;gl3wGetShaderInfoLog258,7865
PFNGLGETSHADERSOURCEPROC gl3wGetShaderSource;gl3wGetShaderSource259,7914
PFNGLGETUNIFORMLOCATIONPROC gl3wGetUniformLocation;gl3wGetUniformLocation260,7961
PFNGLGETUNIFORMFVPROC gl3wGetUniformfv;gl3wGetUniformfv261,8014
PFNGLGETUNIFORMIVPROC gl3wGetUniformiv;gl3wGetUniformiv262,8055
PFNGLGETVERTEXATTRIBDVPROC gl3wGetVertexAttribdv;gl3wGetVertexAttribdv263,8096
PFNGLGETVERTEXATTRIBFVPROC gl3wGetVertexAttribfv;gl3wGetVertexAttribfv264,8147
PFNGLGETVERTEXATTRIBIVPROC gl3wGetVertexAttribiv;gl3wGetVertexAttribiv265,8198
PFNGLGETVERTEXATTRIBPOINTERVPROC gl3wGetVertexAttribPointerv;gl3wGetVertexAttribPointerv266,8249
PFNGLISPROGRAMPROC gl3wIsProgram;gl3wIsProgram267,8312
PFNGLISSHADERPROC gl3wIsShader;gl3wIsShader268,8347
PFNGLLINKPROGRAMPROC gl3wLinkProgram;gl3wLinkProgram269,8380
PFNGLSHADERSOURCEPROC gl3wShaderSource;gl3wShaderSource270,8419
PFNGLUSEPROGRAMPROC gl3wUseProgram;gl3wUseProgram271,8460
PFNGLUNIFORM1FPROC gl3wUniform1f;gl3wUniform1f272,8497
PFNGLUNIFORM2FPROC gl3wUniform2f;gl3wUniform2f273,8532
PFNGLUNIFORM3FPROC gl3wUniform3f;gl3wUniform3f274,8567
PFNGLUNIFORM4FPROC gl3wUniform4f;gl3wUniform4f275,8602
PFNGLUNIFORM1IPROC gl3wUniform1i;gl3wUniform1i276,8637
PFNGLUNIFORM2IPROC gl3wUniform2i;gl3wUniform2i277,8672
PFNGLUNIFORM3IPROC gl3wUniform3i;gl3wUniform3i278,8707
PFNGLUNIFORM4IPROC gl3wUniform4i;gl3wUniform4i279,8742
PFNGLUNIFORM1FVPROC gl3wUniform1fv;gl3wUniform1fv280,8777
PFNGLUNIFORM2FVPROC gl3wUniform2fv;gl3wUniform2fv281,8814
PFNGLUNIFORM3FVPROC gl3wUniform3fv;gl3wUniform3fv282,8851
PFNGLUNIFORM4FVPROC gl3wUniform4fv;gl3wUniform4fv283,8888
PFNGLUNIFORM1IVPROC gl3wUniform1iv;gl3wUniform1iv284,8925
PFNGLUNIFORM2IVPROC gl3wUniform2iv;gl3wUniform2iv285,8962
PFNGLUNIFORM3IVPROC gl3wUniform3iv;gl3wUniform3iv286,8999
PFNGLUNIFORM4IVPROC gl3wUniform4iv;gl3wUniform4iv287,9036
PFNGLUNIFORMMATRIX2FVPROC gl3wUniformMatrix2fv;gl3wUniformMatrix2fv288,9073
PFNGLUNIFORMMATRIX3FVPROC gl3wUniformMatrix3fv;gl3wUniformMatrix3fv289,9122
PFNGLUNIFORMMATRIX4FVPROC gl3wUniformMatrix4fv;gl3wUniformMatrix4fv290,9171
PFNGLVALIDATEPROGRAMPROC gl3wValidateProgram;gl3wValidateProgram291,9220
PFNGLVERTEXATTRIB1DPROC gl3wVertexAttrib1d;gl3wVertexAttrib1d292,9267
PFNGLVERTEXATTRIB1DVPROC gl3wVertexAttrib1dv;gl3wVertexAttrib1dv293,9312
PFNGLVERTEXATTRIB1FPROC gl3wVertexAttrib1f;gl3wVertexAttrib1f294,9359
PFNGLVERTEXATTRIB1FVPROC gl3wVertexAttrib1fv;gl3wVertexAttrib1fv295,9404
PFNGLVERTEXATTRIB1SPROC gl3wVertexAttrib1s;gl3wVertexAttrib1s296,9451
PFNGLVERTEXATTRIB1SVPROC gl3wVertexAttrib1sv;gl3wVertexAttrib1sv297,9496
PFNGLVERTEXATTRIB2DPROC gl3wVertexAttrib2d;gl3wVertexAttrib2d298,9543
PFNGLVERTEXATTRIB2DVPROC gl3wVertexAttrib2dv;gl3wVertexAttrib2dv299,9588
PFNGLVERTEXATTRIB2FPROC gl3wVertexAttrib2f;gl3wVertexAttrib2f300,9635
PFNGLVERTEXATTRIB2FVPROC gl3wVertexAttrib2fv;gl3wVertexAttrib2fv301,9680
PFNGLVERTEXATTRIB2SPROC gl3wVertexAttrib2s;gl3wVertexAttrib2s302,9727
PFNGLVERTEXATTRIB2SVPROC gl3wVertexAttrib2sv;gl3wVertexAttrib2sv303,9772
PFNGLVERTEXATTRIB3DPROC gl3wVertexAttrib3d;gl3wVertexAttrib3d304,9819
PFNGLVERTEXATTRIB3DVPROC gl3wVertexAttrib3dv;gl3wVertexAttrib3dv305,9864
PFNGLVERTEXATTRIB3FPROC gl3wVertexAttrib3f;gl3wVertexAttrib3f306,9911
PFNGLVERTEXATTRIB3FVPROC gl3wVertexAttrib3fv;gl3wVertexAttrib3fv307,9956
PFNGLVERTEXATTRIB3SPROC gl3wVertexAttrib3s;gl3wVertexAttrib3s308,10003
PFNGLVERTEXATTRIB3SVPROC gl3wVertexAttrib3sv;gl3wVertexAttrib3sv309,10048
PFNGLVERTEXATTRIB4NBVPROC gl3wVertexAttrib4Nbv;gl3wVertexAttrib4Nbv310,10095
PFNGLVERTEXATTRIB4NIVPROC gl3wVertexAttrib4Niv;gl3wVertexAttrib4Niv311,10144
PFNGLVERTEXATTRIB4NSVPROC gl3wVertexAttrib4Nsv;gl3wVertexAttrib4Nsv312,10193
PFNGLVERTEXATTRIB4NUBPROC gl3wVertexAttrib4Nub;gl3wVertexAttrib4Nub313,10242
PFNGLVERTEXATTRIB4NUBVPROC gl3wVertexAttrib4Nubv;gl3wVertexAttrib4Nubv314,10291
PFNGLVERTEXATTRIB4NUIVPROC gl3wVertexAttrib4Nuiv;gl3wVertexAttrib4Nuiv315,10342
PFNGLVERTEXATTRIB4NUSVPROC gl3wVertexAttrib4Nusv;gl3wVertexAttrib4Nusv316,10393
PFNGLVERTEXATTRIB4BVPROC gl3wVertexAttrib4bv;gl3wVertexAttrib4bv317,10444
PFNGLVERTEXATTRIB4DPROC gl3wVertexAttrib4d;gl3wVertexAttrib4d318,10491
PFNGLVERTEXATTRIB4DVPROC gl3wVertexAttrib4dv;gl3wVertexAttrib4dv319,10536
PFNGLVERTEXATTRIB4FPROC gl3wVertexAttrib4f;gl3wVertexAttrib4f320,10583
PFNGLVERTEXATTRIB4FVPROC gl3wVertexAttrib4fv;gl3wVertexAttrib4fv321,10628
PFNGLVERTEXATTRIB4IVPROC gl3wVertexAttrib4iv;gl3wVertexAttrib4iv322,10675
PFNGLVERTEXATTRIB4SPROC gl3wVertexAttrib4s;gl3wVertexAttrib4s323,10722
PFNGLVERTEXATTRIB4SVPROC gl3wVertexAttrib4sv;gl3wVertexAttrib4sv324,10767
PFNGLVERTEXATTRIB4UBVPROC gl3wVertexAttrib4ubv;gl3wVertexAttrib4ubv325,10814
PFNGLVERTEXATTRIB4UIVPROC gl3wVertexAttrib4uiv;gl3wVertexAttrib4uiv326,10863
PFNGLVERTEXATTRIB4USVPROC gl3wVertexAttrib4usv;gl3wVertexAttrib4usv327,10912
PFNGLVERTEXATTRIBPOINTERPROC gl3wVertexAttribPointer;gl3wVertexAttribPointer328,10961
PFNGLUNIFORMMATRIX2X3FVPROC gl3wUniformMatrix2x3fv;gl3wUniformMatrix2x3fv329,11016
PFNGLUNIFORMMATRIX3X2FVPROC gl3wUniformMatrix3x2fv;gl3wUniformMatrix3x2fv330,11069
PFNGLUNIFORMMATRIX2X4FVPROC gl3wUniformMatrix2x4fv;gl3wUniformMatrix2x4fv331,11122
PFNGLUNIFORMMATRIX4X2FVPROC gl3wUniformMatrix4x2fv;gl3wUniformMatrix4x2fv332,11175
PFNGLUNIFORMMATRIX3X4FVPROC gl3wUniformMatrix3x4fv;gl3wUniformMatrix3x4fv333,11228
PFNGLUNIFORMMATRIX4X3FVPROC gl3wUniformMatrix4x3fv;gl3wUniformMatrix4x3fv334,11281
PFNGLCOLORMASKIPROC gl3wColorMaski;gl3wColorMaski335,11334
PFNGLGETBOOLEANI_VPROC gl3wGetBooleani_v;gl3wGetBooleani_v336,11371
PFNGLGETINTEGERI_VPROC gl3wGetIntegeri_v;gl3wGetIntegeri_v337,11414
PFNGLENABLEIPROC gl3wEnablei;gl3wEnablei338,11457
PFNGLDISABLEIPROC gl3wDisablei;gl3wDisablei339,11488
PFNGLISENABLEDIPROC gl3wIsEnabledi;gl3wIsEnabledi340,11521
PFNGLBEGINTRANSFORMFEEDBACKPROC gl3wBeginTransformFeedback;gl3wBeginTransformFeedback341,11558
PFNGLENDTRANSFORMFEEDBACKPROC gl3wEndTransformFeedback;gl3wEndTransformFeedback342,11619
PFNGLBINDBUFFERRANGEPROC gl3wBindBufferRange;gl3wBindBufferRange343,11676
PFNGLBINDBUFFERBASEPROC gl3wBindBufferBase;gl3wBindBufferBase344,11723
PFNGLTRANSFORMFEEDBACKVARYINGSPROC gl3wTransformFeedbackVaryings;gl3wTransformFeedbackVaryings345,11768
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC gl3wGetTransformFeedbackVarying;gl3wGetTransformFeedbackVarying346,11835
PFNGLCLAMPCOLORPROC gl3wClampColor;gl3wClampColor347,11906
PFNGLBEGINCONDITIONALRENDERPROC gl3wBeginConditionalRender;gl3wBeginConditionalRender348,11943
PFNGLENDCONDITIONALRENDERPROC gl3wEndConditionalRender;gl3wEndConditionalRender349,12004
PFNGLVERTEXATTRIBIPOINTERPROC gl3wVertexAttribIPointer;gl3wVertexAttribIPointer350,12061
PFNGLGETVERTEXATTRIBIIVPROC gl3wGetVertexAttribIiv;gl3wGetVertexAttribIiv351,12118
PFNGLGETVERTEXATTRIBIUIVPROC gl3wGetVertexAttribIuiv;gl3wGetVertexAttribIuiv352,12171
PFNGLVERTEXATTRIBI1IPROC gl3wVertexAttribI1i;gl3wVertexAttribI1i353,12226
PFNGLVERTEXATTRIBI2IPROC gl3wVertexAttribI2i;gl3wVertexAttribI2i354,12273
PFNGLVERTEXATTRIBI3IPROC gl3wVertexAttribI3i;gl3wVertexAttribI3i355,12320
PFNGLVERTEXATTRIBI4IPROC gl3wVertexAttribI4i;gl3wVertexAttribI4i356,12367
PFNGLVERTEXATTRIBI1UIPROC gl3wVertexAttribI1ui;gl3wVertexAttribI1ui357,12414
PFNGLVERTEXATTRIBI2UIPROC gl3wVertexAttribI2ui;gl3wVertexAttribI2ui358,12463
PFNGLVERTEXATTRIBI3UIPROC gl3wVertexAttribI3ui;gl3wVertexAttribI3ui359,12512
PFNGLVERTEXATTRIBI4UIPROC gl3wVertexAttribI4ui;gl3wVertexAttribI4ui360,12561
PFNGLVERTEXATTRIBI1IVPROC gl3wVertexAttribI1iv;gl3wVertexAttribI1iv361,12610
PFNGLVERTEXATTRIBI2IVPROC gl3wVertexAttribI2iv;gl3wVertexAttribI2iv362,12659
PFNGLVERTEXATTRIBI3IVPROC gl3wVertexAttribI3iv;gl3wVertexAttribI3iv363,12708
PFNGLVERTEXATTRIBI4IVPROC gl3wVertexAttribI4iv;gl3wVertexAttribI4iv364,12757
PFNGLVERTEXATTRIBI1UIVPROC gl3wVertexAttribI1uiv;gl3wVertexAttribI1uiv365,12806
PFNGLVERTEXATTRIBI2UIVPROC gl3wVertexAttribI2uiv;gl3wVertexAttribI2uiv366,12857
PFNGLVERTEXATTRIBI3UIVPROC gl3wVertexAttribI3uiv;gl3wVertexAttribI3uiv367,12908
PFNGLVERTEXATTRIBI4UIVPROC gl3wVertexAttribI4uiv;gl3wVertexAttribI4uiv368,12959
PFNGLVERTEXATTRIBI4BVPROC gl3wVertexAttribI4bv;gl3wVertexAttribI4bv369,13010
PFNGLVERTEXATTRIBI4SVPROC gl3wVertexAttribI4sv;gl3wVertexAttribI4sv370,13059
PFNGLVERTEXATTRIBI4UBVPROC gl3wVertexAttribI4ubv;gl3wVertexAttribI4ubv371,13108
PFNGLVERTEXATTRIBI4USVPROC gl3wVertexAttribI4usv;gl3wVertexAttribI4usv372,13159
PFNGLGETUNIFORMUIVPROC gl3wGetUniformuiv;gl3wGetUniformuiv373,13210
PFNGLBINDFRAGDATALOCATIONPROC gl3wBindFragDataLocation;gl3wBindFragDataLocation374,13253
PFNGLGETFRAGDATALOCATIONPROC gl3wGetFragDataLocation;gl3wGetFragDataLocation375,13310
PFNGLUNIFORM1UIPROC gl3wUniform1ui;gl3wUniform1ui376,13365
PFNGLUNIFORM2UIPROC gl3wUniform2ui;gl3wUniform2ui377,13402
PFNGLUNIFORM3UIPROC gl3wUniform3ui;gl3wUniform3ui378,13439
PFNGLUNIFORM4UIPROC gl3wUniform4ui;gl3wUniform4ui379,13476
PFNGLUNIFORM1UIVPROC gl3wUniform1uiv;gl3wUniform1uiv380,13513
PFNGLUNIFORM2UIVPROC gl3wUniform2uiv;gl3wUniform2uiv381,13552
PFNGLUNIFORM3UIVPROC gl3wUniform3uiv;gl3wUniform3uiv382,13591
PFNGLUNIFORM4UIVPROC gl3wUniform4uiv;gl3wUniform4uiv383,13630
PFNGLTEXPARAMETERIIVPROC gl3wTexParameterIiv;gl3wTexParameterIiv384,13669
PFNGLTEXPARAMETERIUIVPROC gl3wTexParameterIuiv;gl3wTexParameterIuiv385,13716
PFNGLGETTEXPARAMETERIIVPROC gl3wGetTexParameterIiv;gl3wGetTexParameterIiv386,13765
PFNGLGETTEXPARAMETERIUIVPROC gl3wGetTexParameterIuiv;gl3wGetTexParameterIuiv387,13818
PFNGLCLEARBUFFERIVPROC gl3wClearBufferiv;gl3wClearBufferiv388,13873
PFNGLCLEARBUFFERUIVPROC gl3wClearBufferuiv;gl3wClearBufferuiv389,13916
PFNGLCLEARBUFFERFVPROC gl3wClearBufferfv;gl3wClearBufferfv390,13961
PFNGLCLEARBUFFERFIPROC gl3wClearBufferfi;gl3wClearBufferfi391,14004
PFNGLGETSTRINGIPROC gl3wGetStringi;gl3wGetStringi392,14047
PFNGLDRAWARRAYSINSTANCEDPROC gl3wDrawArraysInstanced;gl3wDrawArraysInstanced393,14084
PFNGLDRAWELEMENTSINSTANCEDPROC gl3wDrawElementsInstanced;gl3wDrawElementsInstanced394,14139
PFNGLTEXBUFFERPROC gl3wTexBuffer;gl3wTexBuffer395,14198
PFNGLPRIMITIVERESTARTINDEXPROC gl3wPrimitiveRestartIndex;gl3wPrimitiveRestartIndex396,14233
PFNGLGETINTEGER64I_VPROC gl3wGetInteger64i_v;gl3wGetInteger64i_v397,14292
PFNGLGETBUFFERPARAMETERI64VPROC gl3wGetBufferParameteri64v;gl3wGetBufferParameteri64v398,14339
PFNGLFRAMEBUFFERTEXTUREPROC gl3wFramebufferTexture;gl3wFramebufferTexture399,14400
PFNGLVERTEXATTRIBDIVISORPROC gl3wVertexAttribDivisor;gl3wVertexAttribDivisor400,14453
PFNGLMINSAMPLESHADINGPROC gl3wMinSampleShading;gl3wMinSampleShading401,14508
PFNGLBLENDEQUATIONIPROC gl3wBlendEquationi;gl3wBlendEquationi402,14557
PFNGLBLENDEQUATIONSEPARATEIPROC gl3wBlendEquationSeparatei;gl3wBlendEquationSeparatei403,14602
PFNGLBLENDFUNCIPROC gl3wBlendFunci;gl3wBlendFunci404,14663
PFNGLBLENDFUNCSEPARATEIPROC gl3wBlendFuncSeparatei;gl3wBlendFuncSeparatei405,14700
PFNGLISRENDERBUFFERPROC gl3wIsRenderbuffer;gl3wIsRenderbuffer406,14753
PFNGLBINDRENDERBUFFERPROC gl3wBindRenderbuffer;gl3wBindRenderbuffer407,14798
PFNGLDELETERENDERBUFFERSPROC gl3wDeleteRenderbuffers;gl3wDeleteRenderbuffers408,14847
PFNGLGENRENDERBUFFERSPROC gl3wGenRenderbuffers;gl3wGenRenderbuffers409,14902
PFNGLRENDERBUFFERSTORAGEPROC gl3wRenderbufferStorage;gl3wRenderbufferStorage410,14951
PFNGLGETRENDERBUFFERPARAMETERIVPROC gl3wGetRenderbufferParameteriv;gl3wGetRenderbufferParameteriv411,15006
PFNGLISFRAMEBUFFERPROC gl3wIsFramebuffer;gl3wIsFramebuffer412,15075
PFNGLBINDFRAMEBUFFERPROC gl3wBindFramebuffer;gl3wBindFramebuffer413,15118
PFNGLDELETEFRAMEBUFFERSPROC gl3wDeleteFramebuffers;gl3wDeleteFramebuffers414,15165
PFNGLGENFRAMEBUFFERSPROC gl3wGenFramebuffers;gl3wGenFramebuffers415,15218
PFNGLCHECKFRAMEBUFFERSTATUSPROC gl3wCheckFramebufferStatus;gl3wCheckFramebufferStatus416,15265
PFNGLFRAMEBUFFERTEXTURE1DPROC gl3wFramebufferTexture1D;gl3wFramebufferTexture1D417,15326
PFNGLFRAMEBUFFERTEXTURE2DPROC gl3wFramebufferTexture2D;gl3wFramebufferTexture2D418,15383
PFNGLFRAMEBUFFERTEXTURE3DPROC gl3wFramebufferTexture3D;gl3wFramebufferTexture3D419,15440
PFNGLFRAMEBUFFERRENDERBUFFERPROC gl3wFramebufferRenderbuffer;gl3wFramebufferRenderbuffer420,15497
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC gl3wGetFramebufferAttachmentParameteriv;gl3wGetFramebufferAttachmentParameteriv421,15560
PFNGLGENERATEMIPMAPPROC gl3wGenerateMipmap;gl3wGenerateMipmap422,15647
PFNGLBLITFRAMEBUFFERPROC gl3wBlitFramebuffer;gl3wBlitFramebuffer423,15692
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC gl3wRenderbufferStorageMultisample;gl3wRenderbufferStorageMultisample424,15739
PFNGLFRAMEBUFFERTEXTURELAYERPROC gl3wFramebufferTextureLayer;gl3wFramebufferTextureLayer425,15816
PFNGLMAPBUFFERRANGEPROC gl3wMapBufferRange;gl3wMapBufferRange426,15879
PFNGLFLUSHMAPPEDBUFFERRANGEPROC gl3wFlushMappedBufferRange;gl3wFlushMappedBufferRange427,15924
PFNGLBINDVERTEXARRAYPROC gl3wBindVertexArray;gl3wBindVertexArray428,15985
PFNGLDELETEVERTEXARRAYSPROC gl3wDeleteVertexArrays;gl3wDeleteVertexArrays429,16032
PFNGLGENVERTEXARRAYSPROC gl3wGenVertexArrays;gl3wGenVertexArrays430,16085
PFNGLISVERTEXARRAYPROC gl3wIsVertexArray;gl3wIsVertexArray431,16132
PFNGLGETUNIFORMINDICESPROC gl3wGetUniformIndices;gl3wGetUniformIndices432,16175
PFNGLGETACTIVEUNIFORMSIVPROC gl3wGetActiveUniformsiv;gl3wGetActiveUniformsiv433,16226
PFNGLGETACTIVEUNIFORMNAMEPROC gl3wGetActiveUniformName;gl3wGetActiveUniformName434,16281
PFNGLGETUNIFORMBLOCKINDEXPROC gl3wGetUniformBlockIndex;gl3wGetUniformBlockIndex435,16338
PFNGLGETACTIVEUNIFORMBLOCKIVPROC gl3wGetActiveUniformBlockiv;gl3wGetActiveUniformBlockiv436,16395
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC gl3wGetActiveUniformBlockName;gl3wGetActiveUniformBlockName437,16458
PFNGLUNIFORMBLOCKBINDINGPROC gl3wUniformBlockBinding;gl3wUniformBlockBinding438,16525
PFNGLCOPYBUFFERSUBDATAPROC gl3wCopyBufferSubData;gl3wCopyBufferSubData439,16580
PFNGLDRAWELEMENTSBASEVERTEXPROC gl3wDrawElementsBaseVertex;gl3wDrawElementsBaseVertex440,16631
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC gl3wDrawRangeElementsBaseVertex;gl3wDrawRangeElementsBaseVertex441,16692
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC gl3wDrawElementsInstancedBaseVertex;gl3wDrawElementsInstancedBaseVertex442,16763
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC gl3wMultiDrawElementsBaseVertex;gl3wMultiDrawElementsBaseVertex443,16842
PFNGLPROVOKINGVERTEXPROC gl3wProvokingVertex;gl3wProvokingVertex444,16913
PFNGLFENCESYNCPROC gl3wFenceSync;gl3wFenceSync445,16960
PFNGLISSYNCPROC gl3wIsSync;gl3wIsSync446,16995
PFNGLDELETESYNCPROC gl3wDeleteSync;gl3wDeleteSync447,17024
PFNGLCLIENTWAITSYNCPROC gl3wClientWaitSync;gl3wClientWaitSync448,17061
PFNGLWAITSYNCPROC gl3wWaitSync;gl3wWaitSync449,17106
PFNGLGETINTEGER64VPROC gl3wGetInteger64v;gl3wGetInteger64v450,17139
PFNGLGETSYNCIVPROC gl3wGetSynciv;gl3wGetSynciv451,17182
PFNGLTEXIMAGE2DMULTISAMPLEPROC gl3wTexImage2DMultisample;gl3wTexImage2DMultisample452,17217
PFNGLTEXIMAGE3DMULTISAMPLEPROC gl3wTexImage3DMultisample;gl3wTexImage3DMultisample453,17276
PFNGLGETMULTISAMPLEFVPROC gl3wGetMultisamplefv;gl3wGetMultisamplefv454,17335
PFNGLSAMPLEMASKIPROC gl3wSampleMaski;gl3wSampleMaski455,17384
PFNGLBLENDEQUATIONIARBPROC gl3wBlendEquationiARB;gl3wBlendEquationiARB456,17423
PFNGLBLENDEQUATIONSEPARATEIARBPROC gl3wBlendEquationSeparateiARB;gl3wBlendEquationSeparateiARB457,17474
PFNGLBLENDFUNCIARBPROC gl3wBlendFunciARB;gl3wBlendFunciARB458,17541
PFNGLBLENDFUNCSEPARATEIARBPROC gl3wBlendFuncSeparateiARB;gl3wBlendFuncSeparateiARB459,17584
PFNGLMINSAMPLESHADINGARBPROC gl3wMinSampleShadingARB;gl3wMinSampleShadingARB460,17643
PFNGLNAMEDSTRINGARBPROC gl3wNamedStringARB;gl3wNamedStringARB461,17698
PFNGLDELETENAMEDSTRINGARBPROC gl3wDeleteNamedStringARB;gl3wDeleteNamedStringARB462,17743
PFNGLCOMPILESHADERINCLUDEARBPROC gl3wCompileShaderIncludeARB;gl3wCompileShaderIncludeARB463,17800
PFNGLISNAMEDSTRINGARBPROC gl3wIsNamedStringARB;gl3wIsNamedStringARB464,17863
PFNGLGETNAMEDSTRINGARBPROC gl3wGetNamedStringARB;gl3wGetNamedStringARB465,17912
PFNGLGETNAMEDSTRINGIVARBPROC gl3wGetNamedStringivARB;gl3wGetNamedStringivARB466,17963
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC gl3wBindFragDataLocationIndexed;gl3wBindFragDataLocationIndexed467,18018
PFNGLGETFRAGDATAINDEXPROC gl3wGetFragDataIndex;gl3wGetFragDataIndex468,18089
PFNGLGENSAMPLERSPROC gl3wGenSamplers;gl3wGenSamplers469,18138
PFNGLDELETESAMPLERSPROC gl3wDeleteSamplers;gl3wDeleteSamplers470,18177
PFNGLISSAMPLERPROC gl3wIsSampler;gl3wIsSampler471,18222
PFNGLBINDSAMPLERPROC gl3wBindSampler;gl3wBindSampler472,18257
PFNGLSAMPLERPARAMETERIPROC gl3wSamplerParameteri;gl3wSamplerParameteri473,18296
PFNGLSAMPLERPARAMETERIVPROC gl3wSamplerParameteriv;gl3wSamplerParameteriv474,18347
PFNGLSAMPLERPARAMETERFPROC gl3wSamplerParameterf;gl3wSamplerParameterf475,18400
PFNGLSAMPLERPARAMETERFVPROC gl3wSamplerParameterfv;gl3wSamplerParameterfv476,18451
PFNGLSAMPLERPARAMETERIIVPROC gl3wSamplerParameterIiv;gl3wSamplerParameterIiv477,18504
PFNGLSAMPLERPARAMETERIUIVPROC gl3wSamplerParameterIuiv;gl3wSamplerParameterIuiv478,18559
PFNGLGETSAMPLERPARAMETERIVPROC gl3wGetSamplerParameteriv;gl3wGetSamplerParameteriv479,18616
PFNGLGETSAMPLERPARAMETERIIVPROC gl3wGetSamplerParameterIiv;gl3wGetSamplerParameterIiv480,18675
PFNGLGETSAMPLERPARAMETERFVPROC gl3wGetSamplerParameterfv;gl3wGetSamplerParameterfv481,18736
PFNGLGETSAMPLERPARAMETERIUIVPROC gl3wGetSamplerParameterIuiv;gl3wGetSamplerParameterIuiv482,18795
PFNGLQUERYCOUNTERPROC gl3wQueryCounter;gl3wQueryCounter483,18858
PFNGLGETQUERYOBJECTI64VPROC gl3wGetQueryObjecti64v;gl3wGetQueryObjecti64v484,18899
PFNGLGETQUERYOBJECTUI64VPROC gl3wGetQueryObjectui64v;gl3wGetQueryObjectui64v485,18952
PFNGLVERTEXP2UIPROC gl3wVertexP2ui;gl3wVertexP2ui486,19007
PFNGLVERTEXP2UIVPROC gl3wVertexP2uiv;gl3wVertexP2uiv487,19044
PFNGLVERTEXP3UIPROC gl3wVertexP3ui;gl3wVertexP3ui488,19083
PFNGLVERTEXP3UIVPROC gl3wVertexP3uiv;gl3wVertexP3uiv489,19120
PFNGLVERTEXP4UIPROC gl3wVertexP4ui;gl3wVertexP4ui490,19159
PFNGLVERTEXP4UIVPROC gl3wVertexP4uiv;gl3wVertexP4uiv491,19196
PFNGLTEXCOORDP1UIPROC gl3wTexCoordP1ui;gl3wTexCoordP1ui492,19235
PFNGLTEXCOORDP1UIVPROC gl3wTexCoordP1uiv;gl3wTexCoordP1uiv493,19276
PFNGLTEXCOORDP2UIPROC gl3wTexCoordP2ui;gl3wTexCoordP2ui494,19319
PFNGLTEXCOORDP2UIVPROC gl3wTexCoordP2uiv;gl3wTexCoordP2uiv495,19360
PFNGLTEXCOORDP3UIPROC gl3wTexCoordP3ui;gl3wTexCoordP3ui496,19403
PFNGLTEXCOORDP3UIVPROC gl3wTexCoordP3uiv;gl3wTexCoordP3uiv497,19444
PFNGLTEXCOORDP4UIPROC gl3wTexCoordP4ui;gl3wTexCoordP4ui498,19487
PFNGLTEXCOORDP4UIVPROC gl3wTexCoordP4uiv;gl3wTexCoordP4uiv499,19528
PFNGLMULTITEXCOORDP1UIPROC gl3wMultiTexCoordP1ui;gl3wMultiTexCoordP1ui500,19571
PFNGLMULTITEXCOORDP1UIVPROC gl3wMultiTexCoordP1uiv;gl3wMultiTexCoordP1uiv501,19622
PFNGLMULTITEXCOORDP2UIPROC gl3wMultiTexCoordP2ui;gl3wMultiTexCoordP2ui502,19675
PFNGLMULTITEXCOORDP2UIVPROC gl3wMultiTexCoordP2uiv;gl3wMultiTexCoordP2uiv503,19726
PFNGLMULTITEXCOORDP3UIPROC gl3wMultiTexCoordP3ui;gl3wMultiTexCoordP3ui504,19779
PFNGLMULTITEXCOORDP3UIVPROC gl3wMultiTexCoordP3uiv;gl3wMultiTexCoordP3uiv505,19830
PFNGLMULTITEXCOORDP4UIPROC gl3wMultiTexCoordP4ui;gl3wMultiTexCoordP4ui506,19883
PFNGLMULTITEXCOORDP4UIVPROC gl3wMultiTexCoordP4uiv;gl3wMultiTexCoordP4uiv507,19934
PFNGLNORMALP3UIPROC gl3wNormalP3ui;gl3wNormalP3ui508,19987
PFNGLNORMALP3UIVPROC gl3wNormalP3uiv;gl3wNormalP3uiv509,20024
PFNGLCOLORP3UIPROC gl3wColorP3ui;gl3wColorP3ui510,20063
PFNGLCOLORP3UIVPROC gl3wColorP3uiv;gl3wColorP3uiv511,20098
PFNGLCOLORP4UIPROC gl3wColorP4ui;gl3wColorP4ui512,20135
PFNGLCOLORP4UIVPROC gl3wColorP4uiv;gl3wColorP4uiv513,20170
PFNGLSECONDARYCOLORP3UIPROC gl3wSecondaryColorP3ui;gl3wSecondaryColorP3ui514,20207
PFNGLSECONDARYCOLORP3UIVPROC gl3wSecondaryColorP3uiv;gl3wSecondaryColorP3uiv515,20260
PFNGLVERTEXATTRIBP1UIPROC gl3wVertexAttribP1ui;gl3wVertexAttribP1ui516,20315
PFNGLVERTEXATTRIBP1UIVPROC gl3wVertexAttribP1uiv;gl3wVertexAttribP1uiv517,20364
PFNGLVERTEXATTRIBP2UIPROC gl3wVertexAttribP2ui;gl3wVertexAttribP2ui518,20415
PFNGLVERTEXATTRIBP2UIVPROC gl3wVertexAttribP2uiv;gl3wVertexAttribP2uiv519,20464
PFNGLVERTEXATTRIBP3UIPROC gl3wVertexAttribP3ui;gl3wVertexAttribP3ui520,20515
PFNGLVERTEXATTRIBP3UIVPROC gl3wVertexAttribP3uiv;gl3wVertexAttribP3uiv521,20564
PFNGLVERTEXATTRIBP4UIPROC gl3wVertexAttribP4ui;gl3wVertexAttribP4ui522,20615
PFNGLVERTEXATTRIBP4UIVPROC gl3wVertexAttribP4uiv;gl3wVertexAttribP4uiv523,20664
PFNGLDRAWARRAYSINDIRECTPROC gl3wDrawArraysIndirect;gl3wDrawArraysIndirect524,20715
PFNGLDRAWELEMENTSINDIRECTPROC gl3wDrawElementsIndirect;gl3wDrawElementsIndirect525,20768
PFNGLUNIFORM1DPROC gl3wUniform1d;gl3wUniform1d526,20825
PFNGLUNIFORM2DPROC gl3wUniform2d;gl3wUniform2d527,20860
PFNGLUNIFORM3DPROC gl3wUniform3d;gl3wUniform3d528,20895
PFNGLUNIFORM4DPROC gl3wUniform4d;gl3wUniform4d529,20930
PFNGLUNIFORM1DVPROC gl3wUniform1dv;gl3wUniform1dv530,20965
PFNGLUNIFORM2DVPROC gl3wUniform2dv;gl3wUniform2dv531,21002
PFNGLUNIFORM3DVPROC gl3wUniform3dv;gl3wUniform3dv532,21039
PFNGLUNIFORM4DVPROC gl3wUniform4dv;gl3wUniform4dv533,21076
PFNGLUNIFORMMATRIX2DVPROC gl3wUniformMatrix2dv;gl3wUniformMatrix2dv534,21113
PFNGLUNIFORMMATRIX3DVPROC gl3wUniformMatrix3dv;gl3wUniformMatrix3dv535,21162
PFNGLUNIFORMMATRIX4DVPROC gl3wUniformMatrix4dv;gl3wUniformMatrix4dv536,21211
PFNGLUNIFORMMATRIX2X3DVPROC gl3wUniformMatrix2x3dv;gl3wUniformMatrix2x3dv537,21260
PFNGLUNIFORMMATRIX2X4DVPROC gl3wUniformMatrix2x4dv;gl3wUniformMatrix2x4dv538,21313
PFNGLUNIFORMMATRIX3X2DVPROC gl3wUniformMatrix3x2dv;gl3wUniformMatrix3x2dv539,21366
PFNGLUNIFORMMATRIX3X4DVPROC gl3wUniformMatrix3x4dv;gl3wUniformMatrix3x4dv540,21419
PFNGLUNIFORMMATRIX4X2DVPROC gl3wUniformMatrix4x2dv;gl3wUniformMatrix4x2dv541,21472
PFNGLUNIFORMMATRIX4X3DVPROC gl3wUniformMatrix4x3dv;gl3wUniformMatrix4x3dv542,21525
PFNGLGETUNIFORMDVPROC gl3wGetUniformdv;gl3wGetUniformdv543,21578
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC gl3wGetSubroutineUniformLocation;gl3wGetSubroutineUniformLocation544,21619
PFNGLGETSUBROUTINEINDEXPROC gl3wGetSubroutineIndex;gl3wGetSubroutineIndex545,21692
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC gl3wGetActiveSubroutineUniformiv;gl3wGetActiveSubroutineUniformiv546,21745
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC gl3wGetActiveSubroutineUniformName;gl3wGetActiveSubroutineUniformName547,21818
PFNGLGETACTIVESUBROUTINENAMEPROC gl3wGetActiveSubroutineName;gl3wGetActiveSubroutineName548,21895
PFNGLUNIFORMSUBROUTINESUIVPROC gl3wUniformSubroutinesuiv;gl3wUniformSubroutinesuiv549,21958
PFNGLGETUNIFORMSUBROUTINEUIVPROC gl3wGetUniformSubroutineuiv;gl3wGetUniformSubroutineuiv550,22017
PFNGLGETPROGRAMSTAGEIVPROC gl3wGetProgramStageiv;gl3wGetProgramStageiv551,22080
PFNGLPATCHPARAMETERIPROC gl3wPatchParameteri;gl3wPatchParameteri552,22131
PFNGLPATCHPARAMETERFVPROC gl3wPatchParameterfv;gl3wPatchParameterfv553,22178
PFNGLBINDTRANSFORMFEEDBACKPROC gl3wBindTransformFeedback;gl3wBindTransformFeedback554,22227
PFNGLDELETETRANSFORMFEEDBACKSPROC gl3wDeleteTransformFeedbacks;gl3wDeleteTransformFeedbacks555,22286
PFNGLGENTRANSFORMFEEDBACKSPROC gl3wGenTransformFeedbacks;gl3wGenTransformFeedbacks556,22351
PFNGLISTRANSFORMFEEDBACKPROC gl3wIsTransformFeedback;gl3wIsTransformFeedback557,22410
PFNGLPAUSETRANSFORMFEEDBACKPROC gl3wPauseTransformFeedback;gl3wPauseTransformFeedback558,22465
PFNGLRESUMETRANSFORMFEEDBACKPROC gl3wResumeTransformFeedback;gl3wResumeTransformFeedback559,22526
PFNGLDRAWTRANSFORMFEEDBACKPROC gl3wDrawTransformFeedback;gl3wDrawTransformFeedback560,22589
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC gl3wDrawTransformFeedbackStream;gl3wDrawTransformFeedbackStream561,22648
PFNGLBEGINQUERYINDEXEDPROC gl3wBeginQueryIndexed;gl3wBeginQueryIndexed562,22719
PFNGLENDQUERYINDEXEDPROC gl3wEndQueryIndexed;gl3wEndQueryIndexed563,22770
PFNGLGETQUERYINDEXEDIVPROC gl3wGetQueryIndexediv;gl3wGetQueryIndexediv564,22817
PFNGLRELEASESHADERCOMPILERPROC gl3wReleaseShaderCompiler;gl3wReleaseShaderCompiler565,22868
PFNGLSHADERBINARYPROC gl3wShaderBinary;gl3wShaderBinary566,22927
PFNGLGETSHADERPRECISIONFORMATPROC gl3wGetShaderPrecisionFormat;gl3wGetShaderPrecisionFormat567,22968
PFNGLDEPTHRANGEFPROC gl3wDepthRangef;gl3wDepthRangef568,23033
PFNGLCLEARDEPTHFPROC gl3wClearDepthf;gl3wClearDepthf569,23072
PFNGLGETPROGRAMBINARYPROC gl3wGetProgramBinary;gl3wGetProgramBinary570,23111
PFNGLPROGRAMBINARYPROC gl3wProgramBinary;gl3wProgramBinary571,23160
PFNGLPROGRAMPARAMETERIPROC gl3wProgramParameteri;gl3wProgramParameteri572,23203
PFNGLUSEPROGRAMSTAGESPROC gl3wUseProgramStages;gl3wUseProgramStages573,23254
PFNGLACTIVESHADERPROGRAMPROC gl3wActiveShaderProgram;gl3wActiveShaderProgram574,23303
PFNGLCREATESHADERPROGRAMVPROC gl3wCreateShaderProgramv;gl3wCreateShaderProgramv575,23358
PFNGLBINDPROGRAMPIPELINEPROC gl3wBindProgramPipeline;gl3wBindProgramPipeline576,23415
PFNGLDELETEPROGRAMPIPELINESPROC gl3wDeleteProgramPipelines;gl3wDeleteProgramPipelines577,23470
PFNGLGENPROGRAMPIPELINESPROC gl3wGenProgramPipelines;gl3wGenProgramPipelines578,23531
PFNGLISPROGRAMPIPELINEPROC gl3wIsProgramPipeline;gl3wIsProgramPipeline579,23586
PFNGLGETPROGRAMPIPELINEIVPROC gl3wGetProgramPipelineiv;gl3wGetProgramPipelineiv580,23637
PFNGLPROGRAMUNIFORM1IPROC gl3wProgramUniform1i;gl3wProgramUniform1i581,23694
PFNGLPROGRAMUNIFORM1IVPROC gl3wProgramUniform1iv;gl3wProgramUniform1iv582,23743
PFNGLPROGRAMUNIFORM1FPROC gl3wProgramUniform1f;gl3wProgramUniform1f583,23794
PFNGLPROGRAMUNIFORM1FVPROC gl3wProgramUniform1fv;gl3wProgramUniform1fv584,23843
PFNGLPROGRAMUNIFORM1DPROC gl3wProgramUniform1d;gl3wProgramUniform1d585,23894
PFNGLPROGRAMUNIFORM1DVPROC gl3wProgramUniform1dv;gl3wProgramUniform1dv586,23943
PFNGLPROGRAMUNIFORM1UIPROC gl3wProgramUniform1ui;gl3wProgramUniform1ui587,23994
PFNGLPROGRAMUNIFORM1UIVPROC gl3wProgramUniform1uiv;gl3wProgramUniform1uiv588,24045
PFNGLPROGRAMUNIFORM2IPROC gl3wProgramUniform2i;gl3wProgramUniform2i589,24098
PFNGLPROGRAMUNIFORM2IVPROC gl3wProgramUniform2iv;gl3wProgramUniform2iv590,24147
PFNGLPROGRAMUNIFORM2FPROC gl3wProgramUniform2f;gl3wProgramUniform2f591,24198
PFNGLPROGRAMUNIFORM2FVPROC gl3wProgramUniform2fv;gl3wProgramUniform2fv592,24247
PFNGLPROGRAMUNIFORM2DPROC gl3wProgramUniform2d;gl3wProgramUniform2d593,24298
PFNGLPROGRAMUNIFORM2DVPROC gl3wProgramUniform2dv;gl3wProgramUniform2dv594,24347
PFNGLPROGRAMUNIFORM2UIPROC gl3wProgramUniform2ui;gl3wProgramUniform2ui595,24398
PFNGLPROGRAMUNIFORM2UIVPROC gl3wProgramUniform2uiv;gl3wProgramUniform2uiv596,24449
PFNGLPROGRAMUNIFORM3IPROC gl3wProgramUniform3i;gl3wProgramUniform3i597,24502
PFNGLPROGRAMUNIFORM3IVPROC gl3wProgramUniform3iv;gl3wProgramUniform3iv598,24551
PFNGLPROGRAMUNIFORM3FPROC gl3wProgramUniform3f;gl3wProgramUniform3f599,24602
PFNGLPROGRAMUNIFORM3FVPROC gl3wProgramUniform3fv;gl3wProgramUniform3fv600,24651
PFNGLPROGRAMUNIFORM3DPROC gl3wProgramUniform3d;gl3wProgramUniform3d601,24702
PFNGLPROGRAMUNIFORM3DVPROC gl3wProgramUniform3dv;gl3wProgramUniform3dv602,24751
PFNGLPROGRAMUNIFORM3UIPROC gl3wProgramUniform3ui;gl3wProgramUniform3ui603,24802
PFNGLPROGRAMUNIFORM3UIVPROC gl3wProgramUniform3uiv;gl3wProgramUniform3uiv604,24853
PFNGLPROGRAMUNIFORM4IPROC gl3wProgramUniform4i;gl3wProgramUniform4i605,24906
PFNGLPROGRAMUNIFORM4IVPROC gl3wProgramUniform4iv;gl3wProgramUniform4iv606,24955
PFNGLPROGRAMUNIFORM4FPROC gl3wProgramUniform4f;gl3wProgramUniform4f607,25006
PFNGLPROGRAMUNIFORM4FVPROC gl3wProgramUniform4fv;gl3wProgramUniform4fv608,25055
PFNGLPROGRAMUNIFORM4DPROC gl3wProgramUniform4d;gl3wProgramUniform4d609,25106
PFNGLPROGRAMUNIFORM4DVPROC gl3wProgramUniform4dv;gl3wProgramUniform4dv610,25155
PFNGLPROGRAMUNIFORM4UIPROC gl3wProgramUniform4ui;gl3wProgramUniform4ui611,25206
PFNGLPROGRAMUNIFORM4UIVPROC gl3wProgramUniform4uiv;gl3wProgramUniform4uiv612,25257
PFNGLPROGRAMUNIFORMMATRIX2FVPROC gl3wProgramUniformMatrix2fv;gl3wProgramUniformMatrix2fv613,25310
PFNGLPROGRAMUNIFORMMATRIX3FVPROC gl3wProgramUniformMatrix3fv;gl3wProgramUniformMatrix3fv614,25373
PFNGLPROGRAMUNIFORMMATRIX4FVPROC gl3wProgramUniformMatrix4fv;gl3wProgramUniformMatrix4fv615,25436
PFNGLPROGRAMUNIFORMMATRIX2DVPROC gl3wProgramUniformMatrix2dv;gl3wProgramUniformMatrix2dv616,25499
PFNGLPROGRAMUNIFORMMATRIX3DVPROC gl3wProgramUniformMatrix3dv;gl3wProgramUniformMatrix3dv617,25562
PFNGLPROGRAMUNIFORMMATRIX4DVPROC gl3wProgramUniformMatrix4dv;gl3wProgramUniformMatrix4dv618,25625
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC gl3wProgramUniformMatrix2x3fv;gl3wProgramUniformMatrix2x3fv619,25688
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC gl3wProgramUniformMatrix3x2fv;gl3wProgramUniformMatrix3x2fv620,25755
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC gl3wProgramUniformMatrix2x4fv;gl3wProgramUniformMatrix2x4fv621,25822
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC gl3wProgramUniformMatrix4x2fv;gl3wProgramUniformMatrix4x2fv622,25889
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC gl3wProgramUniformMatrix3x4fv;gl3wProgramUniformMatrix3x4fv623,25956
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC gl3wProgramUniformMatrix4x3fv;gl3wProgramUniformMatrix4x3fv624,26023
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC gl3wProgramUniformMatrix2x3dv;gl3wProgramUniformMatrix2x3dv625,26090
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC gl3wProgramUniformMatrix3x2dv;gl3wProgramUniformMatrix3x2dv626,26157
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC gl3wProgramUniformMatrix2x4dv;gl3wProgramUniformMatrix2x4dv627,26224
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC gl3wProgramUniformMatrix4x2dv;gl3wProgramUniformMatrix4x2dv628,26291
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC gl3wProgramUniformMatrix3x4dv;gl3wProgramUniformMatrix3x4dv629,26358
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC gl3wProgramUniformMatrix4x3dv;gl3wProgramUniformMatrix4x3dv630,26425
PFNGLVALIDATEPROGRAMPIPELINEPROC gl3wValidateProgramPipeline;gl3wValidateProgramPipeline631,26492
PFNGLGETPROGRAMPIPELINEINFOLOGPROC gl3wGetProgramPipelineInfoLog;gl3wGetProgramPipelineInfoLog632,26555
PFNGLVERTEXATTRIBL1DPROC gl3wVertexAttribL1d;gl3wVertexAttribL1d633,26622
PFNGLVERTEXATTRIBL2DPROC gl3wVertexAttribL2d;gl3wVertexAttribL2d634,26669
PFNGLVERTEXATTRIBL3DPROC gl3wVertexAttribL3d;gl3wVertexAttribL3d635,26716
PFNGLVERTEXATTRIBL4DPROC gl3wVertexAttribL4d;gl3wVertexAttribL4d636,26763
PFNGLVERTEXATTRIBL1DVPROC gl3wVertexAttribL1dv;gl3wVertexAttribL1dv637,26810
PFNGLVERTEXATTRIBL2DVPROC gl3wVertexAttribL2dv;gl3wVertexAttribL2dv638,26859
PFNGLVERTEXATTRIBL3DVPROC gl3wVertexAttribL3dv;gl3wVertexAttribL3dv639,26908
PFNGLVERTEXATTRIBL4DVPROC gl3wVertexAttribL4dv;gl3wVertexAttribL4dv640,26957
PFNGLVERTEXATTRIBLPOINTERPROC gl3wVertexAttribLPointer;gl3wVertexAttribLPointer641,27006
PFNGLGETVERTEXATTRIBLDVPROC gl3wGetVertexAttribLdv;gl3wGetVertexAttribLdv642,27063
PFNGLVIEWPORTARRAYVPROC gl3wViewportArrayv;gl3wViewportArrayv643,27116
PFNGLVIEWPORTINDEXEDFPROC gl3wViewportIndexedf;gl3wViewportIndexedf644,27161
PFNGLVIEWPORTINDEXEDFVPROC gl3wViewportIndexedfv;gl3wViewportIndexedfv645,27210
PFNGLSCISSORARRAYVPROC gl3wScissorArrayv;gl3wScissorArrayv646,27261
PFNGLSCISSORINDEXEDPROC gl3wScissorIndexed;gl3wScissorIndexed647,27304
PFNGLSCISSORINDEXEDVPROC gl3wScissorIndexedv;gl3wScissorIndexedv648,27349
PFNGLDEPTHRANGEARRAYVPROC gl3wDepthRangeArrayv;gl3wDepthRangeArrayv649,27396
PFNGLDEPTHRANGEINDEXEDPROC gl3wDepthRangeIndexed;gl3wDepthRangeIndexed650,27445
PFNGLGETFLOATI_VPROC gl3wGetFloati_v;gl3wGetFloati_v651,27496
PFNGLGETDOUBLEI_VPROC gl3wGetDoublei_v;gl3wGetDoublei_v652,27535
PFNGLCREATESYNCFROMCLEVENTARBPROC gl3wCreateSyncFromCLeventARB;gl3wCreateSyncFromCLeventARB653,27576
PFNGLDEBUGMESSAGECONTROLARBPROC gl3wDebugMessageControlARB;gl3wDebugMessageControlARB654,27641
PFNGLDEBUGMESSAGEINSERTARBPROC gl3wDebugMessageInsertARB;gl3wDebugMessageInsertARB655,27702
PFNGLDEBUGMESSAGECALLBACKARBPROC gl3wDebugMessageCallbackARB;gl3wDebugMessageCallbackARB656,27761
PFNGLGETDEBUGMESSAGELOGARBPROC gl3wGetDebugMessageLogARB;gl3wGetDebugMessageLogARB657,27824
PFNGLGETGRAPHICSRESETSTATUSARBPROC gl3wGetGraphicsResetStatusARB;gl3wGetGraphicsResetStatusARB658,27883
PFNGLGETNTEXIMAGEARBPROC gl3wGetnTexImageARB;gl3wGetnTexImageARB659,27950
PFNGLREADNPIXELSARBPROC gl3wReadnPixelsARB;gl3wReadnPixelsARB660,27997
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC gl3wGetnCompressedTexImageARB;gl3wGetnCompressedTexImageARB661,28042
PFNGLGETNUNIFORMFVARBPROC gl3wGetnUniformfvARB;gl3wGetnUniformfvARB662,28109
PFNGLGETNUNIFORMIVARBPROC gl3wGetnUniformivARB;gl3wGetnUniformivARB663,28158
PFNGLGETNUNIFORMUIVARBPROC gl3wGetnUniformuivARB;gl3wGetnUniformuivARB664,28207
PFNGLGETNUNIFORMDVARBPROC gl3wGetnUniformdvARB;gl3wGetnUniformdvARB665,28258
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC gl3wDrawArraysInstancedBaseInstance;gl3wDrawArraysInstancedBaseInstance666,28307
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC gl3wDrawElementsInstancedBaseInstance;gl3wDrawElementsInstancedBaseInstance667,28386
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC gl3wDrawElementsInstancedBaseVertexBaseInstgl3wDrawElementsInstancedBaseVertexBaseInstance668,28469
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC gl3wDrawTransformFeedbackInstanced;gl3wDrawTransformFeedbackInstanced669,28572
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC gl3wDrawTransformFeedbackStreamInstanced;gl3wDrawTransformFeedbackStreamInstanced670,28649
PFNGLGETINTERNALFORMATIVPROC gl3wGetInternalformativ;gl3wGetInternalformativ671,28738
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC gl3wGetActiveAtomicCounterBufferiv;gl3wGetActiveAtomicCounterBufferiv672,28793
PFNGLBINDIMAGETEXTUREPROC gl3wBindImageTexture;gl3wBindImageTexture673,28870
PFNGLMEMORYBARRIERPROC gl3wMemoryBarrier;gl3wMemoryBarrier674,28919
PFNGLTEXSTORAGE1DPROC gl3wTexStorage1D;gl3wTexStorage1D675,28962
PFNGLTEXSTORAGE2DPROC gl3wTexStorage2D;gl3wTexStorage2D676,29003
PFNGLTEXSTORAGE3DPROC gl3wTexStorage3D;gl3wTexStorage3D677,29044
PFNGLTEXTURESTORAGE1DEXTPROC gl3wTextureStorage1DEXT;gl3wTextureStorage1DEXT678,29085
PFNGLTEXTURESTORAGE2DEXTPROC gl3wTextureStorage2DEXT;gl3wTextureStorage2DEXT679,29140
PFNGLTEXTURESTORAGE3DEXTPROC gl3wTextureStorage3DEXT;gl3wTextureStorage3DEXT680,29195
PFNGLDEBUGMESSAGECONTROLPROC gl3wDebugMessageControl;gl3wDebugMessageControl681,29250
PFNGLDEBUGMESSAGEINSERTPROC gl3wDebugMessageInsert;gl3wDebugMessageInsert682,29305
PFNGLDEBUGMESSAGECALLBACKPROC gl3wDebugMessageCallback;gl3wDebugMessageCallback683,29358
PFNGLGETDEBUGMESSAGELOGPROC gl3wGetDebugMessageLog;gl3wGetDebugMessageLog684,29415
PFNGLPUSHDEBUGGROUPPROC gl3wPushDebugGroup;gl3wPushDebugGroup685,29468
PFNGLPOPDEBUGGROUPPROC gl3wPopDebugGroup;gl3wPopDebugGroup686,29513
PFNGLOBJECTLABELPROC gl3wObjectLabel;gl3wObjectLabel687,29556
PFNGLGETOBJECTLABELPROC gl3wGetObjectLabel;gl3wGetObjectLabel688,29595
PFNGLOBJECTPTRLABELPROC gl3wObjectPtrLabel;gl3wObjectPtrLabel689,29640
PFNGLGETOBJECTPTRLABELPROC gl3wGetObjectPtrLabel;gl3wGetObjectPtrLabel690,29685
PFNGLCLEARBUFFERDATAPROC gl3wClearBufferData;gl3wClearBufferData691,29736
PFNGLCLEARBUFFERSUBDATAPROC gl3wClearBufferSubData;gl3wClearBufferSubData692,29783
PFNGLCLEARNAMEDBUFFERDATAEXTPROC gl3wClearNamedBufferDataEXT;gl3wClearNamedBufferDataEXT693,29836
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC gl3wClearNamedBufferSubDataEXT;gl3wClearNamedBufferSubDataEXT694,29899
PFNGLDISPATCHCOMPUTEPROC gl3wDispatchCompute;gl3wDispatchCompute695,29968
PFNGLDISPATCHCOMPUTEINDIRECTPROC gl3wDispatchComputeIndirect;gl3wDispatchComputeIndirect696,30015
PFNGLCOPYIMAGESUBDATAPROC gl3wCopyImageSubData;gl3wCopyImageSubData697,30078
PFNGLTEXTUREVIEWPROC gl3wTextureView;gl3wTextureView698,30127
PFNGLBINDVERTEXBUFFERPROC gl3wBindVertexBuffer;gl3wBindVertexBuffer699,30166
PFNGLVERTEXATTRIBFORMATPROC gl3wVertexAttribFormat;gl3wVertexAttribFormat700,30215
PFNGLVERTEXATTRIBIFORMATPROC gl3wVertexAttribIFormat;gl3wVertexAttribIFormat701,30268
PFNGLVERTEXATTRIBLFORMATPROC gl3wVertexAttribLFormat;gl3wVertexAttribLFormat702,30323
PFNGLVERTEXATTRIBBINDINGPROC gl3wVertexAttribBinding;gl3wVertexAttribBinding703,30378
PFNGLVERTEXBINDINGDIVISORPROC gl3wVertexBindingDivisor;gl3wVertexBindingDivisor704,30433
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC gl3wVertexArrayBindVertexBufferEXT;gl3wVertexArrayBindVertexBufferEXT705,30490
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC gl3wVertexArrayVertexAttribFormatEXT;gl3wVertexArrayVertexAttribFormatEXT706,30567
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC gl3wVertexArrayVertexAttribIFormatEXT;gl3wVertexArrayVertexAttribIFormatEXT707,30648
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC gl3wVertexArrayVertexAttribLFormatEXT;gl3wVertexArrayVertexAttribLFormatEXT708,30731
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC gl3wVertexArrayVertexAttribBindingEXT;gl3wVertexArrayVertexAttribBindingEXT709,30814
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC gl3wVertexArrayVertexBindingDivisorEXT;gl3wVertexArrayVertexBindingDivisorEXT710,30897
PFNGLFRAMEBUFFERPARAMETERIPROC gl3wFramebufferParameteri;gl3wFramebufferParameteri711,30982
PFNGLGETFRAMEBUFFERPARAMETERIVPROC gl3wGetFramebufferParameteriv;gl3wGetFramebufferParameteriv712,31041
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC gl3wNamedFramebufferParameteriEXT;gl3wNamedFramebufferParameteriEXT713,31108
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC gl3wGetNamedFramebufferParameterivEXT;gl3wGetNamedFramebufferParameterivEXT714,31183
PFNGLGETINTERNALFORMATI64VPROC gl3wGetInternalformati64v;gl3wGetInternalformati64v715,31266
PFNGLINVALIDATETEXSUBIMAGEPROC gl3wInvalidateTexSubImage;gl3wInvalidateTexSubImage716,31325
PFNGLINVALIDATETEXIMAGEPROC gl3wInvalidateTexImage;gl3wInvalidateTexImage717,31384
PFNGLINVALIDATEBUFFERSUBDATAPROC gl3wInvalidateBufferSubData;gl3wInvalidateBufferSubData718,31437
PFNGLINVALIDATEBUFFERDATAPROC gl3wInvalidateBufferData;gl3wInvalidateBufferData719,31500
PFNGLINVALIDATEFRAMEBUFFERPROC gl3wInvalidateFramebuffer;gl3wInvalidateFramebuffer720,31557
PFNGLINVALIDATESUBFRAMEBUFFERPROC gl3wInvalidateSubFramebuffer;gl3wInvalidateSubFramebuffer721,31616
PFNGLMULTIDRAWARRAYSINDIRECTPROC gl3wMultiDrawArraysIndirect;gl3wMultiDrawArraysIndirect722,31681
PFNGLMULTIDRAWELEMENTSINDIRECTPROC gl3wMultiDrawElementsIndirect;gl3wMultiDrawElementsIndirect723,31744
PFNGLGETPROGRAMINTERFACEIVPROC gl3wGetProgramInterfaceiv;gl3wGetProgramInterfaceiv724,31811
PFNGLGETPROGRAMRESOURCEINDEXPROC gl3wGetProgramResourceIndex;gl3wGetProgramResourceIndex725,31870
PFNGLGETPROGRAMRESOURCENAMEPROC gl3wGetProgramResourceName;gl3wGetProgramResourceName726,31933
PFNGLGETPROGRAMRESOURCEIVPROC gl3wGetProgramResourceiv;gl3wGetProgramResourceiv727,31994
PFNGLGETPROGRAMRESOURCELOCATIONPROC gl3wGetProgramResourceLocation;gl3wGetProgramResourceLocation728,32051
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC gl3wGetProgramResourceLocationIndex;gl3wGetProgramResourceLocationIndex729,32120
PFNGLSHADERSTORAGEBLOCKBINDINGPROC gl3wShaderStorageBlockBinding;gl3wShaderStorageBlockBinding730,32199
PFNGLTEXBUFFERRANGEPROC gl3wTexBufferRange;gl3wTexBufferRange731,32266
PFNGLTEXTUREBUFFERRANGEEXTPROC gl3wTextureBufferRangeEXT;gl3wTextureBufferRangeEXT732,32311
PFNGLTEXSTORAGE2DMULTISAMPLEPROC gl3wTexStorage2DMultisample;gl3wTexStorage2DMultisample733,32370
PFNGLTEXSTORAGE3DMULTISAMPLEPROC gl3wTexStorage3DMultisample;gl3wTexStorage3DMultisample734,32433
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC gl3wTextureStorage2DMultisampleEXT;gl3wTextureStorage2DMultisampleEXT735,32496
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC gl3wTextureStorage3DMultisampleEXT;gl3wTextureStorage3DMultisampleEXT736,32573
static void load_procs(void)load_procs738,32652

../gejo/libs/imgui/examples/libs/gl3w/GL/gl3w.h,35257
#define __gl3w_h___gl3w_h_2,19
#define __gl_h___gl_h_7,86
#define glCullFace	glCullFace625,34673
#define glFrontFace	glFrontFace626,34707
#define glHint	glHint627,34743
#define glLineWidth	glLineWidth628,34769
#define glPointSize	glPointSize629,34805
#define glPolygonMode	glPolygonMode630,34841
#define glScissor	glScissor631,34881
#define glTexParameterf	glTexParameterf632,34913
#define glTexParameterfv	glTexParameterfv633,34957
#define glTexParameteri	glTexParameteri634,35003
#define glTexParameteriv	glTexParameteriv635,35047
#define glTexImage1D	glTexImage1D636,35093
#define glTexImage2D	glTexImage2D637,35131
#define glDrawBuffer	glDrawBuffer638,35169
#define glClear	glClear639,35207
#define glClearColor	glClearColor640,35235
#define glClearStencil	glClearStencil641,35273
#define glClearDepth	glClearDepth642,35315
#define glStencilMask	glStencilMask643,35353
#define glColorMask	glColorMask644,35393
#define glDepthMask	glDepthMask645,35429
#define glDisable	glDisable646,35465
#define glEnable	glEnable647,35497
#define glFinish	glFinish648,35527
#define glFlush	glFlush649,35557
#define glBlendFunc	glBlendFunc650,35585
#define glLogicOp	glLogicOp651,35621
#define glStencilFunc	glStencilFunc652,35653
#define glStencilOp	glStencilOp653,35693
#define glDepthFunc	glDepthFunc654,35729
#define glPixelStoref	glPixelStoref655,35765
#define glPixelStorei	glPixelStorei656,35805
#define glReadBuffer	glReadBuffer657,35845
#define glReadPixels	glReadPixels658,35883
#define glGetBooleanv	glGetBooleanv659,35921
#define glGetDoublev	glGetDoublev660,35961
#define glGetError	glGetError661,35999
#define glGetFloatv	glGetFloatv662,36033
#define glGetIntegerv	glGetIntegerv663,36069
#define glGetString	glGetString664,36109
#define glGetTexImage	glGetTexImage665,36145
#define glGetTexParameterfv	glGetTexParameterfv666,36185
#define glGetTexParameteriv	glGetTexParameteriv667,36237
#define glGetTexLevelParameterfv	glGetTexLevelParameterfv668,36289
#define glGetTexLevelParameteriv	glGetTexLevelParameteriv669,36351
#define glIsEnabled	glIsEnabled670,36413
#define glDepthRange	glDepthRange671,36449
#define glViewport	glViewport672,36487
#define glDrawArrays	glDrawArrays673,36521
#define glDrawElements	glDrawElements674,36559
#define glGetPointerv	glGetPointerv675,36601
#define glPolygonOffset	glPolygonOffset676,36641
#define glCopyTexImage1D	glCopyTexImage1D677,36685
#define glCopyTexImage2D	glCopyTexImage2D678,36731
#define glCopyTexSubImage1D	glCopyTexSubImage1D679,36777
#define glCopyTexSubImage2D	glCopyTexSubImage2D680,36829
#define glTexSubImage1D	glTexSubImage1D681,36881
#define glTexSubImage2D	glTexSubImage2D682,36925
#define glBindTexture	glBindTexture683,36969
#define glDeleteTextures	glDeleteTextures684,37009
#define glGenTextures	glGenTextures685,37055
#define glIsTexture	glIsTexture686,37095
#define glBlendColor	glBlendColor687,37131
#define glBlendEquation	glBlendEquation688,37169
#define glDrawRangeElements	glDrawRangeElements689,37213
#define glTexImage3D	glTexImage3D690,37265
#define glTexSubImage3D	glTexSubImage3D691,37303
#define glCopyTexSubImage3D	glCopyTexSubImage3D692,37347
#define glActiveTexture	glActiveTexture693,37399
#define glSampleCoverage	glSampleCoverage694,37443
#define glCompressedTexImage3D	glCompressedTexImage3D695,37489
#define glCompressedTexImage2D	glCompressedTexImage2D696,37547
#define glCompressedTexImage1D	glCompressedTexImage1D697,37605
#define glCompressedTexSubImage3D	glCompressedTexSubImage3D698,37663
#define glCompressedTexSubImage2D	glCompressedTexSubImage2D699,37727
#define glCompressedTexSubImage1D	glCompressedTexSubImage1D700,37791
#define glGetCompressedTexImage	glGetCompressedTexImage701,37855
#define glBlendFuncSeparate	glBlendFuncSeparate702,37915
#define glMultiDrawArrays	glMultiDrawArrays703,37967
#define glMultiDrawElements	glMultiDrawElements704,38015
#define glPointParameterf	glPointParameterf705,38067
#define glPointParameterfv	glPointParameterfv706,38115
#define glPointParameteri	glPointParameteri707,38165
#define glPointParameteriv	glPointParameteriv708,38213
#define glGenQueries	glGenQueries709,38263
#define glDeleteQueries	glDeleteQueries710,38301
#define glIsQuery	glIsQuery711,38345
#define glBeginQuery	glBeginQuery712,38377
#define glEndQuery	glEndQuery713,38415
#define glGetQueryiv	glGetQueryiv714,38449
#define glGetQueryObjectiv	glGetQueryObjectiv715,38487
#define glGetQueryObjectuiv	glGetQueryObjectuiv716,38537
#define glBindBuffer	glBindBuffer717,38589
#define glDeleteBuffers	glDeleteBuffers718,38627
#define glGenBuffers	glGenBuffers719,38671
#define glIsBuffer	glIsBuffer720,38709
#define glBufferData	glBufferData721,38743
#define glBufferSubData	glBufferSubData722,38781
#define glGetBufferSubData	glGetBufferSubData723,38825
#define glMapBuffer	glMapBuffer724,38875
#define glUnmapBuffer	glUnmapBuffer725,38911
#define glGetBufferParameteriv	glGetBufferParameteriv726,38951
#define glGetBufferPointerv	glGetBufferPointerv727,39009
#define glBlendEquationSeparate	glBlendEquationSeparate728,39061
#define glDrawBuffers	glDrawBuffers729,39121
#define glStencilOpSeparate	glStencilOpSeparate730,39161
#define glStencilFuncSeparate	glStencilFuncSeparate731,39213
#define glStencilMaskSeparate	glStencilMaskSeparate732,39269
#define glAttachShader	glAttachShader733,39325
#define glBindAttribLocation	glBindAttribLocation734,39367
#define glCompileShader	glCompileShader735,39421
#define glCreateProgram	glCreateProgram736,39465
#define glCreateShader	glCreateShader737,39509
#define glDeleteProgram	glDeleteProgram738,39551
#define glDeleteShader	glDeleteShader739,39595
#define glDetachShader	glDetachShader740,39637
#define glDisableVertexAttribArray	glDisableVertexAttribArray741,39679
#define glEnableVertexAttribArray	glEnableVertexAttribArray742,39745
#define glGetActiveAttrib	glGetActiveAttrib743,39809
#define glGetActiveUniform	glGetActiveUniform744,39857
#define glGetAttachedShaders	glGetAttachedShaders745,39907
#define glGetAttribLocation	glGetAttribLocation746,39961
#define glGetProgramiv	glGetProgramiv747,40013
#define glGetProgramInfoLog	glGetProgramInfoLog748,40055
#define glGetShaderiv	glGetShaderiv749,40107
#define glGetShaderInfoLog	glGetShaderInfoLog750,40147
#define glGetShaderSource	glGetShaderSource751,40197
#define glGetUniformLocation	glGetUniformLocation752,40245
#define glGetUniformfv	glGetUniformfv753,40299
#define glGetUniformiv	glGetUniformiv754,40341
#define glGetVertexAttribdv	glGetVertexAttribdv755,40383
#define glGetVertexAttribfv	glGetVertexAttribfv756,40435
#define glGetVertexAttribiv	glGetVertexAttribiv757,40487
#define glGetVertexAttribPointerv	glGetVertexAttribPointerv758,40539
#define glIsProgram	glIsProgram759,40603
#define glIsShader	glIsShader760,40639
#define glLinkProgram	glLinkProgram761,40673
#define glShaderSource	glShaderSource762,40713
#define glUseProgram	glUseProgram763,40755
#define glUniform1f	glUniform1f764,40793
#define glUniform2f	glUniform2f765,40829
#define glUniform3f	glUniform3f766,40865
#define glUniform4f	glUniform4f767,40901
#define glUniform1i	glUniform1i768,40937
#define glUniform2i	glUniform2i769,40973
#define glUniform3i	glUniform3i770,41009
#define glUniform4i	glUniform4i771,41045
#define glUniform1fv	glUniform1fv772,41081
#define glUniform2fv	glUniform2fv773,41119
#define glUniform3fv	glUniform3fv774,41157
#define glUniform4fv	glUniform4fv775,41195
#define glUniform1iv	glUniform1iv776,41233
#define glUniform2iv	glUniform2iv777,41271
#define glUniform3iv	glUniform3iv778,41309
#define glUniform4iv	glUniform4iv779,41347
#define glUniformMatrix2fv	glUniformMatrix2fv780,41385
#define glUniformMatrix3fv	glUniformMatrix3fv781,41435
#define glUniformMatrix4fv	glUniformMatrix4fv782,41485
#define glValidateProgram	glValidateProgram783,41535
#define glVertexAttrib1d	glVertexAttrib1d784,41583
#define glVertexAttrib1dv	glVertexAttrib1dv785,41629
#define glVertexAttrib1f	glVertexAttrib1f786,41677
#define glVertexAttrib1fv	glVertexAttrib1fv787,41723
#define glVertexAttrib1s	glVertexAttrib1s788,41771
#define glVertexAttrib1sv	glVertexAttrib1sv789,41817
#define glVertexAttrib2d	glVertexAttrib2d790,41865
#define glVertexAttrib2dv	glVertexAttrib2dv791,41911
#define glVertexAttrib2f	glVertexAttrib2f792,41959
#define glVertexAttrib2fv	glVertexAttrib2fv793,42005
#define glVertexAttrib2s	glVertexAttrib2s794,42053
#define glVertexAttrib2sv	glVertexAttrib2sv795,42099
#define glVertexAttrib3d	glVertexAttrib3d796,42147
#define glVertexAttrib3dv	glVertexAttrib3dv797,42193
#define glVertexAttrib3f	glVertexAttrib3f798,42241
#define glVertexAttrib3fv	glVertexAttrib3fv799,42287
#define glVertexAttrib3s	glVertexAttrib3s800,42335
#define glVertexAttrib3sv	glVertexAttrib3sv801,42381
#define glVertexAttrib4Nbv	glVertexAttrib4Nbv802,42429
#define glVertexAttrib4Niv	glVertexAttrib4Niv803,42479
#define glVertexAttrib4Nsv	glVertexAttrib4Nsv804,42529
#define glVertexAttrib4Nub	glVertexAttrib4Nub805,42579
#define glVertexAttrib4Nubv	glVertexAttrib4Nubv806,42629
#define glVertexAttrib4Nuiv	glVertexAttrib4Nuiv807,42681
#define glVertexAttrib4Nusv	glVertexAttrib4Nusv808,42733
#define glVertexAttrib4bv	glVertexAttrib4bv809,42785
#define glVertexAttrib4d	glVertexAttrib4d810,42833
#define glVertexAttrib4dv	glVertexAttrib4dv811,42879
#define glVertexAttrib4f	glVertexAttrib4f812,42927
#define glVertexAttrib4fv	glVertexAttrib4fv813,42973
#define glVertexAttrib4iv	glVertexAttrib4iv814,43021
#define glVertexAttrib4s	glVertexAttrib4s815,43069
#define glVertexAttrib4sv	glVertexAttrib4sv816,43115
#define glVertexAttrib4ubv	glVertexAttrib4ubv817,43163
#define glVertexAttrib4uiv	glVertexAttrib4uiv818,43213
#define glVertexAttrib4usv	glVertexAttrib4usv819,43263
#define glVertexAttribPointer	glVertexAttribPointer820,43313
#define glUniformMatrix2x3fv	glUniformMatrix2x3fv821,43369
#define glUniformMatrix3x2fv	glUniformMatrix3x2fv822,43423
#define glUniformMatrix2x4fv	glUniformMatrix2x4fv823,43477
#define glUniformMatrix4x2fv	glUniformMatrix4x2fv824,43531
#define glUniformMatrix3x4fv	glUniformMatrix3x4fv825,43585
#define glUniformMatrix4x3fv	glUniformMatrix4x3fv826,43639
#define glColorMaski	glColorMaski827,43693
#define glGetBooleani_v	glGetBooleani_v828,43731
#define glGetIntegeri_v	glGetIntegeri_v829,43775
#define glEnablei	glEnablei830,43819
#define glDisablei	glDisablei831,43851
#define glIsEnabledi	glIsEnabledi832,43885
#define glBeginTransformFeedback	glBeginTransformFeedback833,43923
#define glEndTransformFeedback	glEndTransformFeedback834,43985
#define glBindBufferRange	glBindBufferRange835,44043
#define glBindBufferBase	glBindBufferBase836,44091
#define glTransformFeedbackVaryings	glTransformFeedbackVaryings837,44137
#define glGetTransformFeedbackVarying	glGetTransformFeedbackVarying838,44205
#define glClampColor	glClampColor839,44277
#define glBeginConditionalRender	glBeginConditionalRender840,44315
#define glEndConditionalRender	glEndConditionalRender841,44377
#define glVertexAttribIPointer	glVertexAttribIPointer842,44435
#define glGetVertexAttribIiv	glGetVertexAttribIiv843,44493
#define glGetVertexAttribIuiv	glGetVertexAttribIuiv844,44547
#define glVertexAttribI1i	glVertexAttribI1i845,44603
#define glVertexAttribI2i	glVertexAttribI2i846,44651
#define glVertexAttribI3i	glVertexAttribI3i847,44699
#define glVertexAttribI4i	glVertexAttribI4i848,44747
#define glVertexAttribI1ui	glVertexAttribI1ui849,44795
#define glVertexAttribI2ui	glVertexAttribI2ui850,44845
#define glVertexAttribI3ui	glVertexAttribI3ui851,44895
#define glVertexAttribI4ui	glVertexAttribI4ui852,44945
#define glVertexAttribI1iv	glVertexAttribI1iv853,44995
#define glVertexAttribI2iv	glVertexAttribI2iv854,45045
#define glVertexAttribI3iv	glVertexAttribI3iv855,45095
#define glVertexAttribI4iv	glVertexAttribI4iv856,45145
#define glVertexAttribI1uiv	glVertexAttribI1uiv857,45195
#define glVertexAttribI2uiv	glVertexAttribI2uiv858,45247
#define glVertexAttribI3uiv	glVertexAttribI3uiv859,45299
#define glVertexAttribI4uiv	glVertexAttribI4uiv860,45351
#define glVertexAttribI4bv	glVertexAttribI4bv861,45403
#define glVertexAttribI4sv	glVertexAttribI4sv862,45453
#define glVertexAttribI4ubv	glVertexAttribI4ubv863,45503
#define glVertexAttribI4usv	glVertexAttribI4usv864,45555
#define glGetUniformuiv	glGetUniformuiv865,45607
#define glBindFragDataLocation	glBindFragDataLocation866,45651
#define glGetFragDataLocation	glGetFragDataLocation867,45709
#define glUniform1ui	glUniform1ui868,45765
#define glUniform2ui	glUniform2ui869,45803
#define glUniform3ui	glUniform3ui870,45841
#define glUniform4ui	glUniform4ui871,45879
#define glUniform1uiv	glUniform1uiv872,45917
#define glUniform2uiv	glUniform2uiv873,45957
#define glUniform3uiv	glUniform3uiv874,45997
#define glUniform4uiv	glUniform4uiv875,46037
#define glTexParameterIiv	glTexParameterIiv876,46077
#define glTexParameterIuiv	glTexParameterIuiv877,46125
#define glGetTexParameterIiv	glGetTexParameterIiv878,46175
#define glGetTexParameterIuiv	glGetTexParameterIuiv879,46229
#define glClearBufferiv	glClearBufferiv880,46285
#define glClearBufferuiv	glClearBufferuiv881,46329
#define glClearBufferfv	glClearBufferfv882,46375
#define glClearBufferfi	glClearBufferfi883,46419
#define glGetStringi	glGetStringi884,46463
#define glDrawArraysInstanced	glDrawArraysInstanced885,46501
#define glDrawElementsInstanced	glDrawElementsInstanced886,46557
#define glTexBuffer	glTexBuffer887,46617
#define glPrimitiveRestartIndex	glPrimitiveRestartIndex888,46653
#define glGetInteger64i_v	glGetInteger64i_v889,46713
#define glGetBufferParameteri64v	glGetBufferParameteri64v890,46761
#define glFramebufferTexture	glFramebufferTexture891,46823
#define glVertexAttribDivisor	glVertexAttribDivisor892,46877
#define glMinSampleShading	glMinSampleShading893,46933
#define glBlendEquationi	glBlendEquationi894,46983
#define glBlendEquationSeparatei	glBlendEquationSeparatei895,47029
#define glBlendFunci	glBlendFunci896,47091
#define glBlendFuncSeparatei	glBlendFuncSeparatei897,47129
#define glIsRenderbuffer	glIsRenderbuffer898,47183
#define glBindRenderbuffer	glBindRenderbuffer899,47229
#define glDeleteRenderbuffers	glDeleteRenderbuffers900,47279
#define glGenRenderbuffers	glGenRenderbuffers901,47335
#define glRenderbufferStorage	glRenderbufferStorage902,47385
#define glGetRenderbufferParameteriv	glGetRenderbufferParameteriv903,47441
#define glIsFramebuffer	glIsFramebuffer904,47511
#define glBindFramebuffer	glBindFramebuffer905,47555
#define glDeleteFramebuffers	glDeleteFramebuffers906,47603
#define glGenFramebuffers	glGenFramebuffers907,47657
#define glCheckFramebufferStatus	glCheckFramebufferStatus908,47705
#define glFramebufferTexture1D	glFramebufferTexture1D909,47767
#define glFramebufferTexture2D	glFramebufferTexture2D910,47825
#define glFramebufferTexture3D	glFramebufferTexture3D911,47883
#define glFramebufferRenderbuffer	glFramebufferRenderbuffer912,47941
#define glGetFramebufferAttachmentParameteriv	glGetFramebufferAttachmentParameteriv913,48005
#define glGenerateMipmap	glGenerateMipmap914,48093
#define glBlitFramebuffer	glBlitFramebuffer915,48139
#define glRenderbufferStorageMultisample	glRenderbufferStorageMultisample916,48187
#define glFramebufferTextureLayer	glFramebufferTextureLayer917,48265
#define glMapBufferRange	glMapBufferRange918,48329
#define glFlushMappedBufferRange	glFlushMappedBufferRange919,48375
#define glBindVertexArray	glBindVertexArray920,48437
#define glDeleteVertexArrays	glDeleteVertexArrays921,48485
#define glGenVertexArrays	glGenVertexArrays922,48539
#define glIsVertexArray	glIsVertexArray923,48587
#define glGetUniformIndices	glGetUniformIndices924,48631
#define glGetActiveUniformsiv	glGetActiveUniformsiv925,48683
#define glGetActiveUniformName	glGetActiveUniformName926,48739
#define glGetUniformBlockIndex	glGetUniformBlockIndex927,48797
#define glGetActiveUniformBlockiv	glGetActiveUniformBlockiv928,48855
#define glGetActiveUniformBlockName	glGetActiveUniformBlockName929,48919
#define glUniformBlockBinding	glUniformBlockBinding930,48987
#define glCopyBufferSubData	glCopyBufferSubData931,49043
#define glDrawElementsBaseVertex	glDrawElementsBaseVertex932,49095
#define glDrawRangeElementsBaseVertex	glDrawRangeElementsBaseVertex933,49157
#define glDrawElementsInstancedBaseVertex	glDrawElementsInstancedBaseVertex934,49229
#define glMultiDrawElementsBaseVertex	glMultiDrawElementsBaseVertex935,49309
#define glProvokingVertex	glProvokingVertex936,49381
#define glFenceSync	glFenceSync937,49429
#define glIsSync	glIsSync938,49465
#define glDeleteSync	glDeleteSync939,49495
#define glClientWaitSync	glClientWaitSync940,49533
#define glWaitSync	glWaitSync941,49579
#define glGetInteger64v	glGetInteger64v942,49613
#define glGetSynciv	glGetSynciv943,49657
#define glTexImage2DMultisample	glTexImage2DMultisample944,49693
#define glTexImage3DMultisample	glTexImage3DMultisample945,49753
#define glGetMultisamplefv	glGetMultisamplefv946,49813
#define glSampleMaski	glSampleMaski947,49863
#define glBlendEquationiARB	glBlendEquationiARB948,49903
#define glBlendEquationSeparateiARB	glBlendEquationSeparateiARB949,49955
#define glBlendFunciARB	glBlendFunciARB950,50023
#define glBlendFuncSeparateiARB	glBlendFuncSeparateiARB951,50067
#define glMinSampleShadingARB	glMinSampleShadingARB952,50127
#define glNamedStringARB	glNamedStringARB953,50183
#define glDeleteNamedStringARB	glDeleteNamedStringARB954,50229
#define glCompileShaderIncludeARB	glCompileShaderIncludeARB955,50287
#define glIsNamedStringARB	glIsNamedStringARB956,50351
#define glGetNamedStringARB	glGetNamedStringARB957,50401
#define glGetNamedStringivARB	glGetNamedStringivARB958,50453
#define glBindFragDataLocationIndexed	glBindFragDataLocationIndexed959,50509
#define glGetFragDataIndex	glGetFragDataIndex960,50581
#define glGenSamplers	glGenSamplers961,50631
#define glDeleteSamplers	glDeleteSamplers962,50671
#define glIsSampler	glIsSampler963,50717
#define glBindSampler	glBindSampler964,50753
#define glSamplerParameteri	glSamplerParameteri965,50793
#define glSamplerParameteriv	glSamplerParameteriv966,50845
#define glSamplerParameterf	glSamplerParameterf967,50899
#define glSamplerParameterfv	glSamplerParameterfv968,50951
#define glSamplerParameterIiv	glSamplerParameterIiv969,51005
#define glSamplerParameterIuiv	glSamplerParameterIuiv970,51061
#define glGetSamplerParameteriv	glGetSamplerParameteriv971,51119
#define glGetSamplerParameterIiv	glGetSamplerParameterIiv972,51179
#define glGetSamplerParameterfv	glGetSamplerParameterfv973,51241
#define glGetSamplerParameterIuiv	glGetSamplerParameterIuiv974,51301
#define glQueryCounter	glQueryCounter975,51365
#define glGetQueryObjecti64v	glGetQueryObjecti64v976,51407
#define glGetQueryObjectui64v	glGetQueryObjectui64v977,51461
#define glVertexP2ui	glVertexP2ui978,51517
#define glVertexP2uiv	glVertexP2uiv979,51555
#define glVertexP3ui	glVertexP3ui980,51595
#define glVertexP3uiv	glVertexP3uiv981,51633
#define glVertexP4ui	glVertexP4ui982,51673
#define glVertexP4uiv	glVertexP4uiv983,51711
#define glTexCoordP1ui	glTexCoordP1ui984,51751
#define glTexCoordP1uiv	glTexCoordP1uiv985,51793
#define glTexCoordP2ui	glTexCoordP2ui986,51837
#define glTexCoordP2uiv	glTexCoordP2uiv987,51879
#define glTexCoordP3ui	glTexCoordP3ui988,51923
#define glTexCoordP3uiv	glTexCoordP3uiv989,51965
#define glTexCoordP4ui	glTexCoordP4ui990,52009
#define glTexCoordP4uiv	glTexCoordP4uiv991,52051
#define glMultiTexCoordP1ui	glMultiTexCoordP1ui992,52095
#define glMultiTexCoordP1uiv	glMultiTexCoordP1uiv993,52147
#define glMultiTexCoordP2ui	glMultiTexCoordP2ui994,52201
#define glMultiTexCoordP2uiv	glMultiTexCoordP2uiv995,52253
#define glMultiTexCoordP3ui	glMultiTexCoordP3ui996,52307
#define glMultiTexCoordP3uiv	glMultiTexCoordP3uiv997,52359
#define glMultiTexCoordP4ui	glMultiTexCoordP4ui998,52413
#define glMultiTexCoordP4uiv	glMultiTexCoordP4uiv999,52465
#define glNormalP3ui	glNormalP3ui1000,52519
#define glNormalP3uiv	glNormalP3uiv1001,52557
#define glColorP3ui	glColorP3ui1002,52597
#define glColorP3uiv	glColorP3uiv1003,52633
#define glColorP4ui	glColorP4ui1004,52671
#define glColorP4uiv	glColorP4uiv1005,52707
#define glSecondaryColorP3ui	glSecondaryColorP3ui1006,52745
#define glSecondaryColorP3uiv	glSecondaryColorP3uiv1007,52799
#define glVertexAttribP1ui	glVertexAttribP1ui1008,52855
#define glVertexAttribP1uiv	glVertexAttribP1uiv1009,52905
#define glVertexAttribP2ui	glVertexAttribP2ui1010,52957
#define glVertexAttribP2uiv	glVertexAttribP2uiv1011,53007
#define glVertexAttribP3ui	glVertexAttribP3ui1012,53059
#define glVertexAttribP3uiv	glVertexAttribP3uiv1013,53109
#define glVertexAttribP4ui	glVertexAttribP4ui1014,53161
#define glVertexAttribP4uiv	glVertexAttribP4uiv1015,53211
#define glDrawArraysIndirect	glDrawArraysIndirect1016,53263
#define glDrawElementsIndirect	glDrawElementsIndirect1017,53317
#define glUniform1d	glUniform1d1018,53375
#define glUniform2d	glUniform2d1019,53411
#define glUniform3d	glUniform3d1020,53447
#define glUniform4d	glUniform4d1021,53483
#define glUniform1dv	glUniform1dv1022,53519
#define glUniform2dv	glUniform2dv1023,53557
#define glUniform3dv	glUniform3dv1024,53595
#define glUniform4dv	glUniform4dv1025,53633
#define glUniformMatrix2dv	glUniformMatrix2dv1026,53671
#define glUniformMatrix3dv	glUniformMatrix3dv1027,53721
#define glUniformMatrix4dv	glUniformMatrix4dv1028,53771
#define glUniformMatrix2x3dv	glUniformMatrix2x3dv1029,53821
#define glUniformMatrix2x4dv	glUniformMatrix2x4dv1030,53875
#define glUniformMatrix3x2dv	glUniformMatrix3x2dv1031,53929
#define glUniformMatrix3x4dv	glUniformMatrix3x4dv1032,53983
#define glUniformMatrix4x2dv	glUniformMatrix4x2dv1033,54037
#define glUniformMatrix4x3dv	glUniformMatrix4x3dv1034,54091
#define glGetUniformdv	glGetUniformdv1035,54145
#define glGetSubroutineUniformLocation	glGetSubroutineUniformLocation1036,54187
#define glGetSubroutineIndex	glGetSubroutineIndex1037,54261
#define glGetActiveSubroutineUniformiv	glGetActiveSubroutineUniformiv1038,54315
#define glGetActiveSubroutineUniformName	glGetActiveSubroutineUniformName1039,54389
#define glGetActiveSubroutineName	glGetActiveSubroutineName1040,54467
#define glUniformSubroutinesuiv	glUniformSubroutinesuiv1041,54531
#define glGetUniformSubroutineuiv	glGetUniformSubroutineuiv1042,54591
#define glGetProgramStageiv	glGetProgramStageiv1043,54655
#define glPatchParameteri	glPatchParameteri1044,54707
#define glPatchParameterfv	glPatchParameterfv1045,54755
#define glBindTransformFeedback	glBindTransformFeedback1046,54805
#define glDeleteTransformFeedbacks	glDeleteTransformFeedbacks1047,54865
#define glGenTransformFeedbacks	glGenTransformFeedbacks1048,54931
#define glIsTransformFeedback	glIsTransformFeedback1049,54991
#define glPauseTransformFeedback	glPauseTransformFeedback1050,55047
#define glResumeTransformFeedback	glResumeTransformFeedback1051,55109
#define glDrawTransformFeedback	glDrawTransformFeedback1052,55173
#define glDrawTransformFeedbackStream	glDrawTransformFeedbackStream1053,55233
#define glBeginQueryIndexed	glBeginQueryIndexed1054,55305
#define glEndQueryIndexed	glEndQueryIndexed1055,55357
#define glGetQueryIndexediv	glGetQueryIndexediv1056,55405
#define glReleaseShaderCompiler	glReleaseShaderCompiler1057,55457
#define glShaderBinary	glShaderBinary1058,55517
#define glGetShaderPrecisionFormat	glGetShaderPrecisionFormat1059,55559
#define glDepthRangef	glDepthRangef1060,55625
#define glClearDepthf	glClearDepthf1061,55665
#define glGetProgramBinary	glGetProgramBinary1062,55705
#define glProgramBinary	glProgramBinary1063,55755
#define glProgramParameteri	glProgramParameteri1064,55799
#define glUseProgramStages	glUseProgramStages1065,55851
#define glActiveShaderProgram	glActiveShaderProgram1066,55901
#define glCreateShaderProgramv	glCreateShaderProgramv1067,55957
#define glBindProgramPipeline	glBindProgramPipeline1068,56015
#define glDeleteProgramPipelines	glDeleteProgramPipelines1069,56071
#define glGenProgramPipelines	glGenProgramPipelines1070,56133
#define glIsProgramPipeline	glIsProgramPipeline1071,56189
#define glGetProgramPipelineiv	glGetProgramPipelineiv1072,56241
#define glProgramUniform1i	glProgramUniform1i1073,56299
#define glProgramUniform1iv	glProgramUniform1iv1074,56349
#define glProgramUniform1f	glProgramUniform1f1075,56401
#define glProgramUniform1fv	glProgramUniform1fv1076,56451
#define glProgramUniform1d	glProgramUniform1d1077,56503
#define glProgramUniform1dv	glProgramUniform1dv1078,56553
#define glProgramUniform1ui	glProgramUniform1ui1079,56605
#define glProgramUniform1uiv	glProgramUniform1uiv1080,56657
#define glProgramUniform2i	glProgramUniform2i1081,56711
#define glProgramUniform2iv	glProgramUniform2iv1082,56761
#define glProgramUniform2f	glProgramUniform2f1083,56813
#define glProgramUniform2fv	glProgramUniform2fv1084,56863
#define glProgramUniform2d	glProgramUniform2d1085,56915
#define glProgramUniform2dv	glProgramUniform2dv1086,56965
#define glProgramUniform2ui	glProgramUniform2ui1087,57017
#define glProgramUniform2uiv	glProgramUniform2uiv1088,57069
#define glProgramUniform3i	glProgramUniform3i1089,57123
#define glProgramUniform3iv	glProgramUniform3iv1090,57173
#define glProgramUniform3f	glProgramUniform3f1091,57225
#define glProgramUniform3fv	glProgramUniform3fv1092,57275
#define glProgramUniform3d	glProgramUniform3d1093,57327
#define glProgramUniform3dv	glProgramUniform3dv1094,57377
#define glProgramUniform3ui	glProgramUniform3ui1095,57429
#define glProgramUniform3uiv	glProgramUniform3uiv1096,57481
#define glProgramUniform4i	glProgramUniform4i1097,57535
#define glProgramUniform4iv	glProgramUniform4iv1098,57585
#define glProgramUniform4f	glProgramUniform4f1099,57637
#define glProgramUniform4fv	glProgramUniform4fv1100,57687
#define glProgramUniform4d	glProgramUniform4d1101,57739
#define glProgramUniform4dv	glProgramUniform4dv1102,57789
#define glProgramUniform4ui	glProgramUniform4ui1103,57841
#define glProgramUniform4uiv	glProgramUniform4uiv1104,57893
#define glProgramUniformMatrix2fv	glProgramUniformMatrix2fv1105,57947
#define glProgramUniformMatrix3fv	glProgramUniformMatrix3fv1106,58011
#define glProgramUniformMatrix4fv	glProgramUniformMatrix4fv1107,58075
#define glProgramUniformMatrix2dv	glProgramUniformMatrix2dv1108,58139
#define glProgramUniformMatrix3dv	glProgramUniformMatrix3dv1109,58203
#define glProgramUniformMatrix4dv	glProgramUniformMatrix4dv1110,58267
#define glProgramUniformMatrix2x3fv	glProgramUniformMatrix2x3fv1111,58331
#define glProgramUniformMatrix3x2fv	glProgramUniformMatrix3x2fv1112,58399
#define glProgramUniformMatrix2x4fv	glProgramUniformMatrix2x4fv1113,58467
#define glProgramUniformMatrix4x2fv	glProgramUniformMatrix4x2fv1114,58535
#define glProgramUniformMatrix3x4fv	glProgramUniformMatrix3x4fv1115,58603
#define glProgramUniformMatrix4x3fv	glProgramUniformMatrix4x3fv1116,58671
#define glProgramUniformMatrix2x3dv	glProgramUniformMatrix2x3dv1117,58739
#define glProgramUniformMatrix3x2dv	glProgramUniformMatrix3x2dv1118,58807
#define glProgramUniformMatrix2x4dv	glProgramUniformMatrix2x4dv1119,58875
#define glProgramUniformMatrix4x2dv	glProgramUniformMatrix4x2dv1120,58943
#define glProgramUniformMatrix3x4dv	glProgramUniformMatrix3x4dv1121,59011
#define glProgramUniformMatrix4x3dv	glProgramUniformMatrix4x3dv1122,59079
#define glValidateProgramPipeline	glValidateProgramPipeline1123,59147
#define glGetProgramPipelineInfoLog	glGetProgramPipelineInfoLog1124,59211
#define glVertexAttribL1d	glVertexAttribL1d1125,59279
#define glVertexAttribL2d	glVertexAttribL2d1126,59327
#define glVertexAttribL3d	glVertexAttribL3d1127,59375
#define glVertexAttribL4d	glVertexAttribL4d1128,59423
#define glVertexAttribL1dv	glVertexAttribL1dv1129,59471
#define glVertexAttribL2dv	glVertexAttribL2dv1130,59521
#define glVertexAttribL3dv	glVertexAttribL3dv1131,59571
#define glVertexAttribL4dv	glVertexAttribL4dv1132,59621
#define glVertexAttribLPointer	glVertexAttribLPointer1133,59671
#define glGetVertexAttribLdv	glGetVertexAttribLdv1134,59729
#define glViewportArrayv	glViewportArrayv1135,59783
#define glViewportIndexedf	glViewportIndexedf1136,59829
#define glViewportIndexedfv	glViewportIndexedfv1137,59879
#define glScissorArrayv	glScissorArrayv1138,59931
#define glScissorIndexed	glScissorIndexed1139,59975
#define glScissorIndexedv	glScissorIndexedv1140,60021
#define glDepthRangeArrayv	glDepthRangeArrayv1141,60069
#define glDepthRangeIndexed	glDepthRangeIndexed1142,60119
#define glGetFloati_v	glGetFloati_v1143,60171
#define glGetDoublei_v	glGetDoublei_v1144,60211
#define glCreateSyncFromCLeventARB	glCreateSyncFromCLeventARB1145,60253
#define glDebugMessageControlARB	glDebugMessageControlARB1146,60319
#define glDebugMessageInsertARB	glDebugMessageInsertARB1147,60381
#define glDebugMessageCallbackARB	glDebugMessageCallbackARB1148,60441
#define glGetDebugMessageLogARB	glGetDebugMessageLogARB1149,60505
#define glGetGraphicsResetStatusARB	glGetGraphicsResetStatusARB1150,60565
#define glGetnTexImageARB	glGetnTexImageARB1151,60633
#define glReadnPixelsARB	glReadnPixelsARB1152,60681
#define glGetnCompressedTexImageARB	glGetnCompressedTexImageARB1153,60727
#define glGetnUniformfvARB	glGetnUniformfvARB1154,60795
#define glGetnUniformivARB	glGetnUniformivARB1155,60845
#define glGetnUniformuivARB	glGetnUniformuivARB1156,60895
#define glGetnUniformdvARB	glGetnUniformdvARB1157,60947
#define glDrawArraysInstancedBaseInstance	glDrawArraysInstancedBaseInstance1158,60997
#define glDrawElementsInstancedBaseInstance	glDrawElementsInstancedBaseInstance1159,61077
#define glDrawElementsInstancedBaseVertexBaseInstance	glDrawElementsInstancedBaseVertexBaseInstance1160,61161
#define glDrawTransformFeedbackInstanced	glDrawTransformFeedbackInstanced1161,61265
#define glDrawTransformFeedbackStreamInstanced	glDrawTransformFeedbackStreamInstanced1162,61343
#define glGetInternalformativ	glGetInternalformativ1163,61433
#define glGetActiveAtomicCounterBufferiv	glGetActiveAtomicCounterBufferiv1164,61489
#define glBindImageTexture	glBindImageTexture1165,61567
#define glMemoryBarrier	glMemoryBarrier1166,61617
#define glTexStorage1D	glTexStorage1D1167,61661
#define glTexStorage2D	glTexStorage2D1168,61703
#define glTexStorage3D	glTexStorage3D1169,61745
#define glTextureStorage1DEXT	glTextureStorage1DEXT1170,61787
#define glTextureStorage2DEXT	glTextureStorage2DEXT1171,61843
#define glTextureStorage3DEXT	glTextureStorage3DEXT1172,61899
#define glDebugMessageControl	glDebugMessageControl1173,61955
#define glDebugMessageInsert	glDebugMessageInsert1174,62011
#define glDebugMessageCallback	glDebugMessageCallback1175,62065
#define glGetDebugMessageLog	glGetDebugMessageLog1176,62123
#define glPushDebugGroup	glPushDebugGroup1177,62177
#define glPopDebugGroup	glPopDebugGroup1178,62223
#define glObjectLabel	glObjectLabel1179,62267
#define glGetObjectLabel	glGetObjectLabel1180,62307
#define glObjectPtrLabel	glObjectPtrLabel1181,62353
#define glGetObjectPtrLabel	glGetObjectPtrLabel1182,62399
#define glClearBufferData	glClearBufferData1183,62451
#define glClearBufferSubData	glClearBufferSubData1184,62499
#define glClearNamedBufferDataEXT	glClearNamedBufferDataEXT1185,62553
#define glClearNamedBufferSubDataEXT	glClearNamedBufferSubDataEXT1186,62617
#define glDispatchCompute	glDispatchCompute1187,62687
#define glDispatchComputeIndirect	glDispatchComputeIndirect1188,62735
#define glCopyImageSubData	glCopyImageSubData1189,62799
#define glTextureView	glTextureView1190,62849
#define glBindVertexBuffer	glBindVertexBuffer1191,62889
#define glVertexAttribFormat	glVertexAttribFormat1192,62939
#define glVertexAttribIFormat	glVertexAttribIFormat1193,62993
#define glVertexAttribLFormat	glVertexAttribLFormat1194,63049
#define glVertexAttribBinding	glVertexAttribBinding1195,63105
#define glVertexBindingDivisor	glVertexBindingDivisor1196,63161
#define glVertexArrayBindVertexBufferEXT	glVertexArrayBindVertexBufferEXT1197,63219
#define glVertexArrayVertexAttribFormatEXT	glVertexArrayVertexAttribFormatEXT1198,63297
#define glVertexArrayVertexAttribIFormatEXT	glVertexArrayVertexAttribIFormatEXT1199,63379
#define glVertexArrayVertexAttribLFormatEXT	glVertexArrayVertexAttribLFormatEXT1200,63463
#define glVertexArrayVertexAttribBindingEXT	glVertexArrayVertexAttribBindingEXT1201,63547
#define glVertexArrayVertexBindingDivisorEXT	glVertexArrayVertexBindingDivisorEXT1202,63631
#define glFramebufferParameteri	glFramebufferParameteri1203,63717
#define glGetFramebufferParameteriv	glGetFramebufferParameteriv1204,63777
#define glNamedFramebufferParameteriEXT	glNamedFramebufferParameteriEXT1205,63845
#define glGetNamedFramebufferParameterivEXT	glGetNamedFramebufferParameterivEXT1206,63921
#define glGetInternalformati64v	glGetInternalformati64v1207,64005
#define glInvalidateTexSubImage	glInvalidateTexSubImage1208,64065
#define glInvalidateTexImage	glInvalidateTexImage1209,64125
#define glInvalidateBufferSubData	glInvalidateBufferSubData1210,64179
#define glInvalidateBufferData	glInvalidateBufferData1211,64243
#define glInvalidateFramebuffer	glInvalidateFramebuffer1212,64301
#define glInvalidateSubFramebuffer	glInvalidateSubFramebuffer1213,64361
#define glMultiDrawArraysIndirect	glMultiDrawArraysIndirect1214,64427
#define glMultiDrawElementsIndirect	glMultiDrawElementsIndirect1215,64491
#define glGetProgramInterfaceiv	glGetProgramInterfaceiv1216,64559
#define glGetProgramResourceIndex	glGetProgramResourceIndex1217,64619
#define glGetProgramResourceName	glGetProgramResourceName1218,64683
#define glGetProgramResourceiv	glGetProgramResourceiv1219,64745
#define glGetProgramResourceLocation	glGetProgramResourceLocation1220,64803
#define glGetProgramResourceLocationIndex	glGetProgramResourceLocationIndex1221,64873
#define glShaderStorageBlockBinding	glShaderStorageBlockBinding1222,64953
#define glTexBufferRange	glTexBufferRange1223,65021
#define glTextureBufferRangeEXT	glTextureBufferRangeEXT1224,65067
#define glTexStorage2DMultisample	glTexStorage2DMultisample1225,65127
#define glTexStorage3DMultisample	glTexStorage3DMultisample1226,65191
#define glTextureStorage2DMultisampleEXT	glTextureStorage2DMultisampleEXT1227,65255
#define glTextureStorage3DMultisampleEXT	glTextureStorage3DMultisampleEXT1228,65333

../gejo/libs/imgui/examples/libs/gl3w/GL/glcorearb.h,177830
#define __glcorearb_h___glcorearb_h_2,24
#define WIN32_LEAN_AND_MEAN WIN32_LEAN_AND_MEAN59,2403
#define APIENTRYAPIENTRY64,2484
#define APIENTRYP APIENTRYP67,2529
#define GLAPI GLAPI70,2582
typedef unsigned int GLenum;GLenum75,2637
typedef unsigned char GLboolean;GLboolean76,2667
typedef unsigned int GLbitfield;GLbitfield77,2701
typedef signed char GLbyte;GLbyte78,2735
typedef short GLshort;GLshort79,2764
typedef int GLint;GLint80,2788
typedef int GLsizei;GLsizei81,2808
typedef unsigned char GLubyte;GLubyte82,2830
typedef unsigned short GLushort;GLushort83,2862
typedef unsigned int GLuint;GLuint84,2896
typedef unsigned short GLhalf;GLhalf85,2926
typedef float GLfloat;GLfloat86,2958
typedef float GLclampf;GLclampf87,2982
typedef double GLdouble;GLdouble88,3007
typedef double GLclampd;GLclampd89,3033
typedef void GLvoid;GLvoid90,3059
#define GL_DEPTH_BUFFER_BIT GL_DEPTH_BUFFER_BIT96,3192
#define GL_STENCIL_BUFFER_BIT GL_STENCIL_BUFFER_BIT97,3246
#define GL_COLOR_BUFFER_BIT GL_COLOR_BUFFER_BIT98,3300
#define GL_FALSE GL_FALSE100,3369
#define GL_TRUE GL_TRUE101,3414
#define GL_POINTS GL_POINTS103,3476
#define GL_LINES GL_LINES104,3526
#define GL_LINE_LOOP GL_LINE_LOOP105,3576
#define GL_LINE_STRIP GL_LINE_STRIP106,3626
#define GL_TRIANGLES GL_TRIANGLES107,3676
#define GL_TRIANGLE_STRIP GL_TRIANGLE_STRIP108,3726
#define GL_TRIANGLE_FAN GL_TRIANGLE_FAN109,3776
#define GL_QUADS GL_QUADS110,3826
#define GL_NEVER GL_NEVER112,3897
#define GL_LESS GL_LESS113,3947
#define GL_EQUAL GL_EQUAL114,3997
#define GL_LEQUAL GL_LEQUAL115,4047
#define GL_GREATER GL_GREATER116,4097
#define GL_NOTEQUAL GL_NOTEQUAL117,4147
#define GL_GEQUAL GL_GEQUAL118,4197
#define GL_ALWAYS GL_ALWAYS119,4247
#define GL_ZERO GL_ZERO121,4323
#define GL_ONE GL_ONE122,4368
#define GL_SRC_COLOR GL_SRC_COLOR123,4413
#define GL_ONE_MINUS_SRC_COLOR GL_ONE_MINUS_SRC_COLOR124,4463
#define GL_SRC_ALPHA GL_SRC_ALPHA125,4513
#define GL_ONE_MINUS_SRC_ALPHA GL_ONE_MINUS_SRC_ALPHA126,4563
#define GL_DST_ALPHA GL_DST_ALPHA127,4613
#define GL_ONE_MINUS_DST_ALPHA GL_ONE_MINUS_DST_ALPHA128,4663
#define GL_DST_COLOR GL_DST_COLOR130,4738
#define GL_ONE_MINUS_DST_COLOR GL_ONE_MINUS_DST_COLOR131,4788
#define GL_SRC_ALPHA_SATURATE GL_SRC_ALPHA_SATURATE132,4838
#define GL_NONE GL_NONE134,4910
#define GL_FRONT_LEFT GL_FRONT_LEFT135,4955
#define GL_FRONT_RIGHT GL_FRONT_RIGHT136,5005
#define GL_BACK_LEFT GL_BACK_LEFT137,5055
#define GL_BACK_RIGHT GL_BACK_RIGHT138,5105
#define GL_FRONT GL_FRONT139,5155
#define GL_BACK GL_BACK140,5205
#define GL_LEFT GL_LEFT141,5255
#define GL_RIGHT GL_RIGHT142,5305
#define GL_FRONT_AND_BACK GL_FRONT_AND_BACK143,5355
#define GL_NO_ERROR GL_NO_ERROR145,5422
#define GL_INVALID_ENUM GL_INVALID_ENUM146,5467
#define GL_INVALID_VALUE GL_INVALID_VALUE147,5517
#define GL_INVALID_OPERATION GL_INVALID_OPERATION148,5567
#define GL_OUT_OF_MEMORY GL_OUT_OF_MEMORY149,5617
#define GL_CW GL_CW151,5693
#define GL_CCW GL_CCW152,5743
#define GL_POINT_SIZE GL_POINT_SIZE154,5809
#define GL_POINT_SIZE_RANGE GL_POINT_SIZE_RANGE155,5859
#define GL_POINT_SIZE_GRANULARITY GL_POINT_SIZE_GRANULARITY156,5909
#define GL_LINE_SMOOTH GL_LINE_SMOOTH157,5959
#define GL_LINE_WIDTH GL_LINE_WIDTH158,6009
#define GL_LINE_WIDTH_RANGE GL_LINE_WIDTH_RANGE159,6059
#define GL_LINE_WIDTH_GRANULARITY GL_LINE_WIDTH_GRANULARITY160,6109
#define GL_POLYGON_MODE GL_POLYGON_MODE161,6159
#define GL_POLYGON_SMOOTH GL_POLYGON_SMOOTH162,6209
#define GL_CULL_FACE GL_CULL_FACE163,6259
#define GL_CULL_FACE_MODE GL_CULL_FACE_MODE164,6309
#define GL_FRONT_FACE GL_FRONT_FACE165,6359
#define GL_DEPTH_RANGE GL_DEPTH_RANGE166,6409
#define GL_DEPTH_TEST GL_DEPTH_TEST167,6459
#define GL_DEPTH_WRITEMASK GL_DEPTH_WRITEMASK168,6509
#define GL_DEPTH_CLEAR_VALUE GL_DEPTH_CLEAR_VALUE169,6559
#define GL_DEPTH_FUNC GL_DEPTH_FUNC170,6609
#define GL_STENCIL_TEST GL_STENCIL_TEST171,6659
#define GL_STENCIL_CLEAR_VALUE GL_STENCIL_CLEAR_VALUE172,6709
#define GL_STENCIL_FUNC GL_STENCIL_FUNC173,6759
#define GL_STENCIL_VALUE_MASK GL_STENCIL_VALUE_MASK174,6809
#define GL_STENCIL_FAIL GL_STENCIL_FAIL175,6859
#define GL_STENCIL_PASS_DEPTH_FAIL GL_STENCIL_PASS_DEPTH_FAIL176,6909
#define GL_STENCIL_PASS_DEPTH_PASS GL_STENCIL_PASS_DEPTH_PASS177,6959
#define GL_STENCIL_REF GL_STENCIL_REF178,7009
#define GL_STENCIL_WRITEMASK GL_STENCIL_WRITEMASK179,7059
#define GL_VIEWPORT GL_VIEWPORT180,7109
#define GL_DITHER GL_DITHER181,7159
#define GL_BLEND_DST GL_BLEND_DST182,7209
#define GL_BLEND_SRC GL_BLEND_SRC183,7259
#define GL_BLEND GL_BLEND184,7309
#define GL_LOGIC_OP_MODE GL_LOGIC_OP_MODE185,7359
#define GL_COLOR_LOGIC_OP GL_COLOR_LOGIC_OP186,7409
#define GL_DRAW_BUFFER GL_DRAW_BUFFER187,7459
#define GL_READ_BUFFER GL_READ_BUFFER188,7509
#define GL_SCISSOR_BOX GL_SCISSOR_BOX189,7559
#define GL_SCISSOR_TEST GL_SCISSOR_TEST190,7609
#define GL_COLOR_CLEAR_VALUE GL_COLOR_CLEAR_VALUE191,7659
#define GL_COLOR_WRITEMASK GL_COLOR_WRITEMASK192,7709
#define GL_DOUBLEBUFFER GL_DOUBLEBUFFER193,7759
#define GL_STEREO GL_STEREO194,7809
#define GL_LINE_SMOOTH_HINT GL_LINE_SMOOTH_HINT195,7859
#define GL_POLYGON_SMOOTH_HINT GL_POLYGON_SMOOTH_HINT196,7909
#define GL_UNPACK_SWAP_BYTES GL_UNPACK_SWAP_BYTES197,7959
#define GL_UNPACK_LSB_FIRST GL_UNPACK_LSB_FIRST198,8009
#define GL_UNPACK_ROW_LENGTH GL_UNPACK_ROW_LENGTH199,8059
#define GL_UNPACK_SKIP_ROWS GL_UNPACK_SKIP_ROWS200,8109
#define GL_UNPACK_SKIP_PIXELS GL_UNPACK_SKIP_PIXELS201,8159
#define GL_UNPACK_ALIGNMENT GL_UNPACK_ALIGNMENT202,8209
#define GL_PACK_SWAP_BYTES GL_PACK_SWAP_BYTES203,8259
#define GL_PACK_LSB_FIRST GL_PACK_LSB_FIRST204,8309
#define GL_PACK_ROW_LENGTH GL_PACK_ROW_LENGTH205,8359
#define GL_PACK_SKIP_ROWS GL_PACK_SKIP_ROWS206,8409
#define GL_PACK_SKIP_PIXELS GL_PACK_SKIP_PIXELS207,8459
#define GL_PACK_ALIGNMENT GL_PACK_ALIGNMENT208,8509
#define GL_MAX_TEXTURE_SIZE GL_MAX_TEXTURE_SIZE209,8559
#define GL_MAX_VIEWPORT_DIMS GL_MAX_VIEWPORT_DIMS210,8609
#define GL_SUBPIXEL_BITS GL_SUBPIXEL_BITS211,8659
#define GL_TEXTURE_1D GL_TEXTURE_1D212,8709
#define GL_TEXTURE_2D GL_TEXTURE_2D213,8759
#define GL_POLYGON_OFFSET_UNITS GL_POLYGON_OFFSET_UNITS214,8809
#define GL_POLYGON_OFFSET_POINT GL_POLYGON_OFFSET_POINT215,8859
#define GL_POLYGON_OFFSET_LINE GL_POLYGON_OFFSET_LINE216,8909
#define GL_POLYGON_OFFSET_FILL GL_POLYGON_OFFSET_FILL217,8959
#define GL_POLYGON_OFFSET_FACTOR GL_POLYGON_OFFSET_FACTOR218,9009
#define GL_TEXTURE_BINDING_1D GL_TEXTURE_BINDING_1D219,9059
#define GL_TEXTURE_BINDING_2D GL_TEXTURE_BINDING_2D220,9109
#define GL_TEXTURE_WIDTH GL_TEXTURE_WIDTH222,9186
#define GL_TEXTURE_HEIGHT GL_TEXTURE_HEIGHT223,9236
#define GL_TEXTURE_INTERNAL_FORMAT GL_TEXTURE_INTERNAL_FORMAT224,9286
#define GL_TEXTURE_BORDER_COLOR GL_TEXTURE_BORDER_COLOR225,9336
#define GL_TEXTURE_RED_SIZE GL_TEXTURE_RED_SIZE226,9386
#define GL_TEXTURE_GREEN_SIZE GL_TEXTURE_GREEN_SIZE227,9436
#define GL_TEXTURE_BLUE_SIZE GL_TEXTURE_BLUE_SIZE228,9486
#define GL_TEXTURE_ALPHA_SIZE GL_TEXTURE_ALPHA_SIZE229,9536
#define GL_DONT_CARE GL_DONT_CARE231,9602
#define GL_FASTEST GL_FASTEST232,9652
#define GL_NICEST GL_NICEST233,9702
#define GL_BYTE GL_BYTE235,9768
#define GL_UNSIGNED_BYTE GL_UNSIGNED_BYTE236,9818
#define GL_SHORT GL_SHORT237,9868
#define GL_UNSIGNED_SHORT GL_UNSIGNED_SHORT238,9918
#define GL_INT GL_INT239,9968
#define GL_UNSIGNED_INT GL_UNSIGNED_INT240,10018
#define GL_FLOAT GL_FLOAT241,10068
#define GL_DOUBLE GL_DOUBLE242,10118
#define GL_STACK_OVERFLOW GL_STACK_OVERFLOW244,10185
#define GL_STACK_UNDERFLOW GL_STACK_UNDERFLOW245,10235
#define GL_CLEAR GL_CLEAR247,10300
#define GL_AND GL_AND248,10350
#define GL_AND_REVERSE GL_AND_REVERSE249,10400
#define GL_COPY GL_COPY250,10450
#define GL_AND_INVERTED GL_AND_INVERTED251,10500
#define GL_NOOP GL_NOOP252,10550
#define GL_XOR GL_XOR253,10600
#define GL_OR GL_OR254,10650
#define GL_NOR GL_NOR255,10700
#define GL_EQUIV GL_EQUIV256,10750
#define GL_INVERT GL_INVERT257,10800
#define GL_OR_REVERSE GL_OR_REVERSE258,10850
#define GL_COPY_INVERTED GL_COPY_INVERTED259,10900
#define GL_OR_INVERTED GL_OR_INVERTED260,10950
#define GL_NAND GL_NAND261,11000
#define GL_SET GL_SET262,11050
#define GL_TEXTURE GL_TEXTURE264,11151
#define GL_COLOR GL_COLOR266,11222
#define GL_DEPTH GL_DEPTH267,11272
#define GL_STENCIL GL_STENCIL268,11322
#define GL_STENCIL_INDEX GL_STENCIL_INDEX270,11391
#define GL_DEPTH_COMPONENT GL_DEPTH_COMPONENT271,11441
#define GL_RED GL_RED272,11491
#define GL_GREEN GL_GREEN273,11541
#define GL_BLUE GL_BLUE274,11591
#define GL_ALPHA GL_ALPHA275,11641
#define GL_RGB GL_RGB276,11691
#define GL_RGBA GL_RGBA277,11741
#define GL_POINT GL_POINT279,11810
#define GL_LINE GL_LINE280,11860
#define GL_FILL GL_FILL281,11910
#define GL_KEEP GL_KEEP283,11977
#define GL_REPLACE GL_REPLACE284,12027
#define GL_INCR GL_INCR285,12077
#define GL_DECR GL_DECR286,12127
#define GL_VENDOR GL_VENDOR288,12195
#define GL_RENDERER GL_RENDERER289,12245
#define GL_VERSION GL_VERSION290,12295
#define GL_EXTENSIONS GL_EXTENSIONS291,12345
#define GL_NEAREST GL_NEAREST293,12419
#define GL_LINEAR GL_LINEAR294,12469
#define GL_NEAREST_MIPMAP_NEAREST GL_NEAREST_MIPMAP_NEAREST296,12543
#define GL_LINEAR_MIPMAP_NEAREST GL_LINEAR_MIPMAP_NEAREST297,12593
#define GL_NEAREST_MIPMAP_LINEAR GL_NEAREST_MIPMAP_LINEAR298,12643
#define GL_LINEAR_MIPMAP_LINEAR GL_LINEAR_MIPMAP_LINEAR299,12693
#define GL_TEXTURE_MAG_FILTER GL_TEXTURE_MAG_FILTER301,12771
#define GL_TEXTURE_MIN_FILTER GL_TEXTURE_MIN_FILTER302,12821
#define GL_TEXTURE_WRAP_S GL_TEXTURE_WRAP_S303,12871
#define GL_TEXTURE_WRAP_T GL_TEXTURE_WRAP_T304,12921
#define GL_PROXY_TEXTURE_1D GL_PROXY_TEXTURE_1D306,12992
#define GL_PROXY_TEXTURE_2D GL_PROXY_TEXTURE_2D307,13042
#define GL_REPEAT GL_REPEAT309,13115
#define GL_R3_G3_B2 GL_R3_G3_B2311,13192
#define GL_RGB4 GL_RGB4312,13242
#define GL_RGB5 GL_RGB5313,13292
#define GL_RGB8 GL_RGB8314,13342
#define GL_RGB10 GL_RGB10315,13392
#define GL_RGB12 GL_RGB12316,13442
#define GL_RGB16 GL_RGB16317,13492
#define GL_RGBA2 GL_RGBA2318,13542
#define GL_RGBA4 GL_RGBA4319,13592
#define GL_RGB5_A1 GL_RGB5_A1320,13642
#define GL_RGBA8 GL_RGBA8321,13692
#define GL_RGB10_A2 GL_RGB10_A2322,13742
#define GL_RGBA12 GL_RGBA12323,13792
#define GL_RGBA16 GL_RGBA16324,13842
#define GL_UNSIGNED_BYTE_3_3_2 GL_UNSIGNED_BYTE_3_3_2328,13926
#define GL_UNSIGNED_SHORT_4_4_4_4 GL_UNSIGNED_SHORT_4_4_4_4329,13976
#define GL_UNSIGNED_SHORT_5_5_5_1 GL_UNSIGNED_SHORT_5_5_5_1330,14026
#define GL_UNSIGNED_INT_8_8_8_8 GL_UNSIGNED_INT_8_8_8_8331,14076
#define GL_UNSIGNED_INT_10_10_10_2 GL_UNSIGNED_INT_10_10_10_2332,14126
#define GL_TEXTURE_BINDING_3D GL_TEXTURE_BINDING_3D333,14176
#define GL_PACK_SKIP_IMAGES GL_PACK_SKIP_IMAGES334,14226
#define GL_PACK_IMAGE_HEIGHT GL_PACK_IMAGE_HEIGHT335,14276
#define GL_UNPACK_SKIP_IMAGES GL_UNPACK_SKIP_IMAGES336,14326
#define GL_UNPACK_IMAGE_HEIGHT GL_UNPACK_IMAGE_HEIGHT337,14376
#define GL_TEXTURE_3D GL_TEXTURE_3D338,14426
#define GL_PROXY_TEXTURE_3D GL_PROXY_TEXTURE_3D339,14476
#define GL_TEXTURE_DEPTH GL_TEXTURE_DEPTH340,14526
#define GL_TEXTURE_WRAP_R GL_TEXTURE_WRAP_R341,14576
#define GL_MAX_3D_TEXTURE_SIZE GL_MAX_3D_TEXTURE_SIZE342,14626
#define GL_UNSIGNED_BYTE_2_3_3_REV GL_UNSIGNED_BYTE_2_3_3_REV343,14676
#define GL_UNSIGNED_SHORT_5_6_5 GL_UNSIGNED_SHORT_5_6_5344,14726
#define GL_UNSIGNED_SHORT_5_6_5_REV GL_UNSIGNED_SHORT_5_6_5_REV345,14776
#define GL_UNSIGNED_SHORT_4_4_4_4_REV GL_UNSIGNED_SHORT_4_4_4_4_REV346,14826
#define GL_UNSIGNED_SHORT_1_5_5_5_REV GL_UNSIGNED_SHORT_1_5_5_5_REV347,14876
#define GL_UNSIGNED_INT_8_8_8_8_REV GL_UNSIGNED_INT_8_8_8_8_REV348,14926
#define GL_UNSIGNED_INT_2_10_10_10_REV GL_UNSIGNED_INT_2_10_10_10_REV349,14976
#define GL_BGR GL_BGR350,15026
#define GL_BGRA GL_BGRA351,15076
#define GL_MAX_ELEMENTS_VERTICES GL_MAX_ELEMENTS_VERTICES352,15126
#define GL_MAX_ELEMENTS_INDICES GL_MAX_ELEMENTS_INDICES353,15176
#define GL_CLAMP_TO_EDGE GL_CLAMP_TO_EDGE354,15226
#define GL_TEXTURE_MIN_LOD GL_TEXTURE_MIN_LOD355,15276
#define GL_TEXTURE_MAX_LOD GL_TEXTURE_MAX_LOD356,15326
#define GL_TEXTURE_BASE_LEVEL GL_TEXTURE_BASE_LEVEL357,15376
#define GL_TEXTURE_MAX_LEVEL GL_TEXTURE_MAX_LEVEL358,15426
#define GL_SMOOTH_POINT_SIZE_RANGE GL_SMOOTH_POINT_SIZE_RANGE359,15476
#define GL_SMOOTH_POINT_SIZE_GRANULARITY GL_SMOOTH_POINT_SIZE_GRANULARITY360,15526
#define GL_SMOOTH_LINE_WIDTH_RANGE GL_SMOOTH_LINE_WIDTH_RANGE361,15576
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY GL_SMOOTH_LINE_WIDTH_GRANULARITY362,15626
#define GL_ALIASED_LINE_WIDTH_RANGE GL_ALIASED_LINE_WIDTH_RANGE363,15676
#define GL_CONSTANT_COLOR GL_CONSTANT_COLOR367,15760
#define GL_ONE_MINUS_CONSTANT_COLOR GL_ONE_MINUS_CONSTANT_COLOR368,15810
#define GL_CONSTANT_ALPHA GL_CONSTANT_ALPHA369,15860
#define GL_ONE_MINUS_CONSTANT_ALPHA GL_ONE_MINUS_CONSTANT_ALPHA370,15910
#define GL_BLEND_COLOR GL_BLEND_COLOR371,15960
#define GL_FUNC_ADD GL_FUNC_ADD372,16010
#define GL_MIN GL_MIN373,16060
#define GL_MAX GL_MAX374,16110
#define GL_BLEND_EQUATION GL_BLEND_EQUATION375,16160
#define GL_FUNC_SUBTRACT GL_FUNC_SUBTRACT376,16210
#define GL_FUNC_REVERSE_SUBTRACT GL_FUNC_REVERSE_SUBTRACT377,16260
#define GL_TEXTURE0 GL_TEXTURE0381,16344
#define GL_TEXTURE1 GL_TEXTURE1382,16394
#define GL_TEXTURE2 GL_TEXTURE2383,16444
#define GL_TEXTURE3 GL_TEXTURE3384,16494
#define GL_TEXTURE4 GL_TEXTURE4385,16544
#define GL_TEXTURE5 GL_TEXTURE5386,16594
#define GL_TEXTURE6 GL_TEXTURE6387,16644
#define GL_TEXTURE7 GL_TEXTURE7388,16694
#define GL_TEXTURE8 GL_TEXTURE8389,16744
#define GL_TEXTURE9 GL_TEXTURE9390,16794
#define GL_TEXTURE10 GL_TEXTURE10391,16844
#define GL_TEXTURE11 GL_TEXTURE11392,16894
#define GL_TEXTURE12 GL_TEXTURE12393,16944
#define GL_TEXTURE13 GL_TEXTURE13394,16994
#define GL_TEXTURE14 GL_TEXTURE14395,17044
#define GL_TEXTURE15 GL_TEXTURE15396,17094
#define GL_TEXTURE16 GL_TEXTURE16397,17144
#define GL_TEXTURE17 GL_TEXTURE17398,17194
#define GL_TEXTURE18 GL_TEXTURE18399,17244
#define GL_TEXTURE19 GL_TEXTURE19400,17294
#define GL_TEXTURE20 GL_TEXTURE20401,17344
#define GL_TEXTURE21 GL_TEXTURE21402,17394
#define GL_TEXTURE22 GL_TEXTURE22403,17444
#define GL_TEXTURE23 GL_TEXTURE23404,17494
#define GL_TEXTURE24 GL_TEXTURE24405,17544
#define GL_TEXTURE25 GL_TEXTURE25406,17594
#define GL_TEXTURE26 GL_TEXTURE26407,17644
#define GL_TEXTURE27 GL_TEXTURE27408,17694
#define GL_TEXTURE28 GL_TEXTURE28409,17744
#define GL_TEXTURE29 GL_TEXTURE29410,17794
#define GL_TEXTURE30 GL_TEXTURE30411,17844
#define GL_TEXTURE31 GL_TEXTURE31412,17894
#define GL_ACTIVE_TEXTURE GL_ACTIVE_TEXTURE413,17944
#define GL_MULTISAMPLE GL_MULTISAMPLE414,17994
#define GL_SAMPLE_ALPHA_TO_COVERAGE GL_SAMPLE_ALPHA_TO_COVERAGE415,18044
#define GL_SAMPLE_ALPHA_TO_ONE GL_SAMPLE_ALPHA_TO_ONE416,18094
#define GL_SAMPLE_COVERAGE GL_SAMPLE_COVERAGE417,18144
#define GL_SAMPLE_BUFFERS GL_SAMPLE_BUFFERS418,18194
#define GL_SAMPLES GL_SAMPLES419,18244
#define GL_SAMPLE_COVERAGE_VALUE GL_SAMPLE_COVERAGE_VALUE420,18294
#define GL_SAMPLE_COVERAGE_INVERT GL_SAMPLE_COVERAGE_INVERT421,18344
#define GL_TEXTURE_CUBE_MAP GL_TEXTURE_CUBE_MAP422,18394
#define GL_TEXTURE_BINDING_CUBE_MAP GL_TEXTURE_BINDING_CUBE_MAP423,18444
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X GL_TEXTURE_CUBE_MAP_POSITIVE_X424,18494
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X GL_TEXTURE_CUBE_MAP_NEGATIVE_X425,18544
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y GL_TEXTURE_CUBE_MAP_POSITIVE_Y426,18594
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y GL_TEXTURE_CUBE_MAP_NEGATIVE_Y427,18644
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z GL_TEXTURE_CUBE_MAP_POSITIVE_Z428,18694
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z GL_TEXTURE_CUBE_MAP_NEGATIVE_Z429,18744
#define GL_PROXY_TEXTURE_CUBE_MAP GL_PROXY_TEXTURE_CUBE_MAP430,18794
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE GL_MAX_CUBE_MAP_TEXTURE_SIZE431,18844
#define GL_COMPRESSED_RGB GL_COMPRESSED_RGB432,18894
#define GL_COMPRESSED_RGBA GL_COMPRESSED_RGBA433,18944
#define GL_TEXTURE_COMPRESSION_HINT GL_TEXTURE_COMPRESSION_HINT434,18994
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE GL_TEXTURE_COMPRESSED_IMAGE_SIZE435,19044
#define GL_TEXTURE_COMPRESSED GL_TEXTURE_COMPRESSED436,19094
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS GL_NUM_COMPRESSED_TEXTURE_FORMATS437,19144
#define GL_COMPRESSED_TEXTURE_FORMATS GL_COMPRESSED_TEXTURE_FORMATS438,19194
#define GL_CLAMP_TO_BORDER GL_CLAMP_TO_BORDER439,19244
#define GL_BLEND_DST_RGB GL_BLEND_DST_RGB443,19328
#define GL_BLEND_SRC_RGB GL_BLEND_SRC_RGB444,19378
#define GL_BLEND_DST_ALPHA GL_BLEND_DST_ALPHA445,19428
#define GL_BLEND_SRC_ALPHA GL_BLEND_SRC_ALPHA446,19478
#define GL_POINT_FADE_THRESHOLD_SIZE GL_POINT_FADE_THRESHOLD_SIZE447,19528
#define GL_DEPTH_COMPONENT16 GL_DEPTH_COMPONENT16448,19578
#define GL_DEPTH_COMPONENT24 GL_DEPTH_COMPONENT24449,19628
#define GL_DEPTH_COMPONENT32 GL_DEPTH_COMPONENT32450,19678
#define GL_MIRRORED_REPEAT GL_MIRRORED_REPEAT451,19728
#define GL_MAX_TEXTURE_LOD_BIAS GL_MAX_TEXTURE_LOD_BIAS452,19778
#define GL_TEXTURE_LOD_BIAS GL_TEXTURE_LOD_BIAS453,19828
#define GL_INCR_WRAP GL_INCR_WRAP454,19878
#define GL_DECR_WRAP GL_DECR_WRAP455,19928
#define GL_TEXTURE_DEPTH_SIZE GL_TEXTURE_DEPTH_SIZE456,19978
#define GL_TEXTURE_COMPARE_MODE GL_TEXTURE_COMPARE_MODE457,20028
#define GL_TEXTURE_COMPARE_FUNC GL_TEXTURE_COMPARE_FUNC458,20078
#define GL_BUFFER_SIZE GL_BUFFER_SIZE462,20162
#define GL_BUFFER_USAGE GL_BUFFER_USAGE463,20212
#define GL_QUERY_COUNTER_BITS GL_QUERY_COUNTER_BITS464,20262
#define GL_CURRENT_QUERY GL_CURRENT_QUERY465,20312
#define GL_QUERY_RESULT GL_QUERY_RESULT466,20362
#define GL_QUERY_RESULT_AVAILABLE GL_QUERY_RESULT_AVAILABLE467,20412
#define GL_ARRAY_BUFFER GL_ARRAY_BUFFER468,20462
#define GL_ELEMENT_ARRAY_BUFFER GL_ELEMENT_ARRAY_BUFFER469,20512
#define GL_ARRAY_BUFFER_BINDING GL_ARRAY_BUFFER_BINDING470,20562
#define GL_ELEMENT_ARRAY_BUFFER_BINDING GL_ELEMENT_ARRAY_BUFFER_BINDING471,20612
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING472,20662
#define GL_READ_ONLY GL_READ_ONLY473,20716
#define GL_WRITE_ONLY GL_WRITE_ONLY474,20766
#define GL_READ_WRITE GL_READ_WRITE475,20816
#define GL_BUFFER_ACCESS GL_BUFFER_ACCESS476,20866
#define GL_BUFFER_MAPPED GL_BUFFER_MAPPED477,20916
#define GL_BUFFER_MAP_POINTER GL_BUFFER_MAP_POINTER478,20966
#define GL_STREAM_DRAW GL_STREAM_DRAW479,21016
#define GL_STREAM_READ GL_STREAM_READ480,21066
#define GL_STREAM_COPY GL_STREAM_COPY481,21116
#define GL_STATIC_DRAW GL_STATIC_DRAW482,21166
#define GL_STATIC_READ GL_STATIC_READ483,21216
#define GL_STATIC_COPY GL_STATIC_COPY484,21266
#define GL_DYNAMIC_DRAW GL_DYNAMIC_DRAW485,21316
#define GL_DYNAMIC_READ GL_DYNAMIC_READ486,21366
#define GL_DYNAMIC_COPY GL_DYNAMIC_COPY487,21416
#define GL_SAMPLES_PASSED GL_SAMPLES_PASSED488,21466
#define GL_SRC1_ALPHA GL_SRC1_ALPHA489,21516
#define GL_BLEND_EQUATION_RGB GL_BLEND_EQUATION_RGB493,21600
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED GL_VERTEX_ATTRIB_ARRAY_ENABLED494,21650
#define GL_VERTEX_ATTRIB_ARRAY_SIZE GL_VERTEX_ATTRIB_ARRAY_SIZE495,21700
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE GL_VERTEX_ATTRIB_ARRAY_STRIDE496,21750
#define GL_VERTEX_ATTRIB_ARRAY_TYPE GL_VERTEX_ATTRIB_ARRAY_TYPE497,21800
#define GL_CURRENT_VERTEX_ATTRIB GL_CURRENT_VERTEX_ATTRIB498,21850
#define GL_VERTEX_PROGRAM_POINT_SIZE GL_VERTEX_PROGRAM_POINT_SIZE499,21900
#define GL_VERTEX_ATTRIB_ARRAY_POINTER GL_VERTEX_ATTRIB_ARRAY_POINTER500,21950
#define GL_STENCIL_BACK_FUNC GL_STENCIL_BACK_FUNC501,22000
#define GL_STENCIL_BACK_FAIL GL_STENCIL_BACK_FAIL502,22050
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL GL_STENCIL_BACK_PASS_DEPTH_FAIL503,22100
#define GL_STENCIL_BACK_PASS_DEPTH_PASS GL_STENCIL_BACK_PASS_DEPTH_PASS504,22150
#define GL_MAX_DRAW_BUFFERS GL_MAX_DRAW_BUFFERS505,22200
#define GL_DRAW_BUFFER0 GL_DRAW_BUFFER0506,22250
#define GL_DRAW_BUFFER1 GL_DRAW_BUFFER1507,22300
#define GL_DRAW_BUFFER2 GL_DRAW_BUFFER2508,22350
#define GL_DRAW_BUFFER3 GL_DRAW_BUFFER3509,22400
#define GL_DRAW_BUFFER4 GL_DRAW_BUFFER4510,22450
#define GL_DRAW_BUFFER5 GL_DRAW_BUFFER5511,22500
#define GL_DRAW_BUFFER6 GL_DRAW_BUFFER6512,22550
#define GL_DRAW_BUFFER7 GL_DRAW_BUFFER7513,22600
#define GL_DRAW_BUFFER8 GL_DRAW_BUFFER8514,22650
#define GL_DRAW_BUFFER9 GL_DRAW_BUFFER9515,22700
#define GL_DRAW_BUFFER10 GL_DRAW_BUFFER10516,22750
#define GL_DRAW_BUFFER11 GL_DRAW_BUFFER11517,22800
#define GL_DRAW_BUFFER12 GL_DRAW_BUFFER12518,22850
#define GL_DRAW_BUFFER13 GL_DRAW_BUFFER13519,22900
#define GL_DRAW_BUFFER14 GL_DRAW_BUFFER14520,22950
#define GL_DRAW_BUFFER15 GL_DRAW_BUFFER15521,23000
#define GL_BLEND_EQUATION_ALPHA GL_BLEND_EQUATION_ALPHA522,23050
#define GL_MAX_VERTEX_ATTRIBS GL_MAX_VERTEX_ATTRIBS523,23100
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED GL_VERTEX_ATTRIB_ARRAY_NORMALIZED524,23150
#define GL_MAX_TEXTURE_IMAGE_UNITS GL_MAX_TEXTURE_IMAGE_UNITS525,23200
#define GL_FRAGMENT_SHADER GL_FRAGMENT_SHADER526,23250
#define GL_VERTEX_SHADER GL_VERTEX_SHADER527,23300
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS GL_MAX_FRAGMENT_UNIFORM_COMPONENTS528,23350
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS GL_MAX_VERTEX_UNIFORM_COMPONENTS529,23401
#define GL_MAX_VARYING_FLOATS GL_MAX_VARYING_FLOATS530,23451
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS531,23501
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS532,23551
#define GL_SHADER_TYPE GL_SHADER_TYPE533,23603
#define GL_FLOAT_VEC2 GL_FLOAT_VEC2534,23653
#define GL_FLOAT_VEC3 GL_FLOAT_VEC3535,23703
#define GL_FLOAT_VEC4 GL_FLOAT_VEC4536,23753
#define GL_INT_VEC2 GL_INT_VEC2537,23803
#define GL_INT_VEC3 GL_INT_VEC3538,23853
#define GL_INT_VEC4 GL_INT_VEC4539,23903
#define GL_BOOL GL_BOOL540,23953
#define GL_BOOL_VEC2 GL_BOOL_VEC2541,24003
#define GL_BOOL_VEC3 GL_BOOL_VEC3542,24053
#define GL_BOOL_VEC4 GL_BOOL_VEC4543,24103
#define GL_FLOAT_MAT2 GL_FLOAT_MAT2544,24153
#define GL_FLOAT_MAT3 GL_FLOAT_MAT3545,24203
#define GL_FLOAT_MAT4 GL_FLOAT_MAT4546,24253
#define GL_SAMPLER_1D GL_SAMPLER_1D547,24303
#define GL_SAMPLER_2D GL_SAMPLER_2D548,24353
#define GL_SAMPLER_3D GL_SAMPLER_3D549,24403
#define GL_SAMPLER_CUBE GL_SAMPLER_CUBE550,24453
#define GL_SAMPLER_1D_SHADOW GL_SAMPLER_1D_SHADOW551,24503
#define GL_SAMPLER_2D_SHADOW GL_SAMPLER_2D_SHADOW552,24553
#define GL_DELETE_STATUS GL_DELETE_STATUS553,24603
#define GL_COMPILE_STATUS GL_COMPILE_STATUS554,24653
#define GL_LINK_STATUS GL_LINK_STATUS555,24703
#define GL_VALIDATE_STATUS GL_VALIDATE_STATUS556,24753
#define GL_INFO_LOG_LENGTH GL_INFO_LOG_LENGTH557,24803
#define GL_ATTACHED_SHADERS GL_ATTACHED_SHADERS558,24853
#define GL_ACTIVE_UNIFORMS GL_ACTIVE_UNIFORMS559,24903
#define GL_ACTIVE_UNIFORM_MAX_LENGTH GL_ACTIVE_UNIFORM_MAX_LENGTH560,24953
#define GL_SHADER_SOURCE_LENGTH GL_SHADER_SOURCE_LENGTH561,25003
#define GL_ACTIVE_ATTRIBUTES GL_ACTIVE_ATTRIBUTES562,25053
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH GL_ACTIVE_ATTRIBUTE_MAX_LENGTH563,25103
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT GL_FRAGMENT_SHADER_DERIVATIVE_HINT564,25153
#define GL_SHADING_LANGUAGE_VERSION GL_SHADING_LANGUAGE_VERSION565,25204
#define GL_CURRENT_PROGRAM GL_CURRENT_PROGRAM566,25254
#define GL_POINT_SPRITE_COORD_ORIGIN GL_POINT_SPRITE_COORD_ORIGIN567,25304
#define GL_LOWER_LEFT GL_LOWER_LEFT568,25354
#define GL_UPPER_LEFT GL_UPPER_LEFT569,25404
#define GL_STENCIL_BACK_REF GL_STENCIL_BACK_REF570,25454
#define GL_STENCIL_BACK_VALUE_MASK GL_STENCIL_BACK_VALUE_MASK571,25504
#define GL_STENCIL_BACK_WRITEMASK GL_STENCIL_BACK_WRITEMASK572,25554
#define GL_PIXEL_PACK_BUFFER GL_PIXEL_PACK_BUFFER576,25638
#define GL_PIXEL_UNPACK_BUFFER GL_PIXEL_UNPACK_BUFFER577,25688
#define GL_PIXEL_PACK_BUFFER_BINDING GL_PIXEL_PACK_BUFFER_BINDING578,25738
#define GL_PIXEL_UNPACK_BUFFER_BINDING GL_PIXEL_UNPACK_BUFFER_BINDING579,25788
#define GL_FLOAT_MAT2x3 GL_FLOAT_MAT2x3580,25838
#define GL_FLOAT_MAT2x4 GL_FLOAT_MAT2x4581,25888
#define GL_FLOAT_MAT3x2 GL_FLOAT_MAT3x2582,25938
#define GL_FLOAT_MAT3x4 GL_FLOAT_MAT3x4583,25988
#define GL_FLOAT_MAT4x2 GL_FLOAT_MAT4x2584,26038
#define GL_FLOAT_MAT4x3 GL_FLOAT_MAT4x3585,26088
#define GL_SRGB GL_SRGB586,26138
#define GL_SRGB8 GL_SRGB8587,26188
#define GL_SRGB_ALPHA GL_SRGB_ALPHA588,26238
#define GL_SRGB8_ALPHA8 GL_SRGB8_ALPHA8589,26288
#define GL_COMPRESSED_SRGB GL_COMPRESSED_SRGB590,26338
#define GL_COMPRESSED_SRGB_ALPHA GL_COMPRESSED_SRGB_ALPHA591,26388
#define GL_COMPARE_REF_TO_TEXTURE GL_COMPARE_REF_TO_TEXTURE595,26472
#define GL_CLIP_DISTANCE0 GL_CLIP_DISTANCE0596,26522
#define GL_CLIP_DISTANCE1 GL_CLIP_DISTANCE1597,26572
#define GL_CLIP_DISTANCE2 GL_CLIP_DISTANCE2598,26622
#define GL_CLIP_DISTANCE3 GL_CLIP_DISTANCE3599,26672
#define GL_CLIP_DISTANCE4 GL_CLIP_DISTANCE4600,26722
#define GL_CLIP_DISTANCE5 GL_CLIP_DISTANCE5601,26772
#define GL_CLIP_DISTANCE6 GL_CLIP_DISTANCE6602,26822
#define GL_CLIP_DISTANCE7 GL_CLIP_DISTANCE7603,26872
#define GL_MAX_CLIP_DISTANCES GL_MAX_CLIP_DISTANCES604,26922
#define GL_MAJOR_VERSION GL_MAJOR_VERSION605,26972
#define GL_MINOR_VERSION GL_MINOR_VERSION606,27022
#define GL_NUM_EXTENSIONS GL_NUM_EXTENSIONS607,27072
#define GL_CONTEXT_FLAGS GL_CONTEXT_FLAGS608,27122
#define GL_COMPRESSED_RED GL_COMPRESSED_RED609,27172
#define GL_COMPRESSED_RG GL_COMPRESSED_RG610,27222
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT611,27272
#define GL_RGBA32F GL_RGBA32F612,27327
#define GL_RGB32F GL_RGB32F613,27377
#define GL_RGBA16F GL_RGBA16F614,27427
#define GL_RGB16F GL_RGB16F615,27477
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER GL_VERTEX_ATTRIB_ARRAY_INTEGER616,27527
#define GL_MAX_ARRAY_TEXTURE_LAYERS GL_MAX_ARRAY_TEXTURE_LAYERS617,27577
#define GL_MIN_PROGRAM_TEXEL_OFFSET GL_MIN_PROGRAM_TEXEL_OFFSET618,27627
#define GL_MAX_PROGRAM_TEXEL_OFFSET GL_MAX_PROGRAM_TEXEL_OFFSET619,27677
#define GL_CLAMP_READ_COLOR GL_CLAMP_READ_COLOR620,27727
#define GL_FIXED_ONLY GL_FIXED_ONLY621,27777
#define GL_MAX_VARYING_COMPONENTS GL_MAX_VARYING_COMPONENTS622,27827
#define GL_TEXTURE_1D_ARRAY GL_TEXTURE_1D_ARRAY623,27877
#define GL_PROXY_TEXTURE_1D_ARRAY GL_PROXY_TEXTURE_1D_ARRAY624,27927
#define GL_TEXTURE_2D_ARRAY GL_TEXTURE_2D_ARRAY625,27977
#define GL_PROXY_TEXTURE_2D_ARRAY GL_PROXY_TEXTURE_2D_ARRAY626,28027
#define GL_TEXTURE_BINDING_1D_ARRAY GL_TEXTURE_BINDING_1D_ARRAY627,28077
#define GL_TEXTURE_BINDING_2D_ARRAY GL_TEXTURE_BINDING_2D_ARRAY628,28127
#define GL_R11F_G11F_B10F GL_R11F_G11F_B10F629,28177
#define GL_UNSIGNED_INT_10F_11F_11F_REV GL_UNSIGNED_INT_10F_11F_11F_REV630,28227
#define GL_RGB9_E5 GL_RGB9_E5631,28277
#define GL_UNSIGNED_INT_5_9_9_9_REV GL_UNSIGNED_INT_5_9_9_9_REV632,28327
#define GL_TEXTURE_SHARED_SIZE GL_TEXTURE_SHARED_SIZE633,28377
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH634,28427
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE GL_TRANSFORM_FEEDBACK_BUFFER_MODE635,28484
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS636,28534
#define GL_TRANSFORM_FEEDBACK_VARYINGS GL_TRANSFORM_FEEDBACK_VARYINGS637,28596
#define GL_TRANSFORM_FEEDBACK_BUFFER_START GL_TRANSFORM_FEEDBACK_BUFFER_START638,28646
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE GL_TRANSFORM_FEEDBACK_BUFFER_SIZE639,28697
#define GL_PRIMITIVES_GENERATED GL_PRIMITIVES_GENERATED640,28747
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN641,28797
#define GL_RASTERIZER_DISCARD GL_RASTERIZER_DISCARD642,28854
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS643,28904
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS644,28969
#define GL_INTERLEAVED_ATTRIBS GL_INTERLEAVED_ATTRIBS645,29028
#define GL_SEPARATE_ATTRIBS GL_SEPARATE_ATTRIBS646,29078
#define GL_TRANSFORM_FEEDBACK_BUFFER GL_TRANSFORM_FEEDBACK_BUFFER647,29128
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING GL_TRANSFORM_FEEDBACK_BUFFER_BINDING648,29178
#define GL_RGBA32UI GL_RGBA32UI649,29231
#define GL_RGB32UI GL_RGB32UI650,29281
#define GL_RGBA16UI GL_RGBA16UI651,29331
#define GL_RGB16UI GL_RGB16UI652,29381
#define GL_RGBA8UI GL_RGBA8UI653,29431
#define GL_RGB8UI GL_RGB8UI654,29481
#define GL_RGBA32I GL_RGBA32I655,29531
#define GL_RGB32I GL_RGB32I656,29581
#define GL_RGBA16I GL_RGBA16I657,29631
#define GL_RGB16I GL_RGB16I658,29681
#define GL_RGBA8I GL_RGBA8I659,29731
#define GL_RGB8I GL_RGB8I660,29781
#define GL_RED_INTEGER GL_RED_INTEGER661,29831
#define GL_GREEN_INTEGER GL_GREEN_INTEGER662,29881
#define GL_BLUE_INTEGER GL_BLUE_INTEGER663,29931
#define GL_RGB_INTEGER GL_RGB_INTEGER664,29981
#define GL_RGBA_INTEGER GL_RGBA_INTEGER665,30031
#define GL_BGR_INTEGER GL_BGR_INTEGER666,30081
#define GL_BGRA_INTEGER GL_BGRA_INTEGER667,30131
#define GL_SAMPLER_1D_ARRAY GL_SAMPLER_1D_ARRAY668,30181
#define GL_SAMPLER_2D_ARRAY GL_SAMPLER_2D_ARRAY669,30231
#define GL_SAMPLER_1D_ARRAY_SHADOW GL_SAMPLER_1D_ARRAY_SHADOW670,30281
#define GL_SAMPLER_2D_ARRAY_SHADOW GL_SAMPLER_2D_ARRAY_SHADOW671,30331
#define GL_SAMPLER_CUBE_SHADOW GL_SAMPLER_CUBE_SHADOW672,30381
#define GL_UNSIGNED_INT_VEC2 GL_UNSIGNED_INT_VEC2673,30431
#define GL_UNSIGNED_INT_VEC3 GL_UNSIGNED_INT_VEC3674,30481
#define GL_UNSIGNED_INT_VEC4 GL_UNSIGNED_INT_VEC4675,30531
#define GL_INT_SAMPLER_1D GL_INT_SAMPLER_1D676,30581
#define GL_INT_SAMPLER_2D GL_INT_SAMPLER_2D677,30631
#define GL_INT_SAMPLER_3D GL_INT_SAMPLER_3D678,30681
#define GL_INT_SAMPLER_CUBE GL_INT_SAMPLER_CUBE679,30731
#define GL_INT_SAMPLER_1D_ARRAY GL_INT_SAMPLER_1D_ARRAY680,30781
#define GL_INT_SAMPLER_2D_ARRAY GL_INT_SAMPLER_2D_ARRAY681,30831
#define GL_UNSIGNED_INT_SAMPLER_1D GL_UNSIGNED_INT_SAMPLER_1D682,30881
#define GL_UNSIGNED_INT_SAMPLER_2D GL_UNSIGNED_INT_SAMPLER_2D683,30931
#define GL_UNSIGNED_INT_SAMPLER_3D GL_UNSIGNED_INT_SAMPLER_3D684,30981
#define GL_UNSIGNED_INT_SAMPLER_CUBE GL_UNSIGNED_INT_SAMPLER_CUBE685,31031
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY GL_UNSIGNED_INT_SAMPLER_1D_ARRAY686,31081
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY GL_UNSIGNED_INT_SAMPLER_2D_ARRAY687,31131
#define GL_QUERY_WAIT GL_QUERY_WAIT688,31181
#define GL_QUERY_NO_WAIT GL_QUERY_NO_WAIT689,31231
#define GL_QUERY_BY_REGION_WAIT GL_QUERY_BY_REGION_WAIT690,31281
#define GL_QUERY_BY_REGION_NO_WAIT GL_QUERY_BY_REGION_NO_WAIT691,31331
#define GL_BUFFER_ACCESS_FLAGS GL_BUFFER_ACCESS_FLAGS692,31381
#define GL_BUFFER_MAP_LENGTH GL_BUFFER_MAP_LENGTH693,31431
#define GL_BUFFER_MAP_OFFSET GL_BUFFER_MAP_OFFSET694,31481
#define GL_SAMPLER_2D_RECT GL_SAMPLER_2D_RECT822,36064
#define GL_SAMPLER_2D_RECT_SHADOW GL_SAMPLER_2D_RECT_SHADOW823,36114
#define GL_SAMPLER_BUFFER GL_SAMPLER_BUFFER824,36164
#define GL_INT_SAMPLER_2D_RECT GL_INT_SAMPLER_2D_RECT825,36214
#define GL_INT_SAMPLER_BUFFER GL_INT_SAMPLER_BUFFER826,36264
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT GL_UNSIGNED_INT_SAMPLER_2D_RECT827,36314
#define GL_UNSIGNED_INT_SAMPLER_BUFFER GL_UNSIGNED_INT_SAMPLER_BUFFER828,36364
#define GL_TEXTURE_BUFFER GL_TEXTURE_BUFFER829,36414
#define GL_MAX_TEXTURE_BUFFER_SIZE GL_MAX_TEXTURE_BUFFER_SIZE830,36464
#define GL_TEXTURE_BINDING_BUFFER GL_TEXTURE_BINDING_BUFFER831,36514
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING GL_TEXTURE_BUFFER_DATA_STORE_BINDING832,36564
#define GL_TEXTURE_RECTANGLE GL_TEXTURE_RECTANGLE833,36617
#define GL_TEXTURE_BINDING_RECTANGLE GL_TEXTURE_BINDING_RECTANGLE834,36667
#define GL_PROXY_TEXTURE_RECTANGLE GL_PROXY_TEXTURE_RECTANGLE835,36717
#define GL_MAX_RECTANGLE_TEXTURE_SIZE GL_MAX_RECTANGLE_TEXTURE_SIZE836,36767
#define GL_RED_SNORM GL_RED_SNORM837,36817
#define GL_RG_SNORM GL_RG_SNORM838,36867
#define GL_RGB_SNORM GL_RGB_SNORM839,36917
#define GL_RGBA_SNORM GL_RGBA_SNORM840,36967
#define GL_R8_SNORM GL_R8_SNORM841,37017
#define GL_RG8_SNORM GL_RG8_SNORM842,37067
#define GL_RGB8_SNORM GL_RGB8_SNORM843,37117
#define GL_RGBA8_SNORM GL_RGBA8_SNORM844,37167
#define GL_R16_SNORM GL_R16_SNORM845,37217
#define GL_RG16_SNORM GL_RG16_SNORM846,37267
#define GL_RGB16_SNORM GL_RGB16_SNORM847,37317
#define GL_RGBA16_SNORM GL_RGBA16_SNORM848,37367
#define GL_SIGNED_NORMALIZED GL_SIGNED_NORMALIZED849,37417
#define GL_PRIMITIVE_RESTART GL_PRIMITIVE_RESTART850,37467
#define GL_PRIMITIVE_RESTART_INDEX GL_PRIMITIVE_RESTART_INDEX851,37517
#define GL_CONTEXT_CORE_PROFILE_BIT GL_CONTEXT_CORE_PROFILE_BIT890,39058
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT GL_CONTEXT_COMPATIBILITY_PROFILE_BIT891,39112
#define GL_LINES_ADJACENCY GL_LINES_ADJACENCY892,39169
#define GL_LINE_STRIP_ADJACENCY GL_LINE_STRIP_ADJACENCY893,39219
#define GL_TRIANGLES_ADJACENCY GL_TRIANGLES_ADJACENCY894,39269
#define GL_TRIANGLE_STRIP_ADJACENCY GL_TRIANGLE_STRIP_ADJACENCY895,39319
#define GL_PROGRAM_POINT_SIZE GL_PROGRAM_POINT_SIZE896,39369
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS897,39419
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED GL_FRAMEBUFFER_ATTACHMENT_LAYERED898,39471
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS899,39521
#define GL_GEOMETRY_SHADER GL_GEOMETRY_SHADER900,39577
#define GL_GEOMETRY_VERTICES_OUT GL_GEOMETRY_VERTICES_OUT901,39627
#define GL_GEOMETRY_INPUT_TYPE GL_GEOMETRY_INPUT_TYPE902,39677
#define GL_GEOMETRY_OUTPUT_TYPE GL_GEOMETRY_OUTPUT_TYPE903,39727
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS GL_MAX_GEOMETRY_UNIFORM_COMPONENTS904,39777
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES GL_MAX_GEOMETRY_OUTPUT_VERTICES905,39828
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS906,39878
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS GL_MAX_VERTEX_OUTPUT_COMPONENTS907,39934
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS GL_MAX_GEOMETRY_INPUT_COMPONENTS908,39984
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS GL_MAX_GEOMETRY_OUTPUT_COMPONENTS909,40034
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS GL_MAX_FRAGMENT_INPUT_COMPONENTS910,40084
#define GL_CONTEXT_PROFILE_MASK GL_CONTEXT_PROFILE_MASK911,40134
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR GL_VERTEX_ATTRIB_ARRAY_DIVISOR968,42392
#define GL_SAMPLE_SHADING GL_SAMPLE_SHADING996,43426
#define GL_MIN_SAMPLE_SHADING_VALUE GL_MIN_SAMPLE_SHADING_VALUE997,43476
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET998,43526
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET999,43579
#define GL_TEXTURE_CUBE_MAP_ARRAY GL_TEXTURE_CUBE_MAP_ARRAY1000,43632
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY GL_TEXTURE_BINDING_CUBE_MAP_ARRAY1001,43682
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY GL_PROXY_TEXTURE_CUBE_MAP_ARRAY1002,43732
#define GL_SAMPLER_CUBE_MAP_ARRAY GL_SAMPLER_CUBE_MAP_ARRAY1003,43782
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW1004,43832
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY GL_INT_SAMPLER_CUBE_MAP_ARRAY1005,43882
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY1006,43932
#define GL_NUM_SHADING_LANGUAGE_VERSIONS GL_NUM_SHADING_LANGUAGE_VERSIONS1249,54151
#define GL_VERTEX_ATTRIB_ARRAY_LONG GL_VERTEX_ATTRIB_ARRAY_LONG1250,54201
#define GL_DEPTH_COMPONENT32F GL_DEPTH_COMPONENT32F1533,65488
#define GL_DEPTH32F_STENCIL8 GL_DEPTH32F_STENCIL81534,65538
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV GL_FLOAT_32_UNSIGNED_INT_24_8_REV1535,65588
#define GL_INVALID_FRAMEBUFFER_OPERATION GL_INVALID_FRAMEBUFFER_OPERATION1539,65683
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING1540,65733
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE1541,65790
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE1542,65847
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE1543,65898
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE1544,65951
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE1545,66003
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE1546,66056
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE1547,66109
#define GL_FRAMEBUFFER_DEFAULT GL_FRAMEBUFFER_DEFAULT1548,66164
#define GL_FRAMEBUFFER_UNDEFINED GL_FRAMEBUFFER_UNDEFINED1549,66214
#define GL_DEPTH_STENCIL_ATTACHMENT GL_DEPTH_STENCIL_ATTACHMENT1550,66264
#define GL_MAX_RENDERBUFFER_SIZE GL_MAX_RENDERBUFFER_SIZE1551,66314
#define GL_DEPTH_STENCIL GL_DEPTH_STENCIL1552,66364
#define GL_UNSIGNED_INT_24_8 GL_UNSIGNED_INT_24_81553,66414
#define GL_DEPTH24_STENCIL8 GL_DEPTH24_STENCIL81554,66464
#define GL_TEXTURE_STENCIL_SIZE GL_TEXTURE_STENCIL_SIZE1555,66514
#define GL_TEXTURE_RED_TYPE GL_TEXTURE_RED_TYPE1556,66564
#define GL_TEXTURE_GREEN_TYPE GL_TEXTURE_GREEN_TYPE1557,66614
#define GL_TEXTURE_BLUE_TYPE GL_TEXTURE_BLUE_TYPE1558,66664
#define GL_TEXTURE_ALPHA_TYPE GL_TEXTURE_ALPHA_TYPE1559,66714
#define GL_TEXTURE_DEPTH_TYPE GL_TEXTURE_DEPTH_TYPE1560,66764
#define GL_UNSIGNED_NORMALIZED GL_UNSIGNED_NORMALIZED1561,66814
#define GL_FRAMEBUFFER_BINDING GL_FRAMEBUFFER_BINDING1562,66864
#define GL_DRAW_FRAMEBUFFER_BINDING GL_DRAW_FRAMEBUFFER_BINDING1563,66914
#define GL_RENDERBUFFER_BINDING GL_RENDERBUFFER_BINDING1564,66980
#define GL_READ_FRAMEBUFFER GL_READ_FRAMEBUFFER1565,67030
#define GL_DRAW_FRAMEBUFFER GL_DRAW_FRAMEBUFFER1566,67080
#define GL_READ_FRAMEBUFFER_BINDING GL_READ_FRAMEBUFFER_BINDING1567,67130
#define GL_RENDERBUFFER_SAMPLES GL_RENDERBUFFER_SAMPLES1568,67180
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE1569,67230
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME1570,67284
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL1571,67338
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE1572,67394
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER1573,67458
#define GL_FRAMEBUFFER_COMPLETE GL_FRAMEBUFFER_COMPLETE1574,67514
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT1575,67564
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT1576,67617
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER1577,67678
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER1578,67732
#define GL_FRAMEBUFFER_UNSUPPORTED GL_FRAMEBUFFER_UNSUPPORTED1579,67786
#define GL_MAX_COLOR_ATTACHMENTS GL_MAX_COLOR_ATTACHMENTS1580,67836
#define GL_COLOR_ATTACHMENT0 GL_COLOR_ATTACHMENT01581,67886
#define GL_COLOR_ATTACHMENT1 GL_COLOR_ATTACHMENT11582,67936
#define GL_COLOR_ATTACHMENT2 GL_COLOR_ATTACHMENT21583,67986
#define GL_COLOR_ATTACHMENT3 GL_COLOR_ATTACHMENT31584,68036
#define GL_COLOR_ATTACHMENT4 GL_COLOR_ATTACHMENT41585,68086
#define GL_COLOR_ATTACHMENT5 GL_COLOR_ATTACHMENT51586,68136
#define GL_COLOR_ATTACHMENT6 GL_COLOR_ATTACHMENT61587,68186
#define GL_COLOR_ATTACHMENT7 GL_COLOR_ATTACHMENT71588,68236
#define GL_COLOR_ATTACHMENT8 GL_COLOR_ATTACHMENT81589,68286
#define GL_COLOR_ATTACHMENT9 GL_COLOR_ATTACHMENT91590,68336
#define GL_COLOR_ATTACHMENT10 GL_COLOR_ATTACHMENT101591,68386
#define GL_COLOR_ATTACHMENT11 GL_COLOR_ATTACHMENT111592,68436
#define GL_COLOR_ATTACHMENT12 GL_COLOR_ATTACHMENT121593,68486
#define GL_COLOR_ATTACHMENT13 GL_COLOR_ATTACHMENT131594,68536
#define GL_COLOR_ATTACHMENT14 GL_COLOR_ATTACHMENT141595,68586
#define GL_COLOR_ATTACHMENT15 GL_COLOR_ATTACHMENT151596,68636
#define GL_DEPTH_ATTACHMENT GL_DEPTH_ATTACHMENT1597,68686
#define GL_STENCIL_ATTACHMENT GL_STENCIL_ATTACHMENT1598,68736
#define GL_FRAMEBUFFER GL_FRAMEBUFFER1599,68786
#define GL_RENDERBUFFER GL_RENDERBUFFER1600,68836
#define GL_RENDERBUFFER_WIDTH GL_RENDERBUFFER_WIDTH1601,68886
#define GL_RENDERBUFFER_HEIGHT GL_RENDERBUFFER_HEIGHT1602,68936
#define GL_RENDERBUFFER_INTERNAL_FORMAT GL_RENDERBUFFER_INTERNAL_FORMAT1603,68986
#define GL_STENCIL_INDEX1 GL_STENCIL_INDEX11604,69036
#define GL_STENCIL_INDEX4 GL_STENCIL_INDEX41605,69086
#define GL_STENCIL_INDEX8 GL_STENCIL_INDEX81606,69136
#define GL_STENCIL_INDEX16 GL_STENCIL_INDEX161607,69186
#define GL_RENDERBUFFER_RED_SIZE GL_RENDERBUFFER_RED_SIZE1608,69236
#define GL_RENDERBUFFER_GREEN_SIZE GL_RENDERBUFFER_GREEN_SIZE1609,69286
#define GL_RENDERBUFFER_BLUE_SIZE GL_RENDERBUFFER_BLUE_SIZE1610,69336
#define GL_RENDERBUFFER_ALPHA_SIZE GL_RENDERBUFFER_ALPHA_SIZE1611,69386
#define GL_RENDERBUFFER_DEPTH_SIZE GL_RENDERBUFFER_DEPTH_SIZE1612,69436
#define GL_RENDERBUFFER_STENCIL_SIZE GL_RENDERBUFFER_STENCIL_SIZE1613,69486
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE1614,69536
#define GL_MAX_SAMPLES GL_MAX_SAMPLES1615,69590
#define GL_FRAMEBUFFER_SRGB GL_FRAMEBUFFER_SRGB1619,69683
#define GL_HALF_FLOAT GL_HALF_FLOAT1623,69777
#define GL_MAP_READ_BIT GL_MAP_READ_BIT1627,69870
#define GL_MAP_WRITE_BIT GL_MAP_WRITE_BIT1628,69920
#define GL_MAP_INVALIDATE_RANGE_BIT GL_MAP_INVALIDATE_RANGE_BIT1629,69970
#define GL_MAP_INVALIDATE_BUFFER_BIT GL_MAP_INVALIDATE_BUFFER_BIT1630,70020
#define GL_MAP_FLUSH_EXPLICIT_BIT GL_MAP_FLUSH_EXPLICIT_BIT1631,70070
#define GL_MAP_UNSYNCHRONIZED_BIT GL_MAP_UNSYNCHRONIZED_BIT1632,70120
#define GL_COMPRESSED_RED_RGTC1 GL_COMPRESSED_RED_RGTC11636,70221
#define GL_COMPRESSED_SIGNED_RED_RGTC1 GL_COMPRESSED_SIGNED_RED_RGTC11637,70271
#define GL_COMPRESSED_RG_RGTC2 GL_COMPRESSED_RG_RGTC21638,70321
#define GL_COMPRESSED_SIGNED_RG_RGTC2 GL_COMPRESSED_SIGNED_RG_RGTC21639,70371
#define GL_RG GL_RG1643,70458
#define GL_RG_INTEGER GL_RG_INTEGER1644,70508
#define GL_R8 GL_R81645,70558
#define GL_R16 GL_R161646,70608
#define GL_RG8 GL_RG81647,70658
#define GL_RG16 GL_RG161648,70708
#define GL_R16F GL_R16F1649,70758
#define GL_R32F GL_R32F1650,70808
#define GL_RG16F GL_RG16F1651,70858
#define GL_RG32F GL_RG32F1652,70908
#define GL_R8I GL_R8I1653,70958
#define GL_R8UI GL_R8UI1654,71008
#define GL_R16I GL_R16I1655,71058
#define GL_R16UI GL_R16UI1656,71108
#define GL_R32I GL_R32I1657,71158
#define GL_R32UI GL_R32UI1658,71208
#define GL_RG8I GL_RG8I1659,71258
#define GL_RG8UI GL_RG8UI1660,71308
#define GL_RG16I GL_RG16I1661,71358
#define GL_RG16UI GL_RG16UI1662,71408
#define GL_RG32I GL_RG32I1663,71458
#define GL_RG32UI GL_RG32UI1664,71508
#define GL_VERTEX_ARRAY_BINDING GL_VERTEX_ARRAY_BINDING1668,71604
#define GL_UNIFORM_BUFFER GL_UNIFORM_BUFFER1672,71702
#define GL_UNIFORM_BUFFER_BINDING GL_UNIFORM_BUFFER_BINDING1673,71752
#define GL_UNIFORM_BUFFER_START GL_UNIFORM_BUFFER_START1674,71802
#define GL_UNIFORM_BUFFER_SIZE GL_UNIFORM_BUFFER_SIZE1675,71852
#define GL_MAX_VERTEX_UNIFORM_BLOCKS GL_MAX_VERTEX_UNIFORM_BLOCKS1676,71902
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS GL_MAX_GEOMETRY_UNIFORM_BLOCKS1677,71952
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS GL_MAX_FRAGMENT_UNIFORM_BLOCKS1678,72002
#define GL_MAX_COMBINED_UNIFORM_BLOCKS GL_MAX_COMBINED_UNIFORM_BLOCKS1679,72052
#define GL_MAX_UNIFORM_BUFFER_BINDINGS GL_MAX_UNIFORM_BUFFER_BINDINGS1680,72102
#define GL_MAX_UNIFORM_BLOCK_SIZE GL_MAX_UNIFORM_BLOCK_SIZE1681,72152
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS1682,72202
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS1683,72260
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS1684,72320
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT1685,72380
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH1686,72431
#define GL_ACTIVE_UNIFORM_BLOCKS GL_ACTIVE_UNIFORM_BLOCKS1687,72487
#define GL_UNIFORM_TYPE GL_UNIFORM_TYPE1688,72537
#define GL_UNIFORM_SIZE GL_UNIFORM_SIZE1689,72587
#define GL_UNIFORM_NAME_LENGTH GL_UNIFORM_NAME_LENGTH1690,72637
#define GL_UNIFORM_BLOCK_INDEX GL_UNIFORM_BLOCK_INDEX1691,72687
#define GL_UNIFORM_OFFSET GL_UNIFORM_OFFSET1692,72737
#define GL_UNIFORM_ARRAY_STRIDE GL_UNIFORM_ARRAY_STRIDE1693,72787
#define GL_UNIFORM_MATRIX_STRIDE GL_UNIFORM_MATRIX_STRIDE1694,72837
#define GL_UNIFORM_IS_ROW_MAJOR GL_UNIFORM_IS_ROW_MAJOR1695,72887
#define GL_UNIFORM_BLOCK_BINDING GL_UNIFORM_BLOCK_BINDING1696,72937
#define GL_UNIFORM_BLOCK_DATA_SIZE GL_UNIFORM_BLOCK_DATA_SIZE1697,72987
#define GL_UNIFORM_BLOCK_NAME_LENGTH GL_UNIFORM_BLOCK_NAME_LENGTH1698,73037
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS1699,73087
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES1700,73137
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER1701,73193
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER1702,73254
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER1703,73317
#define GL_INVALID_INDEX GL_INVALID_INDEX1704,73380
#define GL_COPY_READ_BUFFER_BINDING GL_COPY_READ_BUFFER_BINDING1708,73473
#define GL_COPY_READ_BUFFER GL_COPY_READ_BUFFER1709,73523
#define GL_COPY_WRITE_BUFFER_BINDING GL_COPY_WRITE_BUFFER_BINDING1710,73594
#define GL_COPY_WRITE_BUFFER GL_COPY_WRITE_BUFFER1711,73644
#define GL_DEPTH_CLAMP GL_DEPTH_CLAMP1715,73754
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION1725,73952
#define GL_FIRST_VERTEX_CONVENTION GL_FIRST_VERTEX_CONVENTION1726,74012
#define GL_LAST_VERTEX_CONVENTION GL_LAST_VERTEX_CONVENTION1727,74062
#define GL_PROVOKING_VERTEX GL_PROVOKING_VERTEX1728,74112
#define GL_TEXTURE_CUBE_MAP_SEAMLESS GL_TEXTURE_CUBE_MAP_SEAMLESS1732,74206
#define GL_MAX_SERVER_WAIT_TIMEOUT GL_MAX_SERVER_WAIT_TIMEOUT1736,74287
#define GL_OBJECT_TYPE GL_OBJECT_TYPE1737,74337
#define GL_SYNC_CONDITION GL_SYNC_CONDITION1738,74387
#define GL_SYNC_STATUS GL_SYNC_STATUS1739,74437
#define GL_SYNC_FLAGS GL_SYNC_FLAGS1740,74487
#define GL_SYNC_FENCE GL_SYNC_FENCE1741,74537
#define GL_SYNC_GPU_COMMANDS_COMPLETE GL_SYNC_GPU_COMMANDS_COMPLETE1742,74587
#define GL_UNSIGNALED GL_UNSIGNALED1743,74637
#define GL_SIGNALED GL_SIGNALED1744,74687
#define GL_ALREADY_SIGNALED GL_ALREADY_SIGNALED1745,74737
#define GL_TIMEOUT_EXPIRED GL_TIMEOUT_EXPIRED1746,74787
#define GL_CONDITION_SATISFIED GL_CONDITION_SATISFIED1747,74837
#define GL_WAIT_FAILED GL_WAIT_FAILED1748,74887
#define GL_SYNC_FLUSH_COMMANDS_BIT GL_SYNC_FLUSH_COMMANDS_BIT1749,74937
#define GL_TIMEOUT_IGNORED GL_TIMEOUT_IGNORED1750,74991
#define GL_SAMPLE_POSITION GL_SAMPLE_POSITION1754,75102
#define GL_SAMPLE_MASK GL_SAMPLE_MASK1755,75152
#define GL_SAMPLE_MASK_VALUE GL_SAMPLE_MASK_VALUE1756,75202
#define GL_MAX_SAMPLE_MASK_WORDS GL_MAX_SAMPLE_MASK_WORDS1757,75252
#define GL_TEXTURE_2D_MULTISAMPLE GL_TEXTURE_2D_MULTISAMPLE1758,75302
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE GL_PROXY_TEXTURE_2D_MULTISAMPLE1759,75352
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY GL_TEXTURE_2D_MULTISAMPLE_ARRAY1760,75402
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY1761,75452
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE GL_TEXTURE_BINDING_2D_MULTISAMPLE1762,75506
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY1763,75556
#define GL_TEXTURE_SAMPLES GL_TEXTURE_SAMPLES1764,75612
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS GL_TEXTURE_FIXED_SAMPLE_LOCATIONS1765,75662
#define GL_SAMPLER_2D_MULTISAMPLE GL_SAMPLER_2D_MULTISAMPLE1766,75712
#define GL_INT_SAMPLER_2D_MULTISAMPLE GL_INT_SAMPLER_2D_MULTISAMPLE1767,75762
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE1768,75812
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY GL_SAMPLER_2D_MULTISAMPLE_ARRAY1769,75867
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY1770,75917
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY1771,75969
#define GL_MAX_COLOR_TEXTURE_SAMPLES GL_MAX_COLOR_TEXTURE_SAMPLES1772,76030
#define GL_MAX_DEPTH_TEXTURE_SAMPLES GL_MAX_DEPTH_TEXTURE_SAMPLES1773,76080
#define GL_MAX_INTEGER_SAMPLES GL_MAX_INTEGER_SAMPLES1774,76130
#define GL_SAMPLE_SHADING_ARB GL_SAMPLE_SHADING_ARB1785,76331
#define GL_MIN_SAMPLE_SHADING_VALUE_ARB GL_MIN_SAMPLE_SHADING_VALUE_ARB1786,76381
#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB GL_TEXTURE_CUBE_MAP_ARRAY_ARB1790,76480
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB1791,76530
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB1792,76584
#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB GL_SAMPLER_CUBE_MAP_ARRAY_ARB1793,76636
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB1794,76686
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB1795,76739
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB1796,76789
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB1800,76889
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB1801,76946
#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB1802,77003
#define GL_SHADER_INCLUDE_ARB GL_SHADER_INCLUDE_ARB1809,77159
#define GL_NAMED_STRING_LENGTH_ARB GL_NAMED_STRING_LENGTH_ARB1810,77209
#define GL_NAMED_STRING_TYPE_ARB GL_NAMED_STRING_TYPE_ARB1811,77259
#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB GL_COMPRESSED_RGBA_BPTC_UNORM_ARB1815,77360
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB1816,77410
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB1817,77466
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB1818,77522
#define GL_SRC1_COLOR GL_SRC1_COLOR1822,77626
#define GL_ONE_MINUS_SRC1_COLOR GL_ONE_MINUS_SRC1_COLOR1824,77703
#define GL_ONE_MINUS_SRC1_ALPHA GL_ONE_MINUS_SRC1_ALPHA1825,77753
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS GL_MAX_DUAL_SOURCE_DRAW_BUFFERS1826,77803
#define GL_ANY_SAMPLES_PASSED GL_ANY_SAMPLES_PASSED1833,77947
#define GL_SAMPLER_BINDING GL_SAMPLER_BINDING1837,78039
#define GL_RGB10_A2UI GL_RGB10_A2UI1844,78180
#define GL_TEXTURE_SWIZZLE_R GL_TEXTURE_SWIZZLE_R1848,78272
#define GL_TEXTURE_SWIZZLE_G GL_TEXTURE_SWIZZLE_G1849,78322
#define GL_TEXTURE_SWIZZLE_B GL_TEXTURE_SWIZZLE_B1850,78372
#define GL_TEXTURE_SWIZZLE_A GL_TEXTURE_SWIZZLE_A1851,78422
#define GL_TEXTURE_SWIZZLE_RGBA GL_TEXTURE_SWIZZLE_RGBA1852,78472
#define GL_TIME_ELAPSED GL_TIME_ELAPSED1856,78560
#define GL_TIMESTAMP GL_TIMESTAMP1857,78610
#define GL_INT_2_10_10_10_REV GL_INT_2_10_10_10_REV1862,78757
#define GL_DRAW_INDIRECT_BUFFER GL_DRAW_INDIRECT_BUFFER1866,78847
#define GL_DRAW_INDIRECT_BUFFER_BINDING GL_DRAW_INDIRECT_BUFFER_BINDING1867,78897
#define GL_GEOMETRY_SHADER_INVOCATIONS GL_GEOMETRY_SHADER_INVOCATIONS1871,78985
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS GL_MAX_GEOMETRY_SHADER_INVOCATIONS1872,79035
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET GL_MIN_FRAGMENT_INTERPOLATION_OFFSET1873,79086
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET GL_MAX_FRAGMENT_INTERPOLATION_OFFSET1874,79139
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS GL_FRAGMENT_INTERPOLATION_OFFSET_BITS1875,79192
#define GL_DOUBLE_VEC2 GL_DOUBLE_VEC21881,79346
#define GL_DOUBLE_VEC3 GL_DOUBLE_VEC31882,79396
#define GL_DOUBLE_VEC4 GL_DOUBLE_VEC41883,79446
#define GL_DOUBLE_MAT2 GL_DOUBLE_MAT21884,79496
#define GL_DOUBLE_MAT3 GL_DOUBLE_MAT31885,79546
#define GL_DOUBLE_MAT4 GL_DOUBLE_MAT41886,79596
#define GL_DOUBLE_MAT2x3 GL_DOUBLE_MAT2x31887,79646
#define GL_DOUBLE_MAT2x4 GL_DOUBLE_MAT2x41888,79696
#define GL_DOUBLE_MAT3x2 GL_DOUBLE_MAT3x21889,79746
#define GL_DOUBLE_MAT3x4 GL_DOUBLE_MAT3x41890,79796
#define GL_DOUBLE_MAT4x2 GL_DOUBLE_MAT4x21891,79846
#define GL_DOUBLE_MAT4x3 GL_DOUBLE_MAT4x31892,79896
#define GL_ACTIVE_SUBROUTINES GL_ACTIVE_SUBROUTINES1896,79990
#define GL_ACTIVE_SUBROUTINE_UNIFORMS GL_ACTIVE_SUBROUTINE_UNIFORMS1897,80040
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS1898,80090
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH GL_ACTIVE_SUBROUTINE_MAX_LENGTH1899,80145
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH1900,80195
#define GL_MAX_SUBROUTINES GL_MAX_SUBROUTINES1901,80251
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS1902,80301
#define GL_NUM_COMPATIBLE_SUBROUTINES GL_NUM_COMPATIBLE_SUBROUTINES1903,80353
#define GL_COMPATIBLE_SUBROUTINES GL_COMPATIBLE_SUBROUTINES1904,80403
#define GL_PATCHES GL_PATCHES1910,80564
#define GL_PATCH_VERTICES GL_PATCH_VERTICES1911,80614
#define GL_PATCH_DEFAULT_INNER_LEVEL GL_PATCH_DEFAULT_INNER_LEVEL1912,80664
#define GL_PATCH_DEFAULT_OUTER_LEVEL GL_PATCH_DEFAULT_OUTER_LEVEL1913,80714
#define GL_TESS_CONTROL_OUTPUT_VERTICES GL_TESS_CONTROL_OUTPUT_VERTICES1914,80764
#define GL_TESS_GEN_MODE GL_TESS_GEN_MODE1915,80814
#define GL_TESS_GEN_SPACING GL_TESS_GEN_SPACING1916,80864
#define GL_TESS_GEN_VERTEX_ORDER GL_TESS_GEN_VERTEX_ORDER1917,80914
#define GL_TESS_GEN_POINT_MODE GL_TESS_GEN_POINT_MODE1918,80964
#define GL_ISOLINES GL_ISOLINES1921,81062
#define GL_FRACTIONAL_ODD GL_FRACTIONAL_ODD1923,81134
#define GL_FRACTIONAL_EVEN GL_FRACTIONAL_EVEN1924,81184
#define GL_MAX_PATCH_VERTICES GL_MAX_PATCH_VERTICES1927,81273
#define GL_MAX_TESS_GEN_LEVEL GL_MAX_TESS_GEN_LEVEL1928,81323
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS1929,81373
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS1930,81428
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS1931,81486
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS1932,81542
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS1933,81601
#define GL_MAX_TESS_PATCH_COMPONENTS GL_MAX_TESS_PATCH_COMPONENTS1934,81655
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS1935,81705
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS1936,81765
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS1937,81822
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS1938,81873
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS GL_MAX_TESS_CONTROL_INPUT_COMPONENTS1939,81927
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS1940,81980
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS1941,82036
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS1942,82100
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER1943,82167
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER1944,82234
#define GL_TESS_EVALUATION_SHADER GL_TESS_EVALUATION_SHADER1945,82304
#define GL_TESS_CONTROL_SHADER GL_TESS_CONTROL_SHADER1946,82354
#define GL_TRANSFORM_FEEDBACK GL_TRANSFORM_FEEDBACK1956,82574
#define GL_TRANSFORM_FEEDBACK_PAUSED GL_TRANSFORM_FEEDBACK_PAUSED1957,82624
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED1958,82674
#define GL_TRANSFORM_FEEDBACK_ACTIVE GL_TRANSFORM_FEEDBACK_ACTIVE1959,82748
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE1960,82798
#define GL_TRANSFORM_FEEDBACK_BINDING GL_TRANSFORM_FEEDBACK_BINDING1961,82872
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS GL_MAX_TRANSFORM_FEEDBACK_BUFFERS1965,82968
#define GL_MAX_VERTEX_STREAMS GL_MAX_VERTEX_STREAMS1966,83018
#define GL_FIXED GL_FIXED1970,83112
#define GL_IMPLEMENTATION_COLOR_READ_TYPE GL_IMPLEMENTATION_COLOR_READ_TYPE1971,83162
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT GL_IMPLEMENTATION_COLOR_READ_FORMAT1972,83212
#define GL_LOW_FLOAT GL_LOW_FLOAT1973,83264
#define GL_MEDIUM_FLOAT GL_MEDIUM_FLOAT1974,83314
#define GL_HIGH_FLOAT GL_HIGH_FLOAT1975,83364
#define GL_LOW_INT GL_LOW_INT1976,83414
#define GL_MEDIUM_INT GL_MEDIUM_INT1977,83464
#define GL_HIGH_INT GL_HIGH_INT1978,83514
#define GL_SHADER_COMPILER GL_SHADER_COMPILER1979,83564
#define GL_SHADER_BINARY_FORMATS GL_SHADER_BINARY_FORMATS1980,83614
#define GL_NUM_SHADER_BINARY_FORMATS GL_NUM_SHADER_BINARY_FORMATS1981,83664
#define GL_MAX_VERTEX_UNIFORM_VECTORS GL_MAX_VERTEX_UNIFORM_VECTORS1982,83714
#define GL_MAX_VARYING_VECTORS GL_MAX_VARYING_VECTORS1983,83764
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS GL_MAX_FRAGMENT_UNIFORM_VECTORS1984,83814
#define GL_RGB565 GL_RGB5651985,83864
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT GL_PROGRAM_BINARY_RETRIEVABLE_HINT1989,83959
#define GL_PROGRAM_BINARY_LENGTH GL_PROGRAM_BINARY_LENGTH1990,84010
#define GL_NUM_PROGRAM_BINARY_FORMATS GL_NUM_PROGRAM_BINARY_FORMATS1991,84060
#define GL_PROGRAM_BINARY_FORMATS GL_PROGRAM_BINARY_FORMATS1992,84110
#define GL_VERTEX_SHADER_BIT GL_VERTEX_SHADER_BIT1996,84210
#define GL_FRAGMENT_SHADER_BIT GL_FRAGMENT_SHADER_BIT1997,84264
#define GL_GEOMETRY_SHADER_BIT GL_GEOMETRY_SHADER_BIT1998,84318
#define GL_TESS_CONTROL_SHADER_BIT GL_TESS_CONTROL_SHADER_BIT1999,84372
#define GL_TESS_EVALUATION_SHADER_BIT GL_TESS_EVALUATION_SHADER_BIT2000,84426
#define GL_ALL_SHADER_BITS GL_ALL_SHADER_BITS2001,84480
#define GL_PROGRAM_SEPARABLE GL_PROGRAM_SEPARABLE2002,84534
#define GL_ACTIVE_PROGRAM GL_ACTIVE_PROGRAM2003,84584
#define GL_PROGRAM_PIPELINE_BINDING GL_PROGRAM_PIPELINE_BINDING2004,84634
#define GL_MAX_VIEWPORTS GL_MAX_VIEWPORTS2031,85295
#define GL_VIEWPORT_SUBPIXEL_BITS GL_VIEWPORT_SUBPIXEL_BITS2032,85345
#define GL_VIEWPORT_BOUNDS_RANGE GL_VIEWPORT_BOUNDS_RANGE2033,85395
#define GL_LAYER_PROVOKING_VERTEX GL_LAYER_PROVOKING_VERTEX2034,85445
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX GL_VIEWPORT_INDEX_PROVOKING_VERTEX2035,85495
#define GL_UNDEFINED_VERTEX GL_UNDEFINED_VERTEX2036,85546
#define GL_SYNC_CL_EVENT_ARB GL_SYNC_CL_EVENT_ARB2043,85743
#define GL_SYNC_CL_EVENT_COMPLETE_ARB GL_SYNC_CL_EVENT_COMPLETE_ARB2044,85793
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB2048,85882
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB2049,85932
#define GL_DEBUG_CALLBACK_FUNCTION_ARB GL_DEBUG_CALLBACK_FUNCTION_ARB2050,85988
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB GL_DEBUG_CALLBACK_USER_PARAM_ARB2051,86038
#define GL_DEBUG_SOURCE_API_ARB GL_DEBUG_SOURCE_API_ARB2052,86088
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB2053,86138
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB GL_DEBUG_SOURCE_SHADER_COMPILER_ARB2054,86188
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB GL_DEBUG_SOURCE_THIRD_PARTY_ARB2055,86240
#define GL_DEBUG_SOURCE_APPLICATION_ARB GL_DEBUG_SOURCE_APPLICATION_ARB2056,86290
#define GL_DEBUG_SOURCE_OTHER_ARB GL_DEBUG_SOURCE_OTHER_ARB2057,86340
#define GL_DEBUG_TYPE_ERROR_ARB GL_DEBUG_TYPE_ERROR_ARB2058,86390
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB2059,86440
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB2060,86494
#define GL_DEBUG_TYPE_PORTABILITY_ARB GL_DEBUG_TYPE_PORTABILITY_ARB2061,86547
#define GL_DEBUG_TYPE_PERFORMANCE_ARB GL_DEBUG_TYPE_PERFORMANCE_ARB2062,86597
#define GL_DEBUG_TYPE_OTHER_ARB GL_DEBUG_TYPE_OTHER_ARB2063,86647
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB GL_MAX_DEBUG_MESSAGE_LENGTH_ARB2064,86697
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB GL_MAX_DEBUG_LOGGED_MESSAGES_ARB2065,86747
#define GL_DEBUG_LOGGED_MESSAGES_ARB GL_DEBUG_LOGGED_MESSAGES_ARB2066,86797
#define GL_DEBUG_SEVERITY_HIGH_ARB GL_DEBUG_SEVERITY_HIGH_ARB2067,86847
#define GL_DEBUG_SEVERITY_MEDIUM_ARB GL_DEBUG_SEVERITY_MEDIUM_ARB2068,86897
#define GL_DEBUG_SEVERITY_LOW_ARB GL_DEBUG_SEVERITY_LOW_ARB2069,86947
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB2074,87059
#define GL_LOSE_CONTEXT_ON_RESET_ARB GL_LOSE_CONTEXT_ON_RESET_ARB2075,87117
#define GL_GUILTY_CONTEXT_RESET_ARB GL_GUILTY_CONTEXT_RESET_ARB2076,87167
#define GL_INNOCENT_CONTEXT_RESET_ARB GL_INNOCENT_CONTEXT_RESET_ARB2077,87217
#define GL_UNKNOWN_CONTEXT_RESET_ARB GL_UNKNOWN_CONTEXT_RESET_ARB2078,87267
#define GL_RESET_NOTIFICATION_STRATEGY_ARB GL_RESET_NOTIFICATION_STRATEGY_ARB2079,87317
#define GL_NO_RESET_NOTIFICATION_ARB GL_NO_RESET_NOTIFICATION_ARB2080,87368
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH GL_UNPACK_COMPRESSED_BLOCK_WIDTH2096,87671
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT GL_UNPACK_COMPRESSED_BLOCK_HEIGHT2097,87721
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH GL_UNPACK_COMPRESSED_BLOCK_DEPTH2098,87771
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE GL_UNPACK_COMPRESSED_BLOCK_SIZE2099,87821
#define GL_PACK_COMPRESSED_BLOCK_WIDTH GL_PACK_COMPRESSED_BLOCK_WIDTH2100,87871
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT GL_PACK_COMPRESSED_BLOCK_HEIGHT2101,87921
#define GL_PACK_COMPRESSED_BLOCK_DEPTH GL_PACK_COMPRESSED_BLOCK_DEPTH2102,87971
#define GL_PACK_COMPRESSED_BLOCK_SIZE GL_PACK_COMPRESSED_BLOCK_SIZE2103,88021
#define GL_NUM_SAMPLE_COUNTS GL_NUM_SAMPLE_COUNTS2110,88163
#define GL_MIN_MAP_BUFFER_ALIGNMENT GL_MIN_MAP_BUFFER_ALIGNMENT2114,88260
#define GL_ATOMIC_COUNTER_BUFFER GL_ATOMIC_COUNTER_BUFFER2118,88359
#define GL_ATOMIC_COUNTER_BUFFER_BINDING GL_ATOMIC_COUNTER_BUFFER_BINDING2119,88409
#define GL_ATOMIC_COUNTER_BUFFER_START GL_ATOMIC_COUNTER_BUFFER_START2120,88459
#define GL_ATOMIC_COUNTER_BUFFER_SIZE GL_ATOMIC_COUNTER_BUFFER_SIZE2121,88509
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE2122,88559
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS2123,88610
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES2124,88674
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER2125,88745
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER2126,88814
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER2127,88889
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER2128,88967
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER2129,89038
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS2130,89109
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS2131,89162
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS2132,89221
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS2133,89283
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS2134,89338
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS2135,89393
#define GL_MAX_VERTEX_ATOMIC_COUNTERS GL_MAX_VERTEX_ATOMIC_COUNTERS2136,89448
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS2137,89498
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS2138,89550
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS GL_MAX_GEOMETRY_ATOMIC_COUNTERS2139,89605
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS GL_MAX_FRAGMENT_ATOMIC_COUNTERS2140,89655
#define GL_MAX_COMBINED_ATOMIC_COUNTERS GL_MAX_COMBINED_ATOMIC_COUNTERS2141,89705
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE2142,89755
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS2143,89805
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS GL_ACTIVE_ATOMIC_COUNTER_BUFFERS2144,89859
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX2145,89909
#define GL_UNSIGNED_INT_ATOMIC_COUNTER GL_UNSIGNED_INT_ATOMIC_COUNTER2146,89964
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT2150,90064
#define GL_ELEMENT_ARRAY_BARRIER_BIT GL_ELEMENT_ARRAY_BARRIER_BIT2151,90119
#define GL_UNIFORM_BARRIER_BIT GL_UNIFORM_BARRIER_BIT2152,90173
#define GL_TEXTURE_FETCH_BARRIER_BIT GL_TEXTURE_FETCH_BARRIER_BIT2153,90227
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT GL_SHADER_IMAGE_ACCESS_BARRIER_BIT2154,90281
#define GL_COMMAND_BARRIER_BIT GL_COMMAND_BARRIER_BIT2155,90336
#define GL_PIXEL_BUFFER_BARRIER_BIT GL_PIXEL_BUFFER_BARRIER_BIT2156,90390
#define GL_TEXTURE_UPDATE_BARRIER_BIT GL_TEXTURE_UPDATE_BARRIER_BIT2157,90444
#define GL_BUFFER_UPDATE_BARRIER_BIT GL_BUFFER_UPDATE_BARRIER_BIT2158,90498
#define GL_FRAMEBUFFER_BARRIER_BIT GL_FRAMEBUFFER_BARRIER_BIT2159,90552
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT GL_TRANSFORM_FEEDBACK_BARRIER_BIT2160,90606
#define GL_ATOMIC_COUNTER_BARRIER_BIT GL_ATOMIC_COUNTER_BARRIER_BIT2161,90660
#define GL_ALL_BARRIER_BITS GL_ALL_BARRIER_BITS2162,90714
#define GL_MAX_IMAGE_UNITS GL_MAX_IMAGE_UNITS2163,90768
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS2164,90818
#define GL_IMAGE_BINDING_NAME GL_IMAGE_BINDING_NAME2165,90883
#define GL_IMAGE_BINDING_LEVEL GL_IMAGE_BINDING_LEVEL2166,90933
#define GL_IMAGE_BINDING_LAYERED GL_IMAGE_BINDING_LAYERED2167,90983
#define GL_IMAGE_BINDING_LAYER GL_IMAGE_BINDING_LAYER2168,91033
#define GL_IMAGE_BINDING_ACCESS GL_IMAGE_BINDING_ACCESS2169,91083
#define GL_IMAGE_1D GL_IMAGE_1D2170,91133
#define GL_IMAGE_2D GL_IMAGE_2D2171,91183
#define GL_IMAGE_3D GL_IMAGE_3D2172,91233
#define GL_IMAGE_2D_RECT GL_IMAGE_2D_RECT2173,91283
#define GL_IMAGE_CUBE GL_IMAGE_CUBE2174,91333
#define GL_IMAGE_BUFFER GL_IMAGE_BUFFER2175,91383
#define GL_IMAGE_1D_ARRAY GL_IMAGE_1D_ARRAY2176,91433
#define GL_IMAGE_2D_ARRAY GL_IMAGE_2D_ARRAY2177,91483
#define GL_IMAGE_CUBE_MAP_ARRAY GL_IMAGE_CUBE_MAP_ARRAY2178,91533
#define GL_IMAGE_2D_MULTISAMPLE GL_IMAGE_2D_MULTISAMPLE2179,91583
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY GL_IMAGE_2D_MULTISAMPLE_ARRAY2180,91633
#define GL_INT_IMAGE_1D GL_INT_IMAGE_1D2181,91683
#define GL_INT_IMAGE_2D GL_INT_IMAGE_2D2182,91733
#define GL_INT_IMAGE_3D GL_INT_IMAGE_3D2183,91783
#define GL_INT_IMAGE_2D_RECT GL_INT_IMAGE_2D_RECT2184,91833
#define GL_INT_IMAGE_CUBE GL_INT_IMAGE_CUBE2185,91883
#define GL_INT_IMAGE_BUFFER GL_INT_IMAGE_BUFFER2186,91933
#define GL_INT_IMAGE_1D_ARRAY GL_INT_IMAGE_1D_ARRAY2187,91983
#define GL_INT_IMAGE_2D_ARRAY GL_INT_IMAGE_2D_ARRAY2188,92033
#define GL_INT_IMAGE_CUBE_MAP_ARRAY GL_INT_IMAGE_CUBE_MAP_ARRAY2189,92083
#define GL_INT_IMAGE_2D_MULTISAMPLE GL_INT_IMAGE_2D_MULTISAMPLE2190,92133
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY2191,92183
#define GL_UNSIGNED_INT_IMAGE_1D GL_UNSIGNED_INT_IMAGE_1D2192,92233
#define GL_UNSIGNED_INT_IMAGE_2D GL_UNSIGNED_INT_IMAGE_2D2193,92283
#define GL_UNSIGNED_INT_IMAGE_3D GL_UNSIGNED_INT_IMAGE_3D2194,92333
#define GL_UNSIGNED_INT_IMAGE_2D_RECT GL_UNSIGNED_INT_IMAGE_2D_RECT2195,92383
#define GL_UNSIGNED_INT_IMAGE_CUBE GL_UNSIGNED_INT_IMAGE_CUBE2196,92433
#define GL_UNSIGNED_INT_IMAGE_BUFFER GL_UNSIGNED_INT_IMAGE_BUFFER2197,92483
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY GL_UNSIGNED_INT_IMAGE_1D_ARRAY2198,92533
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY GL_UNSIGNED_INT_IMAGE_2D_ARRAY2199,92583
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY2200,92633
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE2201,92686
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY2202,92739
#define GL_MAX_IMAGE_SAMPLES GL_MAX_IMAGE_SAMPLES2203,92798
#define GL_IMAGE_BINDING_FORMAT GL_IMAGE_BINDING_FORMAT2204,92848
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE GL_IMAGE_FORMAT_COMPATIBILITY_TYPE2205,92898
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE2206,92949
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS2207,93003
#define GL_MAX_VERTEX_IMAGE_UNIFORMS GL_MAX_VERTEX_IMAGE_UNIFORMS2208,93058
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS2209,93108
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS2210,93159
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS GL_MAX_GEOMETRY_IMAGE_UNIFORMS2211,93213
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS GL_MAX_FRAGMENT_IMAGE_UNIFORMS2212,93263
#define GL_MAX_COMBINED_IMAGE_UNIFORMS GL_MAX_COMBINED_IMAGE_UNIFORMS2213,93313
#define GL_TEXTURE_IMMUTABLE_FORMAT GL_TEXTURE_IMMUTABLE_FORMAT2220,93456
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR GL_COMPRESSED_RGBA_ASTC_4x4_KHR2224,93561
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR GL_COMPRESSED_RGBA_ASTC_5x4_KHR2225,93611
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR GL_COMPRESSED_RGBA_ASTC_5x5_KHR2226,93661
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR GL_COMPRESSED_RGBA_ASTC_6x5_KHR2227,93711
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR GL_COMPRESSED_RGBA_ASTC_6x6_KHR2228,93761
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR GL_COMPRESSED_RGBA_ASTC_8x5_KHR2229,93811
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR GL_COMPRESSED_RGBA_ASTC_8x6_KHR2230,93861
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR GL_COMPRESSED_RGBA_ASTC_8x8_KHR2231,93911
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR GL_COMPRESSED_RGBA_ASTC_10x5_KHR2232,93961
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR GL_COMPRESSED_RGBA_ASTC_10x6_KHR2233,94011
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR GL_COMPRESSED_RGBA_ASTC_10x8_KHR2234,94061
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR GL_COMPRESSED_RGBA_ASTC_10x10_KHR2235,94111
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR GL_COMPRESSED_RGBA_ASTC_12x10_KHR2236,94161
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR GL_COMPRESSED_RGBA_ASTC_12x12_KHR2237,94211
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR2238,94261
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR2239,94317
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR2240,94373
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR2241,94429
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR2242,94485
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR2243,94541
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR2244,94597
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR2245,94653
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR2246,94709
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR2247,94766
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR2248,94823
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR2249,94880
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR2250,94938
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR2251,94996
#define GL_DEBUG_OUTPUT_SYNCHRONOUS GL_DEBUG_OUTPUT_SYNCHRONOUS2255,95086
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH2256,95136
#define GL_DEBUG_CALLBACK_FUNCTION GL_DEBUG_CALLBACK_FUNCTION2257,95188
#define GL_DEBUG_CALLBACK_USER_PARAM GL_DEBUG_CALLBACK_USER_PARAM2258,95238
#define GL_DEBUG_SOURCE_API GL_DEBUG_SOURCE_API2259,95288
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM GL_DEBUG_SOURCE_WINDOW_SYSTEM2260,95338
#define GL_DEBUG_SOURCE_SHADER_COMPILER GL_DEBUG_SOURCE_SHADER_COMPILER2261,95388
#define GL_DEBUG_SOURCE_THIRD_PARTY GL_DEBUG_SOURCE_THIRD_PARTY2262,95438
#define GL_DEBUG_SOURCE_APPLICATION GL_DEBUG_SOURCE_APPLICATION2263,95488
#define GL_DEBUG_SOURCE_OTHER GL_DEBUG_SOURCE_OTHER2264,95538
#define GL_DEBUG_TYPE_ERROR GL_DEBUG_TYPE_ERROR2265,95588
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR2266,95638
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR2267,95688
#define GL_DEBUG_TYPE_PORTABILITY GL_DEBUG_TYPE_PORTABILITY2268,95738
#define GL_DEBUG_TYPE_PERFORMANCE GL_DEBUG_TYPE_PERFORMANCE2269,95788
#define GL_DEBUG_TYPE_OTHER GL_DEBUG_TYPE_OTHER2270,95838
#define GL_DEBUG_TYPE_MARKER GL_DEBUG_TYPE_MARKER2271,95888
#define GL_DEBUG_TYPE_PUSH_GROUP GL_DEBUG_TYPE_PUSH_GROUP2272,95938
#define GL_DEBUG_TYPE_POP_GROUP GL_DEBUG_TYPE_POP_GROUP2273,95988
#define GL_DEBUG_SEVERITY_NOTIFICATION GL_DEBUG_SEVERITY_NOTIFICATION2274,96038
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH GL_MAX_DEBUG_GROUP_STACK_DEPTH2275,96088
#define GL_DEBUG_GROUP_STACK_DEPTH GL_DEBUG_GROUP_STACK_DEPTH2276,96138
#define GL_BUFFER GL_BUFFER2277,96188
#define GL_SHADER GL_SHADER2278,96238
#define GL_PROGRAM GL_PROGRAM2279,96288
#define GL_QUERY GL_QUERY2280,96338
#define GL_PROGRAM_PIPELINE GL_PROGRAM_PIPELINE2281,96388
#define GL_SAMPLER GL_SAMPLER2282,96438
#define GL_DISPLAY_LIST GL_DISPLAY_LIST2283,96488
#define GL_MAX_LABEL_LENGTH GL_MAX_LABEL_LENGTH2285,96593
#define GL_MAX_DEBUG_MESSAGE_LENGTH GL_MAX_DEBUG_MESSAGE_LENGTH2286,96643
#define GL_MAX_DEBUG_LOGGED_MESSAGES GL_MAX_DEBUG_LOGGED_MESSAGES2287,96693
#define GL_DEBUG_LOGGED_MESSAGES GL_DEBUG_LOGGED_MESSAGES2288,96743
#define GL_DEBUG_SEVERITY_HIGH GL_DEBUG_SEVERITY_HIGH2289,96793
#define GL_DEBUG_SEVERITY_MEDIUM GL_DEBUG_SEVERITY_MEDIUM2290,96843
#define GL_DEBUG_SEVERITY_LOW GL_DEBUG_SEVERITY_LOW2291,96893
#define GL_DEBUG_OUTPUT GL_DEBUG_OUTPUT2292,96943
#define GL_CONTEXT_FLAG_DEBUG_BIT GL_CONTEXT_FLAG_DEBUG_BIT2293,96993
#define GL_COMPUTE_SHADER GL_COMPUTE_SHADER2305,97240
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS GL_MAX_COMPUTE_UNIFORM_BLOCKS2306,97290
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS2307,97340
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS GL_MAX_COMPUTE_IMAGE_UNIFORMS2308,97391
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE GL_MAX_COMPUTE_SHARED_MEMORY_SIZE2309,97441
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS GL_MAX_COMPUTE_UNIFORM_COMPONENTS2310,97491
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS2311,97541
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS GL_MAX_COMPUTE_ATOMIC_COUNTERS2312,97595
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS2313,97645
#define GL_MAX_COMPUTE_LOCAL_INVOCATIONS GL_MAX_COMPUTE_LOCAL_INVOCATIONS2314,97704
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT GL_MAX_COMPUTE_WORK_GROUP_COUNT2315,97754
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE GL_MAX_COMPUTE_WORK_GROUP_SIZE2316,97804
#define GL_COMPUTE_LOCAL_WORK_SIZE GL_COMPUTE_LOCAL_WORK_SIZE2317,97854
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER2318,97904
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER2319,97966
#define GL_DISPATCH_INDIRECT_BUFFER GL_DISPATCH_INDIRECT_BUFFER2320,98036
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING GL_DISPATCH_INDIRECT_BUFFER_BINDING2321,98086
#define GL_COMPUTE_SHADER_BIT GL_COMPUTE_SHADER_BIT2322,98138
#define GL_TEXTURE_VIEW_MIN_LEVEL GL_TEXTURE_VIEW_MIN_LEVEL2329,98268
#define GL_TEXTURE_VIEW_NUM_LEVELS GL_TEXTURE_VIEW_NUM_LEVELS2330,98318
#define GL_TEXTURE_VIEW_MIN_LAYER GL_TEXTURE_VIEW_MIN_LAYER2331,98368
#define GL_TEXTURE_VIEW_NUM_LAYERS GL_TEXTURE_VIEW_NUM_LAYERS2332,98418
#define GL_TEXTURE_IMMUTABLE_LEVELS GL_TEXTURE_IMMUTABLE_LEVELS2333,98468
#define GL_VERTEX_ATTRIB_BINDING GL_VERTEX_ATTRIB_BINDING2337,98566
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET GL_VERTEX_ATTRIB_RELATIVE_OFFSET2338,98616
#define GL_VERTEX_BINDING_DIVISOR GL_VERTEX_BINDING_DIVISOR2339,98666
#define GL_VERTEX_BINDING_OFFSET GL_VERTEX_BINDING_OFFSET2340,98716
#define GL_VERTEX_BINDING_STRIDE GL_VERTEX_BINDING_STRIDE2341,98766
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET2342,98816
#define GL_MAX_VERTEX_ATTRIB_BINDINGS GL_MAX_VERTEX_ATTRIB_BINDINGS2343,98869
#define GL_COMPRESSED_RGB8_ETC2 GL_COMPRESSED_RGB8_ETC22350,99010
#define GL_COMPRESSED_SRGB8_ETC2 GL_COMPRESSED_SRGB8_ETC22351,99060
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC22352,99110
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC22353,99170
#define GL_COMPRESSED_RGBA8_ETC2_EAC GL_COMPRESSED_RGBA8_ETC2_EAC2354,99231
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC2355,99281
#define GL_COMPRESSED_R11_EAC GL_COMPRESSED_R11_EAC2356,99333
#define GL_COMPRESSED_SIGNED_R11_EAC GL_COMPRESSED_SIGNED_R11_EAC2357,99383
#define GL_COMPRESSED_RG11_EAC GL_COMPRESSED_RG11_EAC2358,99433
#define GL_COMPRESSED_SIGNED_RG11_EAC GL_COMPRESSED_SIGNED_RG11_EAC2359,99483
#define GL_PRIMITIVE_RESTART_FIXED_INDEX GL_PRIMITIVE_RESTART_FIXED_INDEX2360,99533
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE GL_ANY_SAMPLES_PASSED_CONSERVATIVE2361,99583
#define GL_MAX_ELEMENT_INDEX GL_MAX_ELEMENT_INDEX2362,99634
#define GL_MAX_UNIFORM_LOCATIONS GL_MAX_UNIFORM_LOCATIONS2366,99736
#define GL_FRAMEBUFFER_DEFAULT_WIDTH GL_FRAMEBUFFER_DEFAULT_WIDTH2373,99889
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT GL_FRAMEBUFFER_DEFAULT_HEIGHT2374,99939
#define GL_FRAMEBUFFER_DEFAULT_LAYERS GL_FRAMEBUFFER_DEFAULT_LAYERS2375,99989
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES GL_FRAMEBUFFER_DEFAULT_SAMPLES2376,100039
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS2377,100089
#define GL_MAX_FRAMEBUFFER_WIDTH GL_MAX_FRAMEBUFFER_WIDTH2378,100151
#define GL_MAX_FRAMEBUFFER_HEIGHT GL_MAX_FRAMEBUFFER_HEIGHT2379,100201
#define GL_MAX_FRAMEBUFFER_LAYERS GL_MAX_FRAMEBUFFER_LAYERS2380,100251
#define GL_MAX_FRAMEBUFFER_SAMPLES GL_MAX_FRAMEBUFFER_SAMPLES2381,100301
#define GL_INTERNALFORMAT_SUPPORTED GL_INTERNALFORMAT_SUPPORTED2401,100937
#define GL_INTERNALFORMAT_PREFERRED GL_INTERNALFORMAT_PREFERRED2402,100987
#define GL_INTERNALFORMAT_RED_SIZE GL_INTERNALFORMAT_RED_SIZE2403,101037
#define GL_INTERNALFORMAT_GREEN_SIZE GL_INTERNALFORMAT_GREEN_SIZE2404,101087
#define GL_INTERNALFORMAT_BLUE_SIZE GL_INTERNALFORMAT_BLUE_SIZE2405,101137
#define GL_INTERNALFORMAT_ALPHA_SIZE GL_INTERNALFORMAT_ALPHA_SIZE2406,101187
#define GL_INTERNALFORMAT_DEPTH_SIZE GL_INTERNALFORMAT_DEPTH_SIZE2407,101237
#define GL_INTERNALFORMAT_STENCIL_SIZE GL_INTERNALFORMAT_STENCIL_SIZE2408,101287
#define GL_INTERNALFORMAT_SHARED_SIZE GL_INTERNALFORMAT_SHARED_SIZE2409,101337
#define GL_INTERNALFORMAT_RED_TYPE GL_INTERNALFORMAT_RED_TYPE2410,101387
#define GL_INTERNALFORMAT_GREEN_TYPE GL_INTERNALFORMAT_GREEN_TYPE2411,101437
#define GL_INTERNALFORMAT_BLUE_TYPE GL_INTERNALFORMAT_BLUE_TYPE2412,101487
#define GL_INTERNALFORMAT_ALPHA_TYPE GL_INTERNALFORMAT_ALPHA_TYPE2413,101537
#define GL_INTERNALFORMAT_DEPTH_TYPE GL_INTERNALFORMAT_DEPTH_TYPE2414,101587
#define GL_INTERNALFORMAT_STENCIL_TYPE GL_INTERNALFORMAT_STENCIL_TYPE2415,101637
#define GL_MAX_WIDTH GL_MAX_WIDTH2416,101687
#define GL_MAX_HEIGHT GL_MAX_HEIGHT2417,101737
#define GL_MAX_DEPTH GL_MAX_DEPTH2418,101787
#define GL_MAX_LAYERS GL_MAX_LAYERS2419,101837
#define GL_MAX_COMBINED_DIMENSIONS GL_MAX_COMBINED_DIMENSIONS2420,101887
#define GL_COLOR_COMPONENTS GL_COLOR_COMPONENTS2421,101937
#define GL_DEPTH_COMPONENTS GL_DEPTH_COMPONENTS2422,101987
#define GL_STENCIL_COMPONENTS GL_STENCIL_COMPONENTS2423,102037
#define GL_COLOR_RENDERABLE GL_COLOR_RENDERABLE2424,102087
#define GL_DEPTH_RENDERABLE GL_DEPTH_RENDERABLE2425,102137
#define GL_STENCIL_RENDERABLE GL_STENCIL_RENDERABLE2426,102187
#define GL_FRAMEBUFFER_RENDERABLE GL_FRAMEBUFFER_RENDERABLE2427,102237
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED GL_FRAMEBUFFER_RENDERABLE_LAYERED2428,102287
#define GL_FRAMEBUFFER_BLEND GL_FRAMEBUFFER_BLEND2429,102337
#define GL_READ_PIXELS GL_READ_PIXELS2430,102387
#define GL_READ_PIXELS_FORMAT GL_READ_PIXELS_FORMAT2431,102437
#define GL_READ_PIXELS_TYPE GL_READ_PIXELS_TYPE2432,102487
#define GL_TEXTURE_IMAGE_FORMAT GL_TEXTURE_IMAGE_FORMAT2433,102537
#define GL_TEXTURE_IMAGE_TYPE GL_TEXTURE_IMAGE_TYPE2434,102587
#define GL_GET_TEXTURE_IMAGE_FORMAT GL_GET_TEXTURE_IMAGE_FORMAT2435,102637
#define GL_GET_TEXTURE_IMAGE_TYPE GL_GET_TEXTURE_IMAGE_TYPE2436,102687
#define GL_MIPMAP GL_MIPMAP2437,102737
#define GL_MANUAL_GENERATE_MIPMAP GL_MANUAL_GENERATE_MIPMAP2438,102787
#define GL_AUTO_GENERATE_MIPMAP GL_AUTO_GENERATE_MIPMAP2439,102837
#define GL_COLOR_ENCODING GL_COLOR_ENCODING2440,102887
#define GL_SRGB_READ GL_SRGB_READ2441,102937
#define GL_SRGB_WRITE GL_SRGB_WRITE2442,102987
#define GL_SRGB_DECODE_ARB GL_SRGB_DECODE_ARB2443,103037
#define GL_FILTER GL_FILTER2444,103087
#define GL_VERTEX_TEXTURE GL_VERTEX_TEXTURE2445,103137
#define GL_TESS_CONTROL_TEXTURE GL_TESS_CONTROL_TEXTURE2446,103187
#define GL_TESS_EVALUATION_TEXTURE GL_TESS_EVALUATION_TEXTURE2447,103237
#define GL_GEOMETRY_TEXTURE GL_GEOMETRY_TEXTURE2448,103287
#define GL_FRAGMENT_TEXTURE GL_FRAGMENT_TEXTURE2449,103337
#define GL_COMPUTE_TEXTURE GL_COMPUTE_TEXTURE2450,103387
#define GL_TEXTURE_SHADOW GL_TEXTURE_SHADOW2451,103437
#define GL_TEXTURE_GATHER GL_TEXTURE_GATHER2452,103487
#define GL_TEXTURE_GATHER_SHADOW GL_TEXTURE_GATHER_SHADOW2453,103537
#define GL_SHADER_IMAGE_LOAD GL_SHADER_IMAGE_LOAD2454,103587
#define GL_SHADER_IMAGE_STORE GL_SHADER_IMAGE_STORE2455,103637
#define GL_SHADER_IMAGE_ATOMIC GL_SHADER_IMAGE_ATOMIC2456,103687
#define GL_IMAGE_TEXEL_SIZE GL_IMAGE_TEXEL_SIZE2457,103737
#define GL_IMAGE_COMPATIBILITY_CLASS GL_IMAGE_COMPATIBILITY_CLASS2458,103787
#define GL_IMAGE_PIXEL_FORMAT GL_IMAGE_PIXEL_FORMAT2459,103837
#define GL_IMAGE_PIXEL_TYPE GL_IMAGE_PIXEL_TYPE2460,103887
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST2461,103937
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST2462,103992
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE2463,104049
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE2464,104105
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH GL_TEXTURE_COMPRESSED_BLOCK_WIDTH2465,104163
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT2466,104213
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE GL_TEXTURE_COMPRESSED_BLOCK_SIZE2467,104264
#define GL_CLEAR_BUFFER GL_CLEAR_BUFFER2468,104314
#define GL_TEXTURE_VIEW GL_TEXTURE_VIEW2469,104364
#define GL_VIEW_COMPATIBILITY_CLASS GL_VIEW_COMPATIBILITY_CLASS2470,104414
#define GL_FULL_SUPPORT GL_FULL_SUPPORT2471,104464
#define GL_CAVEAT_SUPPORT GL_CAVEAT_SUPPORT2472,104514
#define GL_IMAGE_CLASS_4_X_32 GL_IMAGE_CLASS_4_X_322473,104564
#define GL_IMAGE_CLASS_2_X_32 GL_IMAGE_CLASS_2_X_322474,104614
#define GL_IMAGE_CLASS_1_X_32 GL_IMAGE_CLASS_1_X_322475,104664
#define GL_IMAGE_CLASS_4_X_16 GL_IMAGE_CLASS_4_X_162476,104714
#define GL_IMAGE_CLASS_2_X_16 GL_IMAGE_CLASS_2_X_162477,104764
#define GL_IMAGE_CLASS_1_X_16 GL_IMAGE_CLASS_1_X_162478,104814
#define GL_IMAGE_CLASS_4_X_8 GL_IMAGE_CLASS_4_X_82479,104864
#define GL_IMAGE_CLASS_2_X_8 GL_IMAGE_CLASS_2_X_82480,104914
#define GL_IMAGE_CLASS_1_X_8 GL_IMAGE_CLASS_1_X_82481,104964
#define GL_IMAGE_CLASS_11_11_10 GL_IMAGE_CLASS_11_11_102482,105014
#define GL_IMAGE_CLASS_10_10_10_2 GL_IMAGE_CLASS_10_10_10_22483,105064
#define GL_VIEW_CLASS_128_BITS GL_VIEW_CLASS_128_BITS2484,105114
#define GL_VIEW_CLASS_96_BITS GL_VIEW_CLASS_96_BITS2485,105164
#define GL_VIEW_CLASS_64_BITS GL_VIEW_CLASS_64_BITS2486,105214
#define GL_VIEW_CLASS_48_BITS GL_VIEW_CLASS_48_BITS2487,105264
#define GL_VIEW_CLASS_32_BITS GL_VIEW_CLASS_32_BITS2488,105314
#define GL_VIEW_CLASS_24_BITS GL_VIEW_CLASS_24_BITS2489,105364
#define GL_VIEW_CLASS_16_BITS GL_VIEW_CLASS_16_BITS2490,105414
#define GL_VIEW_CLASS_8_BITS GL_VIEW_CLASS_8_BITS2491,105464
#define GL_VIEW_CLASS_S3TC_DXT1_RGB GL_VIEW_CLASS_S3TC_DXT1_RGB2492,105514
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA GL_VIEW_CLASS_S3TC_DXT1_RGBA2493,105564
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA GL_VIEW_CLASS_S3TC_DXT3_RGBA2494,105614
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA GL_VIEW_CLASS_S3TC_DXT5_RGBA2495,105664
#define GL_VIEW_CLASS_RGTC1_RED GL_VIEW_CLASS_RGTC1_RED2496,105714
#define GL_VIEW_CLASS_RGTC2_RG GL_VIEW_CLASS_RGTC2_RG2497,105764
#define GL_VIEW_CLASS_BPTC_UNORM GL_VIEW_CLASS_BPTC_UNORM2498,105814
#define GL_VIEW_CLASS_BPTC_FLOAT GL_VIEW_CLASS_BPTC_FLOAT2499,105864
#define GL_UNIFORM GL_UNIFORM2509,106055
#define GL_UNIFORM_BLOCK GL_UNIFORM_BLOCK2510,106105
#define GL_PROGRAM_INPUT GL_PROGRAM_INPUT2511,106155
#define GL_PROGRAM_OUTPUT GL_PROGRAM_OUTPUT2512,106205
#define GL_BUFFER_VARIABLE GL_BUFFER_VARIABLE2513,106255
#define GL_SHADER_STORAGE_BLOCK GL_SHADER_STORAGE_BLOCK2514,106305
#define GL_VERTEX_SUBROUTINE GL_VERTEX_SUBROUTINE2516,106393
#define GL_TESS_CONTROL_SUBROUTINE GL_TESS_CONTROL_SUBROUTINE2517,106443
#define GL_TESS_EVALUATION_SUBROUTINE GL_TESS_EVALUATION_SUBROUTINE2518,106493
#define GL_GEOMETRY_SUBROUTINE GL_GEOMETRY_SUBROUTINE2519,106543
#define GL_FRAGMENT_SUBROUTINE GL_FRAGMENT_SUBROUTINE2520,106593
#define GL_COMPUTE_SUBROUTINE GL_COMPUTE_SUBROUTINE2521,106643
#define GL_VERTEX_SUBROUTINE_UNIFORM GL_VERTEX_SUBROUTINE_UNIFORM2522,106693
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM GL_TESS_CONTROL_SUBROUTINE_UNIFORM2523,106743
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM GL_TESS_EVALUATION_SUBROUTINE_UNIFORM2524,106794
#define GL_GEOMETRY_SUBROUTINE_UNIFORM GL_GEOMETRY_SUBROUTINE_UNIFORM2525,106848
#define GL_FRAGMENT_SUBROUTINE_UNIFORM GL_FRAGMENT_SUBROUTINE_UNIFORM2526,106898
#define GL_COMPUTE_SUBROUTINE_UNIFORM GL_COMPUTE_SUBROUTINE_UNIFORM2527,106948
#define GL_TRANSFORM_FEEDBACK_VARYING GL_TRANSFORM_FEEDBACK_VARYING2528,106998
#define GL_ACTIVE_RESOURCES GL_ACTIVE_RESOURCES2529,107048
#define GL_MAX_NAME_LENGTH GL_MAX_NAME_LENGTH2530,107098
#define GL_MAX_NUM_ACTIVE_VARIABLES GL_MAX_NUM_ACTIVE_VARIABLES2531,107148
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES GL_MAX_NUM_COMPATIBLE_SUBROUTINES2532,107198
#define GL_NAME_LENGTH GL_NAME_LENGTH2533,107248
#define GL_TYPE GL_TYPE2534,107298
#define GL_ARRAY_SIZE GL_ARRAY_SIZE2535,107348
#define GL_OFFSET GL_OFFSET2536,107398
#define GL_BLOCK_INDEX GL_BLOCK_INDEX2537,107448
#define GL_ARRAY_STRIDE GL_ARRAY_STRIDE2538,107498
#define GL_MATRIX_STRIDE GL_MATRIX_STRIDE2539,107548
#define GL_IS_ROW_MAJOR GL_IS_ROW_MAJOR2540,107598
#define GL_ATOMIC_COUNTER_BUFFER_INDEX GL_ATOMIC_COUNTER_BUFFER_INDEX2541,107648
#define GL_BUFFER_BINDING GL_BUFFER_BINDING2542,107698
#define GL_BUFFER_DATA_SIZE GL_BUFFER_DATA_SIZE2543,107748
#define GL_NUM_ACTIVE_VARIABLES GL_NUM_ACTIVE_VARIABLES2544,107798
#define GL_ACTIVE_VARIABLES GL_ACTIVE_VARIABLES2545,107848
#define GL_REFERENCED_BY_VERTEX_SHADER GL_REFERENCED_BY_VERTEX_SHADER2546,107898
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER GL_REFERENCED_BY_TESS_CONTROL_SHADER2547,107948
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER GL_REFERENCED_BY_TESS_EVALUATION_SHADER2548,108001
#define GL_REFERENCED_BY_GEOMETRY_SHADER GL_REFERENCED_BY_GEOMETRY_SHADER2549,108057
#define GL_REFERENCED_BY_FRAGMENT_SHADER GL_REFERENCED_BY_FRAGMENT_SHADER2550,108107
#define GL_REFERENCED_BY_COMPUTE_SHADER GL_REFERENCED_BY_COMPUTE_SHADER2551,108157
#define GL_TOP_LEVEL_ARRAY_SIZE GL_TOP_LEVEL_ARRAY_SIZE2552,108207
#define GL_TOP_LEVEL_ARRAY_STRIDE GL_TOP_LEVEL_ARRAY_STRIDE2553,108257
#define GL_LOCATION GL_LOCATION2554,108307
#define GL_LOCATION_INDEX GL_LOCATION_INDEX2555,108357
#define GL_IS_PER_PATCH GL_IS_PER_PATCH2556,108407
#define GL_SHADER_STORAGE_BUFFER GL_SHADER_STORAGE_BUFFER2568,108694
#define GL_SHADER_STORAGE_BUFFER_BINDING GL_SHADER_STORAGE_BUFFER_BINDING2569,108744
#define GL_SHADER_STORAGE_BUFFER_START GL_SHADER_STORAGE_BUFFER_START2570,108794
#define GL_SHADER_STORAGE_BUFFER_SIZE GL_SHADER_STORAGE_BUFFER_SIZE2571,108844
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS2572,108894
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS2573,108946
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS2574,109000
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS2575,109058
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS2576,109119
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS2577,109173
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS2578,109226
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS2579,109280
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE GL_MAX_SHADER_STORAGE_BLOCK_SIZE2580,109334
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT2581,109384
#define GL_SHADER_STORAGE_BARRIER_BIT GL_SHADER_STORAGE_BARRIER_BIT2582,109442
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES2583,109492
#define GL_DEPTH_STENCIL_TEXTURE_MODE GL_DEPTH_STENCIL_TEXTURE_MODE2588,109696
#define GL_TEXTURE_BUFFER_OFFSET GL_TEXTURE_BUFFER_OFFSET2592,109793
#define GL_TEXTURE_BUFFER_SIZE GL_TEXTURE_BUFFER_SIZE2593,109843
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT2594,109893
typedef char GLchar;GLchar2609,110208
typedef ptrdiff_t GLintptr;GLintptr2614,110321
typedef ptrdiff_t GLsizeiptr;GLsizeiptr2615,110350
typedef ptrdiff_t GLintptrARB;GLintptrARB2620,110485
typedef ptrdiff_t GLsizeiptrARB;GLsizeiptrARB2621,110517
typedef char GLcharARB;GLcharARB2626,110658
typedef unsigned int GLhandleARB;GLhandleARB2627,110683
typedef unsigned short GLhalfARB;GLhalfARB2632,110831
typedef unsigned short GLhalfNV;GLhalfNV2636,110902
#define GLEXT_64_TYPES_DEFINEDGLEXT_64_TYPES_DEFINED2641,111049
typedef long int int64_t;int64_t2650,111420
typedef unsigned long int uint64_t;uint64_t2651,111447
typedef long long int int64_t;int64_t2653,111491
typedef unsigned long long int uint64_t;uint64_t2654,111523
typedef long int int32_t;int32_t2662,111794
typedef long long int int64_t;int64_t2663,111821
typedef unsigned long long int uint64_t;uint64_t2664,111853
typedef __int32 int32_t;int32_t2668,111983
typedef __int64 int64_t;int64_t2669,112009
typedef unsigned __int64 uint64_t;uint64_t2670,112035
typedef int64_t GLint64EXT;GLint64EXT2678,112186
typedef uint64_t GLuint64EXT;GLuint64EXT2679,112215
typedef int64_t GLint64;GLint642683,112277
typedef uint64_t GLuint64;GLuint642684,112303
typedef struct __GLsync *GLsync;GLsync2685,112331
typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsiGLDEBUGPROCARB2695,112579
typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei lengthGLDEBUGPROCAMD2699,112768
typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizeiGLDEBUGPROC2703,112940
typedef GLintptr GLvdpauSurfaceNV;GLvdpauSurfaceNV2707,113126
#define GL_VERSION_1_0 GL_VERSION_1_02711,113196
typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);PFNGLCULLFACEPROC2762,116718
typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);PFNGLFRONTFACEPROC2763,116777
typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);PFNGLHINTPROC2764,116837
typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);PFNGLLINEWIDTHPROC2765,116907
typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);PFNGLPOINTSIZEPROC2766,116969
typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);PFNGLPOLYGONMODEPROC2767,117030
typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);PFNGLSCISSORPROC2768,117105
typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);PFNGLTEXPARAMETERFPROC2769,117199
typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *paPFNGLTEXPARAMETERFVPROC2770,117294
typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);PFNGLTEXPARAMETERIPROC2771,117398
typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *paraPFNGLTEXPARAMETERIVPROC2772,117491
typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, PFNGLTEXIMAGE1DPROC2773,117593
typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, PFNGLTEXIMAGE2DPROC2774,117770
typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum mode);PFNGLDRAWBUFFERPROC2775,117963
typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);PFNGLCLEARPROC2776,118024
typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat PFNGLCLEARCOLORPROC2777,118084
typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);PFNGLCLEARSTENCILPROC2778,118189
typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);PFNGLCLEARDEPTHPROC2779,118248
typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);PFNGLSTENCILMASKPROC2780,118312
typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLbPFNGLCOLORMASKPROC2781,118374
typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);PFNGLDEPTHMASKPROC2782,118486
typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);PFNGLDISABLEPROC2783,118549
typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);PFNGLENABLEPROC2784,118606
typedef void (APIENTRYP PFNGLFINISHPROC) (void);PFNGLFINISHPROC2785,118662
typedef void (APIENTRYP PFNGLFLUSHPROC) (void);PFNGLFLUSHPROC2786,118712
typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);PFNGLBLENDFUNCPROC2787,118761
typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);PFNGLLOGICOPPROC2788,118840
typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);PFNGLSTENCILFUNCPROC2789,118900
typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);PFNGLSTENCILOPPROC2790,118986
typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);PFNGLDEPTHFUNCPROC2791,119074
typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);PFNGLPIXELSTOREFPROC2792,119134
typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);PFNGLPIXELSTOREIPROC2793,119212
typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum mode);PFNGLREADBUFFERPROC2794,119288
typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GPFNGLREADPIXELSPROC2795,119349
typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *params);PFNGLGETBOOLEANVPROC2796,119490
typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *params);PFNGLGETDOUBLEVPROC2797,119572
typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);PFNGLGETERRORPROC2798,119652
typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *params);PFNGLGETFLOATVPROC2799,119706
typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *params);PFNGLGETINTEGERVPROC2800,119784
typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);PFNGLGETSTRINGPROC2801,119862
typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenumPFNGLGETTEXIMAGEPROC2802,119933
typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *paramPFNGLGETTEXPARAMETERFVPROC2803,120054
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params)PFNGLGETTEXPARAMETERIVPROC2804,120155
typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pnaPFNGLGETTEXLEVELPARAMETERFVPROC2805,120254
typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pnaPFNGLGETTEXLEVELPARAMETERIVPROC2806,120373
typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);PFNGLISENABLEDPROC2807,120490
typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble near, GLdouble far);PFNGLDEPTHRANGEPROC2808,120554
typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);PFNGLVIEWPORTPROC2809,120631
#define GL_VERSION_1_1 GL_VERSION_1_12813,120760
typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);PFNGLDRAWARRAYSPROC2830,122318
typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const GPFNGLDRAWELEMENTSPROC2831,122407
typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, GLvoid* *params);PFNGLGETPOINTERVPROC2832,122521
typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);PFNGLPOLYGONOFFSETPROC2833,122601
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalforPFNGLCOPYTEXIMAGE1DPROC2834,122683
typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalforPFNGLCOPYTEXIMAGE2DPROC2835,122833
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, PFNGLCOPYTEXSUBIMAGE1DPROC2836,122999
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, PFNGLCOPYTEXSUBIMAGE2DPROC2837,123130
typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsiPFNGLTEXSUBIMAGE1DPROC2838,123292
typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLinPFNGLTEXSUBIMAGE2DPROC2839,123451
typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);PFNGLBINDTEXTUREPROC2840,123641
typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);PFNGLDELETETEXTURESPROC2841,123721
typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);PFNGLGENTEXTURESPROC2842,123808
typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);PFNGLISTEXTUREPROC2843,123886
#define GL_VERSION_1_2 GL_VERSION_1_22847,123988
typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat PFNGLBLENDCOLORPROC2856,124925
typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);PFNGLBLENDEQUATIONPROC2857,125030
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsiPFNGLDRAWRANGEELEMENTSPROC2858,125094
typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, PFNGLTEXIMAGE3DPROC2859,125239
typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLinPFNGLTEXSUBIMAGE3DPROC2860,125447
typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, PFNGLCOPYTEXSUBIMAGE3DPROC2861,125667
#define GL_VERSION_1_3 GL_VERSION_1_32865,125878
typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);PFNGLACTIVETEXTUREPROC2877,127301
typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);PFNGLSAMPLECOVERAGEPROC2878,127368
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum interPFNGLCOMPRESSEDTEXIMAGE3DPROC2879,127453
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum interPFNGLCOMPRESSEDTEXIMAGE2DPROC2880,127661
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum interPFNGLCOMPRESSEDTEXIMAGE1DPROC2881,127854
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xofPFNGLCOMPRESSEDTEXSUBIMAGE3DPROC2882,128031
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xofPFNGLCOMPRESSEDTEXSUBIMAGE2DPROC2883,128265
typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xofPFNGLCOMPRESSEDTEXSUBIMAGE1DPROC2884,128469
typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *imgPFNGLGETCOMPRESSEDTEXIMAGEPROC2885,128642
#define GL_VERSION_1_4 GL_VERSION_1_42889,128776
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenuPFNGLBLENDFUNCSEPARATEPROC2899,129538
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizePFNGLMULTIDRAWARRAYSPROC2900,129673
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum tPFNGLMULTIDRAWELEMENTSPROC2901,129800
typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);PFNGLPOINTPARAMETERFPROC2902,129952
typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);PFNGLPOINTPARAMETERFVPROC2903,130034
typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);PFNGLPOINTPARAMETERIPROC2904,130125
typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);PFNGLPOINTPARAMETERIVPROC2905,130205
#define GL_VERSION_1_5 GL_VERSION_1_52909,130328
typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);PFNGLGENQUERIESPROC2931,131829
typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);PFNGLDELETEQUERIESPROC2932,131901
typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);PFNGLISQUERYPROC2933,131982
typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);PFNGLBEGINQUERYPROC2934,132043
typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);PFNGLENDQUERYPROC2935,132117
typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);PFNGLGETQUERYIVPROC2936,132178
typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);PFNGLGETQUERYOBJECTIVPROC2937,132270
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);PFNGLGETQUERYOBJECTUIVPROC2938,132364
typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);PFNGLBINDBUFFERPROC2939,132460
typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);PFNGLDELETEBUFFERSPROC2940,132538
typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);PFNGLGENBUFFERSPROC2941,132623
typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);PFNGLISBUFFERPROC2942,132699
typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *dataPFNGLBUFFERDATAPROC2943,132765
typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr sizePFNGLBUFFERSUBDATAPROC2944,132879
typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr sPFNGLGETBUFFERSUBDATAPROC2945,132999
typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);PFNGLMAPBUFFERPROC2946,133116
typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);PFNGLUNMAPBUFFERPROC2947,133196
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *paraPFNGLGETBUFFERPARAMETERIVPROC2948,133265
typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *paramPFNGLGETBUFFERPOINTERVPROC2949,133367
#define GL_VERSION_2_0 GL_VERSION_2_02953,133502
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);PFNGLBLENDEQUATIONSEPARATEPROC3049,141199
typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);PFNGLDRAWBUFFERSPROC3050,141292
typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GPFNGLSTENCILOPSEPARATEPROC3051,141372
typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuiPFNGLSTENCILFUNCSEPARATEPROC3052,141484
typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);PFNGLSTENCILMASKSEPARATEPROC3053,141591
typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);PFNGLATTACHSHADERPROC3054,141674
typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLcharPFNGLBINDATTRIBLOCATIONPROC3055,141755
typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);PFNGLCOMPILESHADERPROC3056,141861
typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);PFNGLCREATEPROGRAMPROC3057,141927
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);PFNGLCREATESHADERPROC3058,141986
typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);PFNGLDELETEPROGRAMPROC3059,142051
typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);PFNGLDELETESHADERPROC3060,142118
typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);PFNGLDETACHSHADERPROC3061,142183
typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);PFNGLDISABLEVERTEXATTRIBARRAYPROC3062,142264
typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);PFNGLENABLEVERTEXATTRIBARRAYPROC3063,142340
typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSizePFNGLGETACTIVEATTRIBPROC3064,142415
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSizPFNGLGETACTIVEUNIFORMPROC3065,142573
typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei PFNGLGETATTACHEDSHADERSPROC3066,142732
typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);PFNGLGETATTRIBLOCATIONPROC3067,142851
typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);PFNGLGETPROGRAMIVPROC3068,142943
typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *lPFNGLGETPROGRAMINFOLOGPROC3069,143038
typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);PFNGLGETSHADERIVPROC3070,143160
typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *lenPFNGLGETSHADERINFOLOGPROC3071,143253
typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *lengPFNGLGETSHADERSOURCEPROC3072,143373
typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);PFNGLGETUNIFORMLOCATIONPROC3073,143491
typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params)PFNGLGETUNIFORMFVPROC3074,143584
typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);PFNGLGETUNIFORMIVPROC3075,143683
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *paramPFNGLGETVERTEXATTRIBDVPROC3076,143780
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *paramsPFNGLGETVERTEXATTRIBFVPROC3077,143881
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);PFNGLGETVERTEXATTRIBIVPROC3078,143981
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *PFNGLGETVERTEXATTRIBPOINTERVPROC3079,144079
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);PFNGLISPROGRAMPROC3080,144186
typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);PFNGLISSHADERPROC3081,144254
typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);PFNGLLINKPROGRAMPROC3082,144320
typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* consPFNGLSHADERSOURCEPROC3083,144385
typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);PFNGLUSEPROGRAMPROC3084,144515
typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);PFNGLUNIFORM1FPROC3085,144579
typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);PFNGLUNIFORM2FPROC3086,144654
typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)PFNGLUNIFORM3FPROC3087,144741
typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2,PFNGLUNIFORM4FPROC3088,144840
typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);PFNGLUNIFORM1IPROC3089,144951
typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);PFNGLUNIFORM2IPROC3090,145024
typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);PFNGLUNIFORM3IPROC3091,145107
typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLintPFNGLUNIFORM4IPROC3092,145200
typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *valuPFNGLUNIFORM1FVPROC3093,145303
typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *valuPFNGLUNIFORM2FVPROC3094,145404
typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *valuPFNGLUNIFORM3FVPROC3095,145505
typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *valuPFNGLUNIFORM4FVPROC3096,145606
typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value)PFNGLUNIFORM1IVPROC3097,145707
typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value)PFNGLUNIFORM2IVPROC3098,145806
typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value)PFNGLUNIFORM3IVPROC3099,145905
typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value)PFNGLUNIFORM4IVPROC3100,146004
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean traPFNGLUNIFORMMATRIX2FVPROC3101,146103
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean traPFNGLUNIFORMMATRIX3FVPROC3102,146231
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean traPFNGLUNIFORMMATRIX4FVPROC3103,146359
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);PFNGLVALIDATEPROGRAMPROC3104,146487
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);PFNGLVERTEXATTRIB1DPROC3105,146556
typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIB1DVPROC3106,146634
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);PFNGLVERTEXATTRIB1FPROC3107,146720
typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);PFNGLVERTEXATTRIB1FVPROC3108,146797
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);PFNGLVERTEXATTRIB1SPROC3109,146882
typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);PFNGLVERTEXATTRIB1SVPROC3110,146959
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);PFNGLVERTEXATTRIB2DPROC3111,147044
typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIB2DVPROC3112,147134
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);PFNGLVERTEXATTRIB2FPROC3113,147220
typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);PFNGLVERTEXATTRIB2FVPROC3114,147308
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);PFNGLVERTEXATTRIB2SPROC3115,147393
typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);PFNGLVERTEXATTRIB2SVPROC3116,147481
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoublePFNGLVERTEXATTRIB3DPROC3117,147566
typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIB3DVPROC3118,147668
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z)PFNGLVERTEXATTRIB3FPROC3119,147754
typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);PFNGLVERTEXATTRIB3FVPROC3120,147853
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z)PFNGLVERTEXATTRIB3SPROC3121,147938
typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);PFNGLVERTEXATTRIB3SVPROC3122,148037
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);PFNGLVERTEXATTRIB4NBVPROC3123,148122
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);PFNGLVERTEXATTRIB4NIVPROC3124,148207
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);PFNGLVERTEXATTRIB4NSVPROC3125,148291
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte PFNGLVERTEXATTRIB4NUBPROC3126,148377
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);PFNGLVERTEXATTRIB4NUBVPROC3127,148489
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);PFNGLVERTEXATTRIB4NUIVPROC3128,148576
typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);PFNGLVERTEXATTRIB4NUSVPROC3129,148662
typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);PFNGLVERTEXATTRIB4BVPROC3130,148750
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoublePFNGLVERTEXATTRIB4DPROC3131,148834
typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIB4DVPROC3132,148948
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z,PFNGLVERTEXATTRIB4FPROC3133,149034
typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);PFNGLVERTEXATTRIB4FVPROC3134,149144
typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);PFNGLVERTEXATTRIB4IVPROC3135,149229
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z,PFNGLVERTEXATTRIB4SPROC3136,149312
typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);PFNGLVERTEXATTRIB4SVPROC3137,149422
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);PFNGLVERTEXATTRIB4UBVPROC3138,149507
typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);PFNGLVERTEXATTRIB4UIVPROC3139,149593
typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);PFNGLVERTEXATTRIB4USVPROC3140,149678
typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLPFNGLVERTEXATTRIBPOINTERPROC3141,149765
#define GL_VERSION_2_1 GL_VERSION_2_13145,149956
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX2X3FVPROC3154,150754
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX3X2FVPROC3155,150884
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX2X4FVPROC3156,151014
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX4X2FVPROC3157,151144
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX3X4FVPROC3158,151274
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX4X3FVPROC3159,151404
#define GL_VERSION_3_0 GL_VERSION_3_03163,151568
typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean PFNGLCOLORMASKIPROC3228,156655
typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);PFNGLGETBOOLEANI_VPROC3229,156769
typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);PFNGLGETINTEGERI_VPROC3230,156866
typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);PFNGLENABLEIPROC3231,156959
typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);PFNGLDISABLEIPROC3232,157033
typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);PFNGLISENABLEDIPROC3233,157108
typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);PFNGLBEGINTRANSFORMFEEDBACKPROC3234,157190
typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);PFNGLENDTRANSFORMFEEDBACKPROC3235,157272
typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GPFNGLBINDBUFFERRANGEPROC3236,157336
typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);PFNGLBINDBUFFERBASEPROC3237,157467
typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, consPFNGLTRANSFORMFEEDBACKVARYINGSPROC3238,157563
typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsPFNGLGETTRANSFORMFEEDBACKVARYINGPROC3239,157707
typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);PFNGLCLAMPCOLORPROC3240,157879
typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);PFNGLBEGINCONDITIONALRENDERPROC3241,157956
typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);PFNGLENDCONDITIONALRENDERPROC3242,158040
typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GPFNGLVERTEXATTRIBIPOINTERPROC3243,158104
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params)PFNGLGETVERTEXATTRIBIIVPROC3244,158240
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *paramPFNGLGETVERTEXATTRIBIUIVPROC3245,158339
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);PFNGLVERTEXATTRIBI1IPROC3246,158440
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);PFNGLVERTEXATTRIBI2IPROC3247,158516
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);PFNGLVERTEXATTRIBI3IPROC3248,158601
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLinPFNGLVERTEXATTRIBI4IPROC3249,158695
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);PFNGLVERTEXATTRIBI1UIPROC3250,158798
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);PFNGLVERTEXATTRIBI2UIPROC3251,158876
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);PFNGLVERTEXATTRIBI3UIPROC3252,158964
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, PFNGLVERTEXATTRIBI4UIPROC3253,159062
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);PFNGLVERTEXATTRIBI1IVPROC3254,159170
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);PFNGLVERTEXATTRIBI2IVPROC3255,159254
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);PFNGLVERTEXATTRIBI3IVPROC3256,159338
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);PFNGLVERTEXATTRIBI4IVPROC3257,159422
typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);PFNGLVERTEXATTRIBI1UIVPROC3258,159506
typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);PFNGLVERTEXATTRIBI2UIVPROC3259,159592
typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);PFNGLVERTEXATTRIBI3UIVPROC3260,159678
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);PFNGLVERTEXATTRIBI4UIVPROC3261,159764
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);PFNGLVERTEXATTRIBI4BVPROC3262,159850
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);PFNGLVERTEXATTRIBI4SVPROC3263,159935
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);PFNGLVERTEXATTRIBI4UBVPROC3264,160021
typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);PFNGLVERTEXATTRIBI4USVPROC3265,160108
typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params)PFNGLGETUNIFORMUIVPROC3266,160196
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchPFNGLBINDFRAGDATALOCATIONPROC3267,160295
typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);PFNGLGETFRAGDATALOCATIONPROC3268,160403
typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);PFNGLUNIFORM1UIPROC3269,160497
typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);PFNGLUNIFORM2UIPROC3270,160572
typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);PFNGLUNIFORM3UIPROC3271,160658
typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GPFNGLUNIFORM4UIPROC3272,160755
typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *valuPFNGLUNIFORM1UIVPROC3273,160863
typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *valuPFNGLUNIFORM2UIVPROC3274,160964
typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *valuPFNGLUNIFORM3UIVPROC3275,161065
typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *valuPFNGLUNIFORM4UIVPROC3276,161166
typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *parPFNGLTEXPARAMETERIIVPROC3277,161267
typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *pPFNGLTEXPARAMETERIUIVPROC3278,161370
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *paramsPFNGLGETTEXPARAMETERIIVPROC3279,161475
typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *paraPFNGLGETTEXPARAMETERIUIVPROC3280,161575
typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *vPFNGLCLEARBUFFERIVPROC3281,161677
typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint PFNGLCLEARBUFFERUIVPROC3282,161781
typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat PFNGLCLEARBUFFERFVPROC3283,161887
typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth,PFNGLCLEARBUFFERFIPROC3284,161993
typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);PFNGLGETSTRINGIPROC3285,162107
#define GL_VERSION_3_1 GL_VERSION_3_13289,162227
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, PFNGLDRAWARRAYSINSTANCEDPROC3299,162831
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum typePFNGLDRAWELEMENTSINSTANCEDPROC3300,162952
typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint bufferPFNGLTEXBUFFERPROC3301,163098
typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);PFNGLPRIMITIVERESTARTINDEXPROC3302,163198
#define GL_VERSION_3_2 GL_VERSION_3_23306,163305
typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);PFNGLGETINTEGER64I_VPROC3317,163859
typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *PFNGLGETBUFFERPARAMETERI64VPROC3318,163956
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint tPFNGLFRAMEBUFFERTEXTUREPROC3319,164062
#define GL_VERSION_3_3 GL_VERSION_3_33323,164215
typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);PFNGLVERTEXATTRIBDIVISORPROC3337,164806
#define GL_VERSION_4_0 GL_VERSION_4_03341,164927
typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);PFNGLMINSAMPLESHADINGPROC3361,165906
typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);PFNGLBLENDEQUATIONIPROC3362,165975
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modPFNGLBLENDEQUATIONSEPARATEIPROC3363,166052
typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);PFNGLBLENDFUNCIPROC3364,166158
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, PFNGLBLENDFUNCSEPARATEIPROC3365,166242
#define GL_VERSION_4_1 GL_VERSION_4_13369,166408
#define GL_VERSION_4_2 GL_VERSION_4_23380,166726
#define GL_VERSION_4_3 GL_VERSION_4_33396,167308
#define GL_ARB_depth_buffer_float GL_ARB_depth_buffer_float3423,168378
#define GL_ARB_framebuffer_object GL_ARB_framebuffer_object3427,168460
typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);PFNGLISRENDERBUFFERPROC3450,170588
typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);PFNGLBINDRENDERBUFFERPROC3451,170666
typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);PFNGLDELETERENDERBUFFERSPROC3452,170756
typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);PFNGLGENRENDERBUFFERSPROC3453,170853
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsPFNGLRENDERBUFFERSTORAGEPROC3454,170941
typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLintPFNGLGETRENDERBUFFERPARAMETERIVPROC3455,171067
typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);PFNGLISFRAMEBUFFERPROC3456,171175
typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);PFNGLBINDFRAMEBUFFERPROC3457,171251
typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);PFNGLDELETEFRAMEBUFFERSPROC3458,171339
typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);PFNGLGENFRAMEBUFFERSPROC3459,171434
typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);PFNGLCHECKFRAMEBUFFERSTATUSPROC3460,171520
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenumPFNGLFRAMEBUFFERTEXTURE1DPROC3461,171597
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenumPFNGLFRAMEBUFFERTEXTURE2DPROC3462,171736
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenumPFNGLFRAMEBUFFERTEXTURE3DPROC3463,171875
typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLePFNGLFRAMEBUFFERRENDERBUFFERPROC3464,172029
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attPFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC3465,172172
typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);PFNGLGENERATEMIPMAPPROC3466,172308
typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint PFNGLBLITFRAMEBUFFERPROC3467,172375
typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samplesPFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC3468,172564
typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuPFNGLFRAMEBUFFERTEXTURELAYERPROC3469,172718
#define GL_ARB_framebuffer_sRGB GL_ARB_framebuffer_sRGB3473,172898
#define GL_ARB_half_float_vertex GL_ARB_half_float_vertex3477,172977
#define GL_ARB_map_buffer_range GL_ARB_map_buffer_range3481,173056
typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr PFNGLMAPBUFFERRANGEPROC3486,173367
typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizePFNGLFLUSHMAPPEDBUFFERRANGEPROC3487,173492
#define GL_ARB_texture_compression_rgtc GL_ARB_texture_compression_rgtc3491,173654
#define GL_ARB_texture_rg GL_ARB_texture_rg3495,173734
#define GL_ARB_vertex_array_object GL_ARB_vertex_array_object3499,173809
typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);PFNGLBINDVERTEXARRAYPROC3506,174169
typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);PFNGLDELETEVERTEXARRAYSPROC3507,174236
typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);PFNGLGENVERTEXARRAYSPROC3508,174325
typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);PFNGLISVERTEXARRAYPROC3509,174405
#define GL_ARB_uniform_buffer_object GL_ARB_uniform_buffer_object3513,174523
typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, constPFNGLGETUNIFORMINDICESPROC3523,175531
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, conPFNGLGETACTIVEUNIFORMSIVPROC3524,175683
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsPFNGLGETACTIVEUNIFORMNAMEPROC3525,175837
typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBPFNGLGETUNIFORMBLOCKINDEXPROC3526,175987
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockInPFNGLGETACTIVEUNIFORMBLOCKIVPROC3527,176095
typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockPFNGLGETACTIVEUNIFORMBLOCKNAMEPROC3528,176227
typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex,PFNGLUNIFORMBLOCKBINDINGPROC3529,176392
#define GL_ARB_copy_buffer GL_ARB_copy_buffer3533,176557
typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLinPFNGLCOPYBUFFERSUBDATAPROC3537,176793
#define GL_ARB_depth_clamp GL_ARB_depth_clamp3541,176985
#define GL_ARB_draw_elements_base_vertex GL_ARB_draw_elements_base_vertex3545,177067
typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum typPFNGLDRAWELEMENTSBASEVERTEXPROC3552,177803
typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuintPFNGLDRAWRANGEELEMENTSBASEVERTEXPROC3553,177945
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC3554,178118
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *countPFNGLMULTIDRAWELEMENTSBASEVERTEXPROC3555,178292
#define GL_ARB_fragment_coord_conventions GL_ARB_fragment_coord_conventions3559,178532
#define GL_ARB_provoking_vertex GL_ARB_provoking_vertex3563,178620
typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);PFNGLPROVOKINGVERTEXPROC3567,178773
#define GL_ARB_seamless_cube_map GL_ARB_seamless_cube_map3571,178883
#define GL_ARB_sync GL_ARB_sync3575,178950
typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);PFNGLFENCESYNCPROC3585,179564
typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);PFNGLISSYNCPROC3586,179649
typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);PFNGLDELETESYNCPROC3587,179711
typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timePFNGLCLIENTWAITSYNCPROC3588,179772
typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);PFNGLWAITSYNCPROC3589,179875
typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *params);PFNGLGETINTEGER64VPROC3590,179970
typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizeiPFNGLGETSYNCIVPROC3591,180052
#define GL_ARB_texture_multisample GL_ARB_texture_multisample3595,180221
typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint iPFNGLTEXIMAGE2DMULTISAMPLEPROC3602,180818
typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint iPFNGLTEXIMAGE3DMULTISAMPLEPROC3603,180994
typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);PFNGLGETMULTISAMPLEFVPROC3604,181185
typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);PFNGLSAMPLEMASKIPROC3605,181281
#define GL_ARB_vertex_array_bgra GL_ARB_vertex_array_bgra3609,181405
#define GL_ARB_draw_buffers_blend GL_ARB_draw_buffers_blend3613,181486
typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);PFNGLBLENDEQUATIONIARBPROC3620,181950
typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum PFNGLBLENDEQUATIONSEPARATEIARBPROC3621,182030
typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);PFNGLBLENDFUNCIARBPROC3622,182139
typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGPFNGLBLENDFUNCSEPARATEIARBPROC3623,182226
#define GL_ARB_sample_shading GL_ARB_sample_shading3627,182402
typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);PFNGLMINSAMPLESHADINGARBPROC3631,182559
#define GL_ARB_texture_cube_map_array GL_ARB_texture_cube_map_array3635,182680
#define GL_ARB_texture_gather GL_ARB_texture_gather3639,182762
#define GL_ARB_texture_query_lod GL_ARB_texture_query_lod3643,182839
#define GL_ARB_shading_language_include GL_ARB_shading_language_include3647,182926
typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *namePFNGLNAMEDSTRINGARBPROC3656,183682
typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);PFNGLDELETENAMEDSTRINGARBPROC3657,183821
typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GPFNGLCOMPILESHADERINCLUDEARBPROC3658,183914
typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);PFNGLISNAMEDSTRINGARBPROC3659,184047
typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei PFNGLGETNAMEDSTRINGARBPROC3660,184141
typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenumPFNGLGETNAMEDSTRINGIVARBPROC3661,184282
#define GL_ARB_texture_compression_bptc GL_ARB_texture_compression_bptc3665,184454
#define GL_ARB_blend_func_extended GL_ARB_blend_func_extended3669,184543
typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumbePFNGLBINDFRAGDATALOCATIONINDEXEDPROC3674,184847
typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);PFNGLGETFRAGDATAINDEXPROC3675,184982
#define GL_ARB_explicit_attrib_location GL_ARB_explicit_attrib_location3679,185124
#define GL_ARB_occlusion_query2 GL_ARB_occlusion_query23683,185210
#define GL_ARB_sampler_objects GL_ARB_sampler_objects3687,185287
typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);PFNGLGENSAMPLERSPROC3704,186586
typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);PFNGLDELETESAMPLERSPROC3705,186668
typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);PFNGLISSAMPLERPROC3706,186759
typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);PFNGLBINDSAMPLERPROC3707,186827
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);PFNGLSAMPLERPARAMETERIPROC3708,186905
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint PFNGLSAMPLERPARAMETERIVPROC3709,187003
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat paramPFNGLSAMPLERPARAMETERFPROC3710,187109
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloaPFNGLSAMPLERPARAMETERFVPROC3711,187209
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLintPFNGLSAMPLERPARAMETERIIVPROC3712,187317
typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuiPFNGLSAMPLERPARAMETERIUIVPROC3713,187424
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *paPFNGLGETSAMPLERPARAMETERIVPROC3714,187533
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *pPFNGLGETSAMPLERPARAMETERIIVPROC3715,187637
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *PFNGLGETSAMPLERPARAMETERFVPROC3716,187742
typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint PFNGLGETSAMPLERPARAMETERIUIVPROC3717,187848
#define GL_ARB_shader_bit_encoding GL_ARB_shader_bit_encoding3721,188001
#define GL_ARB_texture_rgb10_a2ui GL_ARB_texture_rgb10_a2ui3725,188084
#define GL_ARB_texture_swizzle GL_ARB_texture_swizzle3729,188163
#define GL_ARB_timer_query GL_ARB_timer_query3733,188235
typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);PFNGLQUERYCOUNTERPROC3739,188567
typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);PFNGLGETQUERYOBJECTI64VPROC3740,188643
typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *paramsPFNGLGETQUERYOBJECTUI64VPROC3741,188741
#define GL_ARB_vertex_type_2_10_10_10_rev GL_ARB_vertex_type_2_10_10_10_rev3745,188894
typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);PFNGLVERTEXP2UIPROC3786,192115
typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);PFNGLVERTEXP2UIVPROC3787,192190
typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);PFNGLVERTEXP3UIPROC3788,192273
typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);PFNGLVERTEXP3UIVPROC3789,192348
typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);PFNGLVERTEXP4UIPROC3790,192431
typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);PFNGLVERTEXP4UIVPROC3791,192506
typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);PFNGLTEXCOORDP1UIPROC3792,192589
typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);PFNGLTEXCOORDP1UIVPROC3793,192667
typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);PFNGLTEXCOORDP2UIPROC3794,192753
typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);PFNGLTEXCOORDP2UIVPROC3795,192831
typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);PFNGLTEXCOORDP3UIPROC3796,192917
typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);PFNGLTEXCOORDP3UIVPROC3797,192995
typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);PFNGLTEXCOORDP4UIPROC3798,193081
typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);PFNGLTEXCOORDP4UIVPROC3799,193159
typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords)PFNGLMULTITEXCOORDP1UIPROC3800,193245
typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint PFNGLMULTITEXCOORDP1UIVPROC3801,193344
typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords)PFNGLMULTITEXCOORDP2UIPROC3802,193451
typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint PFNGLMULTITEXCOORDP2UIVPROC3803,193550
typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords)PFNGLMULTITEXCOORDP3UIPROC3804,193657
typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint PFNGLMULTITEXCOORDP3UIVPROC3805,193756
typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords)PFNGLMULTITEXCOORDP4UIPROC3806,193863
typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint PFNGLMULTITEXCOORDP4UIVPROC3807,193962
typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);PFNGLNORMALP3UIPROC3808,194069
typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);PFNGLNORMALP3UIVPROC3809,194145
typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);PFNGLCOLORP3UIPROC3810,194229
typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);PFNGLCOLORP3UIVPROC3811,194303
typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);PFNGLCOLORP4UIPROC3812,194385
typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);PFNGLCOLORP4UIVPROC3813,194459
typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);PFNGLSECONDARYCOLORP3UIPROC3814,194541
typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);PFNGLSECONDARYCOLORP3UIVPROC3815,194624
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normaliPFNGLVERTEXATTRIBP1UIPROC3816,194715
typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalPFNGLVERTEXATTRIBP1UIVPROC3817,194832
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normaliPFNGLVERTEXATTRIBP2UIPROC3818,194957
typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalPFNGLVERTEXATTRIBP2UIVPROC3819,195074
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normaliPFNGLVERTEXATTRIBP3UIPROC3820,195199
typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalPFNGLVERTEXATTRIBP3UIVPROC3821,195316
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normaliPFNGLVERTEXATTRIBP4UIPROC3822,195441
typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalPFNGLVERTEXATTRIBP4UIVPROC3823,195558
#define GL_ARB_draw_indirect GL_ARB_draw_indirect3827,195723
typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const GLvoid *indirect);PFNGLDRAWARRAYSINDIRECTPROC3832,195996
typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const GLvoid *PFNGLDRAWELEMENTSINDIRECTPROC3833,196089
#define GL_ARB_gpu_shader5 GL_ARB_gpu_shader53837,196235
#define GL_ARB_gpu_shader_fp64 GL_ARB_gpu_shader_fp643841,196307
typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);PFNGLUNIFORM1DPROC3862,198242
typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);PFNGLUNIFORM2DPROC3863,198317
typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z)PFNGLUNIFORM3DPROC3864,198404
typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z,PFNGLUNIFORM4DPROC3865,198503
typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *valPFNGLUNIFORM1DVPROC3866,198614
typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *valPFNGLUNIFORM2DVPROC3867,198716
typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *valPFNGLUNIFORM3DVPROC3868,198818
typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *valPFNGLUNIFORM4DVPROC3869,198920
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean traPFNGLUNIFORMMATRIX2DVPROC3870,199022
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean traPFNGLUNIFORMMATRIX3DVPROC3871,199151
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean traPFNGLUNIFORMMATRIX4DVPROC3872,199280
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX2X3DVPROC3873,199409
typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX2X4DVPROC3874,199540
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX3X2DVPROC3875,199671
typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX3X4DVPROC3876,199802
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX4X2DVPROC3877,199933
typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean tPFNGLUNIFORMMATRIX4X3DVPROC3878,200064
typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *paramsPFNGLGETUNIFORMDVPROC3879,200195
#define GL_ARB_shader_subroutine GL_ARB_shader_subroutine3883,200339
typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertyPFNGLGETSUBROUTINEUNIFORMLOCATIONPROC3894,201392
typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, constPFNGLGETSUBROUTINEINDEXPROC3895,201514
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertypPFNGLGETACTIVESUBROUTINEUNIFORMIVPROC3896,201627
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertPFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC3897,201771
typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLPFNGLGETACTIVESUBROUTINENAMEPROC3898,201936
typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, constPFNGLUNIFORMSUBROUTINESUIVPROC3899,202094
typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLPFNGLGETUNIFORMSUBROUTINEUIVPROC3900,202210
typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pPFNGLGETPROGRAMSTAGEIVPROC3901,202322
#define GL_ARB_tessellation_shader GL_ARB_tessellation_shader3905,202487
typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);PFNGLPATCHPARAMETERIPROC3910,202736
typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);PFNGLPATCHPARAMETERFVPROC3911,202816
#define GL_ARB_texture_buffer_object_rgb32 GL_ARB_texture_buffer_object_rgb323915,202961
#define GL_ARB_transform_feedback2 GL_ARB_transform_feedback23919,203053
typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);PFNGLBINDTRANSFORMFEEDBACKPROC3929,203620
typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);PFNGLDELETETRANSFORMFEEDBACKSPROC3930,203705
typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);PFNGLGENTRANSFORMFEEDBACKSPROC3931,203797
typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);PFNGLISTRANSFORMFEEDBACKPROC3932,203880
typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);PFNGLPAUSETRANSFORMFEEDBACKPROC3933,203953
typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);PFNGLRESUMETRANSFORMFEEDBACKPROC3934,204019
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);PFNGLDRAWTRANSFORMFEEDBACKPROC3935,204086
#define GL_ARB_transform_feedback3 GL_ARB_transform_feedback33939,204215
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stPFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC3946,204663
typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);PFNGLBEGINQUERYINDEXEDPROC3947,204767
typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);PFNGLENDQUERYINDEXEDPROC3948,204862
typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, PFNGLGETQUERYINDEXEDIVPROC3949,204944
#define GL_ARB_ES2_compatibility GL_ARB_ES2_compatibility3953,205101
typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);PFNGLRELEASESHADERCOMPILERPROC3961,205619
typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binPFNGLSHADERBINARYPROC3962,205684
typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontPFNGLGETSHADERPRECISIONFORMATPROC3963,205831
typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);PFNGLDEPTHRANGEFPROC3964,205966
typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);PFNGLCLEARDEPTHFPROC3965,206037
#define GL_ARB_get_program_binary GL_ARB_get_program_binary3969,206142
typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *lePFNGLGETPROGRAMBINARYPROC3975,206573
typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const GLvoPFNGLPROGRAMBINARYPROC3976,206715
typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);PFNGLPROGRAMPARAMETERIPROC3977,206841
#define GL_ARB_separate_shader_objects GL_ARB_separate_shader_objects3981,206989
typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint pPFNGLUSEPROGRAMSTAGESPROC4044,213907
typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);PFNGLACTIVESHADERPROGRAMPROC4045,214013
typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchPFNGLCREATESHADERPROGRAMVPROC4046,214103
typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);PFNGLBINDPROGRAMPIPELINEPROC4047,214221
typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);PFNGLDELETEPROGRAMPIPELINESPROC4048,214295
typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);PFNGLGENPROGRAMPIPELINESPROC4049,214391
typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);PFNGLISPROGRAMPIPELINEPROC4050,214478
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *paPFNGLGETPROGRAMPIPELINEIVPROC4051,214555
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);PFNGLPROGRAMUNIFORM1IPROC4052,214659
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM1IVPROC4053,214755
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);PFNGLPROGRAMUNIFORM1FPROC4054,214877
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM1FVPROC4055,214975
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0)PFNGLPROGRAMUNIFORM1DPROC4056,215099
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM1DVPROC4057,215198
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);PFNGLPROGRAMUNIFORM1UIPROC4058,215323
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei coPFNGLPROGRAMUNIFORM1UIVPROC4059,215421
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLPFNGLPROGRAMUNIFORM2IPROC4060,215545
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM2IVPROC4061,215651
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, PFNGLPROGRAMUNIFORM2FPROC4062,215773
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM2FVPROC4063,215883
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0,PFNGLPROGRAMUNIFORM2DPROC4064,216007
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM2DVPROC4065,216119
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, PFNGLPROGRAMUNIFORM2UIPROC4066,216244
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei coPFNGLPROGRAMUNIFORM2UIVPROC4067,216353
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLPFNGLPROGRAMUNIFORM3IPROC4068,216477
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM3IVPROC4069,216593
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, PFNGLPROGRAMUNIFORM3FPROC4070,216715
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM3FVPROC4071,216837
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0,PFNGLPROGRAMUNIFORM3DPROC4072,216961
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM3DVPROC4073,217086
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, PFNGLPROGRAMUNIFORM3UIPROC4074,217211
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei coPFNGLPROGRAMUNIFORM3UIVPROC4075,217331
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLPFNGLPROGRAMUNIFORM4IPROC4076,217455
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM4IVPROC4077,217581
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, PFNGLPROGRAMUNIFORM4FPROC4078,217703
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM4FVPROC4079,217837
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0,PFNGLPROGRAMUNIFORM4DPROC4080,217961
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei couPFNGLPROGRAMUNIFORM4DVPROC4081,218099
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, PFNGLPROGRAMUNIFORM4UIPROC4082,218224
typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei coPFNGLPROGRAMUNIFORM4UIVPROC4083,218355
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORMMATRIX2FVPROC4084,218479
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORMMATRIX3FVPROC4085,218630
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORMMATRIX4FVPROC4086,218781
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORMMATRIX2DVPROC4087,218932
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORMMATRIX3DVPROC4088,219084
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizPFNGLPROGRAMUNIFORMMATRIX4DVPROC4089,219236
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX2X3FVPROC4090,219388
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX3X2FVPROC4091,219541
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX2X4FVPROC4092,219694
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX4X2FVPROC4093,219847
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX3X4FVPROC4094,220000
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX4X3FVPROC4095,220153
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX2X3DVPROC4096,220306
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX3X2DVPROC4097,220460
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX2X4DVPROC4098,220614
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX4X2DVPROC4099,220768
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX3X4DVPROC4100,220922
typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsPFNGLPROGRAMUNIFORMMATRIX4X3DVPROC4101,221076
typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);PFNGLVALIDATEPROGRAMPIPELINEPROC4102,221230
typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GPFNGLGETPROGRAMPIPELINEINFOLOGPROC4103,221308
#define GL_ARB_vertex_attrib_64bit GL_ARB_vertex_attrib_64bit4107,221485
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);PFNGLVERTEXATTRIBL1DPROC4120,222441
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);PFNGLVERTEXATTRIBL2DPROC4121,222520
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoublPFNGLVERTEXATTRIBL3DPROC4122,222611
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoublPFNGLVERTEXATTRIBL4DPROC4123,222714
typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIBL1DVPROC4124,222829
typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIBL2DVPROC4125,222916
typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIBL3DVPROC4126,223003
typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);PFNGLVERTEXATTRIBL4DVPROC4127,223090
typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GPFNGLVERTEXATTRIBLPOINTERPROC4128,223177
typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *paraPFNGLGETVERTEXATTRIBLDVPROC4129,223313
#define GL_ARB_viewport_array GL_ARB_viewport_array4133,223456
typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v)PFNGLVIEWPORTARRAYVPROC4146,224416
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat PFNGLVIEWPORTINDEXEDFPROC4147,224515
typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);PFNGLVIEWPORTINDEXEDFVPROC4148,224627
typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);PFNGLSCISSORARRAYVPROC4149,224714
typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizePFNGLSCISSORINDEXEDPROC4150,224810
typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);PFNGLSCISSORINDEXEDVPROC4151,224933
typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble PFNGLDEPTHRANGEARRAYVPROC4152,225016
typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);PFNGLDEPTHRANGEINDEXEDPROC4153,225118
typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);PFNGLGETFLOATI_VPROC4154,225211
typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);PFNGLGETDOUBLEI_VPROC4155,225304
#define GL_ARB_cl_event GL_ARB_cl_event4159,225434
typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context * context, struPFNGLCREATESYNCFROMCLEVENTARBPROC4163,225651
#define GL_ARB_debug_output GL_ARB_debug_output4167,225828
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum sevPFNGLDEBUGMESSAGECONTROLARBPROC4174,226489
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, PFNGLDEBUGMESSAGEINSERTARBPROC4175,226647
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const GLvoidPFNGLDEBUGMESSAGECALLBACKARBPROC4176,226797
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufsize, GLenumPFNGLGETDEBUGMESSAGELOGARBPROC4177,226908
#define GL_ARB_robustness GL_ARB_robustness4181,227140
typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);PFNGLGETGRAPHICSRESETSTATUSARBPROC4192,228105
typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLPFNGLGETNTEXIMAGEARBPROC4193,228176
typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei heighPFNGLREADNPIXELSARBPROC4194,228315
typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bPFNGLGETNCOMPRESSEDTEXIMAGEARBPROC4195,228475
typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSPFNGLGETNUNIFORMFVARBPROC4196,228594
typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSPFNGLGETNUNIFORMIVARBPROC4197,228714
typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufPFNGLGETNUNIFORMUIVARBPROC4198,228832
typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSPFNGLGETNUNIFORMDVARBPROC4199,228952
#define GL_ARB_shader_stencil_export GL_ARB_shader_stencil_export4203,229121
#define GL_ARB_base_instance GL_ARB_base_instance4207,229201
typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsPFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC4213,229797
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count,PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC4214,229951
typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsiPFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC4215,230128
#define GL_ARB_shading_language_420pack GL_ARB_shading_language_420pack4219,230384
#define GL_ARB_transform_feedback_instanced GL_ARB_transform_feedback_instanced4223,230482
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizePFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC4228,230820
typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC4229,230935
#define GL_ARB_compressed_texture_pixel_storage GL_ARB_compressed_texture_pixel_storage4233,231130
#define GL_ARB_conservative_depth GL_ARB_conservative_depth4237,231226
#define GL_ARB_internalformat_query GL_ARB_internalformat_query4241,231310
typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLePFNGLGETINTERNALFORMATIVPROC4245,231542
#define GL_ARB_map_buffer_alignment GL_ARB_map_buffer_alignment4249,231730
#define GL_ARB_shader_atomic_counters GL_ARB_shader_atomic_counters4253,231818
typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIPFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC4257,232044
#define GL_ARB_shader_image_load_store GL_ARB_shader_image_load_store4261,232227
typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLPFNGLBINDIMAGETEXTUREPROC4266,232539
typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);PFNGLMEMORYBARRIERPROC4267,232697
#define GL_ARB_shading_language_packing GL_ARB_shading_language_packing4271,232820
#define GL_ARB_texture_storage GL_ARB_texture_storage4275,232905
typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalfoPFNGLTEXSTORAGE1DPROC4284,233808
typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalfoPFNGLTEXSTORAGE2DPROC4285,233927
typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalfoPFNGLTEXSTORAGE3DPROC4286,234062
typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei lePFNGLTEXTURESTORAGE1DEXTPROC4287,234212
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei lePFNGLTEXTURESTORAGE2DEXTPROC4288,234354
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei lePFNGLTEXTURESTORAGE3DEXTPROC4289,234512
#define GL_KHR_texture_compression_astc_ldr GL_KHR_texture_compression_astc_ldr4293,234740
#define GL_KHR_debug GL_KHR_debug4297,234819
typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severiPFNGLDEBUGMESSAGECONTROLPROC4310,236036
typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLePFNGLDEBUGMESSAGEINSERTPROC4311,236191
typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userPaPFNGLDEBUGMESSAGECALLBACKPROC4312,236338
typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufsize, GLenum *sPFNGLGETDEBUGMESSAGELOGPROC4313,236441
typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, consPFNGLPUSHDEBUGGROUPPROC4314,236633
typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);PFNGLPOPDEBUGGROUPPROC4315,236750
typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, cPFNGLOBJECTLABELPROC4316,236807
typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSizPFNGLGETOBJECTLABELPROC4317,236925
typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar PFNGLOBJECTPTRLABELPROC4318,237058
typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *PFNGLGETOBJECTPTRLABELPROC4319,237164
#define GL_ARB_arrays_of_arrays GL_ARB_arrays_of_arrays4323,237328
#define GL_ARB_clear_buffer_object GL_ARB_clear_buffer_object4327,237409
typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum PFNGLCLEARBUFFERDATAPROC4334,238103
typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLinPFNGLCLEARBUFFERSUBDATAPROC4335,238240
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat,PFNGLCLEARNAMEDBUFFERDATAEXTPROC4336,238414
typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformPFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC4337,238559
#define GL_ARB_compute_shader GL_ARB_compute_shader4341,238784
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuPFNGLDISPATCHCOMPUTEPROC4346,239053
typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);PFNGLDISPATCHCOMPUTEINDIRECTPROC4347,239169
#define GL_ARB_copy_image GL_ARB_copy_image4351,239286
typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLPFNGLCOPYIMAGESUBDATAPROC4355,239648
#define GL_ARB_texture_view GL_ARB_texture_view4359,239968
typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexturePFNGLTEXTUREVIEWPROC4363,240244
#define GL_ARB_vertex_attrib_binding GL_ARB_vertex_attrib_binding4367,240485
typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptrPFNGLBINDVERTEXBUFFERPROC4382,242037
typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum typPFNGLVERTEXATTRIBFORMATPROC4383,242160
typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum tyPFNGLVERTEXATTRIBIFORMATPROC4384,242306
typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum tyPFNGLVERTEXATTRIBLFORMATPROC4385,242431
typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);PFNGLVERTEXATTRIBBINDINGPROC4386,242556
typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);PFNGLVERTEXBINDINGDIVISORPROC4387,242654
typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindinginPFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC4388,242749
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribiPFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC4389,242900
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribPFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC4390,243074
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribPFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC4391,243227
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribPFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC4392,243380
typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindiPFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC4393,243506
#define GL_ARB_robustness_isolation GL_ARB_robustness_isolation4397,243676
#define GL_ARB_ES3_compatibility GL_ARB_ES3_compatibility4401,243759
#define GL_ARB_explicit_uniform_location GL_ARB_explicit_uniform_location4405,243847
#define GL_ARB_fragment_layer_viewport GL_ARB_fragment_layer_viewport4409,243941
#define GL_ARB_framebuffer_no_attachments GL_ARB_framebuffer_no_attachments4413,244036
typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint paraPFNGLFRAMEBUFFERPARAMETERIPROC4420,244539
typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint PFNGLGETFRAMEBUFFERPARAMETERIVPROC4421,244640
typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pnamPFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC4422,244747
typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC4423,244861
#define GL_ARB_internalformat_query2 GL_ARB_internalformat_query24427,245029
typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GPFNGLGETINTERNALFORMATI64VPROC4431,245266
#define GL_ARB_invalidate_subdata GL_ARB_invalidate_subdata4435,245456
typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffPFNGLINVALIDATETEXSUBIMAGEPROC4444,246236
typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);PFNGLINVALIDATETEXIMAGEPROC4445,246415
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizPFNGLINVALIDATEBUFFERSUBDATAPROC4446,246500
typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);PFNGLINVALIDATEBUFFERDATAPROC4447,246612
typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, PFNGLINVALIDATEFRAMEBUFFERPROC4448,246685
typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachmentPFNGLINVALIDATESUBFRAMEBUFFERPROC4449,246810
#define GL_ARB_multi_draw_indirect GL_ARB_multi_draw_indirect4453,247033
typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLPFNGLMULTIDRAWARRAYSINDIRECTPROC4458,247388
typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const voiPFNGLMULTIDRAWELEMENTSINDIRECTPROC4459,247519
#define GL_ARB_program_interface_query GL_ARB_program_interface_query4463,247715
typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterfacePFNGLGETPROGRAMINTERFACEIVPROC4472,248624
typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterPFNGLGETPROGRAMRESOURCEINDEXPROC4473,248753
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterfacPFNGLGETPROGRAMRESOURCENAMEPROC4474,248877
typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface,PFNGLGETPROGRAMRESOURCEIVPROC4475,249040
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programIntPFNGLGETPROGRAMRESOURCELOCATIONPROC4476,249242
typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum progrPFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC4477,249368
#define GL_ARB_robust_buffer_access_behavior GL_ARB_robust_buffer_access_behavior4481,249555
#define GL_ARB_shader_image_size GL_ARB_shader_image_size4485,249647
#define GL_ARB_shader_storage_buffer_object GL_ARB_shader_storage_buffer_object4489,249738
typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockPFNGLSHADERSTORAGEBLOCKBINDINGPROC4493,249970
#define GL_ARB_stencil_texturing GL_ARB_stencil_texturing4497,250147
#define GL_ARB_texture_buffer_range GL_ARB_texture_buffer_range4501,250230
typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint bPFNGLTEXBUFFERRANGEPROC4506,250610
typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum iPFNGLTEXTUREBUFFERRANGEEXTPROC4507,250749
#define GL_ARB_texture_query_levels GL_ARB_texture_query_levels4511,250958
#define GL_ARB_texture_storage_multisample GL_ARB_texture_storage_multisample4515,251051
typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenuPFNGLTEXSTORAGE2DMULTISAMPLEPROC4522,251905
typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenuPFNGLTEXSTORAGE3DMULTISAMPLEPROC4523,252084
typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC4524,252278
typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC4525,252480

../gejo/libs/imgui/examples/libs/glfw/COPYING.txt,0

../gejo/libs/imgui/examples/libs/glfw/include/GLFW/glfw3.h,15058
#define _glfw3_h__glfw3_h_30,1337
 #define _WIN32_WIN3290,3547
  #define APIENTRY APIENTRY98,3782
 #define WINGDIAPI WINGDIAPI107,3966
 #define GLFW_WINGDIAPI_DEFINEDGLFW_WINGDIAPI_DEFINED108,4008
 #define CALLBACK CALLBACK114,4155
 #define GLFW_CALLBACK_DEFINEDGLFW_CALLBACK_DEFINED115,4184
 #define GLFWAPI GLFWAPI191,6367
#define GLFW_VERSION_MAJOR GLFW_VERSION_MAJOR215,7176
#define GLFW_VERSION_MINOR GLFW_VERSION_MINOR222,7402
#define GLFW_VERSION_REVISION GLFW_VERSION_REVISION229,7622
#define GLFW_TRUE GLFW_TRUE240,7937
#define GLFW_FALSE GLFW_FALSE247,8212
#define GLFW_RELEASE GLFW_RELEASE258,8435
#define GLFW_PRESS GLFW_PRESS265,8598
#define GLFW_REPEAT GLFW_REPEAT272,8769
#define GLFW_KEY_UNKNOWN GLFW_KEY_UNKNOWN299,9739
#define GLFW_KEY_SPACE GLFW_KEY_SPACE302,9803
#define GLFW_KEY_APOSTROPHE GLFW_KEY_APOSTROPHE303,9843
#define GLFW_KEY_COMMA GLFW_KEY_COMMA304,9892
#define GLFW_KEY_MINUS GLFW_KEY_MINUS305,9941
#define GLFW_KEY_PERIOD GLFW_KEY_PERIOD306,9990
#define GLFW_KEY_SLASH GLFW_KEY_SLASH307,10039
#define GLFW_KEY_0 GLFW_KEY_0308,10088
#define GLFW_KEY_1 GLFW_KEY_1309,10128
#define GLFW_KEY_2 GLFW_KEY_2310,10168
#define GLFW_KEY_3 GLFW_KEY_3311,10208
#define GLFW_KEY_4 GLFW_KEY_4312,10248
#define GLFW_KEY_5 GLFW_KEY_5313,10288
#define GLFW_KEY_6 GLFW_KEY_6314,10328
#define GLFW_KEY_7 GLFW_KEY_7315,10368
#define GLFW_KEY_8 GLFW_KEY_8316,10408
#define GLFW_KEY_9 GLFW_KEY_9317,10448
#define GLFW_KEY_SEMICOLON GLFW_KEY_SEMICOLON318,10488
#define GLFW_KEY_EQUAL GLFW_KEY_EQUAL319,10537
#define GLFW_KEY_A GLFW_KEY_A320,10586
#define GLFW_KEY_B GLFW_KEY_B321,10626
#define GLFW_KEY_C GLFW_KEY_C322,10666
#define GLFW_KEY_D GLFW_KEY_D323,10706
#define GLFW_KEY_E GLFW_KEY_E324,10746
#define GLFW_KEY_F GLFW_KEY_F325,10786
#define GLFW_KEY_G GLFW_KEY_G326,10826
#define GLFW_KEY_H GLFW_KEY_H327,10866
#define GLFW_KEY_I GLFW_KEY_I328,10906
#define GLFW_KEY_J GLFW_KEY_J329,10946
#define GLFW_KEY_K GLFW_KEY_K330,10986
#define GLFW_KEY_L GLFW_KEY_L331,11026
#define GLFW_KEY_M GLFW_KEY_M332,11066
#define GLFW_KEY_N GLFW_KEY_N333,11106
#define GLFW_KEY_O GLFW_KEY_O334,11146
#define GLFW_KEY_P GLFW_KEY_P335,11186
#define GLFW_KEY_Q GLFW_KEY_Q336,11226
#define GLFW_KEY_R GLFW_KEY_R337,11266
#define GLFW_KEY_S GLFW_KEY_S338,11306
#define GLFW_KEY_T GLFW_KEY_T339,11346
#define GLFW_KEY_U GLFW_KEY_U340,11386
#define GLFW_KEY_V GLFW_KEY_V341,11426
#define GLFW_KEY_W GLFW_KEY_W342,11466
#define GLFW_KEY_X GLFW_KEY_X343,11506
#define GLFW_KEY_Y GLFW_KEY_Y344,11546
#define GLFW_KEY_Z GLFW_KEY_Z345,11586
#define GLFW_KEY_LEFT_BRACKET GLFW_KEY_LEFT_BRACKET346,11626
#define GLFW_KEY_BACKSLASH GLFW_KEY_BACKSLASH347,11675
#define GLFW_KEY_RIGHT_BRACKET GLFW_KEY_RIGHT_BRACKET348,11724
#define GLFW_KEY_GRAVE_ACCENT GLFW_KEY_GRAVE_ACCENT349,11773
#define GLFW_KEY_WORLD_1 GLFW_KEY_WORLD_1350,11822
#define GLFW_KEY_WORLD_2 GLFW_KEY_WORLD_2351,11879
#define GLFW_KEY_ESCAPE GLFW_KEY_ESCAPE354,11959
#define GLFW_KEY_ENTER GLFW_KEY_ENTER355,12000
#define GLFW_KEY_TAB GLFW_KEY_TAB356,12041
#define GLFW_KEY_BACKSPACE GLFW_KEY_BACKSPACE357,12082
#define GLFW_KEY_INSERT GLFW_KEY_INSERT358,12123
#define GLFW_KEY_DELETE GLFW_KEY_DELETE359,12164
#define GLFW_KEY_RIGHT GLFW_KEY_RIGHT360,12205
#define GLFW_KEY_LEFT GLFW_KEY_LEFT361,12246
#define GLFW_KEY_DOWN GLFW_KEY_DOWN362,12287
#define GLFW_KEY_UP GLFW_KEY_UP363,12328
#define GLFW_KEY_PAGE_UP GLFW_KEY_PAGE_UP364,12369
#define GLFW_KEY_PAGE_DOWN GLFW_KEY_PAGE_DOWN365,12410
#define GLFW_KEY_HOME GLFW_KEY_HOME366,12451
#define GLFW_KEY_END GLFW_KEY_END367,12492
#define GLFW_KEY_CAPS_LOCK GLFW_KEY_CAPS_LOCK368,12533
#define GLFW_KEY_SCROLL_LOCK GLFW_KEY_SCROLL_LOCK369,12574
#define GLFW_KEY_NUM_LOCK GLFW_KEY_NUM_LOCK370,12615
#define GLFW_KEY_PRINT_SCREEN GLFW_KEY_PRINT_SCREEN371,12656
#define GLFW_KEY_PAUSE GLFW_KEY_PAUSE372,12697
#define GLFW_KEY_F1 GLFW_KEY_F1373,12738
#define GLFW_KEY_F2 GLFW_KEY_F2374,12779
#define GLFW_KEY_F3 GLFW_KEY_F3375,12820
#define GLFW_KEY_F4 GLFW_KEY_F4376,12861
#define GLFW_KEY_F5 GLFW_KEY_F5377,12902
#define GLFW_KEY_F6 GLFW_KEY_F6378,12943
#define GLFW_KEY_F7 GLFW_KEY_F7379,12984
#define GLFW_KEY_F8 GLFW_KEY_F8380,13025
#define GLFW_KEY_F9 GLFW_KEY_F9381,13066
#define GLFW_KEY_F10 GLFW_KEY_F10382,13107
#define GLFW_KEY_F11 GLFW_KEY_F11383,13148
#define GLFW_KEY_F12 GLFW_KEY_F12384,13189
#define GLFW_KEY_F13 GLFW_KEY_F13385,13230
#define GLFW_KEY_F14 GLFW_KEY_F14386,13271
#define GLFW_KEY_F15 GLFW_KEY_F15387,13312
#define GLFW_KEY_F16 GLFW_KEY_F16388,13353
#define GLFW_KEY_F17 GLFW_KEY_F17389,13394
#define GLFW_KEY_F18 GLFW_KEY_F18390,13435
#define GLFW_KEY_F19 GLFW_KEY_F19391,13476
#define GLFW_KEY_F20 GLFW_KEY_F20392,13517
#define GLFW_KEY_F21 GLFW_KEY_F21393,13558
#define GLFW_KEY_F22 GLFW_KEY_F22394,13599
#define GLFW_KEY_F23 GLFW_KEY_F23395,13640
#define GLFW_KEY_F24 GLFW_KEY_F24396,13681
#define GLFW_KEY_F25 GLFW_KEY_F25397,13722
#define GLFW_KEY_KP_0 GLFW_KEY_KP_0398,13763
#define GLFW_KEY_KP_1 GLFW_KEY_KP_1399,13804
#define GLFW_KEY_KP_2 GLFW_KEY_KP_2400,13845
#define GLFW_KEY_KP_3 GLFW_KEY_KP_3401,13886
#define GLFW_KEY_KP_4 GLFW_KEY_KP_4402,13927
#define GLFW_KEY_KP_5 GLFW_KEY_KP_5403,13968
#define GLFW_KEY_KP_6 GLFW_KEY_KP_6404,14009
#define GLFW_KEY_KP_7 GLFW_KEY_KP_7405,14050
#define GLFW_KEY_KP_8 GLFW_KEY_KP_8406,14091
#define GLFW_KEY_KP_9 GLFW_KEY_KP_9407,14132
#define GLFW_KEY_KP_DECIMAL GLFW_KEY_KP_DECIMAL408,14173
#define GLFW_KEY_KP_DIVIDE GLFW_KEY_KP_DIVIDE409,14214
#define GLFW_KEY_KP_MULTIPLY GLFW_KEY_KP_MULTIPLY410,14255
#define GLFW_KEY_KP_SUBTRACT GLFW_KEY_KP_SUBTRACT411,14296
#define GLFW_KEY_KP_ADD GLFW_KEY_KP_ADD412,14337
#define GLFW_KEY_KP_ENTER GLFW_KEY_KP_ENTER413,14378
#define GLFW_KEY_KP_EQUAL GLFW_KEY_KP_EQUAL414,14419
#define GLFW_KEY_LEFT_SHIFT GLFW_KEY_LEFT_SHIFT415,14460
#define GLFW_KEY_LEFT_CONTROL GLFW_KEY_LEFT_CONTROL416,14501
#define GLFW_KEY_LEFT_ALT GLFW_KEY_LEFT_ALT417,14542
#define GLFW_KEY_LEFT_SUPER GLFW_KEY_LEFT_SUPER418,14583
#define GLFW_KEY_RIGHT_SHIFT GLFW_KEY_RIGHT_SHIFT419,14624
#define GLFW_KEY_RIGHT_CONTROL GLFW_KEY_RIGHT_CONTROL420,14665
#define GLFW_KEY_RIGHT_ALT GLFW_KEY_RIGHT_ALT421,14706
#define GLFW_KEY_RIGHT_SUPER GLFW_KEY_RIGHT_SUPER422,14747
#define GLFW_KEY_MENU GLFW_KEY_MENU423,14788
#define GLFW_KEY_LAST GLFW_KEY_LAST425,14831
#define GLFW_MOD_SHIFT GLFW_MOD_SHIFT438,15113
#define GLFW_MOD_CONTROL GLFW_MOD_CONTROL441,15231
#define GLFW_MOD_ALT GLFW_MOD_ALT444,15345
#define GLFW_MOD_SUPER GLFW_MOD_SUPER447,15461
#define GLFW_MOUSE_BUTTON_1 GLFW_MOUSE_BUTTON_1457,15672
#define GLFW_MOUSE_BUTTON_2 GLFW_MOUSE_BUTTON_2458,15711
#define GLFW_MOUSE_BUTTON_3 GLFW_MOUSE_BUTTON_3459,15750
#define GLFW_MOUSE_BUTTON_4 GLFW_MOUSE_BUTTON_4460,15789
#define GLFW_MOUSE_BUTTON_5 GLFW_MOUSE_BUTTON_5461,15828
#define GLFW_MOUSE_BUTTON_6 GLFW_MOUSE_BUTTON_6462,15867
#define GLFW_MOUSE_BUTTON_7 GLFW_MOUSE_BUTTON_7463,15906
#define GLFW_MOUSE_BUTTON_8 GLFW_MOUSE_BUTTON_8464,15945
#define GLFW_MOUSE_BUTTON_LAST GLFW_MOUSE_BUTTON_LAST465,15984
#define GLFW_MOUSE_BUTTON_LEFT GLFW_MOUSE_BUTTON_LEFT466,16041
#define GLFW_MOUSE_BUTTON_RIGHT GLFW_MOUSE_BUTTON_RIGHT467,16098
#define GLFW_MOUSE_BUTTON_MIDDLE GLFW_MOUSE_BUTTON_MIDDLE468,16155
#define GLFW_JOYSTICK_1 GLFW_JOYSTICK_1477,16364
#define GLFW_JOYSTICK_2 GLFW_JOYSTICK_2478,16403
#define GLFW_JOYSTICK_3 GLFW_JOYSTICK_3479,16442
#define GLFW_JOYSTICK_4 GLFW_JOYSTICK_4480,16481
#define GLFW_JOYSTICK_5 GLFW_JOYSTICK_5481,16520
#define GLFW_JOYSTICK_6 GLFW_JOYSTICK_6482,16559
#define GLFW_JOYSTICK_7 GLFW_JOYSTICK_7483,16598
#define GLFW_JOYSTICK_8 GLFW_JOYSTICK_8484,16637
#define GLFW_JOYSTICK_9 GLFW_JOYSTICK_9485,16676
#define GLFW_JOYSTICK_10 GLFW_JOYSTICK_10486,16715
#define GLFW_JOYSTICK_11 GLFW_JOYSTICK_11487,16754
#define GLFW_JOYSTICK_12 GLFW_JOYSTICK_12488,16794
#define GLFW_JOYSTICK_13 GLFW_JOYSTICK_13489,16834
#define GLFW_JOYSTICK_14 GLFW_JOYSTICK_14490,16874
#define GLFW_JOYSTICK_15 GLFW_JOYSTICK_15491,16914
#define GLFW_JOYSTICK_16 GLFW_JOYSTICK_16492,16954
#define GLFW_JOYSTICK_LAST GLFW_JOYSTICK_LAST493,16994
#define GLFW_NOT_INITIALIZED GLFW_NOT_INITIALIZED510,17515
#define GLFW_NO_CURRENT_CONTEXT GLFW_NO_CURRENT_CONTEXT520,17981
#define GLFW_INVALID_ENUM GLFW_INVALID_ENUM529,18359
#define GLFW_INVALID_VALUE GLFW_INVALID_VALUE540,18845
#define GLFW_OUT_OF_MEMORY GLFW_OUT_OF_MEMORY548,19126
#define GLFW_API_UNAVAILABLE GLFW_API_UNAVAILABLE564,19908
#define GLFW_VERSION_UNAVAILABLE GLFW_VERSION_UNAVAILABLE581,20705
#define GLFW_PLATFORM_ERROR GLFW_PLATFORM_ERROR592,21200
#define GLFW_FORMAT_UNAVAILABLE GLFW_FORMAT_UNAVAILABLE611,22016
#define GLFW_NO_WINDOW_CONTEXT GLFW_NO_WINDOW_CONTEXT619,22350
#define GLFW_FOCUSED GLFW_FOCUSED622,22411
#define GLFW_ICONIFIED GLFW_ICONIFIED623,22459
#define GLFW_RESIZABLE GLFW_RESIZABLE624,22507
#define GLFW_VISIBLE GLFW_VISIBLE625,22555
#define GLFW_DECORATED GLFW_DECORATED626,22603
#define GLFW_AUTO_ICONIFY GLFW_AUTO_ICONIFY627,22651
#define GLFW_FLOATING GLFW_FLOATING628,22699
#define GLFW_MAXIMIZED GLFW_MAXIMIZED629,22747
#define GLFW_RED_BITS GLFW_RED_BITS631,22797
#define GLFW_GREEN_BITS GLFW_GREEN_BITS632,22845
#define GLFW_BLUE_BITS GLFW_BLUE_BITS633,22893
#define GLFW_ALPHA_BITS GLFW_ALPHA_BITS634,22941
#define GLFW_DEPTH_BITS GLFW_DEPTH_BITS635,22989
#define GLFW_STENCIL_BITS GLFW_STENCIL_BITS636,23037
#define GLFW_ACCUM_RED_BITS GLFW_ACCUM_RED_BITS637,23085
#define GLFW_ACCUM_GREEN_BITS GLFW_ACCUM_GREEN_BITS638,23133
#define GLFW_ACCUM_BLUE_BITS GLFW_ACCUM_BLUE_BITS639,23181
#define GLFW_ACCUM_ALPHA_BITS GLFW_ACCUM_ALPHA_BITS640,23229
#define GLFW_AUX_BUFFERS GLFW_AUX_BUFFERS641,23277
#define GLFW_STEREO GLFW_STEREO642,23325
#define GLFW_SAMPLES GLFW_SAMPLES643,23373
#define GLFW_SRGB_CAPABLE GLFW_SRGB_CAPABLE644,23421
#define GLFW_REFRESH_RATE GLFW_REFRESH_RATE645,23469
#define GLFW_DOUBLEBUFFER GLFW_DOUBLEBUFFER646,23517
#define GLFW_CLIENT_API GLFW_CLIENT_API648,23567
#define GLFW_CONTEXT_VERSION_MAJOR GLFW_CONTEXT_VERSION_MAJOR649,23615
#define GLFW_CONTEXT_VERSION_MINOR GLFW_CONTEXT_VERSION_MINOR650,23663
#define GLFW_CONTEXT_REVISION GLFW_CONTEXT_REVISION651,23711
#define GLFW_CONTEXT_ROBUSTNESS GLFW_CONTEXT_ROBUSTNESS652,23759
#define GLFW_OPENGL_FORWARD_COMPAT GLFW_OPENGL_FORWARD_COMPAT653,23807
#define GLFW_OPENGL_DEBUG_CONTEXT GLFW_OPENGL_DEBUG_CONTEXT654,23855
#define GLFW_OPENGL_PROFILE GLFW_OPENGL_PROFILE655,23903
#define GLFW_CONTEXT_RELEASE_BEHAVIOR GLFW_CONTEXT_RELEASE_BEHAVIOR656,23951
#define GLFW_CONTEXT_NO_ERROR GLFW_CONTEXT_NO_ERROR657,24001
#define GLFW_NO_API GLFW_NO_API659,24051
#define GLFW_OPENGL_API GLFW_OPENGL_API660,24099
#define GLFW_OPENGL_ES_API GLFW_OPENGL_ES_API661,24147
#define GLFW_NO_ROBUSTNESS GLFW_NO_ROBUSTNESS663,24197
#define GLFW_NO_RESET_NOTIFICATION GLFW_NO_RESET_NOTIFICATION664,24245
#define GLFW_LOSE_CONTEXT_ON_RESET GLFW_LOSE_CONTEXT_ON_RESET665,24293
#define GLFW_OPENGL_ANY_PROFILE GLFW_OPENGL_ANY_PROFILE667,24343
#define GLFW_OPENGL_CORE_PROFILE GLFW_OPENGL_CORE_PROFILE668,24391
#define GLFW_OPENGL_COMPAT_PROFILE GLFW_OPENGL_COMPAT_PROFILE669,24439
#define GLFW_CURSOR GLFW_CURSOR671,24489
#define GLFW_STICKY_KEYS GLFW_STICKY_KEYS672,24537
#define GLFW_STICKY_MOUSE_BUTTONS GLFW_STICKY_MOUSE_BUTTONS673,24585
#define GLFW_CURSOR_NORMAL GLFW_CURSOR_NORMAL675,24635
#define GLFW_CURSOR_HIDDEN GLFW_CURSOR_HIDDEN676,24683
#define GLFW_CURSOR_DISABLED GLFW_CURSOR_DISABLED677,24731
#define GLFW_ANY_RELEASE_BEHAVIOR GLFW_ANY_RELEASE_BEHAVIOR679,24781
#define GLFW_RELEASE_BEHAVIOR_FLUSH GLFW_RELEASE_BEHAVIOR_FLUSH680,24829
#define GLFW_RELEASE_BEHAVIOR_NONE GLFW_RELEASE_BEHAVIOR_NONE681,24877
#define GLFW_ARROW_CURSOR GLFW_ARROW_CURSOR694,25179
#define GLFW_IBEAM_CURSOR GLFW_IBEAM_CURSOR699,25325
#define GLFW_CROSSHAIR_CURSOR GLFW_CROSSHAIR_CURSOR704,25441
#define GLFW_HAND_CURSOR GLFW_HAND_CURSOR709,25547
#define GLFW_HRESIZE_CURSOR GLFW_HRESIZE_CURSOR714,25691
#define GLFW_VRESIZE_CURSOR GLFW_VRESIZE_CURSOR719,25831
#define GLFW_CONNECTED GLFW_CONNECTED722,25892
#define GLFW_DISCONNECTED GLFW_DISCONNECTED723,25940
#define GLFW_DONT_CARE GLFW_DONT_CARE725,25990
typedef void (*GLFWglproc)(void);GLFWglproc744,26516
typedef void (*GLFWvkproc)(void);GLFWvkproc758,26867
typedef struct GLFWmonitor GLFWmonitor;GLFWmonitor770,27074
typedef struct GLFWwindow GLFWwindow;GLFWwindow782,27283
typedef struct GLFWcursor GLFWcursor;GLFWcursor794,27490
typedef void (* GLFWerrorfun)(int,const char*);GLFWerrorfun810,27915
typedef void (* GLFWwindowposfun)(GLFWwindow*,int,int);GLFWwindowposfun829,28557
typedef void (* GLFWwindowsizefun)(GLFWwindow*,int,int);GLFWwindowsizefun847,29140
typedef void (* GLFWwindowclosefun)(GLFWwindow*);GLFWwindowclosefun863,29590
typedef void (* GLFWwindowrefreshfun)(GLFWwindow*);GLFWwindowrefreshfun879,30052
typedef void (* GLFWwindowfocusfun)(GLFWwindow*,int);GLFWwindowfocusfun896,30570
typedef void (* GLFWwindowiconifyfun)(GLFWwindow*,int);GLFWwindowiconifyfun914,31109
typedef void (* GLFWframebuffersizefun)(GLFWwindow*,int,int);GLFWframebuffersizefun932,31672
typedef void (* GLFWmousebuttonfun)(GLFWwindow*,int,int,int);GLFWmousebuttonfun953,32391
typedef void (* GLFWcursorposfun)(GLFWwindow*,double,double);GLFWcursorposfun972,33025
typedef void (* GLFWcursorenterfun)(GLFWwindow*,int);GLFWcursorenterfun989,33559
typedef void (* GLFWscrollfun)(GLFWwindow*,double,double);GLFWscrollfun1006,34084
typedef void (* GLFWkeyfun)(GLFWwindow*,int,int,int,int);GLFWkeyfun1027,34856
typedef void (* GLFWcharfun)(GLFWwindow*,unsigned int);GLFWcharfun1044,35365
typedef void (* GLFWcharmodsfun)(GLFWwindow*,unsigned int,int);GLFWcharmodsfun1065,36062
typedef void (* GLFWdropfun)(GLFWwindow*,int,const char**);GLFWdropfun1082,36566
typedef void (* GLFWmonitorfun)(GLFWmonitor*,int);GLFWmonitorfun1098,37066
typedef void (* GLFWjoystickfun)(int,int);GLFWjoystickfun1115,37561
typedef struct GLFWvidmodeGLFWvidmode1129,37865
    int width;width1133,37967
    int height;height1136,38055
    int redBits;redBits1139,38142
    int greenBits;greenBits1142,38232
    int blueBits;blueBits1145,38323
    int refreshRate;refreshRate1148,38404
} GLFWvidmode;GLFWvidmode1149,38426
typedef struct GLFWgammarampGLFWgammaramp1162,38666
    unsigned short* red;red1166,38779
    unsigned short* green;green1169,38887
    unsigned short* blue;blue1172,38996
    unsigned int size;size1175,39079
} GLFWgammaramp;GLFWgammaramp1176,39103
typedef struct GLFWimageGLFWimage1185,39278
    int width;width1189,39362
    int height;height1192,39434
    unsigned char* pixels;pixels1195,39538
} GLFWimage;GLFWimage1196,39566

../gejo/libs/imgui/examples/libs/glfw/include/GLFW/glfw3native.h,50
#define _glfw3_native_h__glfw3_native_h_30,1344

../gejo/libs/imgui/examples/libs/usynergy/README.txt,0

../gejo/libs/imgui/examples/libs/usynergy/uSynergy.c,1536
static int16_t sNetToNative16(const unsigned char *value)sNetToNative1641,1433
static int32_t sNetToNative32(const unsigned char *value)sNetToNative3255,1717
static void sTrace(uSynergyContext *context, const char* text)sTrace69,2023
static void sAddString(uSynergyContext *context, const char *string)sAddString81,2279
static void sAddUInt8(uSynergyContext *context, uint8_t value)sAddUInt893,2510
static void sAddUInt16(uSynergyContext *context, uint16_t value)sAddUInt16103,2665
static void sAddUInt32(uSynergyContext *context, uint32_t value)sAddUInt32116,2924
static uSynergyBool sSendReply(uSynergyContext *context)sSendReply131,3248
static void sSendMouseCallback(uSynergyContext *context)sSendMouseCallback156,4000
static void sSendKeyboardCallback(uSynergyContext *context, uint16_t key, uint16_t modifiers, uSsSendKeyboardCallback172,4482
static void sSendJoystickCallback(uSynergyContext *context, uint8_t joyNum)sSendJoystickCallback187,4861
#define USYNERGY_IS_PACKET(USYNERGY_IS_PACKET205,5360
static void sProcessMessage(uSynergyContext *context, const uint8_t *message)sProcessMessage206,5428
static void sSetDisconnected(uSynergyContext *context)sSetDisconnected462,13252
static void sUpdateContext(uSynergyContext *context)sUpdateContext476,13585
void uSynergyInit(uSynergyContext *context)uSynergyInit570,16980
void uSynergyUpdate(uSynergyContext *context)uSynergyUpdate583,17203
void uSynergySendClipboard(uSynergyContext *context, const char *text)uSynergySendClipboard603,17549

../gejo/libs/imgui/examples/libs/usynergy/uSynergy.h,6756
typedef int			uSynergyBool;uSynergyBool71,2448
#define				USYNERGY_FALSE	USYNERGY_FALSE72,2477
#define				USYNERGY_TRUE	USYNERGY_TRUE73,2531
typedef struct { int ignored; } *					uSynergyCookie;__anon1c7141ac010882,2777
typedef struct { int ignored; } *					uSynergyCookie;ignored82,2777
typedef struct { int ignored; } *					uSynergyCookie;uSynergyCookie82,2777
enum uSynergyClipboardFormatuSynergyClipboardFormat89,2872
	USYNERGY_CLIPBOARD_FORMAT_TEXT					= 0,			/* Text format, UTF-8, newline is LF */USYNERGY_CLIPBOARD_FORMAT_TEXT91,2905
	USYNERGY_CLIPBOARD_FORMAT_BITMAP				= 1,			/* Bitmap format, BMP 24/32bpp, BI_RGB */USYNERGY_CLIPBOARD_FORMAT_BITMAP92,2989
	USYNERGY_CLIPBOARD_FORMAT_HTML					= 2,			/* HTML format, HTML fragment, UTF-8, newline is LF *USYNERGY_CLIPBOARD_FORMAT_HTML93,3076
#define				USYNERGY_NUM_JOYSTICKS	USYNERGY_NUM_JOYSTICKS101,3224
#define				USYNERGY_PROTOCOL_MAJOR	USYNERGY_PROTOCOL_MAJOR103,3312
#define				USYNERGY_PROTOCOL_MINOR	USYNERGY_PROTOCOL_MINOR104,3384
#define				USYNERGY_IDLE_TIMEOUT	USYNERGY_IDLE_TIMEOUT106,3458
#define				USYNERGY_TRACE_BUFFER_SIZE	USYNERGY_TRACE_BUFFER_SIZE108,3553
#define				USYNERGY_REPLY_BUFFER_SIZE	USYNERGY_REPLY_BUFFER_SIZE109,3639
#define				USYNERGY_RECEIVE_BUFFER_SIZE	USYNERGY_RECEIVE_BUFFER_SIZE110,3723
#define				USYNERGY_MODIFIER_SHIFT	USYNERGY_MODIFIER_SHIFT117,3855
#define				USYNERGY_MODIFIER_CTRL	USYNERGY_MODIFIER_CTRL118,3927
#define				USYNERGY_MODIFIER_ALT	USYNERGY_MODIFIER_ALT119,3997
#define				USYNERGY_MODIFIER_META	USYNERGY_MODIFIER_META120,4065
#define				USYNERGY_MODIFIER_WIN	USYNERGY_MODIFIER_WIN121,4135
#define				USYNERGY_MODIFIER_ALT_GR	USYNERGY_MODIFIER_ALT_GR122,4207
#define				USYNERGY_MODIFIER_LEVEL5LOCK	USYNERGY_MODIFIER_LEVEL5LOCK123,4279
#define				USYNERGY_MODIFIER_CAPSLOCK	USYNERGY_MODIFIER_CAPSLOCK124,4359
#define				USYNERGY_MODIFIER_NUMLOCK	USYNERGY_MODIFIER_NUMLOCK125,4436
#define				USYNERGY_MODIFIER_SCROLLOCK	USYNERGY_MODIFIER_SCROLLOCK126,4511
typedef uSynergyBool (*uSynergyConnectFunc)(uSynergyCookie cookie);uSynergyConnectFunc149,5491
typedef uSynergyBool (*uSynergySendFunc)(uSynergyCookie cookie, const uint8_t *buffer, int lengtuSynergySendFunc164,5982
typedef uSynergyBool (*uSynergyReceiveFunc)(uSynergyCookie cookie, uint8_t *buffer, int maxLengtuSynergyReceiveFunc181,6837
typedef void		(*uSynergySleepFunc)(uSynergyCookie cookie, int timeMs);uSynergySleepFunc195,7397
typedef uint32_t	(*uSynergyGetTimeFunc)();uSynergyGetTimeFunc207,7737
typedef void		(*uSynergyTraceFunc)(uSynergyCookie cookie, const char *text);uSynergyTraceFunc221,8231
typedef void		(*uSynergyScreenActiveCallback)(uSynergyCookie cookie, uSynergyBool active);uSynergyScreenActiveCallback234,8669
typedef void		(*uSynergyMouseCallback)(uSynergyCookie cookie, uint16_t x, uint16_t y, int16_t whuSynergyMouseCallback254,9464
typedef void		(*uSynergyKeyboardCallback)(uSynergyCookie cookie, uint16_t key, uint16_t modifieruSynergyKeyboardCallback269,10156
typedef void		(*uSynergyJoystickCallback)(uSynergyCookie cookie, uint8_t joyNum, uint16_t buttonuSynergyJoystickCallback289,11164
typedef void		(*uSynergyClipboardCallback)(uSynergyCookie cookie, enum uSynergyClipboardFormat fuSynergyClipboardCallback305,11814
{__anon1c7141ac0208319,12272
	uSynergyConnectFunc				m_connectFunc;									/* Connect function */m_connectFunc321,12333
	uSynergySendFunc				m_sendFunc;										/* Send data function */m_sendFunc322,12404
	uSynergyReceiveFunc				m_receiveFunc;									/* Receive data function */m_receiveFunc323,12472
	uSynergySleepFunc				m_sleepFunc;									/* Thread sleep function */m_sleepFunc324,12548
	uSynergyGetTimeFunc				m_getTimeFunc;									/* Get current time function */m_getTimeFunc325,12620
	const char*						m_clientName;									/* Name of Synergy Screen / Client */m_clientName326,12700
	uint16_t						m_clientWidth;									/* Width of screen */m_clientWidth327,12779
	uint16_t						m_clientHeight;									/* Height of screen */m_clientHeight328,12840
	uSynergyCookie					m_cookie;										/* Cookie pointer passed to callback functions (can be NUm_cookie331,12962
	uSynergyTraceFunc				m_traceFunc;									/* Function for tracing status (can be NULL) */m_traceFunc332,13066
	uSynergyScreenActiveCallback	m_screenActiveCallback;							/* Callback for entering and leavingm_screenActiveCallback333,13158
	uSynergyMouseCallback			m_mouseCallback;								/* Callback for mouse events */m_mouseCallback334,13266
	uSynergyKeyboardCallback		m_keyboardCallback;								/* Callback for keyboard events */m_keyboardCallback335,13348
	uSynergyJoystickCallback		m_joystickCallback;								/* Callback for joystick events */m_joystickCallback336,13438
	uSynergyClipboardCallback		m_clipboardCallback;							/* Callback for clipboard events */m_clipboardCallback337,13528
	uSynergyBool					m_connected;									/* Is our socket connected? */m_connected340,13698
	uSynergyBool					m_hasReceivedHello;								/* Have we received a 'Hello' from the server? */m_hasReceivedHello341,13769
	uSynergyBool					m_isCaptured;									/* Is Synergy active (i.e. this client is receiving inpum_isCaptured342,13865
	uint32_t						m_lastMessageTime;								/* Time at which last message was received */m_lastMessageTime343,13978
	uint32_t						m_sequenceNumber;								/* Packet sequence number */m_sequenceNumber344,14066
	uint8_t							m_receiveBuffer[USYNERGY_RECEIVE_BUFFER_SIZE];	/* Receive buffer */m_receiveBuffer345,14136
	int								m_receiveOfs;									/* Receive buffer offset */m_receiveOfs346,14220
	uint8_t							m_replyBuffer[USYNERGY_REPLY_BUFFER_SIZE];		/* Reply buffer */m_replyBuffer347,14283
	uint8_t*						m_replyCur;										/* Write offset into reply buffer */m_replyCur348,14362
	uint16_t						m_mouseX;										/* Mouse X position */m_mouseX349,14436
	uint16_t						m_mouseY;										/* Mouse Y position */m_mouseY350,14494
	int16_t							m_mouseWheelX;									/* Mouse wheel X position */m_mouseWheelX351,14552
	int16_t							m_mouseWheelY;									/* Mouse wheel Y position */m_mouseWheelY352,14620
	uSynergyBool					m_mouseButtonLeft;								/* Mouse left button */m_mouseButtonLeft353,14688
	uSynergyBool					m_mouseButtonRight;								/* Mouse right button */m_mouseButtonRight354,14757
	uSynergyBool					m_mouseButtonMiddle;							/* Mouse middle button */m_mouseButtonMiddle355,14828
	int8_t							m_joystickSticks[USYNERGY_NUM_JOYSTICKS][4];	/* Joystick stick position in 2 axes m_joystickSticks356,14900
	uint16_t						m_joystickButtons[USYNERGY_NUM_JOYSTICKS];		/* Joystick button state */m_joystickButtons357,15013
} uSynergyContext;uSynergyContext358,15101

../gejo/libs/imgui/examples/README.txt,0

../gejo/libs/imgui/imconfig.h,0

../gejo/libs/imgui/imgui.cpp,52328
#define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS768,76040
#define IMGUI_DEFINE_MATH_OPERATORSIMGUI_DEFINE_MATH_OPERATORS775,76165
#define IMGUI_DISABLE_WIN32_FUNCTIONSIMGUI_DISABLE_WIN32_FUNCTIONS790,76782
#define WIN32_LEAN_AND_MEANWIN32_LEAN_AND_MEAN794,76922
#define NOMINMAXNOMINMAX797,76977
#define IMGUI_DISABLE_WIN32_DEFAULT_CLIPBOARD_FUNCTIONSIMGUI_DISABLE_WIN32_DEFAULT_CLIPBOARD_FUNCTIONS805,77224
#define IMGUI_DISABLE_WIN32_DEFAULT_IME_FUNCTIONSIMGUI_DISABLE_WIN32_DEFAULT_IME_FUNCTIONS806,77281
#define IMGUI_DEBUG_NAV_SCORING IMGUI_DEBUG_NAV_SCORING858,82648
#define IMGUI_DEBUG_NAV_RECTS IMGUI_DEBUG_NAV_RECTS859,82804
#define IMGUI_DEBUG_INI_SETTINGS IMGUI_DEBUG_INI_SETTINGS860,82907
static const float NAV_WINDOWING_HIGHLIGHT_DELAY            = 0.20f;    // Time before the highlNAV_WINDOWING_HIGHLIGHT_DELAY863,83179
static const float NAV_WINDOWING_LIST_APPEAR_DELAY          = 0.15f;    // Time before the windoNAV_WINDOWING_LIST_APPEAR_DELAY864,83317
static const float WINDOWS_HOVER_PADDING                    = 4.0f;     // Extend outside windowWINDOWS_HOVER_PADDING867,83592
static const float WINDOWS_RESIZE_FROM_EDGES_FEEDBACK_TIMER = 0.04f;    // Reduce visual noise bWINDOWS_RESIZE_FROM_EDGES_FEEDBACK_TIMER868,83799
static const float WINDOWS_MOUSE_WHEEL_SCROLL_LOCK_TIMER    = 2.00f;    // Lock scrolled window WINDOWS_MOUSE_WHEEL_SCROLL_LOCK_TIMER869,83949
namespace ImGuiImGui895,85710
ImGuiContext*   GImGui = NULL;GImGui960,89899
static void*   MallocWrapper(size_t size, void* user_data)    { IM_UNUSED(user_data); return malMallocWrapper967,90275
static void    FreeWrapper(void* ptr, void* user_data)        { IM_UNUSED(user_data); free(ptr);FreeWrapper968,90385
static void*   MallocWrapper(size_t size, void* user_data)    { IM_UNUSED(user_data); IM_UNUSED(MallocWrapper970,90492
static void    FreeWrapper(void* ptr, void* user_data)        { IM_UNUSED(user_data); IM_UNUSED(FreeWrapper971,90625
static ImGuiMemAllocFunc    GImAllocatorAllocFunc = MallocWrapper;GImAllocatorAllocFunc973,90752
static ImGuiMemFreeFunc     GImAllocatorFreeFunc = FreeWrapper;GImAllocatorFreeFunc974,90820
static void*                GImAllocatorUserData = NULL;GImAllocatorUserData975,90885
ImGuiStyle::ImGuiStyle()ImGuiStyle981,91168
void ImGuiStyle::ScaleAllSizes(float scale_factor)ScaleAllSizes1029,97369
ImGuiIO::ImGuiIO()ImGuiIO1056,98942
void ImGuiIO::AddInputCharacter(unsigned int c)AddInputCharacter1117,101587
void ImGuiIO::AddInputCharacterUTF16(ImWchar16 c)AddInputCharacterUTF161125,101890
void ImGuiIO::AddInputCharactersUTF8(const char* utf8_chars)AddInputCharactersUTF81159,102832
void ImGuiIO::ClearInputCharacters()ClearInputCharacters1170,103118
ImVec2 ImBezierCubicClosestPoint(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVImBezierCubicClosestPoint1179,103423
static void ImBezierCubicClosestPointCasteljauStep(const ImVec2& p, ImVec2& p_closest, ImVec2& pImBezierCubicClosestPointCasteljauStep1202,104297
ImVec2 ImBezierCubicClosestPointCasteljau(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, ImBezierCubicClosestPointCasteljau1237,106097
ImVec2 ImLineClosestPoint(const ImVec2& a, const ImVec2& b, const ImVec2& p)ImLineClosestPoint1247,106540
bool ImTriangleContainsPoint(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& p)ImTriangleContainsPoint1260,106926
void ImTriangleBarycentricCoords(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2ImTriangleBarycentricCoords1268,107309
ImVec2 ImTriangleClosestPoint(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& pImTriangleClosestPoint1279,107720
int ImStricmp(const char* str1, const char* str2)ImStricmp1300,108691
int ImStrnicmp(const char* str1, const char* str2, size_t count)ImStrnicmp1307,108862
void ImStrncpy(char* dst, const char* src, size_t count)ImStrncpy1314,109074
char* ImStrdup(const char* str)ImStrdup1323,109261
char* ImStrdupcpy(char* dst, size_t* p_dst_size, const char* src)ImStrdupcpy1330,109428
const char* ImStrchrRange(const char* str, const char* str_end, char c)ImStrchrRange1344,109849
int ImStrlenW(const ImWchar* str)ImStrlenW1350,110015
const char* ImStreolRange(const char* str, const char* str_end)ImStreolRange1359,110300
const ImWchar* ImStrbolW(const ImWchar* buf_mid_line, const ImWchar* buf_begin) // find beginninImStrbolW1365,110470
const char* ImStristr(const char* haystack, const char* haystack_end, const char* needle, const ImStristr1372,110702
void ImStrTrimBlanks(char* buf)ImStrTrimBlanks1395,111562
const char* ImStrSkipBlank(const char* str)ImStrSkipBlank1410,112092
#define STB_SPRINTF_IMPLEMENTATIONSTB_SPRINTF_IMPLEMENTATION1427,113138
#define vsnprintf vsnprintf1432,113256
int ImFormatString(char* buf, size_t buf_size, const char* fmt, ...)ImFormatString1435,113296
int ImFormatStringV(char* buf, size_t buf_size, const char* fmt, va_list args)ImFormatStringV1453,113739
static const ImU32 GCrc32LookupTable[256] =GCrc32LookupTable1472,114502
ImGuiID ImHashData(const void* data_p, size_t data_size, ImU32 seed)ImHashData1495,117707
ImGuiID ImHashStr(const char* data_p, size_t data_size, ImU32 seed)ImHashStr1511,118642
ImFileHandle ImFileOpen(const char* filename, const char* mode)ImFileOpen1546,119732
bool    ImFileClose(ImFileHandle f)     { return fclose(f) == 0; }ImFileClose1564,120886
ImU64   ImFileGetSize(ImFileHandle f)   { long off = 0, sz = 0; return ((off = ftell(f)) != -1 &ImFileGetSize1565,120954
ImU64   ImFileRead(void* data, ImU64 sz, ImU64 count, ImFileHandle f)           { return fread(dImFileRead1566,121157
ImU64   ImFileWrite(const void* data, ImU64 sz, ImU64 count, ImFileHandle f)    { return fwrite(ImFileWrite1567,121292
void*   ImFileLoadToMemory(const char* filename, const char* mode, size_t* out_file_size, int paImFileLoadToMemory1573,121706
int ImTextCharFromUtf8(unsigned int* out_char, const char* in_text, const char* in_text_end)ImTextCharFromUtf81619,123147
int ImTextStrFromUtf8(ImWchar* buf, int buf_size, const char* in_text, const char* in_text_end, ImTextStrFromUtf81671,125587
int ImTextCountCharsFromUtf8(const char* in_text, const char* in_text_end)ImTextCountCharsFromUtf81689,126183
static inline int ImTextCharToUtf8_inline(char* buf, int buf_size, unsigned int c)ImTextCharToUtf8_inline1704,126607
const char* ImTextCharToUtf8(char out_buf[5], unsigned int c)ImTextCharToUtf81739,127554
int ImTextCountUtf8BytesFromChar(const char* in_text, const char* in_text_end)ImTextCountUtf8BytesFromChar1747,127782
static inline int ImTextCountUtf8BytesFromChar(unsigned int c)ImTextCountUtf8BytesFromChar1753,127963
int ImTextStrToUtf8(char* out_buf, int out_buf_size, const ImWchar* in_text, const ImWchar* in_tImTextStrToUtf81762,128175
int ImTextCountUtf8BytesFromStr(const ImWchar* in_text, const ImWchar* in_text_end)ImTextCountUtf8BytesFromStr1778,128732
IMGUI_API ImU32 ImAlphaBlendColors(ImU32 col_a, ImU32 col_b)ImAlphaBlendColors1797,129444
ImVec4 ImGui::ColorConvertU32ToFloat4(ImU32 in)ColorConvertU32ToFloat41806,129930
ImU32 ImGui::ColorConvertFloat4ToU32(const ImVec4& in)ColorConvertFloat4ToU321816,130230
void ImGui::ColorConvertRGBtoHSV(float r, float g, float b, float& out_h, float& out_s, float& oColorConvertRGBtoHSV1828,130766
void ImGui::ColorConvertHSVtoRGB(float h, float s, float v, float& out_r, float& out_g, float& oColorConvertHSVtoRGB1850,131366
static ImGuiStorage::ImGuiStoragePair* LowerBound(ImVector<ImGuiStorage::ImGuiStoragePair>& dataLowerBound1883,132417
void ImGuiStorage::BuildSortByKey()BuildSortByKey1906,133163
    struct StaticFuncStaticFunc1908,133203
        static int IMGUI_CDECL PairCompareByID(const void* lhs, const void* rhs)PairCompareByID1910,133233
int ImGuiStorage::GetInt(ImGuiID key, int default_val) constGetInt1922,133840
bool ImGuiStorage::GetBool(ImGuiID key, bool default_val) constGetBool1930,134099
float ImGuiStorage::GetFloat(ImGuiID key, float default_val) constGetFloat1935,134223
void* ImGuiStorage::GetVoidPtr(ImGuiID key) constGetVoidPtr1943,134488
int* ImGuiStorage::GetIntRef(ImGuiID key, int default_val)GetIntRef1952,134881
bool* ImGuiStorage::GetBoolRef(ImGuiID key, bool default_val)GetBoolRef1960,135136
float* ImGuiStorage::GetFloatRef(ImGuiID key, float default_val)GetFloatRef1965,135263
void** ImGuiStorage::GetVoidPtrRef(ImGuiID key, void* default_val)GetVoidPtrRef1973,135524
void ImGuiStorage::SetInt(ImGuiID key, int val)SetInt1982,135961
void ImGuiStorage::SetBool(ImGuiID key, bool val)SetBool1993,136221
void ImGuiStorage::SetFloat(ImGuiID key, float val)SetFloat1998,136311
void ImGuiStorage::SetVoidPtr(ImGuiID key, void* val)SetVoidPtr2009,136575
void ImGuiStorage::SetAllInt(int v)SetAllInt2020,136841
ImGuiTextFilter::ImGuiTextFilter(const char* default_filter)ImGuiTextFilter2031,137224
bool ImGuiTextFilter::Draw(const char* label, float width)Draw2045,137495
void ImGuiTextFilter::ImGuiTextRange::split(char separator, ImVector<ImGuiTextRange>* out) constsplit2055,137782
void ImGuiTextFilter::Build()Build2073,138209
bool ImGuiTextFilter::PassFilter(const char* text, const char* text_end) constPassFilter2094,138765
#define va_copy(va_copy2136,139949
#define va_copy(va_copy2138,140013
char ImGuiTextBuffer::EmptyString[1] = { 0 };EmptyString2142,140072
void ImGuiTextBuffer::append(const char* str, const char* str_end)append2144,140121
void ImGuiTextBuffer::appendf(const char* fmt, ...)appendf2162,140705
void ImGuiTextBuffer::appendfv(const char* fmt, va_list args)appendfv2171,140910
static bool GetSkipItemForListClipping()GetSkipItemForListClipping2205,142328
void ImGui::CalcListClipping(int items_count, float items_height, int* out_items_display_start, CalcListClipping2214,142833
static void SetCursorPosYAndSetupForPrevLine(float pos_y, float line_height)SetCursorPosYAndSetupForPrevLine2254,144444
ImGuiListClipper::ImGuiListClipper()ImGuiListClipper2279,146150
ImGuiListClipper::~ImGuiListClipper()~ImGuiListClipper2285,146255
void ImGuiListClipper::Begin(int items_count, float items_height)Begin2293,146787
void ImGuiListClipper::End()End2311,147249
bool ImGuiListClipper::Step()Step2323,147732
ImGuiStyle& ImGui::GetStyle()GetStyle2430,151374
ImU32 ImGui::GetColorU32(ImGuiCol idx, float alpha_mul)GetColorU322436,151566
ImU32 ImGui::GetColorU32(const ImVec4& col)GetColorU322444,151783
const ImVec4& ImGui::GetStyleColorVec4(ImGuiCol idx)GetStyleColorVec42452,151962
ImU32 ImGui::GetColorU32(ImU32 col)GetColorU322458,152095
void ImGui::PushStyleColor(ImGuiCol idx, ImU32 col)PushStyleColor2469,152608
void ImGui::PushStyleColor(ImGuiCol idx, const ImVec4& col)PushStyleColor2479,152892
void ImGui::PopStyleColor(int count)PopStyleColor2489,153159
struct ImGuiStyleVarInfoImGuiStyleVarInfo2501,153438
    ImGuiDataType   Type;Type2503,153467
    ImU32           Count;Count2504,153494
    ImU32           Offset;Offset2505,153522
    void*           GetVarPtr(ImGuiStyle* style) const { return (void*)((unsigned char*)style + GetVarPtr2506,153551
static const ImGuiStyleVarInfo GStyleVarInfo[] =GStyleVarInfo2509,153665
static const ImGuiStyleVarInfo* GetStyleVarInfo(ImGuiStyleVar idx)GetStyleVarInfo2537,156542
void ImGui::PushStyleVar(ImGuiStyleVar idx, float val)PushStyleVar2544,156774
void ImGui::PushStyleVar(ImGuiStyleVar idx, const ImVec2& val)PushStyleVar2558,157276
void ImGui::PopStyleVar(int count)PopStyleVar2572,157790
const char* ImGui::GetStyleColorName(ImGuiCol idx)GetStyleColorName2588,158563
const char* ImGui::FindRenderedTextEnd(const char* text, const char* text_end)FindRenderedTextEnd2659,162320
void ImGui::RenderText(ImVec2 pos, const char* text, const char* text_end, bool hide_text_after_RenderText2672,162835
void ImGui::RenderTextWrapped(ImVec2 pos, const char* text, const char* text_end, float wrap_widRenderTextWrapped2698,163606
void ImGui::RenderTextClippedEx(ImDrawList* draw_list, const ImVec2& pos_min, const ImVec2& pos_RenderTextClippedEx2716,164286
void ImGui::RenderTextClipped(const ImVec2& pos_min, const ImVec2& pos_max, const char* text, coRenderTextClipped2744,165900
void ImGui::RenderTextEllipsis(ImDrawList* draw_list, const ImVec2& pos_min, const ImVec2& pos_mRenderTextEllipsis2763,167055
void ImGui::RenderFrame(ImVec2 p_min, ImVec2 p_max, ImU32 fill_col, bool border, float rounding)RenderFrame2841,171411
void ImGui::RenderFrameBorder(ImVec2 p_min, ImVec2 p_max, float rounding)RenderFrameBorder2854,172022
void ImGui::RenderNavHighlight(const ImRect& bb, ImGuiID id, ImGuiNavHighlightFlags flags)RenderNavHighlight2866,172528
ImGuiWindow::ImGuiWindow(ImGuiContext* context, const char* name) : DrawListInst(NULL)ImGuiWindow2903,174307
ImGuiWindow::~ImGuiWindow()~ImGuiWindow2926,175244
ImGuiID ImGuiWindow::GetID(const char* str, const char* str_end)GetID2934,175445
ImGuiID ImGuiWindow::GetID(const void* ptr)GetID2946,175817
ImGuiID ImGuiWindow::GetID(int n)GetID2958,176145
ImGuiID ImGuiWindow::GetIDNoKeepAlive(const char* str, const char* str_end)GetIDNoKeepAlive2970,176461
ImGuiID ImGuiWindow::GetIDNoKeepAlive(const void* ptr)GetIDNoKeepAlive2981,176815
ImGuiID ImGuiWindow::GetIDNoKeepAlive(int n)GetIDNoKeepAlive2992,177125
ImGuiID ImGuiWindow::GetIDFromRectangle(const ImRect& r_abs)GetIDFromRectangle3004,177510
static void SetCurrentWindow(ImGuiWindow* window)SetCurrentWindow3013,177862
void ImGui::GcCompactTransientMiscBuffers()GcCompactTransientMiscBuffers3022,178202
void ImGui::GcCompactTransientWindowBuffers(ImGuiWindow* window)GcCompactTransientWindowBuffers3034,178711
void ImGui::GcAwakeTransientWindowBuffers(ImGuiWindow* window)GcAwakeTransientWindowBuffers3046,179173
void ImGui::SetActiveID(ImGuiID id, ImGuiWindow* window)SetActiveID3056,179682
void ImGui::ClearActiveID()ClearActiveID3091,180915
void ImGui::SetHoveredID(ImGuiID id)SetHoveredID3096,180998
ImGuiID ImGui::GetHoveredID()GetHoveredID3106,181292
void ImGui::KeepAliveID(ImGuiID id)KeepAliveID3112,181429
void ImGui::MarkItemEdited(ImGuiID id)MarkItemEdited3121,181654
static inline bool IsWindowContentHoverable(ImGuiWindow* window, ImGuiHoveredFlags flags)IsWindowContentHoverable3134,182361
bool ImGui::IsItemHovered(ImGuiHoveredFlags flags)IsItemHovered3156,183714
bool ImGui::ItemHoverable(const ImRect& bb, ImGuiID id)ItemHoverable3200,186224
bool ImGui::IsClippedEx(const ImRect& bb, ImGuiID id, bool clip_even_when_logged)IsClippedEx3241,187943
void ImGui::SetLastItemData(ImGuiWindow* window, ImGuiID item_id, ImGuiItemStatusFlags item_flagSetLastItemData3254,188463
void ImGui::ItemFocusable(ImGuiWindow* window, ImGuiID id)ItemFocusable3262,188826
float ImGui::CalcWrapWidthForPos(const ImVec2& pos, float wrap_pos_x)CalcWrapWidthForPos3307,190675
void* ImGui::MemAlloc(size_t size)MemAlloc3332,191611
void ImGui::MemFree(void* ptr)MemFree3340,191837
const char* ImGui::GetClipboardText()GetClipboardText3348,192045
void ImGui::SetClipboardText(const char* text)SetClipboardText3354,192216
const char* ImGui::GetVersion()GetVersion3361,192402
ImGuiContext* ImGui::GetCurrentContext()GetCurrentContext3368,192757
void ImGui::SetCurrentContext(ImGuiContext* ctx)SetCurrentContext3373,192827
void ImGui::SetAllocatorFunctions(ImGuiMemAllocFunc alloc_func, ImGuiMemFreeFunc free_func, voidSetAllocatorFunctions3382,193075
void ImGui::GetAllocatorFunctions(ImGuiMemAllocFunc* p_alloc_func, ImGuiMemFreeFunc* p_free_funcGetAllocatorFunctions3390,193473
ImGuiContext* ImGui::CreateContext(ImFontAtlas* shared_font_atlas)CreateContext3397,193728
void ImGui::DestroyContext(ImGuiContext* ctx)DestroyContext3406,193967
ImGuiID ImGui::AddContextHook(ImGuiContext* ctx, const ImGuiContextHook* hook)AddContextHook3417,194230
void ImGui::RemoveContextHook(ImGuiContext* ctx, ImGuiID hook_id)RemoveContextHook3427,194641
void ImGui::CallContextHooks(ImGuiContext* ctx, ImGuiContextHookType hook_type)CallContextHooks3438,195047
ImGuiIO& ImGui::GetIO()GetIO3446,195303
ImDrawData* ImGui::GetDrawData()GetDrawData3453,195595
double ImGui::GetTime()GetTime3460,195786
int ImGui::GetFrameCount()GetFrameCount3465,195845
static ImDrawList* GetViewportDrawList(ImGuiViewportP* viewport, size_t drawlist_no, const char*GetViewportDrawList3470,195913
ImDrawList* ImGui::GetBackgroundDrawList(ImGuiViewport* viewport)GetBackgroundDrawList3494,196925
ImDrawList* ImGui::GetBackgroundDrawList()GetBackgroundDrawList3499,197079
ImDrawList* ImGui::GetForegroundDrawList(ImGuiViewport* viewport)GetForegroundDrawList3505,197214
ImDrawList* ImGui::GetForegroundDrawList()GetForegroundDrawList3510,197368
ImDrawListSharedData* ImGui::GetDrawListSharedData()GetDrawListSharedData3516,197503
void ImGui::StartMouseMovingWindow(ImGuiWindow* window)StartMouseMovingWindow3521,197606
void ImGui::UpdateMouseMovingWindowNewFrame()UpdateMouseMovingWindowNewFrame3545,199082
void ImGui::UpdateMouseMovingWindowEndFrame()UpdateMouseMovingWindowEndFrame3585,200665
static bool IsWindowActiveAndVisible(ImGuiWindow* window)IsWindowActiveAndVisible3637,203236
static void ImGui::UpdateMouseInputs()UpdateMouseInputs3642,203354
static void StartLockWheelingWindow(ImGuiWindow* window)StartLockWheelingWindow3699,206768
void ImGui::UpdateMouseWheel()UpdateMouseWheel3709,207070
void ImGui::UpdateTabFocus()UpdateTabFocus3794,211073
void ImGui::UpdateHoveredWindowAndCaptureFlags()UpdateHoveredWindowAndCaptureFlags3833,213313
ImGuiKeyModFlags ImGui::GetMergedKeyModFlags()GetMergedKeyModFlags3895,217153
void ImGui::NewFrame()NewFrame3906,217606
void ImGui::UpdateDebugToolItemPicker()UpdateDebugToolItemPicker4109,227389
void ImGui::Initialize(ImGuiContext* context)Initialize4133,228226
void ImGui::Shutdown(ImGuiContext* context)Shutdown4165,229313
static int IMGUI_CDECL ChildWindowComparer(const void* lhs, const void* rhs)ChildWindowComparer4245,231848
static void AddWindowToSortBuffer(ImVector<ImGuiWindow*>* out_sorted_windows, ImGuiWindow* windoAddWindowToSortBuffer4256,232365
static void AddDrawListToDrawData(ImVector<ImDrawList*>* out_list, ImDrawList* draw_list)AddDrawListToDrawData4273,232965
static void AddWindowToDrawData(ImGuiWindow* window, int layer)AddWindowToDrawData4309,235924
static void AddRootWindowToDrawData(ImGuiWindow* window)AddRootWindowToDrawData4324,236591
void ImDrawDataBuilder::FlattenIntoSingleLayer()FlattenIntoSingleLayer4330,236767
static void SetupViewportDrawData(ImGuiViewportP* viewport, ImVector<ImDrawList*>* draw_lists)SetupViewportDrawData4348,237308
void ImGui::PushClipRect(const ImVec2& clip_rect_min, const ImVec2& clip_rect_max, bool intersecPushClipRect4372,238708
void ImGui::PopClipRect()PopClipRect4379,239052
void ImGui::EndFrame()EndFrame4387,239384
void ImGui::Render()Render4469,242751
ImVec2 ImGui::CalcTextSize(const char* text, const char* text_end, bool hide_text_after_double_hCalcTextSize4531,245851
static void FindHoveredWindow()FindHoveredWindow4561,247269
bool ImGui::IsMouseHoveringRect(const ImVec2& r_min, const ImVec2& r_max, bool clip)IsMouseHoveringRect4616,249911
int ImGui::GetKeyIndex(ImGuiKey imgui_key)GetKeyIndex4632,250416
bool ImGui::IsKeyDown(int user_key_index)IsKeyDown4641,250781
int ImGui::CalcTypematicRepeatAmount(float t0, float t1, float repeat_delay, float repeat_rate)CalcTypematicRepeatAmount4654,251238
int ImGui::GetKeyPressedAmount(int key_index, float repeat_delay, float repeat_rate)GetKeyPressedAmount4668,251765
bool ImGui::IsKeyPressed(int user_key_index, bool repeat)IsKeyPressed4678,252153
bool ImGui::IsKeyReleased(int user_key_index)IsKeyReleased4692,252652
bool ImGui::IsMouseDown(ImGuiMouseButton button)IsMouseDown4700,252964
bool ImGui::IsMouseClicked(ImGuiMouseButton button, bool repeat)IsMouseClicked4707,253160
bool ImGui::IsMouseReleased(ImGuiMouseButton button)IsMouseReleased4725,253836
bool ImGui::IsMouseDoubleClicked(ImGuiMouseButton button)IsMouseDoubleClicked4732,254040
bool ImGui::IsMouseDragPastThreshold(ImGuiMouseButton button, float lock_threshold)IsMouseDragPastThreshold4741,254422
bool ImGui::IsMouseDragging(ImGuiMouseButton button, float lock_threshold)IsMouseDragging4750,254785
ImVec2 ImGui::GetMousePos()GetMousePos4759,255090
ImVec2 ImGui::GetMousePosOnOpeningCurrentPopup()GetMousePosOnOpeningCurrentPopup4766,255310
bool ImGui::IsMousePosValid(const ImVec2* mouse_pos)IsMousePosValid4775,255623
bool ImGui::IsAnyMouseDown()IsAnyMouseDown4785,256113
ImVec2 ImGui::GetMouseDragDelta(ImGuiMouseButton button, float lock_threshold)GetMouseDragDelta4797,256684
void ImGui::ResetMouseDragDelta(ImGuiMouseButton button)ResetMouseDragDelta4810,257308
ImGuiMouseCursor ImGui::GetMouseCursor()GetMouseCursor4818,257591
void ImGui::SetMouseCursor(ImGuiMouseCursor cursor_type)SetMouseCursor4823,257674
void ImGui::CaptureKeyboardFromApp(bool capture)CaptureKeyboardFromApp4828,257780
void ImGui::CaptureMouseFromApp(bool capture)CaptureMouseFromApp4833,257899
bool ImGui::IsItemActive()IsItemActive4838,258012
bool ImGui::IsItemActivated()IsItemActivated4849,258235
bool ImGui::IsItemDeactivated()IsItemDeactivated4861,258536
bool ImGui::IsItemDeactivatedAfterEdit()IsItemDeactivatedAfterEdit4870,258957
bool ImGui::IsItemFocused()IsItemFocused4877,259209
bool ImGui::IsItemClicked(ImGuiMouseButton mouse_button)IsItemClicked4889,259607
bool ImGui::IsItemToggledOpen()IsItemToggledOpen4894,259756
bool ImGui::IsItemToggledSelection()IsItemToggledSelection4900,259934
bool ImGui::IsAnyItemHovered()IsAnyItemHovered4906,260122
bool ImGui::IsAnyItemActive()IsAnyItemActive4912,260257
bool ImGui::IsAnyItemFocused()IsAnyItemFocused4918,260357
bool ImGui::IsItemVisible()IsItemVisible4924,260481
bool ImGui::IsItemEdited()IsItemEdited4930,260633
void ImGui::SetItemAllowOverlap()SetItemAllowOverlap4938,261098
void ImGui::SetItemUsingMouseWheel()SetItemUsingMouseWheel4948,261359
ImVec2 ImGui::GetItemRectMin()GetItemRectMin4958,261629
ImVec2 ImGui::GetItemRectMax()GetItemRectMax4964,261761
ImVec2 ImGui::GetItemRectSize()GetItemRectSize4970,261893
bool ImGui::BeginChildEx(const char* name, ImGuiID id, const ImVec2& size_arg, bool border, ImGuBeginChildEx4976,262032
bool ImGui::BeginChild(const char* str_id, const ImVec2& size_arg, bool border, ImGuiWindowFlagsBeginChild5026,264557
bool ImGui::BeginChild(ImGuiID id, const ImVec2& size_arg, bool border, ImGuiWindowFlags extra_fBeginChild5032,264811
void ImGui::EndChild()EndChild5038,265014
bool ImGui::BeginChildFrame(ImGuiID id, const ImVec2& size, ImGuiWindowFlags extra_flags)BeginChildFrame5085,266887
void ImGui::EndChildFrame()EndChildFrame5099,267524
static void SetWindowConditionAllowFlags(ImGuiWindow* window, ImGuiCond flags, bool enabled)SetWindowConditionAllowFlags5104,267578
ImGuiWindow* ImGui::FindWindowByID(ImGuiID id)FindWindowByID5111,268136
ImGuiWindow* ImGui::FindWindowByName(const char* name)FindWindowByName5117,268280
static void ApplyWindowSettings(ImGuiWindow* window, ImGuiWindowSettings* settings)ApplyWindowSettings5123,268411
static ImGuiWindow* CreateNewWindow(const char* name, ImGuiWindowFlags flags)CreateNewWindow5131,268771
static ImVec2 CalcWindowSizeAfterConstraint(ImGuiWindow* window, const ImVec2& size_desired)CalcWindowSizeAfterConstraint5183,270937
static void CalcWindowContentSizes(ImGuiWindow* window, ImVec2* content_size_current, ImVec2* coCalcWindowContentSizes5218,272589
static ImVec2 CalcWindowAutoFitSize(ImGuiWindow* window, const ImVec2& size_contents)CalcWindowAutoFitSize5238,273981
ImVec2 ImGui::CalcWindowNextAutoFitSize(ImGuiWindow* window)CalcWindowNextAutoFitSize5276,276520
static ImGuiCol GetWindowBgColorIdxFromFlags(ImGuiWindowFlags flags)GetWindowBgColorIdxFromFlags5286,276924
static void CalcResizePosSizeFromAnyCorner(ImGuiWindow* window, const ImVec2& corner_target, conCalcResizePosSizeFromAnyCorner5295,277218
struct ImGuiResizeGripDefImGuiResizeGripDef5310,278031
    ImVec2  CornerPosN;CornerPosN5312,278061
    ImVec2  InnerDir;InnerDir5313,278086
    int     AngleMin12, AngleMax12;AngleMin125314,278109
    int     AngleMin12, AngleMax12;AngleMax125314,278109
static const ImGuiResizeGripDef resize_grip_def[4] =resize_grip_def5316,278150
struct ImGuiResizeBorderDefImGuiResizeBorderDef5325,278508
    ImVec2 InnerDir;InnerDir5327,278540
    ImVec2 SegmentN1, SegmentN2;SegmentN15328,278562
    ImVec2 SegmentN1, SegmentN2;SegmentN25328,278562
    float  OuterAngle;OuterAngle5329,278596
static const ImGuiResizeBorderDef resize_border_def[4] =resize_border_def5331,278624
static ImRect GetResizeBorderRect(ImGuiWindow* window, int border_n, float perp_padding, float tGetResizeBorderRect5339,278990
ImGuiID ImGui::GetWindowResizeCornerID(ImGuiWindow* window, int n)GetWindowResizeCornerID5353,279960
ImGuiID ImGui::GetWindowResizeBorderID(ImGuiWindow* window, ImGuiDir dir)GetWindowResizeBorderID5363,280233
static bool ImGui::UpdateWindowManualResize(ImGuiWindow* window, const ImVec2& size_auto_fit, inUpdateWindowManualResize5375,280628
static inline void ClampWindowRect(ImGuiWindow* window, const ImRect& visibility_rect)ClampWindowRect5505,288241
static void ImGui::RenderWindowOuterBorders(ImGuiWindow* window)RenderWindowOuterBorders5514,288674
void ImGui::RenderWindowDecorations(ImGuiWindow* window, const ImRect& title_bar_rect, bool titlRenderWindowDecorations5540,290279
void ImGui::RenderWindowTitleBarContents(ImGuiWindow* window, const ImRect& title_bar_rect, consRenderWindowTitleBarContents5624,295113
void ImGui::UpdateWindowParentAndRootLinks(ImGuiWindow* window, ImGuiWindowFlags flags, ImGuiWinUpdateWindowParentAndRootLinks5707,299838
bool ImGui::Begin(const char* name, bool* p_open, ImGuiWindowFlags flags)Begin5729,301671
void ImGui::End()End6373,341253
void ImGui::BringWindowToFocusFront(ImGuiWindow* window)BringWindowToFocusFront6407,342535
void ImGui::BringWindowToDisplayFront(ImGuiWindow* window)BringWindowToDisplayFront6428,343232
void ImGui::BringWindowToDisplayBack(ImGuiWindow* window)BringWindowToDisplayBack6443,343865
void ImGui::FocusWindow(ImGuiWindow* window)FocusWindow6458,344359
void ImGui::FocusTopMostWindowUnderOne(ImGuiWindow* under_this_window, ImGuiWindow* ignore_windoFocusTopMostWindowUnderOne6501,346185
void ImGui::SetCurrentFont(ImFont* font)SetCurrentFont6523,347322
void ImGui::PushFont(ImFont* font)PushFont6539,348033
void  ImGui::PopFont()PopFont6549,348296
void ImGui::PushItemFlag(ImGuiItemFlags option, bool enabled)PushItemFlag6557,348519
void ImGui::PopItemFlag()PopItemFlag6570,348904
void ImGui::PushAllowKeyboardFocus(bool allow_keyboard_focus)PushAllowKeyboardFocus6579,349281
void ImGui::PopAllowKeyboardFocus()PopAllowKeyboardFocus6584,349420
void ImGui::PushButtonRepeat(bool repeat)PushButtonRepeat6589,349485
void ImGui::PopButtonRepeat()PopButtonRepeat6594,349592
void ImGui::PushTextWrapPos(float wrap_pos_x)PushTextWrapPos6599,349651
void ImGui::PopTextWrapPos()PopTextWrapPos6606,349863
bool ImGui::IsWindowChildOf(ImGuiWindow* window, ImGuiWindow* potential_parent)IsWindowChildOf6613,350059
bool ImGui::IsWindowAbove(ImGuiWindow* potential_above, ImGuiWindow* potential_below)IsWindowAbove6626,350387
bool ImGui::IsWindowHovered(ImGuiHoveredFlags flags)IsWindowHovered6640,350806
bool ImGui::IsWindowFocused(ImGuiFocusedFlags flags)IsWindowFocused6679,352211
bool ImGui::IsWindowNavFocusable(ImGuiWindow* window)IsWindowNavFocusable6703,353297
float ImGui::GetWindowWidth()GetWindowWidth6708,353473
float ImGui::GetWindowHeight()GetWindowHeight6714,353590
ImVec2 ImGui::GetWindowPos()GetWindowPos6720,353708
void ImGui::SetWindowPos(ImGuiWindow* window, const ImVec2& pos, ImGuiCond cond)SetWindowPos6727,353847
void ImGui::SetWindowPos(const ImVec2& pos, ImGuiCond cond)SetWindowPos6747,354947
void ImGui::SetWindowPos(const char* name, const ImVec2& pos, ImGuiCond cond)SetWindowPos6753,355105
ImVec2 ImGui::GetWindowSize()GetWindowSize6759,355289
void ImGui::SetWindowSize(ImGuiWindow* window, const ImVec2& size, ImGuiCond cond)SetWindowSize6765,355405
void ImGui::SetWindowSize(const ImVec2& size, ImGuiCond cond)SetWindowSize6797,356360
void ImGui::SetWindowSize(const char* name, const ImVec2& size, ImGuiCond cond)SetWindowSize6802,356486
void ImGui::SetWindowCollapsed(ImGuiWindow* window, bool collapsed, ImGuiCond cond)SetWindowCollapsed6808,356674
void ImGui::SetWindowHitTestHole(ImGuiWindow* window, const ImVec2& pos, const ImVec2& size)SetWindowHitTestHole6819,357094
void ImGui::SetWindowCollapsed(bool collapsed, ImGuiCond cond)SetWindowCollapsed6826,357409
bool ImGui::IsWindowCollapsed()IsWindowCollapsed6831,357546
bool ImGui::IsWindowAppearing()IsWindowAppearing6837,357669
void ImGui::SetWindowCollapsed(const char* name, bool collapsed, ImGuiCond cond)SetWindowCollapsed6843,357792
void ImGui::SetWindowFocus()SetWindowFocus6849,357991
void ImGui::SetWindowFocus(const char* name)SetWindowFocus6854,358070
void ImGui::SetNextWindowPos(const ImVec2& pos, ImGuiCond cond, const ImVec2& pivot)SetNextWindowPos6867,358298
void ImGui::SetNextWindowSize(const ImVec2& size, ImGuiCond cond)SetNextWindowSize6877,358757
void ImGui::SetNextWindowSizeConstraints(const ImVec2& size_min, const ImVec2& size_max, ImGuiSiSetNextWindowSizeConstraints6886,359158
void ImGui::SetNextWindowContentSize(const ImVec2& size)SetNextWindowContentSize6897,359828
void ImGui::SetNextWindowScroll(const ImVec2& scroll)SetNextWindowScroll6904,360052
void ImGui::SetNextWindowCollapsed(bool collapsed, ImGuiCond cond)SetNextWindowCollapsed6911,360256
void ImGui::SetNextWindowFocus()SetNextWindowFocus6920,360678
void ImGui::SetNextWindowBgAlpha(float alpha)SetNextWindowBgAlpha6926,360818
ImDrawList* ImGui::GetWindowDrawList()GetWindowDrawList6933,361015
ImFont* ImGui::GetFont()GetFont6939,361140
float ImGui::GetFontSize()GetFontSize6944,361200
ImVec2 ImGui::GetFontTexUvWhitePixel()GetFontTexUvWhitePixel6949,361266
void ImGui::SetWindowFontScale(float scale)SetWindowFontScale6954,361370
void ImGui::ActivateItem(ImGuiID id)ActivateItem6963,361644
void ImGui::PushFocusScope(ImGuiID id)PushFocusScope6969,361753
void ImGui::PopFocusScope()PopFocusScope6977,361991
void ImGui::SetKeyboardFocusHere(int offset)SetKeyboardFocusHere6986,362280
void ImGui::SetItemDefaultFocus()SetItemDefaultFocus6996,362657
void ImGui::SetStateStorage(ImGuiStorage* tree)SetStateStorage7013,363291
ImGuiStorage* ImGui::GetStateStorage()GetStateStorage7019,363466
void ImGui::PushID(const char* str_id)PushID7025,363601
void ImGui::PushID(const char* str_id_begin, const char* str_id_end)PushID7033,363813
void ImGui::PushID(const void* ptr_id)PushID7041,364073
void ImGui::PushID(int int_id)PushID7049,364285
void ImGui::PushOverrideID(ImGuiID id)PushOverrideID7058,364548
ImGuiID ImGui::GetIDWithSeed(const char* str, const char* str_end, ImGuiID seed)GetIDWithSeed7068,365038
void ImGui::PopID()PopID7079,365390
ImGuiID ImGui::GetID(const char* str_id)GetID7086,365614
ImGuiID ImGui::GetID(const char* str_id_begin, const char* str_id_end)GetID7092,365749
ImGuiID ImGui::GetID(const void* ptr_id)GetID7098,365932
bool ImGui::IsRectVisible(const ImVec2& size)IsRectVisible7104,366067
bool ImGui::IsRectVisible(const ImVec2& rect_min, const ImVec2& rect_max)IsRectVisible7110,366270
bool ImGui::DebugCheckVersionAndDataLayout(const char* version, size_t sz_io, size_t sz_style, sDebugCheckVersionAndDataLayout7126,367232
static void ImGui::ErrorCheckNewFrameSanityChecks()ErrorCheckNewFrameSanityChecks7139,368346
static void ImGui::ErrorCheckEndFrameSanityChecks()ErrorCheckEndFrameSanityChecks7176,371558
void    ImGui::ErrorCheckEndFrameRecover(ImGuiErrorLogCallback log_callback, void* user_data)ErrorCheckEndFrameRecover7217,373920
void ImGuiStackSizes::SetToCurrentState()SetToCurrentState7285,376932
void ImGuiStackSizes::CompareWithCurrentState()CompareWithCurrentState7299,377468
void ImGui::ItemSize(const ImVec2& size, float text_baseline_y)ItemSize7356,380076
void ImGui::ItemSize(const ImRect& bb, float text_baseline_y)ItemSize7389,382146
bool ImGui::ItemAdd(const ImRect& bb, ImGuiID id, const ImRect* nav_bb_arg, ImGuiItemAddFlags flItemAdd7397,382587
void ImGui::SameLine(float offset_from_start_x, float spacing_w)SameLine7462,386118
ImVec2 ImGui::GetCursorScreenPos()GetCursorScreenPos7485,387009
void ImGui::SetCursorScreenPos(const ImVec2& pos)SetCursorScreenPos7491,387138
ImVec2 ImGui::GetCursorPos()GetCursorPos7500,387699
float ImGui::GetCursorPosX()GetCursorPosX7506,387853
float ImGui::GetCursorPosY()GetCursorPosY7512,388013
void ImGui::SetCursorPos(const ImVec2& local_pos)SetCursorPos7518,388173
void ImGui::SetCursorPosX(float x)SetCursorPosX7525,388434
void ImGui::SetCursorPosY(float y)SetCursorPosY7532,388684
ImVec2 ImGui::GetCursorStartPos()GetCursorStartPos7539,388934
void ImGui::Indent(float indent_w)Indent7545,389081
void ImGui::Unindent(float indent_w)Unindent7553,389383
void ImGui::SetNextItemWidth(float item_width)SetNextItemWidth7562,389731
void ImGui::PushItemWidth(float item_width)PushItemWidth7570,389961
void ImGui::PushMultiItemsWidths(int components, float w_full)PushMultiItemsWidths7579,390331
void ImGui::PopItemWidth()PopItemWidth7594,391158
float ImGui::CalcItemWidth()CalcItemWidth7603,391544
ImVec2 ImGui::CalcItemSize(ImVec2 size, float default_w, float default_h)CalcItemSize7625,392473
float ImGui::GetTextLineHeight()GetTextLineHeight7646,393069
float ImGui::GetTextLineHeightWithSpacing()GetTextLineHeightWithSpacing7652,393167
float ImGui::GetFrameHeight()GetFrameHeight7658,393300
float ImGui::GetFrameHeightWithSpacing()GetFrameHeightWithSpacing7664,393427
ImVec2 ImGui::GetContentRegionMax()GetContentRegionMax7673,393806
ImVec2 ImGui::GetContentRegionMaxAbs()GetContentRegionMaxAbs7684,394229
ImVec2 ImGui::GetContentRegionAvail()GetContentRegionAvail7694,394511
ImVec2 ImGui::GetWindowContentRegionMin()GetWindowContentRegionMin7701,394709
ImVec2 ImGui::GetWindowContentRegionMax()GetWindowContentRegionMax7707,394867
float ImGui::GetWindowContentRegionWidth()GetWindowContentRegionWidth7713,395025
void ImGui::BeginGroup()BeginGroup7721,395458
void ImGui::EndGroup()EndGroup7748,396667
static float CalcScrollEdgeSnap(float target, float snap_min, float snap_max, float snap_threshoCalcScrollEdgeSnap7817,400557
static ImVec2 CalcNextScrollFromScrollTargetAndClamp(ImGuiWindow* window)CalcNextScrollFromScrollTargetAndClamp7826,400910
ImVec2 ImGui::ScrollToBringRectIntoView(ImGuiWindow* window, const ImRect& item_rect)ScrollToBringRectIntoView7866,402857
float ImGui::GetScrollX()GetScrollX7895,404375
float ImGui::GetScrollY()GetScrollY7901,404490
float ImGui::GetScrollMaxX()GetScrollMaxX7907,404605
float ImGui::GetScrollMaxY()GetScrollMaxY7913,404726
void ImGui::SetScrollX(ImGuiWindow* window, float scroll_x)SetScrollX7919,404847
void ImGui::SetScrollY(ImGuiWindow* window, float scroll_y)SetScrollY7926,405051
void ImGui::SetScrollX(float scroll_x)SetScrollX7933,405255
void ImGui::SetScrollY(float scroll_y)SetScrollY7939,405379
void ImGui::SetScrollFromPosX(ImGuiWindow* window, float local_x, float center_x_ratio)SetScrollFromPosX7955,406415
void ImGui::SetScrollFromPosY(ImGuiWindow* window, float local_y, float center_y_ratio)SetScrollFromPosY7963,406794
void ImGui::SetScrollFromPosX(float local_x, float center_x_ratio)SetScrollFromPosX7973,407393
void ImGui::SetScrollFromPosY(float local_y, float center_y_ratio)SetScrollFromPosY7979,407567
void ImGui::SetScrollHereX(float center_x_ratio)SetScrollHereX7986,407847
void ImGui::SetScrollHereY(float center_y_ratio)SetScrollHereY7999,408584
void ImGui::BeginTooltip()BeginTooltip8015,409434
void ImGui::BeginTooltipEx(ImGuiWindowFlags extra_flags, ImGuiTooltipFlags tooltip_flags)BeginTooltipEx8020,409538
void ImGui::EndTooltip()EndTooltip8052,411752
void ImGui::SetTooltipV(const char* fmt, va_list args)SetTooltipV8058,411922
void ImGui::SetTooltip(const char* fmt, ...)SetTooltip8065,412095
bool ImGui::IsPopupOpen(ImGuiID id, ImGuiPopupFlags popup_flags)IsPopupOpen8078,412506
bool ImGui::IsPopupOpen(const char* str_id, ImGuiPopupFlags popup_flags)IsPopupOpen8109,413769
ImGuiWindow* ImGui::GetTopMostPopupModal()GetTopMostPopupModal8118,414251
void ImGui::OpenPopup(const char* str_id, ImGuiPopupFlags popup_flags)OpenPopup8128,414565
void ImGui::OpenPopup(ImGuiID id, ImGuiPopupFlags popup_flags)OpenPopup8134,414740
void ImGui::OpenPopupEx(ImGuiID id, ImGuiPopupFlags popup_flags)OpenPopupEx8143,415293
void ImGui::ClosePopupsOverWindow(ImGuiWindow* ref_window, bool restore_focus_to_window_under_poClosePopupsOverWindow8192,417852
void ImGui::ClosePopupToLevel(int remaining, bool restore_focus_to_window_under_popup)ClosePopupToLevel8236,420072
void ImGui::CloseCurrentPopup()CloseCurrentPopup8264,421132
bool ImGui::BeginPopupEx(ImGuiID id, ImGuiWindowFlags flags)BeginPopupEx8295,422647
bool ImGui::BeginPopup(const char* str_id, ImGuiWindowFlags flags)BeginPopup8318,423508
bool ImGui::BeginPopupModal(const char* name, bool* p_open, ImGuiWindowFlags flags)BeginPopupModal8332,424295
void ImGui::EndPopup()EndPopup8364,425683
void ImGui::OpenPopupOnItemClick(const char* str_id, ImGuiPopupFlags popup_flags)OpenPopupOnItemClick8385,426519
bool ImGui::BeginPopupContextItem(const char* str_id, ImGuiPopupFlags popup_flags)BeginPopupContextItem8413,428366
bool ImGui::BeginPopupContextWindow(const char* str_id, ImGuiPopupFlags popup_flags)BeginPopupContextWindow8426,429245
bool ImGui::BeginPopupContextVoid(const char* str_id, ImGuiPopupFlags popup_flags)BeginPopupContextVoid8439,429919
ImVec2 ImGui::FindBestWindowPosForPopupEx(const ImVec2& ref_pos, const ImVec2& size, ImGuiDir* lFindBestWindowPosForPopupEx8457,431182
ImRect ImGui::GetWindowAllowedExtentRect(ImGuiWindow* window)GetWindowAllowedExtentRect8532,435334
ImVec2 ImGui::FindBestWindowPosForPopup(ImGuiWindow* window)FindBestWindowPosForPopup8542,435769
void ImGui::SetNavID(ImGuiID id, ImGuiNavLayer nav_layer, ImGuiID focus_scope_id, const ImRect& SetNavID8587,438804
void ImGui::SetFocusID(ImGuiID id, ImGuiWindow* window)SetFocusID8601,439356
ImGuiDir ImGetDirQuadrantFromDelta(float dx, float dy)ImGetDirQuadrantFromDelta8625,440356
static float inline NavScoreItemDistInterval(float a0, float a1, float b0, float b1)NavScoreItemDistInterval8632,440571
static void inline NavClampRectToVisibleAreaForMoveDir(ImGuiDir move_dir, ImRect& r, const ImRecNavClampRectToVisibleAreaForMoveDir8641,440769
static bool ImGui::NavScoreItem(ImGuiNavItemData* result, ImRect cand)NavScoreItem8656,441392
static void ImGui::NavApplyItemToResult(ImGuiNavItemData* result, ImGuiWindow* window, ImGuiID iNavApplyItemToResult8787,449004
static void ImGui::NavProcessItem(ImGuiWindow* window, const ImRect& nav_bb, const ImGuiID id)NavProcessItem8796,449413
bool ImGui::NavMoveRequestButNoResultYet()NavMoveRequestButNoResultYet8856,452710
void ImGui::NavMoveRequestCancel()NavMoveRequestCancel8862,452888
void ImGui::NavMoveRequestForward(ImGuiDir move_dir, ImGuiDir clip_dir, const ImRect& bb_rel, ImNavMoveRequestForward8869,453027
void ImGui::NavMoveRequestTryWrapping(ImGuiWindow* window, ImGuiNavMoveFlags move_flags)NavMoveRequestTryWrapping8881,453504
static void ImGui::NavSaveLastChildNavWindowIntoParent(ImGuiWindow* nav_window)NavSaveLastChildNavWindowIntoParent8893,454180
static ImGuiWindow* ImGui::NavRestoreLastChildNavWindow(ImGuiWindow* window)NavRestoreLastChildNavWindow8904,454690
void ImGui::NavRestoreLayer(ImGuiNavLayer layer)NavRestoreLayer8911,454927
static inline void ImGui::NavUpdateAnyRequestFlag()NavUpdateAnyRequestFlag8930,455491
void ImGui::NavInitWindow(ImGuiWindow* window, bool force_reinit)NavInitWindow8939,455845
static ImVec2 ImGui::NavCalcPreferredRefPos()NavCalcPreferredRefPos8970,456843
float ImGui::GetNavInputAmount(ImGuiNavInput n, ImGuiInputReadMode mode)GetNavInputAmount8990,457944
ImVec2 ImGui::GetNavInputAmount2d(ImGuiNavDirSourceFlags dir_sources, ImGuiInputReadMode mode, fGetNavInputAmount2d9012,459235
static void ImGui::NavUpdate()NavUpdate9028,460496
        #define NAV_MAP_KEY(NAV_MAP_KEY9054,462018
static void ImGui::NavUpdateInitResult()NavUpdateInitResult9309,476970
static void ImGui::NavUpdateMoveResult()NavUpdateMoveResult9328,477978
static float ImGui::NavUpdatePageUpPageDown()NavUpdatePageUpPageDown9393,481180
static void ImGui::NavEndFrame()NavEndFrame9466,485391
static int ImGui::FindWindowFocusIndex(ImGuiWindow* window)FindWindowFocusIndex9528,488133
static ImGuiWindow* FindWindowNavFocusable(int i_start, int i_stop, int dir) // FIXME-OPT O(N)FindWindowNavFocusable9537,488363
static void NavUpdateWindowingHighlightWindow(int focus_change_dir)NavUpdateWindowingHighlightWindow9546,488719
static void ImGui::NavUpdateWindowing()NavUpdateWindowing9565,489715
static const char* GetFallbackWindowNameForWindowingList(ImGuiWindow* window)GetFallbackWindowNameForWindowingList9716,498034
void ImGui::NavUpdateWindowingOverlay()NavUpdateWindowingOverlay9726,498422
void ImGui::ClearDragDrop()ClearDragDrop9761,500058
bool ImGui::BeginDragDropSource(ImGuiDragDropFlags flags)BeginDragDropSource9782,501136
void ImGui::EndDragDropSource()EndDragDropSource9896,506207
bool ImGui::SetDragDropPayload(const char* type, const void* data, size_t data_size, ImGuiCond cSetDragDropPayload9912,506749
bool ImGui::BeginDragDropTargetCustom(const ImRect& bb, ImGuiID id)BeginDragDropTargetCustom9955,508493
bool ImGui::BeginDragDropTarget()BeginDragDropTarget9982,509746
bool ImGui::IsDragDropPayloadBeingAccepted()IsDragDropPayloadBeingAccepted10009,510722
const ImGuiPayload* ImGui::AcceptDragDropPayload(const char* type, ImGuiDragDropFlags flags)AcceptDragDropPayload10015,510869
const ImGuiPayload* ImGui::GetDragDropPayload()GetDragDropPayload10058,513225
void ImGui::EndDragDropTarget()EndDragDropTarget10065,513488
static inline void LogTextV(ImGuiContext& g, const char* fmt, va_list args)LogTextV10081,514158
void ImGui::LogText(const char* fmt, ...)LogText10095,514516
void ImGui::LogTextV(const char* fmt, va_list args)LogTextV10107,514735
void ImGui::LogRenderedText(const ImVec2* ref_pos, const char* text, const char* text_end)LogRenderedText10119,515184
void ImGui::LogBegin(ImGuiLogType type, int auto_open_depth)LogBegin10178,517404
void ImGui::LogSetNextTextDecoration(const char* prefix, const char* suffix)LogSetNextTextDecoration10195,518092
void ImGui::LogToTTY(int auto_open_depth)LogToTTY10202,518272
void ImGui::LogToFile(int auto_open_depth, const char* filename)LogToFile10215,518602
void ImGui::LogToClipboard(int auto_open_depth)LogToClipboard10240,519426
void ImGui::LogToBuffer(int auto_open_depth)LogToBuffer10248,519611
void ImGui::LogFinish()LogFinish10256,519790
void ImGui::LogButtons()LogButtons10292,520697
void ImGui::UpdateSettings()UpdateSettings10338,522245
void ImGui::MarkIniSettingsDirty()MarkIniSettingsDirty10365,523199
void ImGui::MarkIniSettingsDirty(ImGuiWindow* window)MarkIniSettingsDirty10372,523366
ImGuiWindowSettings* ImGui::CreateNewWindowSettings(const char* name)CreateNewWindowSettings10380,523622
ImGuiWindowSettings* ImGui::FindWindowSettings(ImGuiID id)FindWindowSettings10402,524469
ImGuiWindowSettings* ImGui::FindOrCreateWindowSettings(const char* name)FindOrCreateWindowSettings10411,524788
ImGuiSettingsHandler* ImGui::FindSettingsHandler(const char* type_name)FindSettingsHandler10418,525017
void ImGui::ClearIniSettings()ClearIniSettings10428,525398
void ImGui::LoadIniSettingsFromDisk(const char* ini_filename)LoadIniSettingsFromDisk10437,525727
void ImGui::LoadIniSettingsFromMemory(const char* ini_data, size_t ini_size)LoadIniSettingsFromMemory10448,526106
void ImGui::SaveIniSettingsToDisk(const char* ini_filename)SaveIniSettingsToDisk10518,529369
const char* ImGui::SaveIniSettingsToMemory(size_t* out_size)SaveIniSettingsToMemory10535,529939
static void WindowSettingsHandler_ClearAll(ImGuiContext* ctx, ImGuiSettingsHandler*)WindowSettingsHandler_ClearAll10551,530496
static void* WindowSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, const char* naWindowSettingsHandler_ReadOpen10559,530742
static void WindowSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void* entry, coWindowSettingsHandler_ReadLine10569,531133
static void WindowSettingsHandler_ApplyAll(ImGuiContext* ctx, ImGuiSettingsHandler*)WindowSettingsHandler_ApplyAll10580,531694
static void WindowSettingsHandler_WriteAll(ImGuiContext* ctx, ImGuiSettingsHandler* handler, ImGWindowSettingsHandler_WriteAll10592,532185
ImGuiViewport* ImGui::GetMainViewport()GetMainViewport10637,534366
static void ImGui::UpdateViewportsNewFrame()UpdateViewportsNewFrame10644,534514
static const char* GetClipboardTextFn_DefaultImpl(void*)GetClipboardTextFn_DefaultImpl10688,536389
static void SetClipboardTextFn_DefaultImpl(void*, const char* text)SetClipboardTextFn_DefaultImpl10711,537183
static PasteboardRef main_clipboard = 0;main_clipboard10734,538082
static void SetClipboardTextFn_DefaultImpl(void*, const char* text)SetClipboardTextFn_DefaultImpl10738,538265
static const char* GetClipboardTextFn_DefaultImpl(void*)GetClipboardTextFn_DefaultImpl10751,538743
static const char* GetClipboardTextFn_DefaultImpl(void*)GetClipboardTextFn_DefaultImpl10787,540212
static void SetClipboardTextFn_DefaultImpl(void*, const char* text)SetClipboardTextFn_DefaultImpl10793,540394
static void ImeSetInputScreenPosFn_DefaultImpl(int x, int y)ImeSetInputScreenPosFn_DefaultImpl10813,541045
static void ImeSetInputScreenPosFn_DefaultImpl(int, int) {}ImeSetInputScreenPosFn_DefaultImpl10831,541585
void ImGui::DebugRenderViewportThumbnail(ImDrawList* draw_list, ImGuiViewportP* viewport, const DebugRenderViewportThumbnail10855,542489
static void RenderViewportsThumbnails()RenderViewportsThumbnails10885,544370
static void MetricsHelpMarker(const char* desc)MetricsHelpMarker10907,545362
namespace ImGui { void ShowFontAtlas(ImFontAtlas* atlas); }ImGui10921,545733
void ImGui::ShowMetricsWindow(bool* p_open)ShowMetricsWindow10924,545804
    enum { WRT_OuterRect, WRT_OuterRectClipped, WRT_InnerRect, WRT_InnerClipRect, WRT_WorkRect, __anon27cb1380010310947,546636
    enum { WRT_OuterRect, WRT_OuterRectClipped, WRT_InnerRect, WRT_InnerClipRect, WRT_WorkRect, WRT_OuterRect10947,546636
    enum { WRT_OuterRect, WRT_OuterRectClipped, WRT_InnerRect, WRT_InnerClipRect, WRT_WorkRect, WRT_OuterRectClipped10947,546636
    enum { WRT_OuterRect, WRT_OuterRectClipped, WRT_InnerRect, WRT_InnerClipRect, WRT_WorkRect, WRT_InnerRect10947,546636
    enum { WRT_OuterRect, WRT_OuterRectClipped, WRT_InnerRect, WRT_InnerClipRect, WRT_WorkRect, WRT_InnerClipRect10947,546636
    enum { WRT_OuterRect, WRT_OuterRectClipped, WRT_InnerRect, WRT_InnerClipRect, WRT_WorkRect, WRT_WorkRect10947,546636
    enum { WRT_OuterRect, WRT_OuterRectClipped, WRT_InnerRect, WRT_InnerClipRect, WRT_WorkRect, WRT_Content10947,546636
    enum { WRT_OuterRect, WRT_OuterRectClipped, WRT_InnerRect, WRT_InnerClipRect, WRT_WorkRect, WRT_ContentIdeal10947,546636
    enum { WRT_OuterRect, WRT_OuterRectClipped, WRT_InnerRect, WRT_InnerClipRect, WRT_WorkRect, WRT_ContentRegionRect10947,546636
    enum { WRT_OuterRect, WRT_OuterRectClipped, WRT_InnerRect, WRT_InnerClipRect, WRT_WorkRect, WRT_Count10947,546636
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT___anon27cb1380020310949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_OuterRect10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_InnerRect10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_WorkRect10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_HostClipRect10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_InnerClipRect10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_BackgroundClipRect10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_ColumnsRect10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_ColumnsWorkRect10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_ColumnsClipRect10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_ColumnsContentHeadersUsed10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_ColumnsContentHeadersIdeal10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_ColumnsContentFrozen10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_ColumnsContentUnfrozen10949,546994
    enum { TRT_OuterRect, TRT_InnerRect, TRT_WorkRect, TRT_HostClipRect, TRT_InnerClipRect, TRT_TRT_Count10949,546994
    struct FuncsFuncs10956,547807
        static ImRect GetTableRect(ImGuiTable* table, int rect_type, int n)GetTableRect10958,547832
        static ImRect GetWindowRect(ImGuiWindow* window, int rect_type)GetWindowRect10977,550143
void ImGui::ShowFontAtlas(ImFontAtlas* atlas)ShowFontAtlas11291,565145
void ImGui::DebugNodeColumns(ImGuiOldColumns* columns)DebugNodeColumns11310,565821
void ImGui::DebugNodeDrawList(ImGuiWindow* window, const ImDrawList* draw_list, const char* labeDebugNodeDrawList11321,566496
void ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox(ImDrawList* out_draw_list, const ImDrawList* DebugNodeDrawCmdShowMeshAndBoundingBox11415,571747
void ImGui::DebugNodeFont(ImFont* font)DebugNodeFont11444,573442
void ImGui::DebugNodeStorage(ImGuiStorage* storage, const char* label)DebugNodeStorage11540,578672
void ImGui::DebugNodeTabBar(ImGuiTabBar* tab_bar, const char* label)DebugNodeTabBar11553,579220
void ImGui::DebugNodeViewport(ImGuiViewportP* viewport)DebugNodeViewport11588,581182
void ImGui::DebugNodeWindow(ImGuiWindow* window, const char* label)DebugNodeWindow11608,582417
void ImGui::DebugNodeWindowSettings(ImGuiWindowSettings* settings)DebugNodeWindowSettings11666,586467
void ImGui::DebugNodeWindowsList(ImVector<ImGuiWindow*>* windows, const char* label)DebugNodeWindowsList11672,586744
void ImGui::ShowMetricsWindow(bool*) {}ShowMetricsWindow11688,587170
void ImGui::ShowFontAtlas(ImFontAtlas*) {}ShowFontAtlas11689,587211
void ImGui::DebugNodeColumns(ImGuiOldColumns*) {}DebugNodeColumns11690,587255
void ImGui::DebugNodeDrawList(ImGuiWindow*, const ImDrawList*, const char*) {}DebugNodeDrawList11691,587306
void ImGui::DebugNodeDrawCmdShowMeshAndBoundingBox(ImDrawList*, const ImDrawList*, const ImDrawCDebugNodeDrawCmdShowMeshAndBoundingBox11692,587386
void ImGui::DebugNodeFont(ImFont*) {}DebugNodeFont11693,587503
void ImGui::DebugNodeStorage(ImGuiStorage*, const char*) {}DebugNodeStorage11694,587542
void ImGui::DebugNodeTabBar(ImGuiTabBar*, const char*) {}DebugNodeTabBar11695,587603
void ImGui::DebugNodeWindow(ImGuiWindow*, const char*) {}DebugNodeWindow11696,587662
void ImGui::DebugNodeWindowSettings(ImGuiWindowSettings*) {}DebugNodeWindowSettings11697,587721
void ImGui::DebugNodeWindowsList(ImVector<ImGuiWindow*>*, const char*) {}DebugNodeWindowsList11698,587783
void ImGui::DebugNodeViewport(ImGuiViewportP*) {}DebugNodeViewport11699,587858

../gejo/libs/imgui/imgui.h,117411
#define IMGUI_VERSION IMGUI_VERSION63,2989
#define IMGUI_VERSION_NUM IMGUI_VERSION_NUM64,3037
#define IMGUI_CHECKVERSION(IMGUI_CHECKVERSION65,3080
#define IMGUI_HAS_TABLEIMGUI_HAS_TABLE66,3278
#define IMGUI_APIIMGUI_API72,3721
#define IMGUI_IMPL_API IMGUI_IMPL_API75,3772
#define IM_ASSERT(IM_ASSERT81,3887
#define IM_ARRAYSIZE(IM_ARRAYSIZE83,4045
#define IM_UNUSED(IM_UNUSED84,4184
#define IM_OFFSETOF(IM_OFFSETOF86,4453
#define IM_OFFSETOF(IM_OFFSETOF88,4612
#define IM_FMTARGS(IM_FMTARGS93,4915
#define IM_FMTLIST(IM_FMTLIST94,4996
#define IM_FMTARGS(IM_FMTARGS96,5157
#define IM_FMTLIST(IM_FMTLIST97,5242
#define IM_FMTARGS(IM_FMTARGS99,5330
#define IM_FMTLIST(IM_FMTLIST100,5355
#define IM_MSVC_RUNTIME_CHECKS_OFF IM_MSVC_RUNTIME_CHECKS_OFF105,5600
#define IM_MSVC_RUNTIME_CHECKS_RESTORE IM_MSVC_RUNTIME_CHECKS_RESTORE106,5741
#define IM_MSVC_RUNTIME_CHECKS_OFFIM_MSVC_RUNTIME_CHECKS_OFF108,5884
#define IM_MSVC_RUNTIME_CHECKS_RESTOREIM_MSVC_RUNTIME_CHECKS_RESTORE109,5920
typedef int ImGuiCol;               // -> enum ImGuiCol_             // Enum: A color identifierImGuiCol167,10928
typedef int ImGuiCond;              // -> enum ImGuiCond_            // Enum: A condition for maImGuiCond168,11038
typedef int ImGuiDataType;          // -> enum ImGuiDataType_        // Enum: A primary data typImGuiDataType169,11155
typedef int ImGuiDir;               // -> enum ImGuiDir_             // Enum: A cardinal directiImGuiDir170,11254
typedef int ImGuiKey;               // -> enum ImGuiKey_             // Enum: A key identifier (ImGuiKey171,11354
typedef int ImGuiNavInput;          // -> enum ImGuiNavInput_        // Enum: An input identifieImGuiNavInput172,11468
typedef int ImGuiMouseButton;       // -> enum ImGuiMouseButton_     // Enum: A mouse button ideImGuiMouseButton173,11582
typedef int ImGuiMouseCursor;       // -> enum ImGuiMouseCursor_     // Enum: A mouse cursor ideImGuiMouseCursor174,11715
typedef int ImGuiSortDirection;     // -> enum ImGuiSortDirection_   // Enum: A sorting directioImGuiSortDirection175,11820
typedef int ImGuiStyleVar;          // -> enum ImGuiStyleVar_        // Enum: A variable identifImGuiStyleVar176,11945
typedef int ImGuiTableBgTarget;     // -> enum ImGuiTableBgTarget_   // Enum: A color target forImGuiTableBgTarget177,12058
typedef int ImDrawFlags;            // -> enum ImDrawFlags_          // Flags: for ImDrawList fuImDrawFlags178,12174
typedef int ImDrawListFlags;        // -> enum ImDrawListFlags_      // Flags: for ImDrawList inImDrawListFlags179,12279
typedef int ImFontAtlasFlags;       // -> enum ImFontAtlasFlags_     // Flags: for ImFontAtlas bImFontAtlasFlags180,12383
typedef int ImGuiBackendFlags;      // -> enum ImGuiBackendFlags_    // Flags: for io.BackendFlaImGuiBackendFlags181,12485
typedef int ImGuiButtonFlags;       // -> enum ImGuiButtonFlags_     // Flags: for InvisibleButtImGuiButtonFlags182,12585
typedef int ImGuiColorEditFlags;    // -> enum ImGuiColorEditFlags_  // Flags: for ColorEdit4(),ImGuiColorEditFlags183,12687
typedef int ImGuiConfigFlags;       // -> enum ImGuiConfigFlags_     // Flags: for io.ConfigFlagImGuiConfigFlags184,12805
typedef int ImGuiComboFlags;        // -> enum ImGuiComboFlags_      // Flags: for BeginCombo()ImGuiComboFlags185,12904
typedef int ImGuiDragDropFlags;     // -> enum ImGuiDragDropFlags_   // Flags: for BeginDragDropImGuiDragDropFlags186,13001
typedef int ImGuiFocusedFlags;      // -> enum ImGuiFocusedFlags_    // Flags: for IsWindowFocusImGuiFocusedFlags187,13132
typedef int ImGuiHoveredFlags;      // -> enum ImGuiHoveredFlags_    // Flags: for IsItemHoveredImGuiHoveredFlags188,13234
typedef int ImGuiInputTextFlags;    // -> enum ImGuiInputTextFlags_  // Flags: for InputText(), ImGuiInputTextFlags189,13358
typedef int ImGuiKeyModFlags;       // -> enum ImGuiKeyModFlags_     // Flags: for io.KeyMods (CImGuiKeyModFlags190,13476
typedef int ImGuiPopupFlags;        // -> enum ImGuiPopupFlags_      // Flags: for OpenPopup*(),ImGuiPopupFlags191,13594
typedef int ImGuiSelectableFlags;   // -> enum ImGuiSelectableFlags_ // Flags: for Selectable()ImGuiSelectableFlags192,13728
typedef int ImGuiSliderFlags;       // -> enum ImGuiSliderFlags_     // Flags: for DragFloat(), ImGuiSliderFlags193,13825
typedef int ImGuiTabBarFlags;       // -> enum ImGuiTabBarFlags_     // Flags: for BeginTabBar()ImGuiTabBarFlags194,13965
typedef int ImGuiTabItemFlags;      // -> enum ImGuiTabItemFlags_    // Flags: for BeginTabItem(ImGuiTabItemFlags195,14063
typedef int ImGuiTableFlags;        // -> enum ImGuiTableFlags_      // Flags: For BeginTable()ImGuiTableFlags196,14162
typedef int ImGuiTableColumnFlags;  // -> enum ImGuiTableColumnFlags_// Flags: For TableSetupColImGuiTableColumnFlags197,14259
typedef int ImGuiTableRowFlags;     // -> enum ImGuiTableRowFlags_   // Flags: For TableNextRow(ImGuiTableRowFlags198,14362
typedef int ImGuiTreeNodeFlags;     // -> enum ImGuiTreeNodeFlags_   // Flags: for TreeNode(), TImGuiTreeNodeFlags199,14461
typedef int ImGuiViewportFlags;     // -> enum ImGuiViewportFlags_   // Flags: for ImGuiViewportImGuiViewportFlags200,14590
typedef int ImGuiWindowFlags;       // -> enum ImGuiWindowFlags_     // Flags: for Begin(), BegiImGuiWindowFlags201,14688
typedef void* ImTextureID;          // User data for rendering backend to identify a texture. ThImTextureID205,14939
typedef unsigned int ImGuiID;       // A unique ID used by widgets, typically hashed from a stacImGuiID207,15125
typedef int (*ImGuiInputTextCallback)(ImGuiInputTextCallbackData* data);    // Callback functionImGuiInputTextCallback208,15235
typedef void (*ImGuiSizeCallback)(ImGuiSizeCallbackData* data);             // Callback functionImGuiSizeCallback209,15356
typedef void* (*ImGuiMemAllocFunc)(size_t sz, void* user_data);             // Function signaturImGuiMemAllocFunc210,15496
typedef void (*ImGuiMemFreeFunc)(void* ptr, void* user_data);               // Function signaturImGuiMemFreeFunc211,15630
typedef unsigned short ImWchar16;   // A single decoded U16 character/code point. We encode themImWchar16215,15931
typedef unsigned int ImWchar32;     // A single decoded U32 character/code point. We encode themImWchar32216,16072
typedef ImWchar32 ImWchar;ImWchar218,16369
typedef ImWchar16 ImWchar;ImWchar220,16404
typedef signed char         ImS8;   // 8-bit signed integerImS8224,16470
typedef unsigned char       ImU8;   // 8-bit unsigned integerImU8225,16531
typedef signed short        ImS16;  // 16-bit signed integerImS16226,16594
typedef unsigned short      ImU16;  // 16-bit unsigned integerImU16227,16656
typedef signed int          ImS32;  // 32-bit signed integer == intImS32228,16720
typedef unsigned int        ImU32;  // 32-bit unsigned integer (often used to store packed colorImU32229,16789
typedef signed   __int64    ImS64;  // 64-bit signed integer (pre and post C++11 with Visual StuImS64231,16935
typedef unsigned __int64    ImU64;  // 64-bit unsigned integer (pre and post C++11 with Visual SImU64232,17037
typedef int64_t             ImS64;  // 64-bit signed integer (pre C++11)ImS64235,17237
typedef uint64_t            ImU64;  // 64-bit unsigned integer (pre C++11)ImU64236,17311
typedef signed   long long  ImS64;  // 64-bit signed integer (post C++11)ImS64238,17394
typedef unsigned long long  ImU64;  // 64-bit unsigned integer (post C++11)ImU64239,17469
struct ImVec2ImVec2244,17639
    float                                   x, y;x246,17657
    float                                   x, y;y246,17657
    ImVec2()                                { x = y = 0.0f; }ImVec2247,17708
    ImVec2(float _x, float _y)              { x = _x; y = _y; }ImVec2248,17771
    float  operator[] (size_t idx) const    { IM_ASSERT(idx <= 1); return (&x)[idx]; }    // We operator [] 249,17836
    float& operator[] (size_t idx)          { IM_ASSERT(idx <= 1); return (&x)[idx]; }    // We operator [] 250,17996
struct ImVec4ImVec4257,18423
    float                                           x, y, z, w;x259,18441
    float                                           x, y, z, w;y259,18441
    float                                           x, y, z, w;z259,18441
    float                                           x, y, z, w;w259,18441
    ImVec4()                                        { x = y = z = w = 0.0f; }ImVec4260,18506
    ImVec4(float _x, float _y, float _z, float _w)  { x = _x; y = _y; z = _z; w = _w; }ImVec4261,18585
namespace ImGuiImGui273,19273
enum ImGuiWindowFlags_ImGuiWindowFlags_913,106095
    ImGuiWindowFlags_None                   = 0,ImGuiWindowFlags_None915,106122
    ImGuiWindowFlags_NoTitleBar             = 1 << 0,   // Disable title-barImGuiWindowFlags_NoTitleBar916,106172
    ImGuiWindowFlags_NoResize               = 1 << 1,   // Disable user resizing with the lower-ImGuiWindowFlags_NoResize917,106250
    ImGuiWindowFlags_NoMove                 = 1 << 2,   // Disable user moving the windowImGuiWindowFlags_NoMove918,106358
    ImGuiWindowFlags_NoScrollbar            = 1 << 3,   // Disable scrollbars (window can still ImGuiWindowFlags_NoScrollbar919,106449
    ImGuiWindowFlags_NoScrollWithMouse      = 1 << 4,   // Disable user vertically scrolling witImGuiWindowFlags_NoScrollWithMouse920,106585
    ImGuiWindowFlags_NoCollapse             = 1 << 5,   // Disable user collapsing window by douImGuiWindowFlags_NoCollapse921,106790
    ImGuiWindowFlags_AlwaysAutoResize       = 1 << 6,   // Resize every window to its content evImGuiWindowFlags_AlwaysAutoResize922,106906
    ImGuiWindowFlags_NoBackground           = 1 << 7,   // Disable drawing background color (WinImGuiWindowFlags_NoBackground923,107013
    ImGuiWindowFlags_NoSavedSettings        = 1 << 8,   // Never load/save settings in .ini fileImGuiWindowFlags_NoSavedSettings924,107188
    ImGuiWindowFlags_NoMouseInputs          = 1 << 9,   // Disable catching mouse, hovering testImGuiWindowFlags_NoMouseInputs925,107286
    ImGuiWindowFlags_MenuBar                = 1 << 10,  // Has a menu-barImGuiWindowFlags_MenuBar926,107403
    ImGuiWindowFlags_HorizontalScrollbar    = 1 << 11,  // Allow horizontal scrollbar to appear ImGuiWindowFlags_HorizontalScrollbar927,107478
    ImGuiWindowFlags_NoFocusOnAppearing     = 1 << 12,  // Disable taking focus when transitioniImGuiWindowFlags_NoFocusOnAppearing928,107757
    ImGuiWindowFlags_NoBringToFrontOnFocus  = 1 << 13,  // Disable bringing window to front whenImGuiWindowFlags_NoBringToFrontOnFocus929,107886
    ImGuiWindowFlags_AlwaysVerticalScrollbar= 1 << 14,  // Always show vertical scrollbar (even ImGuiWindowFlags_AlwaysVerticalScrollbar930,108055
    ImGuiWindowFlags_AlwaysHorizontalScrollbar=1<< 15,  // Always show horizontal scrollbar (eveImGuiWindowFlags_AlwaysHorizontalScrollbar931,108179
    ImGuiWindowFlags_AlwaysUseWindowPadding = 1 << 16,  // Ensure child windows without border uImGuiWindowFlags_AlwaysUseWindowPadding932,108305
    ImGuiWindowFlags_NoNavInputs            = 1 << 18,  // No gamepad/keyboard navigation withinImGuiWindowFlags_NoNavInputs933,108503
    ImGuiWindowFlags_NoNavFocus             = 1 << 19,  // No focusing toward this window with gImGuiWindowFlags_NoNavFocus934,108612
    ImGuiWindowFlags_UnsavedDocument        = 1 << 20,  // Append '*' to title without affectingImGuiWindowFlags_UnsavedDocument935,108763
    ImGuiWindowFlags_NoNav                  = ImGuiWindowFlags_NoNavInputs | ImGuiWindowFlags_NoImGuiWindowFlags_NoNav936,109106
    ImGuiWindowFlags_NoDecoration           = ImGuiWindowFlags_NoTitleBar | ImGuiWindowFlags_NoRImGuiWindowFlags_NoDecoration937,109213
    ImGuiWindowFlags_NoInputs               = ImGuiWindowFlags_NoMouseInputs | ImGuiWindowFlags_ImGuiWindowFlags_NoInputs938,109378
    ImGuiWindowFlags_NavFlattened           = 1 << 23,  // [BETA] Allow gamepad/keyboard navigatImGuiWindowFlags_NavFlattened941,109539
    ImGuiWindowFlags_ChildWindow            = 1 << 24,  // Don't use! For internal use by BeginCImGuiWindowFlags_ChildWindow942,109726
    ImGuiWindowFlags_Tooltip                = 1 << 25,  // Don't use! For internal use by BeginTImGuiWindowFlags_Tooltip943,109830
    ImGuiWindowFlags_Popup                  = 1 << 26,  // Don't use! For internal use by BeginPImGuiWindowFlags_Popup944,109936
    ImGuiWindowFlags_Modal                  = 1 << 27,  // Don't use! For internal use by BeginPImGuiWindowFlags_Modal945,110040
    ImGuiWindowFlags_ChildMenu              = 1 << 28   // Don't use! For internal use by BeginMImGuiWindowFlags_ChildMenu946,110149
enum ImGuiInputTextFlags_ImGuiInputTextFlags_953,110524
    ImGuiInputTextFlags_None                = 0,ImGuiInputTextFlags_None955,110554
    ImGuiInputTextFlags_CharsDecimal        = 1 << 0,   // Allow 0123456789.+-*/ImGuiInputTextFlags_CharsDecimal956,110604
    ImGuiInputTextFlags_CharsHexadecimal    = 1 << 1,   // Allow 0123456789ABCDEFabcdefImGuiInputTextFlags_CharsHexadecimal957,110686
    ImGuiInputTextFlags_CharsUppercase      = 1 << 2,   // Turn a..z into A..ZImGuiInputTextFlags_CharsUppercase958,110775
    ImGuiInputTextFlags_CharsNoBlank        = 1 << 3,   // Filter out spaces, tabsImGuiInputTextFlags_CharsNoBlank959,110855
    ImGuiInputTextFlags_AutoSelectAll       = 1 << 4,   // Select entire text when first taking ImGuiInputTextFlags_AutoSelectAll960,110939
    ImGuiInputTextFlags_EnterReturnsTrue    = 1 << 5,   // Return 'true' when Enter is pressed (ImGuiInputTextFlags_EnterReturnsTrue961,111048
    ImGuiInputTextFlags_CallbackCompletion  = 1 << 6,   // Callback on pressing TAB (for completImGuiInputTextFlags_CallbackCompletion962,111258
    ImGuiInputTextFlags_CallbackHistory     = 1 << 7,   // Callback on pressing Up/Down arrows (ImGuiInputTextFlags_CallbackHistory963,111369
    ImGuiInputTextFlags_CallbackAlways      = 1 << 8,   // Callback on each iteration. User codeImGuiInputTextFlags_CallbackAlways964,111488
    ImGuiInputTextFlags_CallbackCharFilter  = 1 << 9,   // Callback on character inputs to replaImGuiInputTextFlags_CallbackCharFilter965,111633
    ImGuiInputTextFlags_AllowTabInput       = 1 << 10,  // Pressing TAB input a '\t' character iImGuiInputTextFlags_AllowTabInput966,111828
    ImGuiInputTextFlags_CtrlEnterForNewLine = 1 << 11,  // In multi-line mode, unfocus with EnteImGuiInputTextFlags_CtrlEnterForNewLine967,111944
    ImGuiInputTextFlags_NoHorizontalScroll  = 1 << 12,  // Disable following the cursor horizontImGuiInputTextFlags_NoHorizontalScroll968,112142
    ImGuiInputTextFlags_AlwaysOverwrite     = 1 << 13,  // Overwrite modeImGuiInputTextFlags_AlwaysOverwrite969,112244
    ImGuiInputTextFlags_ReadOnly            = 1 << 14,  // Read-only modeImGuiInputTextFlags_ReadOnly970,112319
    ImGuiInputTextFlags_Password            = 1 << 15,  // Password mode, display all charactersImGuiInputTextFlags_Password971,112394
    ImGuiInputTextFlags_NoUndoRedo          = 1 << 16,  // Disable undo/redo. Note that input teImGuiInputTextFlags_NoUndoRedo972,112499
    ImGuiInputTextFlags_CharsScientific     = 1 << 17,  // Allow 0123456789.+-*/eE (Scientific nImGuiInputTextFlags_CharsScientific973,112719
    ImGuiInputTextFlags_CallbackResize      = 1 << 18,  // Callback on buffer capacity changes rImGuiInputTextFlags_CallbackResize974,112831
    ImGuiInputTextFlags_CallbackEdit        = 1 << 19   // Callback on any edit (note that InputImGuiInputTextFlags_CallbackEdit975,113229
    , ImGuiInputTextFlags_AlwaysInsertMode    = ImGuiInputTextFlags_AlwaysOverwrite   // [renameImGuiInputTextFlags_AlwaysInsertMode979,113542
enum ImGuiTreeNodeFlags_ImGuiTreeNodeFlags_984,113757
    ImGuiTreeNodeFlags_None                 = 0,ImGuiTreeNodeFlags_None986,113786
    ImGuiTreeNodeFlags_Selected             = 1 << 0,   // Draw as selectedImGuiTreeNodeFlags_Selected987,113836
    ImGuiTreeNodeFlags_Framed               = 1 << 1,   // Draw frame with background (e.g. for ImGuiTreeNodeFlags_Framed988,113913
    ImGuiTreeNodeFlags_AllowItemOverlap     = 1 << 2,   // Hit testing to allow subsequent widgeImGuiTreeNodeFlags_AllowItemOverlap989,114028
    ImGuiTreeNodeFlags_NoTreePushOnOpen     = 1 << 3,   // Don't do a TreePush() when open (e.g.ImGuiTreeNodeFlags_NoTreePushOnOpen990,114148
    ImGuiTreeNodeFlags_NoAutoOpenOnLog      = 1 << 4,   // Don't automatically and temporarily oImGuiTreeNodeFlags_NoAutoOpenOnLog991,114310
    ImGuiTreeNodeFlags_DefaultOpen          = 1 << 5,   // Default node to be openImGuiTreeNodeFlags_DefaultOpen992,114495
    ImGuiTreeNodeFlags_OpenOnDoubleClick    = 1 << 6,   // Need double-click to open nodeImGuiTreeNodeFlags_OpenOnDoubleClick993,114579
    ImGuiTreeNodeFlags_OpenOnArrow          = 1 << 7,   // Only open when clicking on the arrow ImGuiTreeNodeFlags_OpenOnArrow994,114670
    ImGuiTreeNodeFlags_Leaf                 = 1 << 8,   // No collapsing, no arrow (use as a conImGuiTreeNodeFlags_Leaf995,114878
    ImGuiTreeNodeFlags_Bullet               = 1 << 9,   // Display a bullet instead of arrowImGuiTreeNodeFlags_Bullet996,115001
    ImGuiTreeNodeFlags_FramePadding         = 1 << 10,  // Use FramePadding (even for an unframeImGuiTreeNodeFlags_FramePadding997,115095
    ImGuiTreeNodeFlags_SpanAvailWidth       = 1 << 11,  // Extend hit box to the right-most edgeImGuiTreeNodeFlags_SpanAvailWidth998,115314
    ImGuiTreeNodeFlags_SpanFullWidth        = 1 << 12,  // Extend hit box to the left-most and rImGuiTreeNodeFlags_SpanFullWidth999,115642
    ImGuiTreeNodeFlags_NavLeftJumpsBackHere = 1 << 13,  // (WIP) Nav: left direction may move toImGuiTreeNodeFlags_NavLeftJumpsBackHere1000,115783
    ImGuiTreeNodeFlags_CollapsingHeader     = ImGuiTreeNodeFlags_Framed | ImGuiTreeNodeFlags_NoTImGuiTreeNodeFlags_CollapsingHeader1002,116127
enum ImGuiPopupFlags_ImGuiPopupFlags_1013,117145
    ImGuiPopupFlags_None                    = 0,ImGuiPopupFlags_None1015,117171
    ImGuiPopupFlags_MouseButtonLeft         = 0,        // For BeginPopupContext*(): open on LefImGuiPopupFlags_MouseButtonLeft1016,117221
    ImGuiPopupFlags_MouseButtonRight        = 1,        // For BeginPopupContext*(): open on RigImGuiPopupFlags_MouseButtonRight1017,117396
    ImGuiPopupFlags_MouseButtonMiddle       = 2,        // For BeginPopupContext*(): open on MidImGuiPopupFlags_MouseButtonMiddle1018,117573
    ImGuiPopupFlags_MouseButtonMask_        = 0x1F,ImGuiPopupFlags_MouseButtonMask_1019,117752
    ImGuiPopupFlags_MouseButtonDefault_     = 1,ImGuiPopupFlags_MouseButtonDefault_1020,117805
    ImGuiPopupFlags_NoOpenOverExistingPopup = 1 << 5,   // For OpenPopup*(), BeginPopupContext*(ImGuiPopupFlags_NoOpenOverExistingPopup1021,117855
    ImGuiPopupFlags_NoOpenOverItems         = 1 << 6,   // For BeginPopupContextWindow(): don't ImGuiPopupFlags_NoOpenOverItems1022,118030
    ImGuiPopupFlags_AnyPopupId              = 1 << 7,   // For IsPopupOpen(): ignore the ImGuiIDImGuiPopupFlags_AnyPopupId1023,118191
    ImGuiPopupFlags_AnyPopupLevel           = 1 << 8,   // For IsPopupOpen(): search/test at anyImGuiPopupFlags_AnyPopupLevel1024,118323
    ImGuiPopupFlags_AnyPopup                = ImGuiPopupFlags_AnyPopupId | ImGuiPopupFlags_AnyPoImGuiPopupFlags_AnyPopup1025,118482
enum ImGuiSelectableFlags_ImGuiSelectableFlags_1029,118628
    ImGuiSelectableFlags_None               = 0,ImGuiSelectableFlags_None1031,118659
    ImGuiSelectableFlags_DontClosePopups    = 1 << 0,   // Clicking this don't close parent popuImGuiSelectableFlags_DontClosePopups1032,118709
    ImGuiSelectableFlags_SpanAllColumns     = 1 << 1,   // Selectable frame can span all columnsImGuiSelectableFlags_SpanAllColumns1033,118815
    ImGuiSelectableFlags_AllowDoubleClick   = 1 << 2,   // Generate press events on double clickImGuiSelectableFlags_AllowDoubleClick1034,118953
    ImGuiSelectableFlags_Disabled           = 1 << 3,   // Cannot be selected, display grayed ouImGuiSelectableFlags_Disabled1035,119056
    ImGuiSelectableFlags_AllowItemOverlap   = 1 << 4    // (WIP) Hit testing to allow subsequentImGuiSelectableFlags_AllowItemOverlap1036,119160
enum ImGuiComboFlags_ImGuiComboFlags_1040,119326
    ImGuiComboFlags_None                    = 0,ImGuiComboFlags_None1042,119352
    ImGuiComboFlags_PopupAlignLeft          = 1 << 0,   // Align the popup toward the left by deImGuiComboFlags_PopupAlignLeft1043,119402
    ImGuiComboFlags_HeightSmall             = 1 << 1,   // Max ~4 items visible. Tip: If you wanImGuiComboFlags_HeightSmall1044,119505
    ImGuiComboFlags_HeightRegular           = 1 << 2,   // Max ~8 items visible (default)ImGuiComboFlags_HeightRegular1045,119716
    ImGuiComboFlags_HeightLarge             = 1 << 3,   // Max ~20 items visibleImGuiComboFlags_HeightLarge1046,119807
    ImGuiComboFlags_HeightLargest           = 1 << 4,   // As many fitting items as possibleImGuiComboFlags_HeightLargest1047,119889
    ImGuiComboFlags_NoArrowButton           = 1 << 5,   // Display on the preview box without thImGuiComboFlags_NoArrowButton1048,119983
    ImGuiComboFlags_NoPreview               = 1 << 6,   // Display only a square arrow buttonImGuiComboFlags_NoPreview1049,120102
    ImGuiComboFlags_HeightMask_             = ImGuiComboFlags_HeightSmall | ImGuiComboFlags_HeigImGuiComboFlags_HeightMask_1050,120197
enum ImGuiTabBarFlags_ImGuiTabBarFlags_1054,120407
    ImGuiTabBarFlags_None                           = 0,ImGuiTabBarFlags_None1056,120434
    ImGuiTabBarFlags_Reorderable                    = 1 << 0,   // Allow manually dragging tabs ImGuiTabBarFlags_Reorderable1057,120492
    ImGuiTabBarFlags_AutoSelectNewTabs              = 1 << 1,   // Automatically select new tabsImGuiTabBarFlags_AutoSelectNewTabs1058,120649
    ImGuiTabBarFlags_TabListPopupButton             = 1 << 2,   // Disable buttons to open the tImGuiTabBarFlags_TabListPopupButton1059,120764
    ImGuiTabBarFlags_NoCloseWithMiddleMouseButton   = 1 << 3,   // Disable behavior of closing tImGuiTabBarFlags_NoCloseWithMiddleMouseButton1060,120875
    ImGuiTabBarFlags_NoTabListScrollingButtons      = 1 << 4,   // Disable scrolling buttons (apImGuiTabBarFlags_NoTabListScrollingButtons1061,121156
    ImGuiTabBarFlags_NoTooltip                      = 1 << 5,   // Disable tooltips when hoverinImGuiTabBarFlags_NoTooltip1062,121318
    ImGuiTabBarFlags_FittingPolicyResizeDown        = 1 << 6,   // Resize tabs when they don't fImGuiTabBarFlags_FittingPolicyResizeDown1063,121423
    ImGuiTabBarFlags_FittingPolicyScroll            = 1 << 7,   // Add scroll buttons when tabs ImGuiTabBarFlags_FittingPolicyScroll1064,121523
    ImGuiTabBarFlags_FittingPolicyMask_             = ImGuiTabBarFlags_FittingPolicyResizeDown |ImGuiTabBarFlags_FittingPolicyMask_1065,121630
    ImGuiTabBarFlags_FittingPolicyDefault_          = ImGuiTabBarFlags_FittingPolicyResizeDownImGuiTabBarFlags_FittingPolicyDefault_1066,121766
enum ImGuiTabItemFlags_ImGuiTabItemFlags_1070,121904
    ImGuiTabItemFlags_None                          = 0,ImGuiTabItemFlags_None1072,121932
    ImGuiTabItemFlags_UnsavedDocument               = 1 << 0,   // Append '*' to title without aImGuiTabItemFlags_UnsavedDocument1073,121990
    ImGuiTabItemFlags_SetSelected                   = 1 << 1,   // Trigger flag to programmaticaImGuiTabItemFlags_SetSelected1074,122266
    ImGuiTabItemFlags_NoCloseWithMiddleMouseButton  = 1 << 2,   // Disable behavior of closing tImGuiTabItemFlags_NoCloseWithMiddleMouseButton1075,122417
    ImGuiTabItemFlags_NoPushId                      = 1 << 3,   // Don't call PushID(tab->ID)/PoImGuiTabItemFlags_NoPushId1076,122698
    ImGuiTabItemFlags_NoTooltip                     = 1 << 4,   // Disable tooltip for the givenImGuiTabItemFlags_NoTooltip1077,122832
    ImGuiTabItemFlags_NoReorder                     = 1 << 5,   // Disable reordering this tab oImGuiTabItemFlags_NoReorder1078,122934
    ImGuiTabItemFlags_Leading                       = 1 << 6,   // Enforce the tab position to tImGuiTabItemFlags_Leading1079,123072
    ImGuiTabItemFlags_Trailing                      = 1 << 7    // Enforce the tab position to tImGuiTabItemFlags_Trailing1080,123226
enum ImGuiTableFlags_ImGuiTableFlags_1106,125624
    ImGuiTableFlags_None                       = 0,ImGuiTableFlags_None1109,125667
    ImGuiTableFlags_Resizable                  = 1 << 0,   // Enable resizing columns.ImGuiTableFlags_Resizable1110,125720
    ImGuiTableFlags_Reorderable                = 1 << 1,   // Enable reordering columns in headeImGuiTableFlags_Reorderable1111,125808
    ImGuiTableFlags_Hideable                   = 1 << 2,   // Enable hiding/disabling columns inImGuiTableFlags_Hideable1112,125984
    ImGuiTableFlags_Sortable                   = 1 << 3,   // Enable sorting. Call TableGetSortSImGuiTableFlags_Sortable1113,126096
    ImGuiTableFlags_NoSavedSettings            = 1 << 4,   // Disable persisting columns order, ImGuiTableFlags_NoSavedSettings1114,126291
    ImGuiTableFlags_ContextMenuInBody          = 1 << 5,   // Right-click on columns body/contenImGuiTableFlags_ContextMenuInBody1115,126430
    ImGuiTableFlags_RowBg                      = 1 << 6,   // Set each RowBg color with ImGuiColImGuiTableFlags_RowBg1117,126632
    ImGuiTableFlags_BordersInnerH              = 1 << 7,   // Draw horizontal borders between roImGuiTableFlags_BordersInnerH1118,126858
    ImGuiTableFlags_BordersOuterH              = 1 << 8,   // Draw horizontal borders at the topImGuiTableFlags_BordersOuterH1119,126959
    ImGuiTableFlags_BordersInnerV              = 1 << 9,   // Draw vertical borders between coluImGuiTableFlags_BordersInnerV1120,127069
    ImGuiTableFlags_BordersOuterV              = 1 << 10,  // Draw vertical borders on the left ImGuiTableFlags_BordersOuterV1121,127171
    ImGuiTableFlags_BordersH                   = ImGuiTableFlags_BordersInnerH | ImGuiTableFlagsImGuiTableFlags_BordersH1122,127285
    ImGuiTableFlags_BordersV                   = ImGuiTableFlags_BordersInnerV | ImGuiTableFlagsImGuiTableFlags_BordersV1123,127426
    ImGuiTableFlags_BordersInner               = ImGuiTableFlags_BordersInnerV | ImGuiTableFlagsImGuiTableFlags_BordersInner1124,127565
    ImGuiTableFlags_BordersOuter               = ImGuiTableFlags_BordersOuterV | ImGuiTableFlagsImGuiTableFlags_BordersOuter1125,127701
    ImGuiTableFlags_Borders                    = ImGuiTableFlags_BordersInner | ImGuiTableFlags_ImGuiTableFlags_Borders1126,127837
    ImGuiTableFlags_NoBordersInBody            = 1 << 11,  // [ALPHA] Disable vertical borders iImGuiTableFlags_NoBordersInBody1127,127971
    ImGuiTableFlags_NoBordersInBodyUntilResize = 1 << 12,  // [ALPHA] Disable vertical borders iImGuiTableFlags_NoBordersInBodyUntilResize1128,128146
    ImGuiTableFlags_SizingFixedFit             = 1 << 13,  // Columns default to _WidthFixed or ImGuiTableFlags_SizingFixedFit1130,128394
    ImGuiTableFlags_SizingFixedSame            = 2 << 13,  // Columns default to _WidthFixed or ImGuiTableFlags_SizingFixedSame1131,128560
    ImGuiTableFlags_SizingStretchProp          = 3 << 13,  // Columns default to _WidthStretch wImGuiTableFlags_SizingStretchProp1132,128809
    ImGuiTableFlags_SizingStretchSame          = 4 << 13,  // Columns default to _WidthStretch wImGuiTableFlags_SizingStretchSame1133,128972
    ImGuiTableFlags_NoHostExtendX              = 1 << 16,  // Make outer width auto-fit to columImGuiTableFlags_NoHostExtendX1135,129170
    ImGuiTableFlags_NoHostExtendY              = 1 << 17,  // Make outer height stop exactly at ImGuiTableFlags_NoHostExtendY1136,129385
    ImGuiTableFlags_NoKeepColumnsVisible       = 1 << 18,  // Disable keeping column always miniImGuiTableFlags_NoKeepColumnsVisible1137,129646
    ImGuiTableFlags_PreciseWidths              = 1 << 19,  // Disable distributing remainder widImGuiTableFlags_PreciseWidths1138,129845
    ImGuiTableFlags_NoClip                     = 1 << 20,  // Disable clipping rectangle for eveImGuiTableFlags_NoClip1140,130164
    ImGuiTableFlags_PadOuterX                  = 1 << 21,  // Default if BordersOuterV is on. EnImGuiTableFlags_PadOuterX1142,130433
    ImGuiTableFlags_NoPadOuterX                = 1 << 22,  // Default if BordersOuterV is off. DImGuiTableFlags_NoPadOuterX1143,130596
    ImGuiTableFlags_NoPadInnerX                = 1 << 23,  // Disable inner padding between coluImGuiTableFlags_NoPadInnerX1144,130720
    ImGuiTableFlags_ScrollX                    = 1 << 24,  // Enable horizontal scrolling. RequiImGuiTableFlags_ScrollX1146,130932
    ImGuiTableFlags_ScrollY                    = 1 << 25,  // Enable vertical scrolling. RequireImGuiTableFlags_ScrollY1147,131232
    ImGuiTableFlags_SortMulti                  = 1 << 26,  // Hold shift when clicking headers tImGuiTableFlags_SortMulti1149,131416
    ImGuiTableFlags_SortTristate               = 1 << 27,  // Allow no sorting, disable default ImGuiTableFlags_SortTristate1150,131601
    ImGuiTableFlags_SizingMask_                = ImGuiTableFlags_SizingFixedFit | ImGuiTableFlagImGuiTableFlags_SizingMask_1153,131813
enum ImGuiTableColumnFlags_ImGuiTableColumnFlags_1163,132490
    ImGuiTableColumnFlags_None                  = 0,ImGuiTableColumnFlags_None1166,132556
    ImGuiTableColumnFlags_DefaultHide           = 1 << 0,   // Default as a hidden/disabled coluImGuiTableColumnFlags_DefaultHide1167,132610
    ImGuiTableColumnFlags_DefaultSort           = 1 << 1,   // Default as a sorting column.ImGuiTableColumnFlags_DefaultSort1168,132711
    ImGuiTableColumnFlags_WidthStretch          = 1 << 2,   // Column will stretch. Preferable wImGuiTableColumnFlags_WidthStretch1169,132804
    ImGuiTableColumnFlags_WidthFixed            = 1 << 3,   // Column will not stretch. PreferabImGuiTableColumnFlags_WidthFixed1170,133013
    ImGuiTableColumnFlags_NoResize              = 1 << 4,   // Disable manual resizing.ImGuiTableColumnFlags_NoResize1171,133223
    ImGuiTableColumnFlags_NoReorder             = 1 << 5,   // Disable manual reordering this coImGuiTableColumnFlags_NoReorder1172,133312
    ImGuiTableColumnFlags_NoHide                = 1 << 6,   // Disable ability to hide/disable tImGuiTableColumnFlags_NoHide1173,133484
    ImGuiTableColumnFlags_NoClip                = 1 << 7,   // Disable clipping for this column ImGuiTableColumnFlags_NoClip1174,133593
    ImGuiTableColumnFlags_NoSort                = 1 << 8,   // Disable ability to sort on this fImGuiTableColumnFlags_NoSort1175,133747
    ImGuiTableColumnFlags_NoSortAscending       = 1 << 9,   // Disable ability to sort in the asImGuiTableColumnFlags_NoSortAscending1176,133905
    ImGuiTableColumnFlags_NoSortDescending      = 1 << 10,  // Disable ability to sort in the deImGuiTableColumnFlags_NoSortDescending1177,134021
    ImGuiTableColumnFlags_NoHeaderWidth         = 1 << 11,  // Disable header text width contribImGuiTableColumnFlags_NoHeaderWidth1178,134138
    ImGuiTableColumnFlags_PreferSortAscending   = 1 << 12,  // Make the initial sort direction AImGuiTableColumnFlags_PreferSortAscending1179,134268
    ImGuiTableColumnFlags_PreferSortDescending  = 1 << 13,  // Make the initial sort direction DImGuiTableColumnFlags_PreferSortDescending1180,134419
    ImGuiTableColumnFlags_IndentEnable          = 1 << 14,  // Use current Indent value when entImGuiTableColumnFlags_IndentEnable1181,134561
    ImGuiTableColumnFlags_IndentDisable         = 1 << 15,  // Ignore current Indent value when ImGuiTableColumnFlags_IndentDisable1182,134693
    ImGuiTableColumnFlags_IsEnabled             = 1 << 20,  // Status: is enabled == not hidden ImGuiTableColumnFlags_IsEnabled1185,134959
    ImGuiTableColumnFlags_IsVisible             = 1 << 21,  // Status: is visible == is enabled ImGuiTableColumnFlags_IsVisible1186,135127
    ImGuiTableColumnFlags_IsSorted              = 1 << 22,  // Status: is currently part of the ImGuiTableColumnFlags_IsSorted1187,135254
    ImGuiTableColumnFlags_IsHovered             = 1 << 23,  // Status: is hovered by mouseImGuiTableColumnFlags_IsHovered1188,135362
    ImGuiTableColumnFlags_WidthMask_            = ImGuiTableColumnFlags_WidthStretch | ImGuiTablImGuiTableColumnFlags_WidthMask_1191,135498
    ImGuiTableColumnFlags_IndentMask_           = ImGuiTableColumnFlags_IndentEnable | ImGuiTablImGuiTableColumnFlags_IndentMask_1192,135620
    ImGuiTableColumnFlags_StatusMask_           = ImGuiTableColumnFlags_IsEnabled | ImGuiTableCoImGuiTableColumnFlags_StatusMask_1193,135745
    ImGuiTableColumnFlags_NoDirectResize_       = 1 << 30   // [Internal] Disable user resizing ImGuiTableColumnFlags_NoDirectResize_1194,135930
enum ImGuiTableRowFlags_ImGuiTableRowFlags_1203,136438
    ImGuiTableRowFlags_None                         = 0,ImGuiTableRowFlags_None1205,136467
    ImGuiTableRowFlags_Headers                      = 1 << 0    // Identify header row (set defaImGuiTableRowFlags_Headers1206,136525
enum ImGuiTableBgTarget_ImGuiTableBgTarget_1218,137481
    ImGuiTableBgTarget_None                         = 0,ImGuiTableBgTarget_None1220,137510
    ImGuiTableBgTarget_RowBg0                       = 1,        // Set row background color 0 (gImGuiTableBgTarget_RowBg01221,137568
    ImGuiTableBgTarget_RowBg1                       = 2,        // Set row background color 1 (gImGuiTableBgTarget_RowBg11222,137749
    ImGuiTableBgTarget_CellBg                       = 3         // Set cell background color (toImGuiTableBgTarget_CellBg1223,137883
enum ImGuiFocusedFlags_ImGuiFocusedFlags_1227,138039
    ImGuiFocusedFlags_None                          = 0,ImGuiFocusedFlags_None1229,138067
    ImGuiFocusedFlags_ChildWindows                  = 1 << 0,   // IsWindowFocused(): Return truImGuiFocusedFlags_ChildWindows1230,138125
    ImGuiFocusedFlags_RootWindow                    = 1 << 1,   // IsWindowFocused(): Test from ImGuiFocusedFlags_RootWindow1231,138265
    ImGuiFocusedFlags_AnyWindow                     = 1 << 2,   // IsWindowFocused(): Return truImGuiFocusedFlags_AnyWindow1232,138417
    ImGuiFocusedFlags_RootAndChildWindows           = ImGuiFocusedFlags_RootWindow | ImGuiFocuseImGuiFocusedFlags_RootAndChildWindows1233,138691
enum ImGuiHoveredFlags_ImGuiHoveredFlags_1239,139149
    ImGuiHoveredFlags_None                          = 0,        // Return true if directly over ImGuiHoveredFlags_None1241,139177
    ImGuiHoveredFlags_ChildWindows                  = 1 << 0,   // IsWindowHovered() only: ReturImGuiHoveredFlags_ChildWindows1242,139396
    ImGuiHoveredFlags_RootWindow                    = 1 << 1,   // IsWindowHovered() only: Test ImGuiHoveredFlags_RootWindow1243,139541
    ImGuiHoveredFlags_AnyWindow                     = 1 << 2,   // IsWindowHovered() only: ReturImGuiHoveredFlags_AnyWindow1244,139698
    ImGuiHoveredFlags_AllowWhenBlockedByPopup       = 1 << 3,   // Return true even if a popup wImGuiHoveredFlags_AllowWhenBlockedByPopup1245,139827
    ImGuiHoveredFlags_AllowWhenBlockedByActiveItem  = 1 << 5,   // Return true even if an activeImGuiHoveredFlags_AllowWhenBlockedByActiveItem1247,140165
    ImGuiHoveredFlags_AllowWhenOverlapped           = 1 << 6,   // Return true even if the positImGuiHoveredFlags_AllowWhenOverlapped1248,140343
    ImGuiHoveredFlags_AllowWhenDisabled             = 1 << 7,   // Return true even if the item ImGuiHoveredFlags_AllowWhenDisabled1249,140490
    ImGuiHoveredFlags_RectOnly                      = ImGuiHoveredFlags_AllowWhenBlockedByPopup ImGuiHoveredFlags_RectOnly1250,140599
    ImGuiHoveredFlags_RootAndChildWindows           = ImGuiHoveredFlags_RootWindow | ImGuiHovereImGuiHoveredFlags_RootAndChildWindows1251,140786
enum ImGuiDragDropFlags_ImGuiDragDropFlags_1255,140984
    ImGuiDragDropFlags_None                         = 0,ImGuiDragDropFlags_None1257,141013
    ImGuiDragDropFlags_SourceNoPreviewTooltip       = 1 << 0,   // By default, a successful callImGuiDragDropFlags_SourceNoPreviewTooltip1259,141107
    ImGuiDragDropFlags_SourceNoDisableHover         = 1 << 1,   // By default, when dragging we ImGuiDragDropFlags_SourceNoDisableHover1260,141345
    ImGuiDragDropFlags_SourceNoHoldToOpenOthers     = 1 << 2,   // Disable the behavior that allImGuiDragDropFlags_SourceNoHoldToOpenOthers1261,141637
    ImGuiDragDropFlags_SourceAllowNullID            = 1 << 3,   // Allow items such as Text(), IImGuiDragDropFlags_SourceAllowNullID1262,141830
    ImGuiDragDropFlags_SourceExtern                 = 1 << 4,   // External source (from outsideImGuiDragDropFlags_SourceExtern1263,142159
    ImGuiDragDropFlags_SourceAutoExpirePayload      = 1 << 5,   // Automatically expire the paylImGuiDragDropFlags_SourceAutoExpirePayload1264,142399
    ImGuiDragDropFlags_AcceptBeforeDelivery         = 1 << 10,  // AcceptDragDropPayload() will ImGuiDragDropFlags_AcceptBeforeDelivery1266,142630
    ImGuiDragDropFlags_AcceptNoDrawDefaultRect      = 1 << 11,  // Do not draw the default highlImGuiDragDropFlags_AcceptNoDrawDefaultRect1267,142859
    ImGuiDragDropFlags_AcceptNoPreviewTooltip       = 1 << 12,  // Request hiding the BeginDragDImGuiDragDropFlags_AcceptNoPreviewTooltip1268,142998
    ImGuiDragDropFlags_AcceptPeekOnly               = ImGuiDragDropFlags_AcceptBeforeDelivery | ImGuiDragDropFlags_AcceptPeekOnly1269,143148
#define IMGUI_PAYLOAD_TYPE_COLOR_3F IMGUI_PAYLOAD_TYPE_COLOR_3F1273,143511
#define IMGUI_PAYLOAD_TYPE_COLOR_4F IMGUI_PAYLOAD_TYPE_COLOR_4F1274,143647
enum ImGuiDataType_ImGuiDataType_1277,143794
    ImGuiDataType_S8,       // signed char / char (with sensible compilers)ImGuiDataType_S81279,143818
    ImGuiDataType_U8,       // unsigned charImGuiDataType_U81280,143895
    ImGuiDataType_S16,      // shortImGuiDataType_S161281,143941
    ImGuiDataType_U16,      // unsigned shortImGuiDataType_U161282,143979
    ImGuiDataType_S32,      // intImGuiDataType_S321283,144026
    ImGuiDataType_U32,      // unsigned intImGuiDataType_U321284,144062
    ImGuiDataType_S64,      // long long / __int64ImGuiDataType_S641285,144107
    ImGuiDataType_U64,      // unsigned long long / unsigned __int64ImGuiDataType_U641286,144159
    ImGuiDataType_Float,    // floatImGuiDataType_Float1287,144229
    ImGuiDataType_Double,   // doubleImGuiDataType_Double1288,144267
    ImGuiDataType_COUNTImGuiDataType_COUNT1289,144306
enum ImGuiDir_ImGuiDir_1293,144362
    ImGuiDir_None    = -1,ImGuiDir_None1295,144381
    ImGuiDir_Left    = 0,ImGuiDir_Left1296,144409
    ImGuiDir_Right   = 1,ImGuiDir_Right1297,144436
    ImGuiDir_Up      = 2,ImGuiDir_Up1298,144463
    ImGuiDir_Down    = 3,ImGuiDir_Down1299,144490
    ImGuiDir_COUNTImGuiDir_COUNT1300,144517
enum ImGuiSortDirection_ImGuiSortDirection_1304,144567
    ImGuiSortDirection_None         = 0,ImGuiSortDirection_None1306,144596
    ImGuiSortDirection_Ascending    = 1,    // Ascending = 0->9, A->Z etc.ImGuiSortDirection_Ascending1307,144638
    ImGuiSortDirection_Descending   = 2     // Descending = 9->0, Z->A etc.ImGuiSortDirection_Descending1308,144714
enum ImGuiKey_ImGuiKey_1312,144884
    ImGuiKey_Tab,ImGuiKey_Tab1314,144903
    ImGuiKey_LeftArrow,ImGuiKey_LeftArrow1315,144922
    ImGuiKey_RightArrow,ImGuiKey_RightArrow1316,144947
    ImGuiKey_UpArrow,ImGuiKey_UpArrow1317,144973
    ImGuiKey_DownArrow,ImGuiKey_DownArrow1318,144996
    ImGuiKey_PageUp,ImGuiKey_PageUp1319,145021
    ImGuiKey_PageDown,ImGuiKey_PageDown1320,145043
    ImGuiKey_Home,ImGuiKey_Home1321,145067
    ImGuiKey_End,ImGuiKey_End1322,145087
    ImGuiKey_Insert,ImGuiKey_Insert1323,145106
    ImGuiKey_Delete,ImGuiKey_Delete1324,145128
    ImGuiKey_Backspace,ImGuiKey_Backspace1325,145150
    ImGuiKey_Space,ImGuiKey_Space1326,145175
    ImGuiKey_Enter,ImGuiKey_Enter1327,145196
    ImGuiKey_Escape,ImGuiKey_Escape1328,145217
    ImGuiKey_KeyPadEnter,ImGuiKey_KeyPadEnter1329,145239
    ImGuiKey_A,                 // for text edit CTRL+A: select allImGuiKey_A1330,145266
    ImGuiKey_C,                 // for text edit CTRL+C: copyImGuiKey_C1331,145335
    ImGuiKey_V,                 // for text edit CTRL+V: pasteImGuiKey_V1332,145398
    ImGuiKey_X,                 // for text edit CTRL+X: cutImGuiKey_X1333,145462
    ImGuiKey_Y,                 // for text edit CTRL+Y: redoImGuiKey_Y1334,145524
    ImGuiKey_Z,                 // for text edit CTRL+Z: undoImGuiKey_Z1335,145587
    ImGuiKey_COUNTImGuiKey_COUNT1336,145650
enum ImGuiKeyModFlags_ImGuiKeyModFlags_1340,145800
    ImGuiKeyModFlags_None       = 0,ImGuiKeyModFlags_None1342,145827
    ImGuiKeyModFlags_Ctrl       = 1 << 0,ImGuiKeyModFlags_Ctrl1343,145865
    ImGuiKeyModFlags_Shift      = 1 << 1,ImGuiKeyModFlags_Shift1344,145908
    ImGuiKeyModFlags_Alt        = 1 << 2,ImGuiKeyModFlags_Alt1345,145951
    ImGuiKeyModFlags_Super      = 1 << 3ImGuiKeyModFlags_Super1346,145994
enum ImGuiNavInput_ImGuiNavInput_1353,146603
    ImGuiNavInput_Activate,      // activate / open / toggle / tweak value       // e.g. Cross  ImGuiNavInput_Activate1356,146651
    ImGuiNavInput_Cancel,        // cancel / close / exit                        // e.g. Circle ImGuiNavInput_Cancel1357,146794
    ImGuiNavInput_Input,         // text input / on-screen keyboard              // e.g. Triang.ImGuiNavInput_Input1358,146938
    ImGuiNavInput_Menu,          // tap: toggle menu / hold: focus, move, resize // e.g. Square ImGuiNavInput_Menu1359,147082
    ImGuiNavInput_DpadLeft,      // move / tweak / resize window (w/ PadMenu)    // e.g. D-pad LImGuiNavInput_DpadLeft1360,147223
    ImGuiNavInput_DpadRight,     //ImGuiNavInput_DpadRight1361,147372
    ImGuiNavInput_DpadUp,        //ImGuiNavInput_DpadUp1362,147409
    ImGuiNavInput_DpadDown,      //ImGuiNavInput_DpadDown1363,147446
    ImGuiNavInput_LStickLeft,    // scroll / move window (w/ PadMenu)            // e.g. Left AnImGuiNavInput_LStickLeft1364,147483
    ImGuiNavInput_LStickRight,   //ImGuiNavInput_LStickRight1365,147610
    ImGuiNavInput_LStickUp,      //ImGuiNavInput_LStickUp1366,147647
    ImGuiNavInput_LStickDown,    //ImGuiNavInput_LStickDown1367,147684
    ImGuiNavInput_FocusPrev,     // next window (w/ PadMenu)                     // e.g. L1 or LImGuiNavInput_FocusPrev1368,147721
    ImGuiNavInput_FocusNext,     // prev window (w/ PadMenu)                     // e.g. R1 or RImGuiNavInput_FocusNext1369,147861
    ImGuiNavInput_TweakSlow,     // slower tweaks                                // e.g. L1 or LImGuiNavInput_TweakSlow1370,148001
    ImGuiNavInput_TweakFast,     // faster tweaks                                // e.g. R1 or RImGuiNavInput_TweakFast1371,148141
    ImGuiNavInput_KeyMenu_,      // toggle menu                                  // = io.KeyAltImGuiNavInput_KeyMenu_1375,148598
    ImGuiNavInput_KeyLeft_,      // move left                                    // = Arrow keysImGuiNavInput_KeyLeft_1376,148695
    ImGuiNavInput_KeyRight_,     // move rightImGuiNavInput_KeyRight_1377,148793
    ImGuiNavInput_KeyUp_,        // move upImGuiNavInput_KeyUp_1378,148841
    ImGuiNavInput_KeyDown_,      // move downImGuiNavInput_KeyDown_1379,148886
    ImGuiNavInput_COUNT,ImGuiNavInput_COUNT1380,148933
    ImGuiNavInput_InternalStart_ = ImGuiNavInput_KeyMenu_ImGuiNavInput_InternalStart_1381,148959
enum ImGuiConfigFlags_ImGuiConfigFlags_1385,149099
    ImGuiConfigFlags_None                   = 0,ImGuiConfigFlags_None1387,149126
    ImGuiConfigFlags_NavEnableKeyboard      = 1 << 0,   // Master keyboard navigation enable flaImGuiConfigFlags_NavEnableKeyboard1388,149176
    ImGuiConfigFlags_NavEnableGamepad       = 1 << 1,   // Master gamepad navigation enable flagImGuiConfigFlags_NavEnableGamepad1389,149350
    ImGuiConfigFlags_NavEnableSetMousePos   = 1 << 2,   // Instruct navigation to move the mouseImGuiConfigFlags_NavEnableSetMousePos1390,149575
    ImGuiConfigFlags_NavNoCaptureKeyboard   = 1 << 3,   // Instruct navigation to not set the ioImGuiConfigFlags_NavNoCaptureKeyboard1391,149963
    ImGuiConfigFlags_NoMouse                = 1 << 4,   // Instruct imgui to clear mouse positioImGuiConfigFlags_NoMouse1392,150112
    ImGuiConfigFlags_NoMouseCursorChange    = 1 << 5,   // Instruct backend to not alter mouse cImGuiConfigFlags_NoMouseCursorChange1393,150297
    ImGuiConfigFlags_IsSRGB                 = 1 << 20,  // Application is SRGB-aware.ImGuiConfigFlags_IsSRGB1396,150805
    ImGuiConfigFlags_IsTouchScreen          = 1 << 21   // Application is using a touch screen iImGuiConfigFlags_IsTouchScreen1397,150892
enum ImGuiBackendFlags_ImGuiBackendFlags_1401,151113
    ImGuiBackendFlags_None                  = 0,ImGuiBackendFlags_None1403,151141
    ImGuiBackendFlags_HasGamepad            = 1 << 0,   // Backend Platform supports gamepad andImGuiBackendFlags_HasGamepad1404,151191
    ImGuiBackendFlags_HasMouseCursors       = 1 << 1,   // Backend Platform supports honoring GeImGuiBackendFlags_HasMouseCursors1405,151318
    ImGuiBackendFlags_HasSetMousePos        = 1 << 2,   // Backend Platform supports io.WantSetMImGuiBackendFlags_HasSetMousePos1406,151467
    ImGuiBackendFlags_RendererHasVtxOffset  = 1 << 3    // Backend Renderer supports ImDrawCmd::ImGuiBackendFlags_RendererHasVtxOffset1407,151678
enum ImGuiCol_ImGuiCol_1411,151933
    ImGuiCol_Text,ImGuiCol_Text1413,151952
    ImGuiCol_TextDisabled,ImGuiCol_TextDisabled1414,151972
    ImGuiCol_WindowBg,              // Background of normal windowsImGuiCol_WindowBg1415,152000
    ImGuiCol_ChildBg,               // Background of child windowsImGuiCol_ChildBg1416,152069
    ImGuiCol_PopupBg,               // Background of popups, menus, tooltips windowsImGuiCol_PopupBg1417,152137
    ImGuiCol_Border,ImGuiCol_Border1418,152223
    ImGuiCol_BorderShadow,ImGuiCol_BorderShadow1419,152245
    ImGuiCol_FrameBg,               // Background of checkbox, radio button, plot, slider, text ImGuiCol_FrameBg1420,152273
    ImGuiCol_FrameBgHovered,ImGuiCol_FrameBgHovered1421,152376
    ImGuiCol_FrameBgActive,ImGuiCol_FrameBgActive1422,152406
    ImGuiCol_TitleBg,ImGuiCol_TitleBg1423,152435
    ImGuiCol_TitleBgActive,ImGuiCol_TitleBgActive1424,152458
    ImGuiCol_TitleBgCollapsed,ImGuiCol_TitleBgCollapsed1425,152487
    ImGuiCol_MenuBarBg,ImGuiCol_MenuBarBg1426,152519
    ImGuiCol_ScrollbarBg,ImGuiCol_ScrollbarBg1427,152544
    ImGuiCol_ScrollbarGrab,ImGuiCol_ScrollbarGrab1428,152571
    ImGuiCol_ScrollbarGrabHovered,ImGuiCol_ScrollbarGrabHovered1429,152600
    ImGuiCol_ScrollbarGrabActive,ImGuiCol_ScrollbarGrabActive1430,152636
    ImGuiCol_CheckMark,ImGuiCol_CheckMark1431,152671
    ImGuiCol_SliderGrab,ImGuiCol_SliderGrab1432,152696
    ImGuiCol_SliderGrabActive,ImGuiCol_SliderGrabActive1433,152722
    ImGuiCol_Button,ImGuiCol_Button1434,152754
    ImGuiCol_ButtonHovered,ImGuiCol_ButtonHovered1435,152776
    ImGuiCol_ButtonActive,ImGuiCol_ButtonActive1436,152805
    ImGuiCol_Header,                // Header* colors are used for CollapsingHeader, TreeNode, SImGuiCol_Header1437,152833
    ImGuiCol_HeaderHovered,ImGuiCol_HeaderHovered1438,152950
    ImGuiCol_HeaderActive,ImGuiCol_HeaderActive1439,152979
    ImGuiCol_Separator,ImGuiCol_Separator1440,153007
    ImGuiCol_SeparatorHovered,ImGuiCol_SeparatorHovered1441,153032
    ImGuiCol_SeparatorActive,ImGuiCol_SeparatorActive1442,153064
    ImGuiCol_ResizeGrip,ImGuiCol_ResizeGrip1443,153095
    ImGuiCol_ResizeGripHovered,ImGuiCol_ResizeGripHovered1444,153121
    ImGuiCol_ResizeGripActive,ImGuiCol_ResizeGripActive1445,153154
    ImGuiCol_Tab,ImGuiCol_Tab1446,153186
    ImGuiCol_TabHovered,ImGuiCol_TabHovered1447,153205
    ImGuiCol_TabActive,ImGuiCol_TabActive1448,153231
    ImGuiCol_TabUnfocused,ImGuiCol_TabUnfocused1449,153256
    ImGuiCol_TabUnfocusedActive,ImGuiCol_TabUnfocusedActive1450,153284
    ImGuiCol_PlotLines,ImGuiCol_PlotLines1451,153318
    ImGuiCol_PlotLinesHovered,ImGuiCol_PlotLinesHovered1452,153343
    ImGuiCol_PlotHistogram,ImGuiCol_PlotHistogram1453,153375
    ImGuiCol_PlotHistogramHovered,ImGuiCol_PlotHistogramHovered1454,153404
    ImGuiCol_TableHeaderBg,         // Table header backgroundImGuiCol_TableHeaderBg1455,153440
    ImGuiCol_TableBorderStrong,     // Table outer and header borders (prefer using Alpha=1.0 heImGuiCol_TableBorderStrong1456,153504
    ImGuiCol_TableBorderLight,      // Table inner borders (prefer using Alpha=1.0 here)ImGuiCol_TableBorderLight1457,153605
    ImGuiCol_TableRowBg,            // Table row background (even rows)ImGuiCol_TableRowBg1458,153695
    ImGuiCol_TableRowBgAlt,         // Table row background (odd rows)ImGuiCol_TableRowBgAlt1459,153768
    ImGuiCol_TextSelectedBg,ImGuiCol_TextSelectedBg1460,153840
    ImGuiCol_DragDropTarget,ImGuiCol_DragDropTarget1461,153870
    ImGuiCol_NavHighlight,          // Gamepad/keyboard: current highlighted itemImGuiCol_NavHighlight1462,153900
    ImGuiCol_NavWindowingHighlight, // Highlight window when using CTRL+TABImGuiCol_NavWindowingHighlight1463,153983
    ImGuiCol_NavWindowingDimBg,     // Darken/colorize entire screen behind the CTRL+TAB window ImGuiCol_NavWindowingDimBg1464,154060
    ImGuiCol_ModalWindowDimBg,      // Darken/colorize entire screen behind a modal window, whenImGuiCol_ModalWindowDimBg1465,154175
    ImGuiCol_COUNTImGuiCol_COUNT1466,154287
enum ImGuiStyleVar_ImGuiStyleVar_1476,155185
    ImGuiStyleVar_Alpha,               // float     AlphaImGuiStyleVar_Alpha1479,155317
    ImGuiStyleVar_WindowPadding,       // ImVec2    WindowPaddingImGuiStyleVar_WindowPadding1480,155376
    ImGuiStyleVar_WindowRounding,      // float     WindowRoundingImGuiStyleVar_WindowRounding1481,155443
    ImGuiStyleVar_WindowBorderSize,    // float     WindowBorderSizeImGuiStyleVar_WindowBorderSize1482,155511
    ImGuiStyleVar_WindowMinSize,       // ImVec2    WindowMinSizeImGuiStyleVar_WindowMinSize1483,155581
    ImGuiStyleVar_WindowTitleAlign,    // ImVec2    WindowTitleAlignImGuiStyleVar_WindowTitleAlign1484,155648
    ImGuiStyleVar_ChildRounding,       // float     ChildRoundingImGuiStyleVar_ChildRounding1485,155718
    ImGuiStyleVar_ChildBorderSize,     // float     ChildBorderSizeImGuiStyleVar_ChildBorderSize1486,155785
    ImGuiStyleVar_PopupRounding,       // float     PopupRoundingImGuiStyleVar_PopupRounding1487,155854
    ImGuiStyleVar_PopupBorderSize,     // float     PopupBorderSizeImGuiStyleVar_PopupBorderSize1488,155921
    ImGuiStyleVar_FramePadding,        // ImVec2    FramePaddingImGuiStyleVar_FramePadding1489,155990
    ImGuiStyleVar_FrameRounding,       // float     FrameRoundingImGuiStyleVar_FrameRounding1490,156056
    ImGuiStyleVar_FrameBorderSize,     // float     FrameBorderSizeImGuiStyleVar_FrameBorderSize1491,156123
    ImGuiStyleVar_ItemSpacing,         // ImVec2    ItemSpacingImGuiStyleVar_ItemSpacing1492,156192
    ImGuiStyleVar_ItemInnerSpacing,    // ImVec2    ItemInnerSpacingImGuiStyleVar_ItemInnerSpacing1493,156257
    ImGuiStyleVar_IndentSpacing,       // float     IndentSpacingImGuiStyleVar_IndentSpacing1494,156327
    ImGuiStyleVar_CellPadding,         // ImVec2    CellPaddingImGuiStyleVar_CellPadding1495,156394
    ImGuiStyleVar_ScrollbarSize,       // float     ScrollbarSizeImGuiStyleVar_ScrollbarSize1496,156459
    ImGuiStyleVar_ScrollbarRounding,   // float     ScrollbarRoundingImGuiStyleVar_ScrollbarRounding1497,156526
    ImGuiStyleVar_GrabMinSize,         // float     GrabMinSizeImGuiStyleVar_GrabMinSize1498,156597
    ImGuiStyleVar_GrabRounding,        // float     GrabRoundingImGuiStyleVar_GrabRounding1499,156662
    ImGuiStyleVar_TabRounding,         // float     TabRoundingImGuiStyleVar_TabRounding1500,156728
    ImGuiStyleVar_ButtonTextAlign,     // ImVec2    ButtonTextAlignImGuiStyleVar_ButtonTextAlign1501,156793
    ImGuiStyleVar_SelectableTextAlign, // ImVec2    SelectableTextAlignImGuiStyleVar_SelectableTextAlign1502,156862
    ImGuiStyleVar_COUNTImGuiStyleVar_COUNT1503,156935
enum ImGuiButtonFlags_ImGuiButtonFlags_1507,157029
    ImGuiButtonFlags_None                   = 0,ImGuiButtonFlags_None1509,157056
    ImGuiButtonFlags_MouseButtonLeft        = 1 << 0,   // React on left mouse button (default)ImGuiButtonFlags_MouseButtonLeft1510,157106
    ImGuiButtonFlags_MouseButtonRight       = 1 << 1,   // React on right mouse buttonImGuiButtonFlags_MouseButtonRight1511,157203
    ImGuiButtonFlags_MouseButtonMiddle      = 1 << 2,   // React on center mouse buttonImGuiButtonFlags_MouseButtonMiddle1512,157291
    ImGuiButtonFlags_MouseButtonMask_       = ImGuiButtonFlags_MouseButtonLeft | ImGuiButtonFlagImGuiButtonFlags_MouseButtonMask_1515,157401
    ImGuiButtonFlags_MouseButtonDefault_    = ImGuiButtonFlags_MouseButtonLeftImGuiButtonFlags_MouseButtonDefault_1516,157555
enum ImGuiColorEditFlags_ImGuiColorEditFlags_1520,157733
    ImGuiColorEditFlags_None            = 0,ImGuiColorEditFlags_None1522,157763
    ImGuiColorEditFlags_NoAlpha         = 1 << 1,   //              // ColorEdit, ColorPicker, CImGuiColorEditFlags_NoAlpha1523,157809
    ImGuiColorEditFlags_NoPicker        = 1 << 2,   //              // ColorEdit: disable pickerImGuiColorEditFlags_NoPicker1524,157995
    ImGuiColorEditFlags_NoOptions       = 1 << 3,   //              // ColorEdit: disable toggliImGuiColorEditFlags_NoOptions1525,158124
    ImGuiColorEditFlags_NoSmallPreview  = 1 << 4,   //              // ColorEdit, ColorPicker: dImGuiColorEditFlags_NoSmallPreview1526,158282
    ImGuiColorEditFlags_NoInputs        = 1 << 5,   //              // ColorEdit, ColorPicker: dImGuiColorEditFlags_NoInputs1527,158458
    ImGuiColorEditFlags_NoTooltip       = 1 << 6,   //              // ColorEdit, ColorPicker, CImGuiColorEditFlags_NoTooltip1528,158642
    ImGuiColorEditFlags_NoLabel         = 1 << 7,   //              // ColorEdit, ColorPicker: dImGuiColorEditFlags_NoLabel1529,158794
    ImGuiColorEditFlags_NoSidePreview   = 1 << 8,   //              // ColorPicker: disable biggImGuiColorEditFlags_NoSidePreview1530,158985
    ImGuiColorEditFlags_NoDragDrop      = 1 << 9,   //              // ColorEdit: disable drag aImGuiColorEditFlags_NoDragDrop1531,159168
    ImGuiColorEditFlags_NoBorder        = 1 << 10,  //              // ColorButton: disable bordImGuiColorEditFlags_NoBorder1532,159324
    ImGuiColorEditFlags_AlphaBar        = 1 << 16,  //              // ColorEdit, ColorPicker: sImGuiColorEditFlags_AlphaBar1535,159526
    ImGuiColorEditFlags_AlphaPreview    = 1 << 17,  //              // ColorEdit, ColorPicker, CImGuiColorEditFlags_AlphaPreview1536,159666
    ImGuiColorEditFlags_AlphaPreviewHalf= 1 << 18,  //              // ColorEdit, ColorPicker, CImGuiColorEditFlags_AlphaPreviewHalf1537,159854
    ImGuiColorEditFlags_HDR             = 1 << 19,  //              // (WIP) ColorEdit: CurrentlImGuiColorEditFlags_HDR1538,160023
    ImGuiColorEditFlags_DisplayRGB      = 1 << 20,  // [Display]    // ColorEdit: override _dispImGuiColorEditFlags_DisplayRGB1539,160242
    ImGuiColorEditFlags_DisplayHSV      = 1 << 21,  // [Display]    // "ImGuiColorEditFlags_DisplayHSV1540,160438
    ImGuiColorEditFlags_DisplayHex      = 1 << 22,  // [Display]    // "ImGuiColorEditFlags_DisplayHex1541,160512
    ImGuiColorEditFlags_Uint8           = 1 << 23,  // [DataType]   // ColorEdit, ColorPicker, CImGuiColorEditFlags_Uint81542,160586
    ImGuiColorEditFlags_Float           = 1 << 24,  // [DataType]   // ColorEdit, ColorPicker, CImGuiColorEditFlags_Float1543,160733
    ImGuiColorEditFlags_PickerHueBar    = 1 << 25,  // [Picker]     // ColorPicker: bar for Hue,ImGuiColorEditFlags_PickerHueBar1544,160955
    ImGuiColorEditFlags_PickerHueWheel  = 1 << 26,  // [Picker]     // ColorPicker: wheel for HuImGuiColorEditFlags_PickerHueWheel1545,161078
    ImGuiColorEditFlags_InputRGB        = 1 << 27,  // [Input]      // ColorEdit, ColorPicker: iImGuiColorEditFlags_InputRGB1546,161202
    ImGuiColorEditFlags_InputHSV        = 1 << 28,  // [Input]      // ColorEdit, ColorPicker: iImGuiColorEditFlags_InputHSV1547,161335
    ImGuiColorEditFlags__OptionsDefault = ImGuiColorEditFlags_Uint8 | ImGuiColorEditFlags_DisplaImGuiColorEditFlags__OptionsDefault1551,161744
    ImGuiColorEditFlags__DisplayMask    = ImGuiColorEditFlags_DisplayRGB | ImGuiColorEditFlags_DImGuiColorEditFlags__DisplayMask1554,161940
    ImGuiColorEditFlags__DataTypeMask   = ImGuiColorEditFlags_Uint8 | ImGuiColorEditFlags_Float,ImGuiColorEditFlags__DataTypeMask1555,162081
    ImGuiColorEditFlags__PickerMask     = ImGuiColorEditFlags_PickerHueWheel | ImGuiColorEditFlaImGuiColorEditFlags__PickerMask1556,162179
    ImGuiColorEditFlags__InputMask      = ImGuiColorEditFlags_InputRGB | ImGuiColorEditFlags_InpImGuiColorEditFlags__InputMask1557,162293
    , ImGuiColorEditFlags_RGB = ImGuiColorEditFlags_DisplayRGB, ImGuiColorEditFlags_HSV = ImGuiCImGuiColorEditFlags_RGB1561,162481
    , ImGuiColorEditFlags_RGB = ImGuiColorEditFlags_DisplayRGB, ImGuiColorEditFlags_HSV = ImGuiCImGuiColorEditFlags_HSV1561,162481
    , ImGuiColorEditFlags_RGB = ImGuiColorEditFlags_DisplayRGB, ImGuiColorEditFlags_HSV = ImGuiCImGuiColorEditFlags_HEX1561,162481
enum ImGuiSliderFlags_ImGuiSliderFlags_1567,162907
    ImGuiSliderFlags_None                   = 0,ImGuiSliderFlags_None1569,162934
    ImGuiSliderFlags_AlwaysClamp            = 1 << 4,       // Clamp value to min/max bounds wheImGuiSliderFlags_AlwaysClamp1570,162984
    ImGuiSliderFlags_Logarithmic            = 1 << 5,       // Make the widget logarithmic (lineImGuiSliderFlags_Logarithmic1571,163165
    ImGuiSliderFlags_NoRoundToFormat        = 1 << 6,       // Disable rounding underlying valueImGuiSliderFlags_NoRoundToFormat1572,163389
    ImGuiSliderFlags_NoInput                = 1 << 7,       // Disable CTRL+Click or Enter key aImGuiSliderFlags_NoInput1573,163584
    ImGuiSliderFlags_InvalidMask_           = 0x7000000F    // [Internal] We treat using those bImGuiSliderFlags_InvalidMask_1574,163728
    , ImGuiSliderFlags_ClampOnInput = ImGuiSliderFlags_AlwaysClamp // [renamed in 1.79]ImGuiSliderFlags_ClampOnInput1578,164055
enum ImGuiMouseButton_ImGuiMouseButton_1584,164306
    ImGuiMouseButton_Left = 0,ImGuiMouseButton_Left1586,164333
    ImGuiMouseButton_Right = 1,ImGuiMouseButton_Right1587,164365
    ImGuiMouseButton_Middle = 2,ImGuiMouseButton_Middle1588,164398
    ImGuiMouseButton_COUNT = 5ImGuiMouseButton_COUNT1589,164432
enum ImGuiMouseCursor_ImGuiMouseCursor_1594,164656
    ImGuiMouseCursor_None = -1,ImGuiMouseCursor_None1596,164683
    ImGuiMouseCursor_Arrow = 0,ImGuiMouseCursor_Arrow1597,164716
    ImGuiMouseCursor_TextInput,         // When hovering over InputText, etc.ImGuiMouseCursor_TextInput1598,164749
    ImGuiMouseCursor_ResizeAll,         // (Unused by Dear ImGui functions)ImGuiMouseCursor_ResizeAll1599,164828
    ImGuiMouseCursor_ResizeNS,          // When hovering over an horizontal borderImGuiMouseCursor_ResizeNS1600,164905
    ImGuiMouseCursor_ResizeEW,          // When hovering over a vertical border or a columnImGuiMouseCursor_ResizeEW1601,164989
    ImGuiMouseCursor_ResizeNESW,        // When hovering over the bottom-left corner of a windowImGuiMouseCursor_ResizeNESW1602,165082
    ImGuiMouseCursor_ResizeNWSE,        // When hovering over the bottom-right corner of a windoImGuiMouseCursor_ResizeNWSE1603,165180
    ImGuiMouseCursor_Hand,              // (Unused by Dear ImGui functions. Use for e.g. hyperliImGuiMouseCursor_Hand1604,165279
    ImGuiMouseCursor_NotAllowed,        // When hovering something with disallowed interaction. ImGuiMouseCursor_NotAllowed1605,165381
    ImGuiMouseCursor_COUNTImGuiMouseCursor_COUNT1606,165504
enum ImGuiCond_ImGuiCond_1612,165817
    ImGuiCond_None          = 0,        // No condition (always set the variable), same as _AlwaImGuiCond_None1614,165837
    ImGuiCond_Always        = 1 << 0,   // No condition (always set the variable)ImGuiCond_Always1615,165937
    ImGuiCond_Once          = 1 << 1,   // Set the variable once per runtime session (only the fImGuiCond_Once1616,166020
    ImGuiCond_FirstUseEver  = 1 << 2,   // Set the variable if the object/window has no persisteImGuiCond_FirstUseEver1617,166141
    ImGuiCond_Appearing     = 1 << 3    // Set the variable if the object/window is appearing afImGuiCond_Appearing1618,166278
struct ImNewWrapper {};ImNewWrapper1631,167149
inline void* operator new(size_t, ImNewWrapper, void* ptr) { return ptr; }operator new1632,167174
inline void  operator delete(void*, ImNewWrapper, void*)   {} // This is only required so we canoperator delete1633,167250
#define IM_ALLOC(IM_ALLOC1634,167374
#define IM_FREE(IM_FREE1635,167442
#define IM_PLACEMENT_NEW(IM_PLACEMENT_NEW1636,167508
#define IM_NEW(IM_NEW1637,167579
template<typename T> void IM_DELETE(T* p)   { if (p) { p->~T(); ImGui::MemFree(p); } }IM_DELETE1638,167682
struct ImVectorImVector1653,169027
    int                 Size;Size1655,169047
    int                 Capacity;Capacity1656,169078
    T*                  Data;Data1657,169113
    typedef T                   value_type;value_type1660,169213
    typedef value_type*         iterator;iterator1661,169258
    typedef const value_type*   const_iterator;const_iterator1662,169301
    inline ImVector()                                       { Size = Capacity = 0; Data = NULL; ImVector1665,169385
    inline ImVector(const ImVector<T>& src)                 { Size = Capacity = 0; Data = NULL; ImVector1666,169484
    inline ImVector<T>& operator=(const ImVector<T>& src)   { clear(); resize(src.Size); memcpy(operator =1667,169599
    inline ~ImVector()                                      { if (Data) IM_FREE(Data); }~ImVector1668,169755
    inline bool         empty() const                       { return Size == 0; }empty1670,169847
    inline int          size() const                        { return Size; }size1671,169930
    inline int          size_in_bytes() const               { return Size * (int)sizeof(T); }size_in_bytes1672,170008
    inline int          max_size() const                    { return 0x7FFFFFFF / (int)sizeof(T)max_size1673,170103
    inline int          capacity() const                    { return Capacity; }capacity1674,170204
    inline T&           operator[](int i)                   { IM_ASSERT(i >= 0 && i < Size); retoperator []1675,170286
    inline const T&     operator[](int i) const             { IM_ASSERT(i >= 0 && i < Size); retoperator []1676,170398
    inline void         clear()                             { if (Data) { Size = Capacity = 0; Iclear1678,170512
    inline T*           begin()                             { return Data; }begin1679,170640
    inline const T*     begin() const                       { return Data; }begin1680,170718
    inline T*           end()                               { return Data + Size; }end1681,170796
    inline const T*     end() const                         { return Data + Size; }end1682,170881
    inline T&           front()                             { IM_ASSERT(Size > 0); return Data[0front1683,170966
    inline const T&     front() const                       { IM_ASSERT(Size > 0); return Data[0front1684,171068
    inline T&           back()                              { IM_ASSERT(Size > 0); return Data[Sback1685,171170
    inline const T&     back() const                        { IM_ASSERT(Size > 0); return Data[Sback1686,171279
    inline void         swap(ImVector<T>& rhs)              { int rhs_size = rhs.Size; rhs.Size swap1687,171388
    inline int          _grow_capacity(int sz) const        { int new_capacity = Capacity ? (Cap_grow_capacity1689,171645
    inline void         resize(int new_size)                { if (new_size > Capacity) reserve(_resize1690,171817
    inline void         resize(int new_size, const T& v)    { if (new_size > Capacity) reserve(_resize1691,171959
    inline void         shrink(int new_size)                { IM_ASSERT(new_size <= Size); Size shrink1692,172193
    inline void         reserve(int new_capacity)           { if (new_capacity <= Capacity) retureserve1693,172381
    inline void         push_back(const T& v)               { if (Size == Capacity) reserve(_gropush_back1696,172828
    inline void         pop_back()                          { IM_ASSERT(Size > 0); Size--; }pop_back1697,172994
    inline void         push_front(const T& v)              { if (Size == 0) push_back(v); else push_front1698,173088
    inline T*           erase(const T* it)                  { IM_ASSERT(it >= Data && it < Data erase1699,173204
    inline T*           erase(const T* it, const T* it_last){ IM_ASSERT(it >= Data && it < Data erase1700,173455
    inline T*           erase_unsorted(const T* it)         { IM_ASSERT(it >= Data && it < Data erase_unsorted1701,173806
    inline T*           insert(const T* it, const T& v)     { IM_ASSERT(it >= Data && it <= Datainsert1702,174049
    inline bool         contains(const T& v) const          { const T* data = Data;  const T* dacontains1703,174410
    inline T*           find(const T& v)                    { T* data = Data;  const T* data_endfind1704,174600
    inline const T*     find(const T& v) const              { const T* data = Data;  const T* dafind1705,174788
    inline bool         find_erase(const T& v)              { const T* it = find(v); if (it < Dafind_erase1706,174982
    inline bool         find_erase_unsorted(const T& v)     { const T* it = find(v); if (it < Dafind_erase_unsorted1707,175134
    inline int          index_from_ptr(const T* it) const   { IM_ASSERT(it >= Data && it < Data index_from_ptr1708,175295
struct ImGuiStyleImGuiStyle1720,176045
    float       Alpha;                      // Global alpha applies to everything in Dear ImGui.Alpha1722,176067
    ImVec2      WindowPadding;              // Padding within a window.WindowPadding1723,176165
    float       WindowRounding;             // Radius of window corners rounding. Set to 0.0f toWindowRounding1724,176238
    float       WindowBorderSize;           // Thickness of border around windows. Generally setWindowBorderSize1725,176437
    ImVec2      WindowMinSize;              // Minimum window size. This is a global setting. IfWindowMinSize1726,176612
    ImVec2      WindowTitleAlign;           // Alignment for title bar text. Defaults to (0.0f,0WindowTitleAlign1727,176789
    ImGuiDir    WindowMenuButtonPosition;   // Side of the collapsing/docking button in the titlWindowMenuButtonPosition1728,176929
    float       ChildRounding;              // Radius of child window corners rounding. Set to 0ChildRounding1729,177078
    float       ChildBorderSize;            // Thickness of border around child windows. GeneralChildBorderSize1730,177208
    float       PopupRounding;              // Radius of popup window corners rounding. (Note thPopupRounding1731,177389
    float       PopupBorderSize;            // Thickness of border around popup/tooltip windows.PopupBorderSize1732,177525
    ImVec2      FramePadding;               // Padding within a framed rectangle (used by most wFramePadding1733,177714
    float       FrameRounding;              // Radius of frame corners rounding. Set to 0.0f to FrameRounding1734,177820
    float       FrameBorderSize;            // Thickness of border around frames. Generally set FrameBorderSize1735,177964
    ImVec2      ItemSpacing;                // Horizontal and vertical spacing between widgets/lItemSpacing1736,178138
    ImVec2      ItemInnerSpacing;           // Horizontal and vertical spacing between within elItemInnerSpacing1737,178241
    ImVec2      CellPadding;                // Padding within a table cellCellPadding1738,178397
    ImVec2      TouchExtraPadding;          // Expand reactive bounding box for touch-based systTouchExtraPadding1739,178473
    float       IndentSpacing;              // Horizontal indentation when e.g. entering a tree IndentSpacing1740,178748
    float       ColumnsMinSpacing;          // Minimum horizontal spacing between two columns. PColumnsMinSpacing1741,178895
    float       ScrollbarSize;              // Width of the vertical scrollbar, Height of the hoScrollbarSize1742,179026
    float       ScrollbarRounding;          // Radius of grab corners for scrollbar.ScrollbarRounding1743,179143
    float       GrabMinSize;                // Minimum width/height of a grab box for slider/scrGrabMinSize1744,179229
    float       GrabRounding;               // Radius of grabs corners rounding. Set to 0.0f to GrabRounding1745,179334
    float       LogSliderDeadzone;          // The size in pixels of the dead-zone around zero oLogSliderDeadzone1746,179462
    float       TabRounding;                // Radius of upper corners of a tab. Set to 0.0f to TabRounding1747,179598
    float       TabBorderSize;              // Thickness of border around tabs.TabBorderSize1748,179718
    float       TabMinWidthForCloseButton;  // Minimum width for close button to appears on an uTabMinWidthForCloseButton1749,179799
    ImGuiDir    ColorButtonPosition;        // Side of the color button in the ColorEdit4 widgetColorButtonPosition1750,180025
    ImVec2      ButtonTextAlign;            // Alignment of button text when button is larger thButtonTextAlign1751,180165
    ImVec2      SelectableTextAlign;        // Alignment of selectable text. Defaults to (0.0f, SelectableTextAlign1752,180308
    ImVec2      DisplayWindowPadding;       // Window position are clamped to be visible within DisplayWindowPadding1753,180532
    ImVec2      DisplaySafeAreaPadding;     // If you cannot see the edges of your screen (e.g. DisplaySafeAreaPadding1754,180716
    float       MouseCursorScale;           // Scale software rendered mouse cursor (when io.MouMouseCursorScale1755,180951
    bool        AntiAliasedLines;           // Enable anti-aliased lines/borders. Disable if youAntiAliasedLines1756,181096
    bool        AntiAliasedLinesUseTex;     // Enable anti-aliased lines/borders using textures AntiAliasedLinesUseTex1757,181285
    bool        AntiAliasedFill;            // Enable anti-aliased edges around filled shapes (rAntiAliasedFill1758,181511
    float       CurveTessellationTol;       // Tessellation tolerance when using PathBezierCurveCurveTessellationTol1759,181749
    float       CircleTessellationMaxError; // Maximum error (in pixels) allowed when using AddCCircleTessellationMaxError1760,181990
    ImVec4      Colors[ImGuiCol_COUNT];Colors1761,182239
struct ImGuiIOImGuiIO1774,182819
    ImGuiConfigFlags   ConfigFlags;             // = 0              // See ImGuiConfigFlags_ enuConfigFlags1780,183054
    ImGuiBackendFlags  BackendFlags;            // = 0              // See ImGuiBackendFlags_ enBackendFlags1781,183221
    ImVec2      DisplaySize;                    // <unset>          // Main display size, in pixDisplaySize1782,183428
    float       DeltaTime;                      // = 1.0f/60.0f     // Time elapsed since last fDeltaTime1783,183568
    float       IniSavingRate;                  // = 5.0f           // Minimum time between saviIniSavingRate1784,183683
    const char* IniFilename;                    // = "imgui.ini"    // Path to .ini file. Set NUIniFilename1785,183825
    const char* LogFilename;                    // = "imgui_log.txt"// Path to .log file (defaulLogFilename1786,184019
    float       MouseDoubleClickTime;           // = 0.30f          // Time for a double-click, MouseDoubleClickTime1787,184176
    float       MouseDoubleClickMaxDist;        // = 6.0f           // Distance threshold to staMouseDoubleClickMaxDist1788,184285
    float       MouseDragThreshold;             // = 6.0f           // Distance threshold beforeMouseDragThreshold1789,184426
    int         KeyMap[ImGuiKey_COUNT];         // <unset>          // Map of indices into the KKeyMap1790,184553
    float       KeyRepeatDelay;                 // = 0.250f         // When holding a key/buttonKeyRepeatDelay1791,184723
    float       KeyRepeatRate;                  // = 0.050f         // When holding a key/buttonKeyRepeatRate1792,184902
    void*       UserData;                       // = NULL           // Store your own data for rUserData1793,185039
    ImFontAtlas*Fonts;                          // <auto>           // Font atlas: load, rasteriFonts1795,185161
    float       FontGlobalScale;                // = 1.0f           // Global scale all fontsFontGlobalScale1796,185311
    bool        FontAllowUserScaling;           // = false          // Allow user scaling text oFontAllowUserScaling1797,185406
    ImFont*     FontDefault;                    // = NULL           // Font to use on NewFrame()FontDefault1798,185540
    ImVec2      DisplayFramebufferScale;        // = (1, 1)         // For retina display or othDisplayFramebufferScale1799,185673
    bool        MouseDrawCursor;                // = false          // Request ImGui to draw a mMouseDrawCursor1802,185941
    bool        ConfigMacOSXBehaviors;          // = defined(__APPLE__) // OS X style: Text editConfigMacOSXBehaviors1803,186212
    bool        ConfigInputTextCursorBlink;     // = true           // Enable blinking cursor (oConfigInputTextCursorBlink1804,186580
    bool        ConfigDragClickToInputText;     // = false          // [BETA] Enable turning DraConfigDragClickToInputText1805,186731
    bool        ConfigWindowsResizeFromEdges;   // = true           // Enable resizing of windowConfigWindowsResizeFromEdges1806,186954
    bool        ConfigWindowsMoveFromTitleBarOnly; // = false       // Enable allowing to move wConfigWindowsMoveFromTitleBarOnly1807,187281
    float       ConfigMemoryCompactTimer;       // = 60.0f          // Timer (in seconds) to freConfigMemoryCompactTimer1808,187471
    const char* BackendPlatformName;            // = NULLBackendPlatformName1816,188064
    const char* BackendRendererName;            // = NULLBackendRendererName1817,188123
    void*       BackendPlatformUserData;        // = NULL           // User data for platform baBackendPlatformUserData1818,188182
    void*       BackendRendererUserData;        // = NULL           // User data for renderer baBackendRendererUserData1819,188285
    void*       BackendLanguageUserData;        // = NULL           // User data for non C++ proBackendLanguageUserData1820,188388
    const char* (*GetClipboardTextFn)(void* user_data);GetClipboardTextFn1824,188702
    void        (*SetClipboardTextFn)(void* user_data, const char* text);SetClipboardTextFn1825,188759
    void*       ClipboardUserData;ClipboardUserData1826,188834
    void        (*ImeSetInputScreenPosFn)(int x, int y);ImeSetInputScreenPosFn1830,189085
    void*       ImeWindowHandle;                // = NULL           // (Windows) Set this to youImeWindowHandle1831,189143
    ImVec2      MousePos;                       // Mouse position, in pixels. Set to ImVec2(-FLTMousePos1837,189487
    bool        MouseDown[5];                   // Mouse buttons: 0=left, 1=right, 2=middle + exMouseDown1838,189650
    float       MouseWheel;                     // Mouse wheel Vertical: 1 unit scrolls about 5 MouseWheel1839,189967
    float       MouseWheelH;                    // Mouse wheel Horizontal. Most users don't haveMouseWheelH1840,190076
    bool        KeyCtrl;                        // Keyboard modifier pressed: ControlKeyCtrl1841,190243
    bool        KeyShift;                       // Keyboard modifier pressed: ShiftKeyShift1842,190330
    bool        KeyAlt;                         // Keyboard modifier pressed: AltKeyAlt1843,190415
    bool        KeySuper;                       // Keyboard modifier pressed: Cmd/Super/WindowsKeySuper1844,190498
    bool        KeysDown[512];                  // Keyboard keys that are pressed (ideally left KeysDown1845,190595
    float       NavInputs[ImGuiNavInput_COUNT]; // Gamepad inputs. Cleared back to zero by EndFrNavInputs1846,190804
    bool        WantCaptureMouse;               // Set when Dear ImGui will use mouse inputs, inWantCaptureMouse1860,191891
    bool        WantCaptureKeyboard;            // Set when Dear ImGui will use keyboard inputs,WantCaptureKeyboard1861,192223
    bool        WantTextInput;                  // Mobile/console: when set, you may display an WantTextInput1862,192525
    bool        WantSetMousePos;                // MousePos has been altered, backend should repWantSetMousePos1863,192757
    bool        WantSaveIniSettings;            // When manual .ini load/save is active (io.IniFWantSaveIniSettings1864,192965
    bool        NavActive;                      // Keyboard/Gamepad navigation is currently alloNavActive1865,193250
    bool        NavVisible;                     // Keyboard/Gamepad navigation is visible and alNavVisible1866,193468
    float       Framerate;                      // Rough estimate of application framerate, in fFramerate1867,193609
    int         MetricsRenderVertices;          // Vertices output during last call to Render()MetricsRenderVertices1868,193813
    int         MetricsRenderIndices;           // Indices output during last call to Render() =MetricsRenderIndices1869,193910
    int         MetricsRenderWindows;           // Number of visible windowsMetricsRenderWindows1870,194032
    int         MetricsActiveWindows;           // Number of active windowsMetricsActiveWindows1871,194110
    int         MetricsActiveAllocations;       // Number of active allocations, updated by MemAMetricsActiveAllocations1872,194187
    ImVec2      MouseDelta;                     // Mouse delta. Note that this is zero if eitherMouseDelta1873,194371
    ImGuiKeyModFlags KeyMods;                   // Key mods flags (same as io.KeyCtrl/KeyShift/KKeyMods1879,194840
    ImVec2      MousePosPrev;                   // Previous mouse position (note that MouseDeltaMousePosPrev1880,194998
    ImVec2      MouseClickedPos[5];             // Position at time of clickingMouseClickedPos1881,195175
    double      MouseClickedTime[5];            // Time of last click (used to figure out doubleMouseClickedTime1882,195256
    bool        MouseClicked[5];                // Mouse button went from !Down to DownMouseClicked1883,195361
    bool        MouseDoubleClicked[5];          // Has mouse button been double-clicked?MouseDoubleClicked1884,195450
    bool        MouseReleased[5];               // Mouse button went from Down to !DownMouseReleased1885,195540
    bool        MouseDownOwned[5];              // Track if button was clicked inside a dear imgMouseDownOwned1886,195629
    bool        MouseDownWasDoubleClick[5];     // Track if button down was a double-clickMouseDownWasDoubleClick1887,195828
    float       MouseDownDuration[5];           // Duration the mouse button has been down (0.0fMouseDownDuration1888,195920
    float       MouseDownDurationPrev[5];       // Previous time the mouse button has been downMouseDownDurationPrev1889,196035
    ImVec2      MouseDragMaxDistanceAbs[5];     // Maximum distance, absolute, on each axis, of MouseDragMaxDistanceAbs1890,196132
    float       MouseDragMaxDistanceSqr[5];     // Squared maximum distance of how much mouse haMouseDragMaxDistanceSqr1891,196281
    float       KeysDownDuration[512];          // Duration the keyboard key has been down (0.0fKeysDownDuration1892,196413
    float       KeysDownDurationPrev[512];      // Previous duration the key has been downKeysDownDurationPrev1893,196528
    float       NavInputsDownDuration[ImGuiNavInput_COUNT];NavInputsDownDuration1894,196620
    float       NavInputsDownDurationPrev[ImGuiNavInput_COUNT];NavInputsDownDurationPrev1895,196681
    float       PenPressure;                    // Touch/Pen pressure (0.0f to 1.0f, should be >PenPressure1896,196746
    ImWchar16   InputQueueSurrogate;            // For AddInputCharacterUTF16InputQueueSurrogate1897,196928
    ImVector<ImWchar> InputQueueCharacters;     // Queue of _characters_ input (obtained by platInputQueueCharacters1898,197007
struct ImGuiInputTextCallbackDataImGuiInputTextCallbackData1916,198457
    ImGuiInputTextFlags EventFlag;      // One ImGuiInputTextFlags_Callback*    // Read-onlyEventFlag1918,198495
    ImGuiInputTextFlags Flags;          // What user passed to InputText()      // Read-onlyFlags1919,198589
    void*               UserData;       // What user passed to InputText()      // Read-onlyUserData1920,198683
    ImWchar             EventChar;      // Character input                      // Read-write   EventChar1925,199297
    ImGuiKey            EventKey;       // Key pressed (Up/Down/TAB)            // Read-only    EventKey1926,199517
    char*               Buf;            // Text buffer                          // Read-write   Buf1927,199638
    int                 BufTextLen;     // Text length (in bytes)               // Read-write   BufTextLen1928,199859
    int                 BufSize;        // Buffer size (in bytes) = capacity+1  // Read-only    BufSize1929,200089
    bool                BufDirty;       // Set if you modify Buf/BufTextLen!    // Write        BufDirty1930,200329
    int                 CursorPos;      //                                      // Read-write   CursorPos1931,200457
    int                 SelectionStart; //                                      // Read-write   SelectionStart1932,200585
    int                 SelectionEnd;   //                                      // Read-write   SelectionEnd1933,200751
    void                SelectAll()             { SelectionStart = 0; SelectionEnd = BufTextLen;SelectAll1940,201249
    void                ClearSelection()        { SelectionStart = SelectionEnd = BufTextLen; }ClearSelection1941,201349
    bool                HasSelection() const    { return SelectionStart != SelectionEnd; }HasSelection1942,201446
struct ImGuiSizeCallbackDataImGuiSizeCallbackData1947,201838
    void*   UserData;       // Read-only.   What user passed to SetNextWindowSizeConstraints()UserData1949,201871
    ImVec2  Pos;            // Read-only.   Window position, for reference.Pos1950,201967
    ImVec2  CurrentSize;    // Read-only.   Current window size.CurrentSize1951,202044
    ImVec2  DesiredSize;    // Read-write.  Desired size, based on user's mouse position. Write DesiredSize1952,202110
struct ImGuiPayloadImGuiPayload1956,202342
    void*           Data;               // Data (copied and owned by dear imgui)Data1959,202382
    int             DataSize;           // Data sizeDataSize1960,202464
    ImGuiID         SourceId;           // Source item idSourceId1963,202539
    ImGuiID         SourceParentId;     // Source parent id (if available)SourceParentId1964,202598
    int             DataFrameCount;     // Data timestampDataFrameCount1965,202674
    char            DataType[32 + 1];   // Data type tag (short user-supplied string, 32 charactDataType1966,202733
    bool            Preview;            // Set when AcceptDragDropPayload() was called and mousePreview1967,202839
    bool            Delivery;           // Set when AcceptDragDropPayload() was called and mouseDelivery1968,203009
    ImGuiPayload()  { Clear(); }ImGuiPayload1970,203150
    void Clear()    { SourceId = SourceParentId = 0; Data = NULL; DataSize = 0; memset(DataType,Clear1971,203184
    bool IsDataType(const char* type) const { return DataFrameCount != -1 && strcmp(type, DataTyIsDataType1972,203355
    bool IsPreview() const                  { return Preview; }IsPreview1973,203464
    bool IsDelivery() const                 { return Delivery; }IsDelivery1974,203529
struct ImGuiTableColumnSortSpecsImGuiTableColumnSortSpecs1978,203674
    ImGuiID                     ColumnUserID;       // User id of the column (if specified by a ColumnUserID1980,203711
    ImS16                       ColumnIndex;        // Index of the columnColumnIndex1981,203833
    ImS16                       SortOrder;          // Index within parent ImGuiTableSortSpecs (SortOrder1982,203909
    ImGuiSortDirection          SortDirection : 8;  // ImGuiSortDirection_Ascending or ImGuiSortSortDirection1983,204108
    ImGuiTableColumnSortSpecs() { memset(this, 0, sizeof(*this)); }ImGuiTableColumnSortSpecs1985,204312
struct ImGuiTableSortSpecsImGuiTableSortSpecs1992,204785
    const ImGuiTableColumnSortSpecs* Specs;     // Pointer to sort spec array.Specs1994,204816
    int                         SpecsCount;     // Sort spec count. Most often 1. May be > 1 wheSpecsCount1995,204896
    bool                        SpecsDirty;     // Set to true when specs have changed since lasSpecsDirty1996,205091
    ImGuiTableSortSpecs()       { memset(this, 0, sizeof(*this)); }ImGuiTableSortSpecs1998,205243
#define IM_UNICODE_CODEPOINT_INVALID IM_UNICODE_CODEPOINT_INVALID2006,205629
#define IM_UNICODE_CODEPOINT_MAX IM_UNICODE_CODEPOINT_MAX2008,205752
#define IM_UNICODE_CODEPOINT_MAX IM_UNICODE_CODEPOINT_MAX2010,205863
struct ImGuiOnceUponAFrameImGuiOnceUponAFrame2015,206255
    ImGuiOnceUponAFrame() { RefFrame = -1; }ImGuiOnceUponAFrame2017,206286
    mutable int RefFrame;RefFrame2018,206332
    operator bool() const { int current_frame = ImGui::GetFrameCount(); if (RefFrame == current_current_frame2019,206359
struct ImGuiTextFilterImGuiTextFilter2023,206599
    void                Clear()          { InputBuf[0] = 0; Build(); }Clear2029,206952
    bool                IsActive() const { return !Filters.empty(); }IsActive2030,207024
    struct ImGuiTextRangeImGuiTextRange2033,207116
        const char*     b;b2035,207150
        const char*     e;e2036,207178
        ImGuiTextRange()                                { b = e = NULL; }ImGuiTextRange2038,207208
        ImGuiTextRange(const char* _b, const char* _e)  { b = _b; e = _e; }ImGuiTextRange2039,207283
        bool            empty() const                   { return b == e; }empty2040,207360
    char                    InputBuf[256];InputBuf2043,207529
    ImVector<ImGuiTextRange>Filters;Filters2044,207573
    int                     CountGrep;CountGrep2045,207611
struct ImGuiTextBufferImGuiTextBuffer2050,207789
    ImVector<char>      Buf;Buf2052,207816
    IMGUI_API static char EmptyString[1];EmptyString2053,207846
    ImGuiTextBuffer()   { }ImGuiTextBuffer2055,207891
    inline char         operator[](int i) const { IM_ASSERT(Buf.Data != NULL); return Buf.Data[ioperator []2056,207920
    const char*         begin() const           { return Buf.Data ? &Buf.front() : EmptyString; begin2057,208022
    const char*         end() const             { return Buf.Data ? &Buf.back() : EmptyString; }end2058,208121
    int                 size() const            { return Buf.Size ? Buf.Size - 1 : 0; }size2059,208291
    bool                empty() const           { return Buf.Size <= 1; }empty2060,208380
    void                clear()                 { Buf.clear(); }clear2061,208455
    void                reserve(int capacity)   { Buf.reserve(capacity); }reserve2062,208521
    const char*         c_str() const           { return Buf.Data ? Buf.Data : EmptyString; }c_str2063,208597
struct ImGuiStorageImGuiStorage2077,209761
    struct ImGuiStoragePairImGuiStoragePair2080,209804
        ImGuiID key;key2082,209840
        union { int val_i; float val_f; void* val_p; };__anona2015ca5010a2083,209862
        union { int val_i; float val_f; void* val_p; };val_i2083,209862
        union { int val_i; float val_f; void* val_p; };val_f2083,209862
        union { int val_i; float val_f; void* val_p; };val_p2083,209862
        ImGuiStoragePair(ImGuiID _key, int _val_i)      { key = _key; val_i = _val_i; }ImGuiStoragePair2084,209919
        ImGuiStoragePair(ImGuiID _key, float _val_f)    { key = _key; val_f = _val_f; }ImGuiStoragePair2085,210008
        ImGuiStoragePair(ImGuiID _key, void* _val_p)    { key = _key; val_p = _val_p; }ImGuiStoragePair2086,210097
    ImVector<ImGuiStoragePair>      Data;Data2089,210196
    void                Clear() { Data.clear(); }Clear2094,210517
struct ImGuiListClipperImGuiListClipper2137,213631
    int     DisplayStart;DisplayStart2139,213659
    int     DisplayEnd;DisplayEnd2140,213686
    int     ItemsCount;ItemsCount2143,213732
    int     StepNo;StepNo2144,213757
    int     ItemsFrozen;ItemsFrozen2145,213778
    float   ItemsHeight;ItemsHeight2146,213804
    float   StartPosY;StartPosY2147,213830
    inline ImGuiListClipper(int items_count, float items_height = -1.0f) { memset(this, 0, sizeoImGuiListClipper2159,214811
#define IM_COL32_R_SHIFT IM_COL32_R_SHIFT2165,215096
#define IM_COL32_G_SHIFT IM_COL32_G_SHIFT2166,215128
#define IM_COL32_B_SHIFT IM_COL32_B_SHIFT2167,215159
#define IM_COL32_A_SHIFT IM_COL32_A_SHIFT2168,215190
#define IM_COL32_A_MASK IM_COL32_A_MASK2169,215222
#define IM_COL32_R_SHIFT IM_COL32_R_SHIFT2171,215269
#define IM_COL32_G_SHIFT IM_COL32_G_SHIFT2172,215300
#define IM_COL32_B_SHIFT IM_COL32_B_SHIFT2173,215331
#define IM_COL32_A_SHIFT IM_COL32_A_SHIFT2174,215363
#define IM_COL32_A_MASK IM_COL32_A_MASK2175,215395
#define IM_COL32(IM_COL322177,215443
#define IM_COL32_WHITE IM_COL32_WHITE2178,215605
#define IM_COL32_BLACK IM_COL32_BLACK2179,215691
#define IM_COL32_BLACK_TRANS IM_COL32_BLACK_TRANS2180,215764
struct ImColorImColor2186,216371
    ImVec4              Value;Value2188,216390
    ImColor()                                                       { Value.x = Value.y = Value.ImColor2190,216424
    ImColor(int r, int g, int b, int a = 255)                       { float sc = 1.0f / 255.0f; ImColor2191,216543
    ImColor(ImU32 rgba)                                             { float sc = 1.0f / 255.0f; ImColor2192,216742
    ImColor(float r, float g, float b, float a = 1.0f)              { Value.x = r; Value.y = g; ImColor2193,217077
    ImColor(const ImVec4& col)                                      { Value = col; }ImColor2194,217202
    inline operator ImU32() const                                   { return ImGui::ColorConvertoperator ImU322195,217288
    inline operator ImVec4() const                                  { return Value; }operator ImVec42196,217407
    inline void    SetHSV(float h, float s, float v, float a = 1.0f){ ImGui::ColorConvertHSVtoRGSetHSV2199,217564
    static ImColor HSV(float h, float s, float v, float a = 1.0f)   { float r, g, b; ImGui::ColoHSV2200,217715
#define IM_DRAWLIST_TEX_LINES_WIDTH_MAX IM_DRAWLIST_TEX_LINES_WIDTH_MAX2210,218488
typedef void (*ImDrawCallback)(const ImDrawList* parent_list, const ImDrawCmd* cmd);ImDrawCallback2221,219358
#define ImDrawCallback_ResetRenderState ImDrawCallback_ResetRenderState2228,219993
struct ImDrawCmdImDrawCmd2235,220534
    ImVec4          ClipRect;           // 4*4  // Clipping rectangle (x1, y1, x2, y2). SubtractClipRect2237,220555
    ImTextureID     TextureId;          // 4-8  // User-provided texture ID. Set by user in ImfoTextureId2238,220728
    unsigned int    VtxOffset;          // 4    // Start offset in vertex buffer. ImGuiBackendFlVtxOffset2239,220942
    unsigned int    IdxOffset;          // 4    // Start offset in index buffer. Always equal toIdxOffset2240,221159
    unsigned int    ElemCount;          // 4    // Number of indices (multiple of 3) to be rendeElemCount2241,221288
    ImDrawCallback  UserCallback;       // 4-8  // If != NULL, call the function instead of rendUserCallback2242,221495
    void*           UserCallbackData;   // 4-8  // The draw callback code can access this.UserCallbackData2243,221659
    ImDrawCmd() { memset(this, 0, sizeof(*this)); } // Also ensure our padding fields are zeroedImDrawCmd2245,221753
    inline ImTextureID GetTexID() const { return TextureId; }GetTexID2248,222038
typedef unsigned short ImDrawIdx;ImDrawIdx2255,222433
struct ImDrawVertImDrawVert2260,222543
    ImVec2  pos;pos2262,222565
    ImVec2  uv;uv2263,222583
    ImU32   col;col2264,222600
struct ImDrawCmdHeaderImDrawCmdHeader2275,223437
    ImVec4          ClipRect;ClipRect2277,223464
    ImTextureID     TextureId;TextureId2278,223495
    unsigned int    VtxOffset;VtxOffset2279,223527
struct ImDrawChannelImDrawChannel2283,223610
    ImVector<ImDrawCmd>         _CmdBuffer;_CmdBuffer2285,223635
    ImVector<ImDrawIdx>         _IdxBuffer;_IdxBuffer2286,223680
struct ImDrawListSplitterImDrawListSplitter2292,223964
    int                         _Current;    // Current channel number (0)_Current2294,223994
    int                         _Count;      // Number of active channels (1+)_Count2295,224070
    ImVector<ImDrawChannel>     _Channels;   // Draw channels (not resized down so _Count might _Channels2296,224150
    inline ImDrawListSplitter()  { memset(this, 0, sizeof(*this)); }ImDrawListSplitter2298,224269
    inline ~ImDrawListSplitter() { ClearFreeMemory(); }~ImDrawListSplitter2299,224339
    inline void                 Clear() { _Current = 0; _Count = 1; } // Do not clear Channels[]Clear2300,224396
enum ImDrawFlags_ImDrawFlags_2309,225000
    ImDrawFlags_None                        = 0,ImDrawFlags_None2311,225022
    ImDrawFlags_Closed                      = 1 << 0, // PathStroke(), AddPolyline(): specify thImDrawFlags_Closed2312,225072
    ImDrawFlags_RoundCornersTopLeft         = 1 << 4, // AddRect(), AddRectFilled(), PathRect():ImDrawFlags_RoundCornersTopLeft2313,225246
    ImDrawFlags_RoundCornersTopRight        = 1 << 5, // AddRect(), AddRectFilled(), PathRect():ImDrawFlags_RoundCornersTopRight2314,225442
    ImDrawFlags_RoundCornersBottomLeft      = 1 << 6, // AddRect(), AddRectFilled(), PathRect():ImDrawFlags_RoundCornersBottomLeft2315,225639
    ImDrawFlags_RoundCornersBottomRight     = 1 << 7, // AddRect(), AddRectFilled(), PathRect():ImDrawFlags_RoundCornersBottomRight2316,225838
    ImDrawFlags_RoundCornersNone            = 1 << 8, // AddRect(), AddRectFilled(), PathRect():ImDrawFlags_RoundCornersNone2317,226038
    ImDrawFlags_RoundCornersTop             = ImDrawFlags_RoundCornersTopLeft | ImDrawFlags_RounImDrawFlags_RoundCornersTop2318,226232
    ImDrawFlags_RoundCornersBottom          = ImDrawFlags_RoundCornersBottomLeft | ImDrawFlags_RImDrawFlags_RoundCornersBottom2319,226347
    ImDrawFlags_RoundCornersLeft            = ImDrawFlags_RoundCornersBottomLeft | ImDrawFlags_RImDrawFlags_RoundCornersLeft2320,226468
    ImDrawFlags_RoundCornersRight           = ImDrawFlags_RoundCornersBottomRight | ImDrawFlags_ImDrawFlags_RoundCornersRight2321,226585
    ImDrawFlags_RoundCornersAll             = ImDrawFlags_RoundCornersTopLeft | ImDrawFlags_RounImDrawFlags_RoundCornersAll2322,226704
    ImDrawFlags_RoundCornersDefault_        = ImDrawFlags_RoundCornersAll, // Default to ALL corImDrawFlags_RoundCornersDefault_2323,226894
    ImDrawFlags_RoundCornersMask_           = ImDrawFlags_RoundCornersAll | ImDrawFlags_RoundCorImDrawFlags_RoundCornersMask_2324,227048
enum ImDrawListFlags_ImDrawListFlags_2329,227402
    ImDrawListFlags_None                    = 0,ImDrawListFlags_None2331,227428
    ImDrawListFlags_AntiAliasedLines        = 1 << 0,  // Enable anti-aliased lines/borders (*2 ImDrawListFlags_AntiAliasedLines2332,227478
    ImDrawListFlags_AntiAliasedLinesUseTex  = 1 << 1,  // Enable anti-aliased lines/borders usinImDrawListFlags_AntiAliasedLinesUseTex2333,227705
    ImDrawListFlags_AntiAliasedFill         = 1 << 2,  // Enable anti-aliased edge around filledImDrawListFlags_AntiAliasedFill2334,227879
    ImDrawListFlags_AllowVtxOffset          = 1 << 3   // Can emit 'VtxOffset > 0' to allow largImDrawListFlags_AllowVtxOffset2335,228015
struct ImDrawListImDrawList2347,229196
    ImVector<ImDrawCmd>     CmdBuffer;          // Draw commands. Typically 1 command = 1 GPU drCmdBuffer2350,229258
    ImVector<ImDrawIdx>     IdxBuffer;          // Index buffer. Each command consume ImDrawCmd:IdxBuffer2351,229398
    ImVector<ImDrawVert>    VtxBuffer;          // Vertex buffer.VtxBuffer2352,229515
    ImDrawListFlags         Flags;              // Flags, you may poke into these to adjust antiFlags2353,229582
    unsigned int            _VtxCurrentIdx;     // [Internal] generally == VtxBuffer.Size unless_VtxCurrentIdx2356,229761
    const ImDrawListSharedData* _Data;          // Pointer to shared draw data (you can use ImGu_Data2357,229921
    const char*             _OwnerName;         // Pointer to owner window's name for debugging_OwnerName2358,230088
    ImDrawVert*             _VtxWritePtr;       // [Internal] point within VtxBuffer.Data after _VtxWritePtr2359,230185
    ImDrawIdx*              _IdxWritePtr;       // [Internal] point within IdxBuffer.Data after _IdxWritePtr2360,230350
    ImVector<ImVec4>        _ClipRectStack;     // [Internal]_ClipRectStack2361,230515
    ImVector<ImTextureID>   _TextureIdStack;    // [Internal]_TextureIdStack2362,230578
    ImVector<ImVec2>        _Path;              // [Internal] current path building_Path2363,230641
    ImDrawCmdHeader         _CmdHeader;         // [Internal] template of active commands. Field_CmdHeader2364,230726
    ImDrawListSplitter      _Splitter;          // [Internal] for channels api (note: prefer usi_Splitter2365,230865
    float                   _FringeScale;       // [Internal] anti-alias fringe is scaled by thi_FringeScale2366,231018
    ImDrawList(const ImDrawListSharedData* shared_data) { memset(this, 0, sizeof(*this)); _Data ImDrawList2369,231380
    ~ImDrawList() { _ClearFreeMemory(); }~ImDrawList2371,231496
    inline ImVec2   GetClipRectMin() const { const ImVec4& cr = _ClipRectStack.back(); return ImGetClipRectMin2377,232058
    inline ImVec2   GetClipRectMax() const { const ImVec4& cr = _ClipRectStack.back(); return ImGetClipRectMax2378,232175
    inline    void  PathClear()                                                 { _Path.Size = 0PathClear2414,236637
    inline    void  PathLineTo(const ImVec2& pos)                               { _Path.push_bacPathLineTo2415,236738
    inline    void  PathLineToMergeDuplicate(const ImVec2& pos)                 { if (_Path.SizePathLineToMergeDuplicate2416,236845
    inline    void  PathFillConvex(ImU32 col)                                   { AddConvexPolyFPathFillConvex2417,237026
    inline    void  PathStroke(ImU32 col, ImDrawFlags flags = 0, float thickness = 1.0f) { AddPoPathStroke2418,237250
    inline void     ChannelsSplit(int count)    { _Splitter.Split(this, count); }ChannelsSplit2436,239386
    inline void     ChannelsMerge()             { _Splitter.Merge(this); }ChannelsMerge2437,239469
    inline void     ChannelsSetCurrent(int n)   { _Splitter.SetCurrentChannel(this, n); }ChannelsSetCurrent2438,239545
    inline    void  PrimWriteVtx(const ImVec2& pos, const ImVec2& uv, ImU32 col)    { _VtxWritePPrimWriteVtx2448,240377
    inline    void  PrimWriteIdx(ImDrawIdx idx)                                     { *_IdxWritePrimWriteIdx2449,240573
    inline    void  PrimVtx(const ImVec2& pos, const ImVec2& uv, ImU32 col)         { PrimWriteIPrimVtx2450,240699
    inline    void  AddBezierCurve(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const IAddBezierCurve2453,240935
    inline    void  PathBezierCurveTo(const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, int PathBezierCurveTo2454,241159
struct ImDrawDataImDrawData2472,242221
    bool            Valid;                  // Only valid after Render() is called and before thValid2474,242243
    int             CmdListsCount;          // Number of ImDrawList* to renderCmdListsCount2475,242369
    int             TotalIdxCount;          // For convenience, sum of all ImDrawList's IdxBuffeTotalIdxCount2476,242449
    int             TotalVtxCount;          // For convenience, sum of all ImDrawList's VtxBuffeTotalVtxCount2477,242553
    ImDrawList**    CmdLists;               // Array of ImDrawList* to render. The ImDrawList arCmdLists2478,242657
    ImVec2          DisplayPos;             // Top-left position of the viewport to render (== tDisplayPos2479,242809
    ImVec2          DisplaySize;            // Size of the viewport to render (== GetMainViewporDisplaySize2480,243055
    ImVec2          FramebufferScale;       // Amount of pixels for each unit of DisplaySize. BaFramebufferScale2481,243241
    ImDrawData()    { Clear(); }ImDrawData2484,243462
    void Clear()    { memset(this, 0, sizeof(*this)); }     // The ImDrawList are owned by ImGuiClear2485,243496
struct ImFontConfigImFontConfig2494,244422
    void*           FontData;               //          // TTF/OTF dataFontData2496,244446
    int             FontDataSize;           //          // TTF/OTF data sizeFontDataSize2497,244519
    bool            FontDataOwnedByAtlas;   // true     // TTF/OTF data ownership taken by the cFontDataOwnedByAtlas2498,244597
    int             FontNo;                 // 0        // Index of font within TTF/OTF fileFontNo2499,244744
    float           SizePixels;             //          // Size in pixels for rasterizer (more oSizePixels2500,244838
    int             OversampleH;            // 3        // Rasterize at higher quality for sub-pOversampleH2501,244978
    int             OversampleV;            // 1        // Rasterize at higher quality for sub-pOversampleV2502,245273
    bool            PixelSnapH;             // false    // Align every glyph to pixel boundary. PixelSnapH2503,245465
    ImVec2          GlyphExtraSpacing;      // 0, 0     // Extra spacing (in pixels) between glyGlyphExtraSpacing2504,245685
    ImVec2          GlyphOffset;            // 0, 0     // Offset all glyphs from this font inpuGlyphOffset2505,245821
    const ImWchar*  GlyphRanges;            // NULL     // Pointer to a user-provided list of UnGlyphRanges2506,245921
    float           GlyphMinAdvanceX;       // 0        // Minimum AdvanceX for glyphs, set Min GlyphMinAdvanceX2507,246157
    float           GlyphMaxAdvanceX;       // FLT_MAX  // Maximum AdvanceX for glyphsGlyphMaxAdvanceX2508,246319
    bool            MergeMode;              // false    // Merge into previous ImFont, so you caMergeMode2509,246407
    unsigned int    FontBuilderFlags;       // 0        // Settings for custom font builder. THIFontBuilderFlags2510,246668
    float           RasterizerMultiply;     // 1.0f     // Brighten (>1.0f) or darken (<1.0f) foRasterizerMultiply2511,246829
    ImWchar         EllipsisChar;           // -1       // Explicitly specify unicode codepoint EllipsisChar2512,247014
    char            Name[40];               // Name (strictly to ease debugging)Name2515,247222
    ImFont*         DstFont;DstFont2516,247304
struct ImFontGlyphImFontGlyph2523,247558
    unsigned int    Colored : 1;        // Flag to indicate glyph is colored and should generallColored2525,247581
    unsigned int    Visible : 1;        // Flag to indicate glyph has no visible pixels (e.g. spVisible2526,247768
    unsigned int    Codepoint : 30;     // 0x0000..0x10FFFFCodepoint2527,247903
    float           AdvanceX;           // Distance to next character (= data from font + ImFontAdvanceX2528,247964
    float           X0, Y0, X1, Y1;     // Glyph cornersX02529,248099
    float           X0, Y0, X1, Y1;     // Glyph cornersY02529,248099
    float           X0, Y0, X1, Y1;     // Glyph cornersX12529,248099
    float           X0, Y0, X1, Y1;     // Glyph cornersY12529,248099
    float           U0, V0, U1, V1;     // Texture coordinatesU02530,248157
    float           U0, V0, U1, V1;     // Texture coordinatesV02530,248157
    float           U0, V0, U1, V1;     // Texture coordinatesU12530,248157
    float           U0, V0, U1, V1;     // Texture coordinatesV12530,248157
struct ImFontGlyphRangesBuilderImFontGlyphRangesBuilder2535,248437
    ImVector<ImU32> UsedChars;            // Store 1-bit per Unicode code point (0=unused, 1=useUsedChars2537,248473
    ImFontGlyphRangesBuilder()              { Clear(); }ImFontGlyphRangesBuilder2539,248575
    inline void     Clear()                 { int size_in_bytes = (IM_UNICODE_CODEPOINT_MAX + 1)Clear2540,248633
    inline bool     GetBit(size_t n) const  { int off = (int)(n >> 5); ImU32 mask = 1u << (n & 3GetBit2541,248842
    inline void     SetBit(size_t n)        { int off = (int)(n >> 5); ImU32 mask = 1u << (n & 3SetBit2542,249009
    inline void     AddChar(ImWchar c)      { SetBit(c); }                      // Add characterAddChar2543,249176
struct ImFontAtlasCustomRectImFontAtlasCustomRect2550,249766
    unsigned short  Width, Height;  // Input    // Desired rectangle dimensionWidth2552,249799
    unsigned short  Width, Height;  // Input    // Desired rectangle dimensionHeight2552,249799
    unsigned short  X, Y;           // Output   // Packed position in AtlasX2553,249879
    unsigned short  X, Y;           // Output   // Packed position in AtlasY2553,249879
    unsigned int    GlyphID;        // Input    // For custom font glyphs only (ID < 0x110000)GlyphID2554,249956
    float           GlyphAdvanceX;  // Input    // For custom font glyphs only: glyph xadvanceGlyphAdvanceX2555,250052
    ImVec2          GlyphOffset;    // Input    // For custom font glyphs only: glyph display ofGlyphOffset2556,250148
    ImFont*         Font;           // Input    // For custom font glyphs only: target fontFont2557,250250
    ImFontAtlasCustomRect()         { Width = Height = 0; X = Y = 0xFFFF; GlyphID = 0; GlyphAdvaImFontAtlasCustomRect2558,250343
    bool IsPacked() const           { return X != 0xFFFF; }IsPacked2559,250496
enum ImFontAtlasFlags_ImFontAtlasFlags_2563,250595
    ImFontAtlasFlags_None               = 0,ImFontAtlasFlags_None2565,250622
    ImFontAtlasFlags_NoPowerOfTwoHeight = 1 << 0,   // Don't round the height to next power of tImFontAtlasFlags_NoPowerOfTwoHeight2566,250668
    ImFontAtlasFlags_NoMouseCursors     = 1 << 1,   // Don't build software mouse cursors into tImFontAtlasFlags_NoMouseCursors2567,250768
    ImFontAtlasFlags_NoBakedLines       = 1 << 2    // Don't build thick line textures into the ImFontAtlasFlags_NoBakedLines2568,250905
struct ImFontAtlasImFontAtlas2588,253013
    bool                        IsBuilt() const             { return Fonts.Size > 0 && (TexPixelIsBuilt2611,256085
    void                        SetTexID(ImTextureID id)    { TexID = id; }SetTexID2612,256229
    ImFontAtlasCustomRect*      GetCustomRectByIndex(int index) { IM_ASSERT(index >= 0); return GetCustomRectByIndex2643,258976
    ImFontAtlasFlags            Flags;              // Build flags (see ImFontAtlasFlags_)Flags2653,259538
    ImTextureID                 TexID;              // User data to refer to the texture once itTexID2654,259630
    int                         TexDesiredWidth;    // Texture width desired by user before BuilTexDesiredWidth2655,259844
    int                         TexGlyphPadding;    // Padding between glyphs within texture in TexGlyphPadding2656,260098
    bool                        Locked;             // Marked as Locked by ImGui::NewFrame() so Locked2657,260301
    bool                        TexPixelsUseColors; // Tell whether our texture data is known toTexPixelsUseColors2661,260558
    unsigned char*              TexPixelsAlpha8;    // 1 component per pixel, each component is TexPixelsAlpha82662,260743
    unsigned int*               TexPixelsRGBA32;    // 4 component per pixel, each component is TexPixelsRGBA322663,260890
    int                         TexWidth;           // Texture width calculated during Build().TexWidth2664,261041
    int                         TexHeight;          // Texture height calculated during Build().TexHeight2665,261138
    ImVec2                      TexUvScale;         // = (1.0f/TexWidth, 1.0f/TexHeight)TexUvScale2666,261236
    ImVec2                      TexUvWhitePixel;    // Texture coordinates to a white pixelTexUvWhitePixel2667,261326
    ImVector<ImFont*>           Fonts;              // Hold all the fonts returned by AddFont*. Fonts2668,261419
    ImVector<ImFontAtlasCustomRect> CustomRects;    // Rectangles for packing custom texture datCustomRects2669,261637
    ImVector<ImFontConfig>      ConfigData;         // Configuration dataConfigData2670,261752
    ImVec4                      TexUvLines[IM_DRAWLIST_TEX_LINES_WIDTH_MAX + 1];  // UVs for bakTexUvLines2671,261827
    const ImFontBuilderIO*      FontBuilderIO;      // Opaque interface to a font builder (defauFontBuilderIO2674,261980
    unsigned int                FontBuilderFlags;   // Shared flags (for all fonts) for custom fFontBuilderFlags2675,262164
    int                         PackIdMouseCursors; // Custom texture rectangle ID for white pixPackIdMouseCursors2678,262401
    int                         PackIdLines;        // Custom texture rectangle ID for baked antPackIdLines2679,262519
    typedef ImFontAtlasCustomRect    CustomRect;         // OBSOLETED in 1.72+CustomRect2682,262676
    typedef ImFontGlyphRangesBuilder GlyphRangesBuilder; // OBSOLETED in 1.67+GlyphRangesBuilder2683,262756
struct ImFontImFont2689,263014
    ImVector<float>             IndexAdvanceX;      // 12-16 // out //            // Sparse. GlyIndexAdvanceX2692,263085
    float                       FallbackAdvanceX;   // 4     // out // = FallbackGlyph->AdvanceXFallbackAdvanceX2693,263333
    float                       FontSize;           // 4     // in  //            // Height of cFontSize2694,263431
    ImVector<ImWchar>           IndexLookup;        // 12-16 // out //            // Sparse. IndIndexLookup2697,263661
    ImVector<ImFontGlyph>       Glyphs;             // 12-16 // out //            // All glyphs.Glyphs2698,263791
    const ImFontGlyph*          FallbackGlyph;      // 4-8   // out // = FindGlyph(FontFallbackCFallbackGlyph2699,263889
    ImFontAtlas*                ContainerAtlas;     // 4-8   // out //            // What we hasContainerAtlas2702,264028
    const ImFontConfig*         ConfigData;         // 4-8   // in  //            // Pointer witConfigData2703,264143
    short                       ConfigDataCount;    // 2     // in  // ~ 1        // Number of IConfigDataCount2704,264271
    ImWchar                     FallbackChar;       // 2     // in  // = '?'      // ReplacementFallbackChar2705,264478
    ImWchar                     EllipsisChar;       // 2     // out // = -1       // Character uEllipsisChar2706,264641
    bool                        DirtyLookupTables;  // 1     // out //DirtyLookupTables2707,264766
    float                       Scale;              // 4     // in  // = 1.f      // Base font sScale2708,264838
    float                       Ascent, Descent;    // 4+4   // out //            // Ascent: disAscent2709,265028
    float                       Ascent, Descent;    // 4+4   // out //            // Ascent: disDescent2709,265028
    int                         MetricsTotalSurface;// 4     // out //            // Total surfaMetricsTotalSurface2710,265176
    ImU8                        Used4kPagesMap[(IM_UNICODE_CODEPOINT_MAX+1)/4096/8]; // 2 bytes Used4kPagesMap2711,265403
    float                       GetCharAdvance(ImWchar c) const     { return ((int)c < IndexAdvaGetCharAdvance2718,265899
    bool                        IsLoaded() const                    { return ContainerAtlas != NIsLoaded2719,266053
    const char*                 GetDebugName() const                { return ConfigData ? ConfigGetDebugName2720,266157
enum ImGuiViewportFlags_ImGuiViewportFlags_2745,268255
    ImGuiViewportFlags_None                     = 0,ImGuiViewportFlags_None2747,268284
    ImGuiViewportFlags_IsPlatformWindow         = 1 << 0,   // Represent a Platform WindowImGuiViewportFlags_IsPlatformWindow2748,268338
    ImGuiViewportFlags_IsPlatformMonitor        = 1 << 1,   // Represent a Platform Monitor (unuImGuiViewportFlags_IsPlatformMonitor2749,268430
    ImGuiViewportFlags_OwnedByApp               = 1 << 2    // Platform Window: is created/managImGuiViewportFlags_OwnedByApp2750,268536
struct ImGuiViewportImGuiViewport2760,269371
    ImGuiViewportFlags  Flags;                  // See ImGuiViewportFlags_Flags2762,269396
    ImVec2              Pos;                    // Main Area: Position of the viewport (Dear ImGPos2763,269472
    ImVec2              Size;                   // Main Area: Size of the viewport.Size2764,269631
    ImVec2              WorkPos;                // Work Area: Position of the viewport minus tasWorkPos2765,269716
    ImVec2              WorkSize;               // Work Area: Size of the viewport minus task baWorkSize2766,269854
    ImGuiViewport()     { memset(this, 0, sizeof(*this)); }ImGuiViewport2768,269990
    ImVec2              GetCenter() const       { return ImVec2(Pos.x + Size.x * 0.5f, Pos.y + SGetCenter2771,270069
    ImVec2              GetWorkCenter() const   { return ImVec2(WorkPos.x + WorkSize.x * 0.5f, WGetWorkCenter2772,270183
namespace ImGuiImGui2782,270793
    static inline bool  ListBoxHeader(const char* label, const ImVec2& size = ImVec2(0, 0)) { reListBoxHeader2786,271027
    static inline void  ListBoxFooter() { EndListBox(); }ListBoxFooter2787,271158
    static inline void  OpenPopupContextItem(const char* str_id = NULL, ImGuiMouseButton mb = 1)OpenPopupContextItem2789,271262
    static inline bool  DragFloat(const char* label, float* v, float v_speed, float v_min, floatDragFloat2795,272141
    static inline bool  DragFloat2(const char* label, float v[2], float v_speed, float v_min, flDragFloat22796,272376
    static inline bool  DragFloat3(const char* label, float v[3], float v_speed, float v_min, flDragFloat32797,272615
    static inline bool  DragFloat4(const char* label, float v[4], float v_speed, float v_min, flDragFloat42798,272854
    static inline bool  SliderFloat(const char* label, float* v, float v_min, float v_max, constSliderFloat2801,273446
    static inline bool  SliderFloat2(const char* label, float v[2], float v_min, float v_max, coSliderFloat22802,273674
    static inline bool  SliderFloat3(const char* label, float v[3], float v_min, float v_max, coSliderFloat32803,273906
    static inline bool  SliderFloat4(const char* label, float v[4], float v_min, float v_max, coSliderFloat42804,274138
    static inline bool  BeginPopupContextWindow(const char* str_id, ImGuiMouseButton mb, bool ovBeginPopupContextWindow2806,274413
    static inline void  TreeAdvanceToLabelPos()             { SetCursorPosX(GetCursorPosX() + GeTreeAdvanceToLabelPos2808,274665
    static inline void  SetNextTreeNodeOpen(bool open, ImGuiCond cond = 0) { SetNextItemOpen(opeSetNextTreeNodeOpen2810,274835
    static inline float GetContentRegionAvailWidth()        { return GetContentRegionAvail().x; GetContentRegionAvailWidth2812,274986
    static inline ImDrawList* GetOverlayDrawList()          { return GetForegroundDrawList(); }GetOverlayDrawList2814,275127
typedef ImDrawFlags ImDrawCornerFlags;ImDrawCornerFlags2818,275337
enum ImDrawCornerFlags_ImDrawCornerFlags_2819,275377
    ImDrawCornerFlags_None      = ImDrawFlags_RoundCornersNone,         // Was == 0 prior to 1.8ImDrawCornerFlags_None2821,275405
    ImDrawCornerFlags_TopLeft   = ImDrawFlags_RoundCornersTopLeft,      // Was == 0x01 (1 << 0) ImDrawCornerFlags_TopLeft2822,275580
    ImDrawCornerFlags_TopRight  = ImDrawFlags_RoundCornersTopRight,     // Was == 0x02 (1 << 1) ImDrawCornerFlags_TopRight2823,275768
    ImDrawCornerFlags_BotLeft   = ImDrawFlags_RoundCornersBottomLeft,   // Was == 0x04 (1 << 2) ImDrawCornerFlags_BotLeft2824,275880
    ImDrawCornerFlags_BotRight  = ImDrawFlags_RoundCornersBottomRight,  // Was == 0x08 (1 << 3) ImDrawCornerFlags_BotRight2825,275992
    ImDrawCornerFlags_All       = ImDrawFlags_RoundCornersAll,          // Was == 0x0F prior to ImDrawCornerFlags_All2826,276104
    ImDrawCornerFlags_Top       = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_TopRight,ImDrawCornerFlags_Top2827,276206
    ImDrawCornerFlags_Bot       = ImDrawCornerFlags_BotLeft | ImDrawCornerFlags_BotRight,ImDrawCornerFlags_Bot2828,276297
    ImDrawCornerFlags_Left      = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_BotLeft,ImDrawCornerFlags_Left2829,276388
    ImDrawCornerFlags_Right     = ImDrawCornerFlags_TopRight | ImDrawCornerFlags_BotRightImDrawCornerFlags_Right2830,276478

../gejo/libs/imgui/imgui_demo.cpp,13014
#define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS75,4937
#define IM_NEWLINE IM_NEWLINE126,9252
#define IM_NEWLINE IM_NEWLINE128,9287
#define snprintf snprintf133,9380
#define vsnprintf vsnprintf136,9465
#define IM_PRId64 IM_PRId64142,9733
#define IM_PRIu64 IM_PRIu64143,9761
#define IM_PRId64 IM_PRId64145,9796
#define IM_PRIu64 IM_PRIu64146,9823
#define IM_MIN(IM_MIN153,10183
#define IM_MAX(IM_MAX154,10242
#define IM_CLAMP(IM_CLAMP155,10302
#define IMGUI_CDECL IMGUI_CDECL160,10574
#define IMGUI_CDECLIMGUI_CDECL162,10610
static void HelpMarker(const char* desc)HelpMarker190,11839
void ImGui::ShowUserGuide()ShowUserGuide204,12210
void ImGui::ShowDemoWindow(bool* p_open)ShowDemoWindow258,14866
static void ShowDemoWindowWidgets()ShowDemoWindowWidgets528,29638
            enum Element { Element_Fire, Element_Earth, Element_Air, Element_Water, Element_COUNElement687,36704
            enum Element { Element_Fire, Element_Earth, Element_Air, Element_Water, Element_COUNElement_Fire687,36704
            enum Element { Element_Fire, Element_Earth, Element_Air, Element_Water, Element_COUNElement_Earth687,36704
            enum Element { Element_Fire, Element_Earth, Element_Air, Element_Water, Element_COUNElement_Air687,36704
            enum Element { Element_Fire, Element_Earth, Element_Air, Element_Water, Element_COUNElement_Water687,36704
            enum Element { Element_Fire, Element_Earth, Element_Air, Element_Water, Element_COUNElement_COUNT687,36704
        struct Funcs { static bool ItemGetter(void* data, int n, const char** out_str) { *out_stFuncs1054,57898
        struct Funcs { static bool ItemGetter(void* data, int n, const char** out_str) { *out_stItemGetter1054,57898
            struct TextFiltersTextFilters1284,69393
                static int FilterImGuiLetters(ImGuiInputTextCallbackData* data)FilterImGuiLetters1287,69528
            struct FuncsFuncs1316,71321
                static int MyCallback(ImGuiInputTextCallbackData* data)MyCallback1318,71362
            struct FuncsFuncs1378,74720
                static int MyResizeCallback(ImGuiInputTextCallbackData* data)MyResizeCallback1380,74761
                static bool MyInputTextMultiline(const char* label, ImVector<char>* my_str, consMyInputTextMultiline1394,75610
        struct FuncsFuncs1599,86473
            static float Sin(void*, int i) { return sinf(i * 0.1f); }Sin1601,86506
            static float Saw(void*, int i) { return (i & 1) ? 1.0f : -1.0f; }Saw1602,86577
            enum ModeMode2085,116799
                Mode_Copy,Mode_Copy2087,116837
                Mode_Move,Mode_Move2088,116865
                Mode_SwapMode_Swap2089,116893
static void ShowDemoWindowLayout()ShowDemoWindowLayout2326,130284
static void ShowDemoWindowPopups()ShowDemoWindowPopups3092,164974
{__anon258a30c401113379,178260
enum MyItemColumnIDMyItemColumnID3384,178692
    MyItemColumnID_ID,MyItemColumnID_ID3386,178716
    MyItemColumnID_Name,MyItemColumnID_Name3387,178740
    MyItemColumnID_Action,MyItemColumnID_Action3388,178766
    MyItemColumnID_Quantity,MyItemColumnID_Quantity3389,178794
    MyItemColumnID_DescriptionMyItemColumnID_Description3390,178824
struct MyItemMyItem3393,178862
    int         ID;ID3395,178880
    const char* Name;Name3396,178901
    int         Quantity;Quantity3397,178924
    static const ImGuiTableSortSpecs* s_current_sort_specs;s_current_sort_specs3406,179707
    static int IMGUI_CDECL CompareWithSortSpecs(const void* lhs, const void* rhs)CompareWithSortSpecs3409,179817
const ImGuiTableSortSpecs* MyItem::s_current_sort_specs = NULL;s_current_sort_specs3438,181474
static void PushStyleCompact()PushStyleCompact3442,181601
static void PopStyleCompact()PopStyleCompact3449,181938
static void EditTableSizingFlags(ImGuiTableFlags* p_flags)EditTableSizingFlags3455,182059
    struct EnumDesc { ImGuiTableFlags Value; const char* Name; const char* Tooltip; };EnumDesc3457,182122
    struct EnumDesc { ImGuiTableFlags Value; const char* Name; const char* Tooltip; };Value3457,182122
    struct EnumDesc { ImGuiTableFlags Value; const char* Name; const char* Tooltip; };Name3457,182122
    struct EnumDesc { ImGuiTableFlags Value; const char* Name; const char* Tooltip; };Tooltip3457,182122
static void EditTableColumnsFlags(ImGuiTableColumnFlags* p_flags)EditTableColumnsFlags3497,184533
static void ShowTableColumnsStatusFlags(ImGuiTableColumnFlags flags)ShowTableColumnsStatusFlags3519,186329
static void ShowDemoWindowTables()ShowDemoWindowTables3527,186733
        enum ContentsType { CT_Text, CT_FillButton };ContentsType3633,191521
        enum ContentsType { CT_Text, CT_FillButton };CT_Text3633,191521
        enum ContentsType { CT_Text, CT_FillButton };CT_FillButton3633,191521
        enum ContentsType { CT_ShowWidth, CT_ShortText, CT_LongText, CT_Button, CT_FillButton, CContentsType4023,211646
        enum ContentsType { CT_ShowWidth, CT_ShortText, CT_LongText, CT_Button, CT_FillButton, CCT_ShowWidth4023,211646
        enum ContentsType { CT_ShowWidth, CT_ShortText, CT_LongText, CT_Button, CT_FillButton, CCT_ShortText4023,211646
        enum ContentsType { CT_ShowWidth, CT_ShortText, CT_LongText, CT_Button, CT_FillButton, CCT_LongText4023,211646
        enum ContentsType { CT_ShowWidth, CT_ShortText, CT_LongText, CT_Button, CT_FillButton, CCT_Button4023,211646
        enum ContentsType { CT_ShowWidth, CT_ShortText, CT_LongText, CT_Button, CT_FillButton, CCT_FillButton4023,211646
        enum ContentsType { CT_ShowWidth, CT_ShortText, CT_LongText, CT_Button, CT_FillButton, CCT_InputText4023,211646
            struct MyTreeNodeMyTreeNode4537,239194
                const char*     Name;Name4539,239240
                const char*     Type;Type4540,239279
                int             Size;Size4541,239318
                int             ChildIdx;ChildIdx4542,239357
                int             ChildCount;ChildCount4543,239400
                static void DisplayNode(const MyTreeNode* node, const MyTreeNode* all_nodes)DisplayNode4544,239445
        enum ContentsType { CT_Text, CT_Button, CT_SmallButton, CT_FillButton, CT_Selectable, CTContentsType4924,259056
        enum ContentsType { CT_Text, CT_Button, CT_SmallButton, CT_FillButton, CT_Selectable, CTCT_Text4924,259056
        enum ContentsType { CT_Text, CT_Button, CT_SmallButton, CT_FillButton, CT_Selectable, CTCT_Button4924,259056
        enum ContentsType { CT_Text, CT_Button, CT_SmallButton, CT_FillButton, CT_Selectable, CTCT_SmallButton4924,259056
        enum ContentsType { CT_Text, CT_Button, CT_SmallButton, CT_FillButton, CT_Selectable, CTCT_FillButton4924,259056
        enum ContentsType { CT_Text, CT_Button, CT_SmallButton, CT_FillButton, CT_Selectable, CTCT_Selectable4924,259056
        enum ContentsType { CT_Text, CT_Button, CT_SmallButton, CT_FillButton, CT_Selectable, CTCT_SelectableSpanRow4924,259056
static void ShowDemoWindowColumns()ShowDemoWindowColumns5229,278115
static void ShowDemoWindowMisc()ShowDemoWindowMisc5426,285344
void ImGui::ShowAboutWindow(bool* p_open)ShowAboutWindow5609,296228
namespace ImGui { IMGUI_API void ShowFontAtlas(ImFontAtlas* atlas); }ImGui5754,303560
void ImGui::ShowFontSelector(const char* label)ShowFontSelector5758,303781
bool ImGui::ShowStyleSelector(const char* label)ShowStyleSelector5785,305000
void ImGui::ShowStyleEditor(ImGuiStyle* ref)ShowStyleEditor5801,305417
static void ShowExampleAppMainMenuBar()ShowExampleAppMainMenuBar6058,320724
static void ShowExampleMenuFile()ShowExampleMenuFile6083,321573
struct ExampleAppConsoleExampleAppConsole6165,324656
    char                  InputBuf[256];InputBuf6167,324685
    ImVector<char*>       Items;Items6168,324727
    ImVector<const char*> Commands;Commands6169,324761
    ImVector<char*>       History;History6170,324798
    int                   HistoryPos;    // -1: new line, 0..History.Size-1 browsing history.HistoryPos6171,324834
    ImGuiTextFilter       Filter;Filter6172,324929
    bool                  AutoScroll;AutoScroll6173,324964
    bool                  ScrollToBottom;ScrollToBottom6174,325003
    ExampleAppConsole()ExampleAppConsole6176,325048
    ~ExampleAppConsole()~ExampleAppConsole6191,325564
    static int   Stricmp(const char* s1, const char* s2)         { int d; while ((d = toupper(*sStricmp6199,325731
    static int   Strnicmp(const char* s1, const char* s2, int n) { int d = 0; while (n > 0 && (dStrnicmp6200,325888
    static char* Strdup(const char* s)                           { IM_ASSERT(s); size_t len = stStrdup6201,326063
    static void  Strtrim(char* s)                                { char* str_end = s + strlen(s)Strtrim6202,326264
    void    ClearLog()ClearLog6204,326434
    void    AddLog(const char* fmt, ...) IM_FMTARGS(2)AddLog6211,326573
    void    Draw(const char* title, bool* p_open)Draw6223,326901
    void    ExecCommand(const char* command_line)ExecCommand6360,333573
    static int TextEditCallbackStub(ImGuiInputTextCallbackData* data)TextEditCallbackStub6403,335043
    int     TextEditCallback(ImGuiInputTextCallbackData* data)TextEditCallback6409,335253
static void ShowExampleAppConsole(bool* p_open)ShowExampleAppConsole6511,339713
struct ExampleAppLogExampleAppLog6525,340196
    ImGuiTextBuffer     Buf;Buf6527,340221
    ImGuiTextFilter     Filter;Filter6528,340251
    ImVector<int>       LineOffsets; // Index to lines offset. We maintain this with AddLog() caLineOffsets6529,340284
    bool                AutoScroll;  // Keep scrolling if already at the bottom.AutoScroll6530,340386
    ExampleAppLog()ExampleAppLog6532,340470
    void    Clear()Clear6538,340553
    void    AddLog(const char* fmt, ...) IM_FMTARGS(2)AddLog6545,340677
    void    Draw(const char* title, bool* p_open = NULL)Draw6557,341063
static void ShowExampleAppLog(bool* p_open)ShowExampleAppLog6646,345085
static void ShowExampleAppLayout(bool* p_open)ShowExampleAppLayout6680,346737
static void ShowPlaceholderObject(const char* prefix, int uid)ShowPlaceholderObject6744,349043
static void ShowExampleAppPropertyEditor(bool* p_open)ShowExampleAppPropertyEditor6792,350988
static void ShowExampleAppLongText(bool* p_open)ShowExampleAppLongText6827,352358
static void ShowExampleAppAutoResize(bool* p_open)ShowExampleAppAutoResize6889,354775
static void ShowExampleAppConstrainedResize(bool* p_open)ShowExampleAppConstrainedResize6913,355800
    struct CustomConstraintsCustomConstraints6915,355862
        static void Square(ImGuiSizeCallbackData* data) { data->DesiredSize.x = data->DesiredSizSquare6918,355968
        static void Step(ImGuiSizeCallbackData* data)   { float step = (float)(int)(intptr_t)datStep6919,356123
static void ShowExampleAppSimpleOverlay(bool* p_open)ShowExampleAppSimpleOverlay6967,358962
static void ShowExampleAppFullscreen(bool* p_open)ShowExampleAppFullscreen7014,361445
static void ShowExampleAppWindowTitles(bool*)ShowExampleAppWindowTitles7052,363633
static void ShowExampleAppCustomRendering(bool* p_open)ShowExampleAppCustomRendering7085,365336
struct MyDocumentMyDocument7326,381340
    const char* Name;       // Document titleName7328,381362
    bool        Open;       // Set when open (we keep an array of all available documents to simOpen7329,381409
    bool        OpenPrev;   // Copy of Open from last update.OpenPrev7330,381524
    bool        Dirty;      // Set when the document has been modifiedDirty7331,381587
    bool        WantClose;  // Set when the documentWantClose7332,381659
    ImVec4      Color;      // An arbitrary variable associated to the documentColor7333,381713
    MyDocument(const char* name, bool open = true, const ImVec4& color = ImVec4(1.0f, 1.0f, 1.0fMyDocument7335,381796
    void DoOpen()       { Open = true; }DoOpen7343,382047
    void DoQueueClose() { WantClose = true; }DoQueueClose7344,382089
    void DoForceClose() { Open = false; Dirty = false; }DoForceClose7345,382136
    void DoSave()       { Dirty = false; }DoSave7346,382194
    static void DisplayContents(MyDocument* doc)DisplayContents7349,382294
    static void DisplayContextMenu(MyDocument* doc)DisplayContextMenu7366,383078
struct ExampleAppDocumentsExampleAppDocuments7381,383509
    ImVector<MyDocument> Documents;Documents7383,383540
    ExampleAppDocuments()ExampleAppDocuments7385,383579
static void NotifyOfDocumentsClosedElsewhere(ExampleAppDocuments& app)NotifyOfDocumentsClosedElsewhere7404,385034
void ShowExampleAppDocuments(bool* p_open)ShowExampleAppDocuments7415,385367
void ImGui::ShowAboutWindow(bool*) {}ShowAboutWindow7599,391978
void ImGui::ShowDemoWindow(bool*) {}ShowDemoWindow7600,392017
void ImGui::ShowUserGuide() {}ShowUserGuide7601,392055
void ImGui::ShowStyleEditor(ImGuiStyle*) {}ShowStyleEditor7602,392087

../gejo/libs/imgui/imgui_draw.cpp,18753
#define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS26,642
#define IMGUI_DEFINE_MATH_OPERATORSIMGUI_DEFINE_MATH_OPERATORS33,767
#define alloca alloca48,1297
namespace IMGUI_STB_NAMESPACEIMGUI_STB_NAMESPACE104,5950
#define STBRP_STATICSTBRP_STATIC132,7658
#define STBRP_ASSERT(STBRP_ASSERT133,7680
#define STBRP_SORT STBRP_SORT134,7740
#define STB_RECT_PACK_IMPLEMENTATIONSTB_RECT_PACK_IMPLEMENTATION135,7777
#define STBTT_malloc(STBTT_malloc147,8291
#define STBTT_free(STBTT_free148,8345
#define STBTT_assert(STBTT_assert149,8398
#define STBTT_fmod(STBTT_fmod150,8457
#define STBTT_sqrt(STBTT_sqrt151,8498
#define STBTT_pow(STBTT_pow152,8537
#define STBTT_fabs(STBTT_fabs153,8577
#define STBTT_ifloor(STBTT_ifloor154,8616
#define STBTT_iceil(STBTT_iceil155,8669
#define STBTT_STATICSTBTT_STATIC156,8715
#define STB_TRUETYPE_IMPLEMENTATIONSTB_TRUETYPE_IMPLEMENTATION157,8737
void ImGui::StyleColorsDark(ImGuiStyle* dst)StyleColorsDark190,9453
void ImGui::StyleColorsClassic(ImGuiStyle* dst)StyleColorsClassic250,14209
void ImGui::StyleColorsLight(ImGuiStyle* dst)StyleColorsLight311,19071
ImDrawListSharedData::ImDrawListSharedData()ImDrawListSharedData375,24024
void ImDrawListSharedData::SetCircleTessellationMaxError(float max_error)SetCircleTessellationMaxError386,24443
void ImDrawList::_ResetForNewFrame()_ResetForNewFrame402,25118
void ImDrawList::_ClearFreeMemory()_ClearFreeMemory426,26005
ImDrawList* ImDrawList::CloneOutput() constCloneOutput441,26347
void ImDrawList::AddDrawCmd()AddDrawCmd451,26591
void ImDrawList::_PopUnusedDrawCmd()_PopUnusedDrawCmd465,27267
void ImDrawList::AddCallback(ImDrawCallback callback, void* callback_data)AddCallback474,27524
#define ImDrawCmd_HeaderSize ImDrawCmd_HeaderSize490,28080
#define ImDrawCmd_HeaderCompare(ImDrawCmd_HeaderCompare491,28192
#define ImDrawCmd_HeaderCopy(ImDrawCmd_HeaderCopy492,28339
void ImDrawList::_OnChangedClipRect()_OnChangedClipRect496,28792
void ImDrawList::_OnChangedTextureID()_OnChangedTextureID518,29585
void ImDrawList::_OnChangedVtxOffset()_OnChangedVtxOffset540,30354
int ImDrawList::_CalcCircleAutoSegmentCount(float radius) const_CalcCircleAutoSegmentCount555,30891
void ImDrawList::PushClipRect(ImVec2 cr_min, ImVec2 cr_max, bool intersect_with_current_clip_recPushClipRect566,31539
void ImDrawList::PushClipRectFullScreen()PushClipRectFullScreen585,32160
void ImDrawList::PopClipRect()PopClipRect590,32362
void ImDrawList::PushTextureID(ImTextureID texture_id)PushTextureID597,32591
void ImDrawList::PopTextureID()PopTextureID604,32767
void ImDrawList::PrimReserve(int idx_count, int vtx_count)PrimReserve614,33254
void ImDrawList::PrimUnreserve(int idx_count, int vtx_count)PrimUnreserve640,34509
void ImDrawList::PrimRect(const ImVec2& a, const ImVec2& c, ImU32 col)PrimRect651,34921
void ImDrawList::PrimRectUV(const ImVec2& a, const ImVec2& c, const ImVec2& uv_a, const ImVec2& PrimRectUV666,35725
void ImDrawList::PrimQuadUV(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, PrimQuadUV681,36595
#define IM_NORMALIZE2F_OVER_ZERO(IM_NORMALIZE2F_OVER_ZERO697,37644
#define IM_FIXNORMAL2F_MAX_INVLEN2 IM_FIXNORMAL2F_MAX_INVLEN2698,37810
#define IM_FIXNORMAL2F(IM_FIXNORMAL2F699,37891
void ImDrawList::AddPolyline(const ImVec2* points, const int points_count, ImU32 col, ImDrawFlagAddPolyline703,38327
void ImDrawList::AddConvexPolyFilled(const ImVec2* points, const int points_count, ImU32 col)AddConvexPolyFilled959,54595
void ImDrawList::_PathArcToFastEx(const ImVec2& center, float radius, int a_min_sample, int a_ma_PathArcToFastEx1040,58156
void ImDrawList::_PathArcToN(const ImVec2& center, float radius, float a_min, float a_max, int n_PathArcToN1132,61524
void ImDrawList::PathArcToFast(const ImVec2& center, float radius, int a_min_of_12, int a_max_ofPathArcToFast1151,62235
void ImDrawList::PathArcTo(const ImVec2& center, float radius, float a_min, float a_max, int numPathArcTo1161,62579
ImVec2 ImBezierCubicCalc(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4,ImBezierCubicCalc1211,64976
ImVec2 ImBezierQuadraticCalc(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, float t)ImBezierQuadraticCalc1221,65346
static void PathBezierCubicCurveToCasteljau(ImVector<ImVec2>* path, float x1, float y1, float x2PathBezierCubicCurveToCasteljau1231,65704
static void PathBezierQuadraticCurveToCasteljau(ImVector<ImVec2>* path, float x1, float y1, floaPathBezierQuadraticCurveToCasteljau1256,66889
void ImDrawList::PathBezierCubicCurveTo(const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, inPathBezierCubicCurveTo1274,67703
void ImDrawList::PathBezierQuadraticCurveTo(const ImVec2& p2, const ImVec2& p3, int num_segmentsPathBezierQuadraticCurveTo1289,68269
static inline ImDrawFlags FixRectCornerFlags(ImDrawFlags flags)FixRectCornerFlags1305,68876
void ImDrawList::PathRect(const ImVec2& a, const ImVec2& b, float rounding, ImDrawFlags flags)PathRect1338,70530
void ImDrawList::AddLine(const ImVec2& p1, const ImVec2& p2, ImU32 col, float thickness)AddLine1364,72163
void ImDrawList::AddRect(const ImVec2& p_min, const ImVec2& p_max, ImU32 col, float rounding, ImAddRect1375,72542
void ImDrawList::AddRectFilled(const ImVec2& p_min, const ImVec2& p_max, ImU32 col, float roundiAddRectFilled1386,73107
void ImDrawList::AddRectFilledMultiColor(const ImVec2& p_min, const ImVec2& p_max, ImU32 col_uprAddRectFilledMultiColor1403,73621
void ImDrawList::AddQuad(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4,AddQuad1418,74482
void ImDrawList::AddQuadFilled(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVecAddQuadFilled1430,74811
void ImDrawList::AddTriangle(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, ImU32 col, flAddTriangle1442,75102
void ImDrawList::AddTriangleFilled(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, ImU32 cAddTriangleFilled1453,75396
void ImDrawList::AddCircle(const ImVec2& center, float radius, ImU32 col, int num_segments, floaAddCircle1464,75652
void ImDrawList::AddCircleFilled(const ImVec2& center, float radius, ImU32 col, int num_segmentsAddCircleFilled1490,76631
void ImDrawList::AddNgon(const ImVec2& center, float radius, ImU32 col, int num_segments, float AddNgon1517,77597
void ImDrawList::AddNgonFilled(const ImVec2& center, float radius, ImU32 col, int num_segments)AddNgonFilled1529,78140
void ImDrawList::AddBezierCubic(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVeAddBezierCubic1541,78640
void ImDrawList::AddBezierQuadratic(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, ImU32 AddBezierQuadratic1552,79014
void ImDrawList::AddText(const ImFont* font, float font_size, const ImVec2& pos, ImU32 col, consAddText1562,79329
void ImDrawList::AddText(const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_AddText1591,80555
void ImDrawList::AddImage(ImTextureID user_texture_id, const ImVec2& p_min, const ImVec2& p_max,AddImage1596,80723
void ImDrawList::AddImageQuad(ImTextureID user_texture_id, const ImVec2& p1, const ImVec2& p2, cAddImageQuad1612,81215
void ImDrawList::AddImageRounded(ImTextureID user_texture_id, const ImVec2& p_min, const ImVec2&AddImageRounded1628,81779
void ImDrawListSplitter::ClearFreeMemory()ClearFreeMemory1661,83144
void ImDrawListSplitter::Split(ImDrawList* draw_list, int channels_count)Split1675,83564
void ImDrawListSplitter::Merge(ImDrawList* draw_list)Merge1705,84883
void ImDrawListSplitter::SetCurrentChannel(ImDrawList* draw_list, int idx)SetCurrentChannel1776,88500
void ImDrawData::DeIndexAllBuffers()DeIndexAllBuffers1805,90228
void ImDrawData::ScaleClipRects(const ImVec2& fb_scale)ScaleClipRects1826,91102
void ImGui::ShadeVertsLinearColorGradientKeepAlpha(ImDrawList* draw_list, int vert_start_idx, inShadeVertsLinearColorGradientKeepAlpha1844,91866
void ImGui::ShadeVertsLinearUV(ImDrawList* draw_list, int vert_start_idx, int vert_end_idx, consShadeVertsLinearUV1868,93289
ImFontConfig::ImFontConfig()ImFontConfig1896,94528
const int FONT_ATLAS_DEFAULT_TEX_DATA_W = 108; // Actual texture will be 2 times that + 1 spacinFONT_ATLAS_DEFAULT_TEX_DATA_W1913,95203
const int FONT_ATLAS_DEFAULT_TEX_DATA_H = 27;FONT_ATLAS_DEFAULT_TEX_DATA_H1914,95303
static const char FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[FONT_ATLAS_DEFAULT_TEX_DATA_W * FONT_ATLAS_FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS1915,95350
static const ImVec2 FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[ImGuiMouseCursor_COUNT][3] =FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA1946,98614
ImFontAtlas::ImFontAtlas()ImFontAtlas1959,99413
ImFontAtlas::~ImFontAtlas()~ImFontAtlas1966,99556
void    ImFontAtlas::ClearInputData()ClearInputData1972,99714
void    ImFontAtlas::ClearTexData()ClearTexData1994,100568
void    ImFontAtlas::ClearFonts()ClearFonts2006,100933
void    ImFontAtlas::Clear()Clear2014,101175
void    ImFontAtlas::GetTexDataAsAlpha8(unsigned char** out_pixels, int* out_width, int* out_heiGetTexDataAsAlpha82021,101276
void    ImFontAtlas::GetTexDataAsRGBA32(unsigned char** out_pixels, int* out_width, int* out_heiGetTexDataAsRGBA322037,101755
ImFont* ImFontAtlas::AddFont(const ImFontConfig* font_cfg)AddFont2061,102744
static unsigned int Decode85Byte(char c)                                    { return c >= '\\' ?Decode85Byte2096,104428
static void         Decode85(const unsigned char* src, unsigned char* dst)Decode852097,104541
ImFont* ImFontAtlas::AddFontDefault(const ImFontConfig* font_cfg_template)AddFontDefault2109,105101
ImFont* ImFontAtlas::AddFontFromFileTTF(const char* filename, float size_pixels, const ImFontConAddFontFromFileTTF2130,106143
ImFont* ImFontAtlas::AddFontFromMemoryTTF(void* ttf_data, int ttf_size, float size_pixels, constAddFontFromMemoryTTF2152,107318
ImFont* ImFontAtlas::AddFontFromMemoryCompressedTTF(const void* compressed_ttf_data, int compresAddFontFromMemoryCompressedTTF2165,107937
ImFont* ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(const char* compressed_ttf_data_base85AddFontFromMemoryCompressedBase85TTF2177,108769
int ImFontAtlas::AddCustomRectRegular(int width, int height)AddCustomRectRegular2187,109380
int ImFontAtlas::AddCustomRectFontGlyph(ImFont* font, ImWchar id, int width, int height, float aAddCustomRectFontGlyph2198,109733
void ImFontAtlas::CalcCustomRectUV(const ImFontAtlasCustomRect* rect, ImVec2* out_uv_min, ImVec2CalcCustomRectUV2217,110369
bool ImFontAtlas::GetMouseCursorTexData(ImGuiMouseCursor cursor_type, ImVec2* out_offset, ImVec2GetMouseCursorTexData2225,110917
bool    ImFontAtlas::Build()Build2246,111907
void    ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char out_table[256], float in_brighten_ImFontAtlasBuildMultiplyCalcLookupTable2271,112950
void    ImFontAtlasBuildMultiplyRectAlpha8(const unsigned char table[256], unsigned char* pixelsImFontAtlasBuildMultiplyRectAlpha82280,113251
struct ImFontBuildSrcDataImFontBuildSrcData2291,113817
    stbtt_fontinfo      FontInfo;FontInfo2293,113847
    stbtt_pack_range    PackRange;          // Hold the list of codepoints to pack (essentially PackRange2294,113882
    stbrp_rect*         Rects;              // Rectangle to pack. We first fill in their size anRects2295,114006
    stbtt_packedchar*   PackedChars;        // Output glyphsPackedChars2296,114145
    const ImWchar*      SrcRanges;          // Ranges as requested by user (user is allowed to rSrcRanges2297,114207
    int                 DstIndex;           // Index into atlas->Fonts[] and dst_tmp_array[]DstIndex2298,114342
    int                 GlyphsHighest;      // Highest requested codepointGlyphsHighest2299,114436
    int                 GlyphsCount;        // Glyph count (excluding missing glyphs and glyphs GlyphsCount2300,114512
    ImBitVector         GlyphsSet;          // Glyph bit map (random access, 1-bit per codepointGlyphsSet2301,114648
    ImVector<int>       GlyphsList;         // Glyph codepoints list (flattened version of GlyphGlyphsList2302,114778
struct ImFontBuildDstDataImFontBuildDstData2306,115000
    int                 SrcCount;           // Number of source fonts targeting this destinationSrcCount2308,115030
    int                 GlyphsHighest;GlyphsHighest2309,115134
    int                 GlyphsCount;GlyphsCount2310,115174
    ImBitVector         GlyphsSet;          // This is used to resolve collision when multiple sGlyphsSet2311,115212
static void UnpackBitVectorToFlatIndexList(const ImBitVector* in, ImVector<int>* out)UnpackBitVectorToFlatIndexList2314,115363
static bool ImFontAtlasBuildWithStbTruetype(ImFontAtlas* atlas)ImFontAtlasBuildWithStbTruetype2326,115895
const ImFontBuilderIO* ImFontAtlasGetBuilderForStbTruetype()ImFontAtlasGetBuilderForStbTruetype2579,129235
void ImFontAtlasBuildSetupFont(ImFontAtlas* atlas, ImFont* font, ImFontConfig* font_config, floaImFontAtlasBuildSetupFont2588,129454
void ImFontAtlasBuildPackCustomRects(ImFontAtlas* atlas, void* stbrp_context_opaque)ImFontAtlasBuildPackCustomRects2603,129929
void ImFontAtlasBuildRender8bppRectFromString(ImFontAtlas* atlas, int x, int y, int w, int h, coImFontAtlasBuildRender8bppRectFromString2630,131118
void ImFontAtlasBuildRender32bppRectFromString(ImFontAtlas* atlas, int x, int y, int w, int h, cImFontAtlasBuildRender32bppRectFromString2640,131723
static void ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas* atlas)ImFontAtlasBuildRenderDefaultTexData2650,132343
static void ImFontAtlasBuildRenderLinesTexData(ImFontAtlas* atlas)ImFontAtlasBuildRenderLinesTexData2690,134524
void ImFontAtlasBuildInit(ImFontAtlas* atlas)ImFontAtlasBuildInit2742,137137
void ImFontAtlasBuildFinish(ImFontAtlas* atlas)ImFontAtlasBuildFinish2763,138112
const ImWchar*   ImFontAtlas::GetGlyphRangesDefault()GetGlyphRangesDefault2808,140257
const ImWchar*  ImFontAtlas::GetGlyphRangesKorean()GetGlyphRangesKorean2818,140467
const ImWchar*  ImFontAtlas::GetGlyphRangesChineseFull()GetGlyphRangesChineseFull2830,140766
static void UnpackAccumulativeOffsetsIntoRanges(int base_codepoint, const short* accumulative_ofUnpackAccumulativeOffsetsIntoRanges2845,141253
const ImWchar*  ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon()GetGlyphRangesChineseSimplifiedCommon2859,141880
const ImWchar*  ImFontAtlas::GetGlyphRangesJapanese()GetGlyphRangesJapanese2926,149361
const ImWchar*  ImFontAtlas::GetGlyphRangesCyrillic()GetGlyphRangesCyrillic3015,159038
const ImWchar*  ImFontAtlas::GetGlyphRangesThai()GetGlyphRangesThai3028,159403
const ImWchar*  ImFontAtlas::GetGlyphRangesVietnamese()GetGlyphRangesVietnamese3040,159664
void ImFontGlyphRangesBuilder::AddText(const char* text, const char* text_end)AddText3061,160235
void ImFontGlyphRangesBuilder::AddRanges(const ImWchar* ranges)AddRanges3074,160576
void ImFontGlyphRangesBuilder::BuildRanges(ImVector<ImWchar>* out_ranges)BuildRanges3081,160768
ImFont::ImFont()ImFont3099,161390
ImFont::~ImFont()~ImFont3116,161807
void    ImFont::ClearOutputData()ClearOutputData3121,161858
void ImFont::BuildLookupTable()BuildLookupTable3135,162174
bool ImFont::IsGlyphRangeUnused(unsigned int c_begin, unsigned int c_last)IsGlyphRangeUnused3187,164301
void ImFont::SetGlyphVisible(ImWchar c, bool visible)SetGlyphVisible3198,164726
void ImFont::SetFallbackChar(ImWchar c)SetFallbackChar3204,164906
void ImFont::GrowIndex(int new_size)GrowIndex3210,165003
void ImFont::AddGlyph(const ImFontConfig* cfg, ImWchar codepoint, float x0, float y0, float x1, AddGlyph3222,165646
void ImFont::AddRemapChar(ImWchar dst, ImWchar src, bool overwrite_dst)AddRemapChar3266,167301
const ImFontGlyph* ImFont::FindGlyph(ImWchar c) constFindGlyph3281,168038
const ImFontGlyph* ImFont::FindGlyphNoFallback(ImWchar c) constFindGlyphNoFallback3291,168303
const char* ImFont::CalcWordWrapPositionA(float scale, const char* text, const char* text_end, fCalcWordWrapPositionA3301,168560
ImVec2 ImFont::CalcTextSizeA(float size, float max_width, float wrap_width, const char* text_begCalcTextSizeA3400,171797
void ImFont::RenderChar(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, ImWchar c) conRenderChar3495,174942
void ImFont::RenderText(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, const ImVec4& RenderText3510,175686
void ImGui::RenderArrow(ImDrawList* draw_list, ImVec2 pos, ImU32 col, ImGuiDir dir, float scale)RenderArrow3717,184764
void ImGui::RenderBullet(ImDrawList* draw_list, ImVec2 pos, ImU32 col)RenderBullet3748,185720
void ImGui::RenderCheckMark(ImDrawList* draw_list, ImVec2 pos, ImU32 col, float sz)RenderCheckMark3753,185882
void ImGui::RenderMouseCursor(ImDrawList* draw_list, ImVec2 pos, float scale, ImGuiMouseCursor mRenderMouseCursor3768,186440
void ImGui::RenderArrowPointingAt(ImDrawList* draw_list, ImVec2 pos, ImVec2 half_sz, ImGuiDir diRenderArrowPointingAt3790,187787
static inline float ImAcos01(float x)ImAcos013802,188683
void ImGui::RenderRectFilledRangeH(ImDrawList* draw_list, const ImRect& rect, ImU32 col, float xRenderRectFilledRangeH3811,189025
void ImGui::RenderRectFilledWithHole(ImDrawList* draw_list, ImRect outer, ImRect inner, ImU32 coRenderRectFilledWithHole3871,191710
void ImGui::RenderColorRectWithAlphaCheckerboard(ImDrawList* draw_list, ImVec2 p_min, ImVec2 p_mRenderColorRectWithAlphaCheckerboard3891,194156
static unsigned int stb_decompress_length(const unsigned char *input)stb_decompress_length3937,196866
static unsigned char *stb__barrier_out_e, *stb__barrier_out_b;stb__barrier_out_e3942,197025
static unsigned char *stb__barrier_out_e, *stb__barrier_out_b;stb__barrier_out_b3942,197025
static const unsigned char *stb__barrier_in_b;stb__barrier_in_b3943,197089
static unsigned char *stb__dout;stb__dout3944,197137
static void stb__match(const unsigned char *data, unsigned int length)stb__match3945,197171
static void stb__lit(const unsigned char *data, unsigned int length)stb__lit3954,197593
#define stb__in2(stb__in23963,197957
#define stb__in3(stb__in33964,198005
#define stb__in4(stb__in43965,198061
static const unsigned char *stb_decompress_token(const unsigned char *i)stb_decompress_token3967,198119
static unsigned int stb_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflenstb_adler323984,199233
static unsigned int stb_decompress(unsigned char *output, const unsigned char *i, unsigned int /stb_decompress4015,200184
static const char proggy_clean_ttf_compressed_data_base85[11980 + 1] =proggy_clean_ttf_compressed_data_base854059,202129
static const char* GetDefaultCompressedFontDataTTFBase85()GetDefaultCompressedFontDataTTFBase854147,214873

../gejo/libs/imgui/imgui_internal.h,128797
#define IMGUI_ENABLE_SSEIMGUI_ENABLE_SSE56,1876
#define IMGUI_ENABLE_STB_TRUETYPEIMGUI_ENABLE_STB_TRUETYPE102,4609
typedef int ImGuiLayoutType;            // -> enum ImGuiLayoutType_         // Enum: Horizontal ImGuiLayoutType143,7902
typedef int ImGuiItemFlags;             // -> enum ImGuiItemFlags_          // Flags: for PushItImGuiItemFlags144,8011
typedef int ImGuiItemAddFlags;          // -> enum ImGuiItemAddFlags_       // Flags: for ItemAdImGuiItemAddFlags145,8117
typedef int ImGuiItemStatusFlags;       // -> enum ImGuiItemStatusFlags_    // Flags: for DC.LasImGuiItemStatusFlags146,8218
typedef int ImGuiOldColumnFlags;        // -> enum ImGuiOldColumnFlags_     // Flags: for BeginCImGuiOldColumnFlags147,8332
typedef int ImGuiNavHighlightFlags;     // -> enum ImGuiNavHighlightFlags_  // Flags: for RenderImGuiNavHighlightFlags148,8438
typedef int ImGuiNavDirSourceFlags;     // -> enum ImGuiNavDirSourceFlags_  // Flags: for GetNavImGuiNavDirSourceFlags149,8550
typedef int ImGuiNavMoveFlags;          // -> enum ImGuiNavMoveFlags_       // Flags: for navigaImGuiNavMoveFlags150,8663
typedef int ImGuiNextItemDataFlags;     // -> enum ImGuiNextItemDataFlags_  // Flags: for SetNexImGuiNextItemDataFlags151,8774
typedef int ImGuiNextWindowDataFlags;   // -> enum ImGuiNextWindowDataFlags_// Flags: for SetNexImGuiNextWindowDataFlags152,8892
typedef int ImGuiSeparatorFlags;        // -> enum ImGuiSeparatorFlags_     // Flags: for SeparaImGuiSeparatorFlags153,9012
typedef int ImGuiTextFlags;             // -> enum ImGuiTextFlags_          // Flags: for TextExImGuiTextFlags154,9117
typedef int ImGuiTooltipFlags;          // -> enum ImGuiTooltipFlags_       // Flags: for BeginTImGuiTooltipFlags155,9217
typedef void (*ImGuiErrorLogCallback)(void* user_data, const char* fmt, ...);ImGuiErrorLogCallback157,9327
namespace ImStbImStb172,9977
#define STB_TEXTEDIT_STRING STB_TEXTEDIT_STRING177,10057
#define STB_TEXTEDIT_CHARTYPE STB_TEXTEDIT_CHARTYPE178,10118
#define STB_TEXTEDIT_GETWIDTH_NEWLINE STB_TEXTEDIT_GETWIDTH_NEWLINE179,10167
#define STB_TEXTEDIT_UNDOSTATECOUNT STB_TEXTEDIT_UNDOSTATECOUNT180,10216
#define STB_TEXTEDIT_UNDOCHARCOUNT STB_TEXTEDIT_UNDOCHARCOUNT181,10260
#define IMGUI_DEBUG_LOG(IMGUI_DEBUG_LOG192,10588
#define IMGUI_DEBUG_LOG_POPUP(IMGUI_DEBUG_LOG_POPUP198,10914
#define IMGUI_DEBUG_LOG_NAV(IMGUI_DEBUG_LOG_NAV199,10986
#define IM_STATIC_ASSERT(IM_STATIC_ASSERT203,11157
#define IM_STATIC_ASSERT(IM_STATIC_ASSERT205,11230
#define IM_ASSERT_PARANOID(IM_ASSERT_PARANOID212,11672
#define IM_ASSERT_PARANOID(IM_ASSERT_PARANOID214,11737
#define IM_ASSERT_USER_ERROR(IM_ASSERT_USER_ERROR220,11972
#define IM_PI IM_PI224,12093
#define IM_NEWLINE IM_NEWLINE226,12173
#define IM_NEWLINE IM_NEWLINE228,12354
#define IM_TABSIZE IM_TABSIZE230,12408
#define IM_MEMALIGN(IM_MEMALIGN231,12453
#define IM_F32_TO_INT8_UNBOUND(IM_F32_TO_INT8_UNBOUND232,12638
#define IM_F32_TO_INT8_SAT(IM_F32_TO_INT8_SAT233,12771
#define IM_FLOOR(IM_FLOOR234,12903
#define IM_ROUND(IM_ROUND235,13049
#define IMGUI_CDECL IMGUI_CDECL239,13321
#define IMGUI_CDECLIMGUI_CDECL241,13357
#define IM_MSVC_WARNING_SUPPRESS(IM_MSVC_WARNING_SUPPRESS246,13447
#define IM_MSVC_WARNING_SUPPRESS(IM_MSVC_WARNING_SUPPRESS248,13529
#define IM_DEBUG_BREAK(IM_DEBUG_BREAK255,13730
#define IM_DEBUG_BREAK(IM_DEBUG_BREAK257,13807
#define IM_DEBUG_BREAK(IM_DEBUG_BREAK259,13858
static inline ImGuiID   ImHash(const void* data, int size, ImU32 seed = 0) { return size ? ImHasImHash290,15190
#define ImQsort ImQsort294,15436
static inline bool      ImIsPowerOfTwo(int v)           { return v != 0 && (v & (v - 1)) == 0; }ImIsPowerOfTwo300,15600
static inline bool      ImIsPowerOfTwo(ImU64 v)         { return v != 0 && (v & (v - 1)) == 0; }ImIsPowerOfTwo301,15698
static inline int       ImUpperPowerOfTwo(int v)        { v--; v |= v >> 1; v |= v >> 2; v |= v ImUpperPowerOfTwo302,15796
static inline bool      ImCharIsBlankA(char c)          { return c == ' ' || c == '\t'; }ImCharIsBlankA323,17517
static inline bool      ImCharIsBlankW(unsigned int c)  { return c == ' ' || c == '\t' || c == 0ImCharIsBlankW324,17608
static inline ImVec2 operator*(const ImVec2& lhs, const float rhs)              { return ImVec2(operator *340,19419
static inline ImVec2 operator/(const ImVec2& lhs, const float rhs)              { return ImVec2(operator /341,19545
static inline ImVec2 operator+(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(operator +342,19671
static inline ImVec2 operator-(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(operator -343,19801
static inline ImVec2 operator*(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(operator *344,19931
static inline ImVec2 operator/(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(operator /345,20061
static inline ImVec2& operator*=(ImVec2& lhs, const float rhs)                  { lhs.x *= rhs; operator *=346,20191
static inline ImVec2& operator/=(ImVec2& lhs, const float rhs)                  { lhs.x /= rhs; operator /=347,20316
static inline ImVec2& operator+=(ImVec2& lhs, const ImVec2& rhs)                { lhs.x += rhs.xoperator +=348,20441
static inline ImVec2& operator-=(ImVec2& lhs, const ImVec2& rhs)                { lhs.x -= rhs.xoperator -=349,20570
static inline ImVec2& operator*=(ImVec2& lhs, const ImVec2& rhs)                { lhs.x *= rhs.xoperator *=350,20699
static inline ImVec2& operator/=(ImVec2& lhs, const ImVec2& rhs)                { lhs.x /= rhs.xoperator /=351,20828
static inline ImVec4 operator+(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(operator +352,20957
static inline ImVec4 operator-(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(operator -353,21117
static inline ImVec4 operator*(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(operator *354,21277
#define IMGUI_DISABLE_DEFAULT_FILE_FUNCTIONSIMGUI_DISABLE_DEFAULT_FILE_FUNCTIONS360,21541
typedef void* ImFileHandle;ImFileHandle361,21587
static inline ImFileHandle  ImFileOpen(const char*, const char*)                    { return NULImFileOpen362,21616
static inline bool          ImFileClose(ImFileHandle)                               { return falImFileClose363,21718
static inline ImU64         ImFileGetSize(ImFileHandle)                             { return (ImImFileGetSize364,21821
static inline ImU64         ImFileRead(void*, ImU64, ImU64, ImFileHandle)           { return 0; ImFileRead365,21928
static inline ImU64         ImFileWrite(const void*, ImU64, ImU64, ImFileHandle)    { return 0; ImFileWrite366,22027
typedef FILE* ImFileHandle;ImFileHandle369,22180
#define IMGUI_DISABLE_TTY_FUNCTIONS IMGUI_DISABLE_TTY_FUNCTIONS376,22622
#define ImFabs(ImFabs384,23095
#define ImSqrt(ImSqrt385,23133
#define ImFmod(ImFmod386,23171
#define ImCos(ImCos387,23216
#define ImSin(ImSin388,23253
#define ImAcos(ImAcos389,23290
#define ImAtan2(ImAtan2390,23328
#define ImAtof(ImAtof391,23374
#define ImCeil(ImCeil393,23515
static inline float  ImPow(float x, float y)    { return powf(x, y); }          // DragBehaviorTImPow394,23553
static inline double ImPow(double x, double y)  { return pow(x, y); }ImPow395,23726
static inline float  ImLog(float x)             { return logf(x); }             // DragBehaviorTImLog396,23797
static inline double ImLog(double x)            { return log(x); }ImLog397,23970
static inline int    ImAbs(int x)               { return x < 0 ? -x : x; }ImAbs398,24038
static inline float  ImAbs(float x)             { return fabsf(x); }ImAbs399,24114
static inline double ImAbs(double x)            { return fabs(x); }ImAbs400,24184
static inline float  ImSign(float x)            { return (x < 0.0f) ? -1.0f : ((x > 0.0f) ? 1.0fImSign401,24253
static inline double ImSign(double x)           { return (x < 0.0) ? -1.0 : ((x > 0.0) ? 1.0 : 0ImSign402,24426
static inline float  ImRsqrt(float x)           { return _mm_cvtss_f32(_mm_rsqrt_ss(_mm_set_ss(xImRsqrt404,24555
static inline float  ImRsqrt(float x)           { return 1.0f / sqrtf(x); }ImRsqrt406,24666
static inline double ImRsqrt(double x)          { return 1.0 / sqrt(x); }ImRsqrt408,24751
template<typename T> static inline T ImMin(T lhs, T rhs)                        { return lhs < rImMin412,25058
template<typename T> static inline T ImMax(T lhs, T rhs)                        { return lhs >= ImMax413,25173
template<typename T> static inline T ImClamp(T v, T mn, T mx)                   { return (v < mnImClamp414,25289
template<typename T> static inline T ImLerp(T a, T b, float t)                  { return (T)(a +ImLerp415,25416
template<typename T> static inline void ImSwap(T& a, T& b)                      { T tmp = a; a =ImSwap416,25530
template<typename T> static inline T ImAddClampOverflow(T a, T b, T mn, T mx)   { if (b < 0 && (ImAddClampOverflow417,25642
template<typename T> static inline T ImSubClampOverflow(T a, T b, T mn, T mx)   { if (b > 0 && (ImSubClampOverflow418,25817
static inline ImVec2 ImMin(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(ImMin420,26017
static inline ImVec2 ImMax(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(ImMax421,26179
static inline ImVec2 ImClamp(const ImVec2& v, const ImVec2& mn, ImVec2 mx)      { return ImVec2(ImClamp422,26343
static inline ImVec2 ImLerp(const ImVec2& a, const ImVec2& b, float t)          { return ImVec2(ImLerp423,26541
static inline ImVec2 ImLerp(const ImVec2& a, const ImVec2& b, const ImVec2& t)  { return ImVec2(ImLerp424,26687
static inline ImVec4 ImLerp(const ImVec4& a, const ImVec4& b, float t)          { return ImVec4(ImLerp425,26837
static inline float  ImSaturate(float f)                                        { return (f < 0.ImSaturate426,27029
static inline float  ImLengthSqr(const ImVec2& lhs)                             { return (lhs.x ImLengthSqr427,27164
static inline float  ImLengthSqr(const ImVec4& lhs)                             { return (lhs.x ImLengthSqr428,27291
static inline float  ImInvLength(const ImVec2& lhs, float fail_value)           { float d = (lhsImInvLength429,27454
static inline float  ImFloor(float f)                                           { return (float)ImFloor430,27636
static inline float  ImFloorSigned(float f)                                     { return (float)ImFloorSigned431,27745
static inline ImVec2 ImFloor(const ImVec2& v)                                   { return ImVec2(ImFloor432,27928
static inline int    ImModPositive(int a, int b)                                { return (a + b)ImModPositive433,28066
static inline float  ImDot(const ImVec2& a, const ImVec2& b)                    { return a.x * bImDot434,28171
static inline ImVec2 ImRotate(const ImVec2& v, float cos_a, float sin_a)        { return ImVec2(ImRotate435,28286
static inline float  ImLinearSweep(float current, float target, float speed)    { if (current < ImLinearSweep436,28440
static inline ImVec2 ImMul(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(ImMul437,28663
inline float         ImTriangleArea(const ImVec2& a, const ImVec2& b, const ImVec2& c) { return ImTriangleArea449,30014
struct ImVec1ImVec1455,30449
    float   x;x457,30467
    ImVec1()         { x = 0.0f; }ImVec1458,30483
    ImVec1(float _x) { x = _x; }ImVec1459,30519
struct ImVec2ihImVec2ih463,30641
    short   x, y;x465,30661
    short   x, y;y465,30661
    ImVec2ih()                           { x = y = 0; }ImVec2ih466,30680
    ImVec2ih(short _x, short _y)         { x = _x; y = _y; }ImVec2ih467,30737
    explicit ImVec2ih(const ImVec2& rhs) { x = (short)rhs.x; y = (short)rhs.y; }ImVec2ih468,30799
struct IMGUI_API ImRectImRect473,31006
    ImVec2      Min;    // Upper-leftMin475,31034
    ImVec2      Max;    // Lower-rightMax476,31073
    ImRect()                                        : Min(0.0f, 0.0f), Max(0.0f, 0.0f)  {}ImRect478,31115
    ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                {}ImRect479,31207
    ImRect(const ImVec4& v)                         : Min(v.x, v.y), Max(v.z, v.w)      {}ImRect480,31299
    ImRect(float x1, float y1, float x2, float y2)  : Min(x1, y1), Max(x2, y2)          {}ImRect481,31391
    ImVec2      GetCenter() const                   { return ImVec2((Min.x + Max.x) * 0.5f, (MinGetCenter483,31485
    ImVec2      GetSize() const                     { return ImVec2(Max.x - Min.x, Max.y - Min.yGetSize484,31605
    float       GetWidth() const                    { return Max.x - Min.x; }GetWidth485,31707
    float       GetHeight() const                   { return Max.y - Min.y; }GetHeight486,31786
    float       GetArea() const                     { return (Max.x - Min.x) * (Max.y - Min.y); GetArea487,31865
    ImVec2      GetTL() const                       { return Min; }                   // Top-lefGetTL488,31964
    ImVec2      GetTR() const                       { return ImVec2(Max.x, Min.y); }  // Top-rigGetTR489,32063
    ImVec2      GetBL() const                       { return ImVec2(Min.x, Max.y); }  // Bottom-GetBL490,32163
    ImVec2      GetBR() const                       { return Max; }                   // Bottom-GetBR491,32265
    bool        Contains(const ImVec2& p) const     { return p.x     >= Min.x && p.y     >= Min.Contains492,32368
    bool        Contains(const ImRect& r) const     { return r.Min.x >= Min.x && r.Min.y >= Min.Contains493,32510
    bool        Overlaps(const ImRect& r) const     { return r.Min.y <  Max.y && r.Max.y >  Min.Overlaps494,32652
    void        Add(const ImVec2& p)                { if (Min.x > p.x)     Min.x = p.x;     if (Add495,32794
    void        Add(const ImRect& r)                { if (Min.x > r.Min.x) Min.x = r.Min.x; if (Add496,32999
    void        Expand(const float amount)          { Min.x -= amount;   Min.y -= amount;   Max.Expand497,33208
    void        Expand(const ImVec2& amount)        { Min.x -= amount.x; Min.y -= amount.y; Max.Expand498,33339
    void        Translate(const ImVec2& d)          { Min.x += d.x; Min.y += d.y; Max.x += d.x; Translate499,33472
    void        TranslateX(float dx)                { Min.x += dx; Max.x += dx; }TranslateX500,33585
    void        TranslateY(float dy)                { Min.y += dy; Max.y += dy; }TranslateY501,33668
    void        ClipWith(const ImRect& r)           { Min = ImMax(Min, r.Min); Max = ImMin(Max, ClipWith502,33751
    void        ClipWithFull(const ImRect& r)       { Min = ImClamp(Min, r.Min, r.Max); Max = ImClipWithFull503,33992
    void        Floor()                             { Min.x = IM_FLOOR(Min.x); Min.y = IM_FLOOR(Floor504,34172
    bool        IsInverted() const                  { return Min.x > Max.x || Min.y > Max.y; }IsInverted505,34329
    ImVec4      ToVec4() const                      { return ImVec4(Min.x, Min.y, Max.x, Max.y);ToVec4506,34425
inline bool     ImBitArrayTestBit(const ImU32* arr, int n)      { ImU32 mask = (ImU32)1 << (n & ImBitArrayTestBit511,34586
inline void     ImBitArrayClearBit(ImU32* arr, int n)           { ImU32 mask = (ImU32)1 << (n & ImBitArrayClearBit512,34724
inline void     ImBitArraySetBit(ImU32* arr, int n)             { ImU32 mask = (ImU32)1 << (n & ImBitArraySetBit513,34850
inline void     ImBitArraySetBitRange(ImU32* arr, int n, int n2) // Works on range [n..n2)ImBitArraySetBitRange514,34975
struct IMGUI_API ImBitArrayImBitArray530,35478
    ImU32           Storage[(BITCOUNT + 31) >> 5];Storage532,35510
    ImBitArray()                                { ClearAllBits(); }ImBitArray533,35562
    void            ClearAllBits()              { memset(Storage, 0, sizeof(Storage)); }ClearAllBits534,35631
    void            SetAllBits()                { memset(Storage, 255, sizeof(Storage)); }SetAllBits535,35721
    bool            TestBit(int n) const        { IM_ASSERT(n < BITCOUNT); return ImBitArrayTestTestBit536,35813
    void            SetBit(int n)               { IM_ASSERT(n < BITCOUNT); ImBitArraySetBit(StorSetBit537,35929
    void            ClearBit(int n)             { IM_ASSERT(n < BITCOUNT); ImBitArrayClearBit(StClearBit538,36037
    void            SetBitRange(int n, int n2)  { ImBitArraySetBitRange(Storage, n, n2); } // WoSetBitRange539,36147
struct IMGUI_API ImBitVectorImBitVector544,36322
    ImVector<ImU32> Storage;Storage546,36355
    void            Create(int sz)              { Storage.resize((sz + 31) >> 5); memset(StorageCreate547,36385
    void            Clear()                     { Storage.clear(); }Clear548,36543
    bool            TestBit(int n) const        { IM_ASSERT(n < (Storage.Size << 5)); return ImBTestBit549,36613
    void            SetBit(int n)               { IM_ASSERT(n < (Storage.Size << 5)); ImBitArraySetBit550,36745
    void            ClearBit(int n)             { IM_ASSERT(n < (Storage.Size << 5)); ImBitArrayClearBit551,36869
struct ImSpanImSpan557,37089
    T*                  Data;Data559,37107
    T*                  DataEnd;DataEnd560,37138
    inline ImSpan()                                 { Data = DataEnd = NULL; }ImSpan563,37207
    inline ImSpan(T* data, int size)                { Data = data; DataEnd = data + size; }ImSpan564,37287
    inline ImSpan(T* data, T* data_end)             { Data = data; DataEnd = data_end; }ImSpan565,37380
    inline void         set(T* data, int size)      { Data = data; DataEnd = data + size; }set567,37472
    inline void         set(T* data, T* data_end)   { Data = data; DataEnd = data_end; }set568,37565
    inline int          size() const                { return (int)(ptrdiff_t)(DataEnd - Data); }size569,37655
    inline int          size_in_bytes() const       { return (int)(ptrdiff_t)(DataEnd - Data) * size_in_bytes570,37753
    inline T&           operator[](int i)           { T* p = Data + i; IM_ASSERT(p >= Data && p operator []571,37868
    inline const T&     operator[](int i) const     { const T* p = Data + i; IM_ASSERT(p >= Dataoperator []572,37990
    inline T*           begin()                     { return Data; }begin574,38120
    inline const T*     begin() const               { return Data; }begin575,38190
    inline T*           end()                       { return DataEnd; }end576,38260
    inline const T*     end() const                 { return DataEnd; }end577,38333
    inline int  index_from_ptr(const T* it) const   { IM_ASSERT(it >= Data && it < DataEnd); conindex_from_ptr580,38426
struct ImSpanAllocatorImSpanAllocator587,38869
    char*   BasePtr;BasePtr589,38896
    int     CurrOff;CurrOff590,38918
    int     CurrIdx;CurrIdx591,38940
    int     Offsets[CHUNKS];Offsets592,38962
    int     Sizes[CHUNKS];Sizes593,38992
    ImSpanAllocator()                               { memset(this, 0, sizeof(*this)); }ImSpanAllocator595,39022
    inline void  Reserve(int n, size_t sz, int a=4) { IM_ASSERT(n == CurrIdx && n < CHUNKS); CurReserve596,39111
    inline int   GetArenaSizeInBytes()              { return CurrOff; }GetArenaSizeInBytes597,39315
    inline void  SetArenaBasePtr(void* base_ptr)    { BasePtr = (char*)base_ptr; }SetArenaBasePtr598,39388
    inline void* GetSpanPtrBegin(int n)             { IM_ASSERT(n >= 0 && n < CHUNKS && CurrIdx GetSpanPtrBegin599,39472
    inline void* GetSpanPtrEnd(int n)               { IM_ASSERT(n >= 0 && n < CHUNKS && CurrIdx GetSpanPtrEnd600,39621
    inline void  GetSpan(int n, ImSpan<T>* span)    { span->set((T*)GetSpanPtrBegin(n), (T*)GetSGetSpan602,39807
typedef int ImPoolIdx;ImPoolIdx608,40215
struct IMGUI_API ImPoolImPool610,40261
    ImVector<T>     Buf;        // Contiguous dataBuf612,40289
    ImGuiStorage    Map;        // ID->IndexMap613,40341
    ImPoolIdx       FreeIdx;    // Next free idx to useFreeIdx614,40387
    ImPool()    { FreeIdx = 0; }ImPool616,40446
    ~ImPool()   { Clear(); }~ImPool617,40480
    T*          GetByKey(ImGuiID key)               { int idx = Map.GetInt(key, -1); return (idxGetByKey618,40510
    T*          GetByIndex(ImPoolIdx n)             { return &Buf[n]; }GetByIndex619,40637
    ImPoolIdx   GetIndex(const T* p) const          { IM_ASSERT(p >= Buf.Data && p < Buf.Data + GetIndex620,40710
    T*          GetOrAddByKey(ImGuiID key)          { int* p_idx = Map.GetIntRef(key, -1); if (*GetOrAddByKey621,40854
    bool        Contains(const T* p) const          { return (p >= Buf.Data && p < Buf.Data + BuContains622,41019
    void        Clear()                             { for (int n = 0; n < Map.Data.Size; n++) { Clear623,41127
    T*          Add()                               { int idx = FreeIdx; if (idx == Buf.Size) { Add624,41326
    void        Remove(ImGuiID key, const T* p)     { Remove(key, GetIndex(p)); }Remove625,41552
    void        Remove(ImGuiID key, ImPoolIdx idx)  { Buf[idx].~T(); *(int*)&Buf[idx] = FreeIdx;Remove626,41635
    void        Reserve(int capacity)               { Buf.reserve(capacity); Map.Data.reserve(caReserve627,41771
    int         GetSize() const                     { return Buf.Size; }GetSize628,41879
struct IMGUI_API ImChunkStreamImChunkStream637,42328
    ImVector<char>  Buf;Buf639,42363
    void    clear()                     { Buf.clear(); }clear641,42391
    bool    empty() const               { return Buf.Size == 0; }empty642,42449
    int     size() const                { return Buf.Size; }size643,42516
    T*      alloc_chunk(size_t sz)      { size_t HDR_SZ = 4; sz = IM_MEMALIGN(HDR_SZ + sz, 4u); alloc_chunk644,42578
    T*      begin()                     { size_t HDR_SZ = 4; if (!Buf.Data) return NULL; return begin645,42820
    T*      next_chunk(T* p)            { size_t HDR_SZ = 4; IM_ASSERT(p >= begin() && p < end()next_chunk646,42951
    int     chunk_size(const T* p)      { return ((const int*)p)[-1]; }chunk_size647,43194
    T*      end()                       { return (T*)(void*)(Buf.Data + Buf.Size); }end648,43267
    int     offset_from_ptr(const T* p) { IM_ASSERT(p >= begin() && p < end()); const ptrdiff_t offset_from_ptr649,43353
    T*      ptr_from_offset(int off)    { IM_ASSERT(off >= 4 && off < Buf.Size); return (T*)(voiptr_from_offset650,43502
    void    swap(ImChunkStream<T>& rhs) { rhs.Buf.swap(Buf); }swap651,43622
#define IM_ROUNDUP_TO_EVEN(IM_ROUNDUP_TO_EVEN670,44721
#define IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MIN IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MIN671,44809
#define IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MAX IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MAX672,44876
#define IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC(IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC673,44945
#define IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC_R(IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC_R676,45274
#define IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC_ERROR(IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC_ERROR677,45402
#define IM_DRAWLIST_ARCFAST_TABLE_SIZE IM_DRAWLIST_ARCFAST_TABLE_SIZE681,45646
#define IM_DRAWLIST_ARCFAST_SAMPLE_MAX IM_DRAWLIST_ARCFAST_SAMPLE_MAX683,45760
struct IMGUI_API ImDrawListSharedDataImDrawListSharedData687,46128
    ImVec2          TexUvWhitePixel;            // UV of white pixel in the atlasTexUvWhitePixel689,46170
    ImFont*         Font;                       // Current/default font (optional, for simplifieFont690,46253
    float           FontSize;                   // Current/default font size (optional, for simpFontSize691,46370
    float           CurveTessellationTol;       // Tessellation tolerance when using PathBezierCCurveTessellationTol692,46492
    float           CircleSegmentMaxError;      // Number of circle segments to use per pixel ofCircleSegmentMaxError693,46598
    ImVec4          ClipRectFullscreen;         // Value for PushClipRectFullscreen()ClipRectFullscreen694,46723
    ImDrawListFlags InitialFlags;               // Initial flags at the beginning of the frame (InitialFlags695,46810
    ImVec2          ArcFastVtx[IM_DRAWLIST_ARCFAST_TABLE_SIZE]; // Sample points on the quarter ArcFastVtx698,47008
    float           ArcFastRadiusCutoff;                        // Cutoff radius after which arcArcFastRadiusCutoff699,47120
    ImU8            CircleSegmentCounts[64];    // Precomputed segment count for given radius beCircleSegmentCounts700,47262
    const ImVec4*   TexUvLines;                 // UV of anti-aliased lines in the atlasTexUvLines701,47424
struct ImDrawDataBuilderImDrawDataBuilder707,47609
    ImVector<ImDrawList*>   Layers[2];           // Global layers for: regular, tooltipLayers709,47638
    void Clear()                    { for (int n = 0; n < IM_ARRAYSIZE(Layers); n++) Layers[n].rClear711,47729
    void ClearFreeMemory()          { for (int n = 0; n < IM_ARRAYSIZE(Layers); n++) Layers[n].cClearFreeMemory712,47838
    int  GetDrawListCount() const   { int count = 0; for (int n = 0; n < IM_ARRAYSIZE(Layers); nGetDrawListCount713,47945
enum ImGuiItemFlags_ImGuiItemFlags_723,48558
    ImGuiItemFlags_None                     = 0,ImGuiItemFlags_None725,48583
    ImGuiItemFlags_NoTabStop                = 1 << 0,  // falseImGuiItemFlags_NoTabStop726,48633
    ImGuiItemFlags_ButtonRepeat             = 1 << 1,  // false    // Button() will return true ImGuiItemFlags_ButtonRepeat727,48698
    ImGuiItemFlags_Disabled                 = 1 << 2,  // false    // [BETA] Disable interactionImGuiItemFlags_Disabled728,48868
    ImGuiItemFlags_NoNav                    = 1 << 3,  // falseImGuiItemFlags_NoNav729,49039
    ImGuiItemFlags_NoNavDefaultFocus        = 1 << 4,  // falseImGuiItemFlags_NoNavDefaultFocus730,49104
    ImGuiItemFlags_SelectableDontClosePopup = 1 << 5,  // false    // MenuItem/Selectable() autoImGuiItemFlags_SelectableDontClosePopup731,49169
    ImGuiItemFlags_MixedValue               = 1 << 6,  // false    // [BETA] Represent a mixed/iImGuiItemFlags_MixedValue732,49304
    ImGuiItemFlags_ReadOnly                 = 1 << 7   // false    // [ALPHA] Allow hovering intImGuiItemFlags_ReadOnly733,49551
enum ImGuiItemAddFlags_ImGuiItemAddFlags_738,49914
    ImGuiItemAddFlags_None                  = 0,ImGuiItemAddFlags_None740,49942
    ImGuiItemAddFlags_Focusable             = 1 << 0    // FIXME-NAV: In current/legacy scheme, ImGuiItemAddFlags_Focusable741,49992
enum ImGuiItemStatusFlags_ImGuiItemStatusFlags_745,50268
    ImGuiItemStatusFlags_None               = 0,ImGuiItemStatusFlags_None747,50299
    ImGuiItemStatusFlags_HoveredRect        = 1 << 0,   // Mouse position is within item rectangImGuiItemStatusFlags_HoveredRect748,50349
    ImGuiItemStatusFlags_HasDisplayRect     = 1 << 1,   // window->DC.LastItemDisplayRect is valImGuiItemStatusFlags_HasDisplayRect749,50584
    ImGuiItemStatusFlags_Edited             = 1 << 2,   // Value exposed by item was edited in tImGuiItemStatusFlags_Edited750,50684
    ImGuiItemStatusFlags_ToggledSelection   = 1 << 3,   // Set when Selectable(), TreeNode() repImGuiItemStatusFlags_ToggledSelection751,50851
    ImGuiItemStatusFlags_ToggledOpen        = 1 << 4,   // Set when TreeNode() reports toggling ImGuiItemStatusFlags_ToggledOpen752,51076
    ImGuiItemStatusFlags_HasDeactivated     = 1 << 5,   // Set if the widget/group is able to prImGuiItemStatusFlags_HasDeactivated753,51191
    ImGuiItemStatusFlags_Deactivated        = 1 << 6,   // Only valid if ImGuiItemStatusFlags_HaImGuiItemStatusFlags_Deactivated754,51346
    ImGuiItemStatusFlags_HoveredWindow      = 1 << 7,   // Override the HoveredWindow test to alImGuiItemStatusFlags_HoveredWindow755,51464
    ImGuiItemStatusFlags_FocusedByCode      = 1 << 8,   // Set when the Focusable item just got ImGuiItemStatusFlags_FocusedByCode756,51593
    ImGuiItemStatusFlags_FocusedByTabbing   = 1 << 9,   // Set when the Focusable item just got ImGuiItemStatusFlags_FocusedByTabbing757,51709
    ImGuiItemStatusFlags_Focused            = ImGuiItemStatusFlags_FocusedByCode | ImGuiItemStatImGuiItemStatusFlags_Focused758,51826
    ImGuiItemStatusFlags_Openable           = 1 << 20,  //ImGuiItemStatusFlags_Openable762,52012
    ImGuiItemStatusFlags_Opened             = 1 << 21,  //ImGuiItemStatusFlags_Opened763,52072
    ImGuiItemStatusFlags_Checkable          = 1 << 22,  //ImGuiItemStatusFlags_Checkable764,52132
    ImGuiItemStatusFlags_Checked            = 1 << 23   //ImGuiItemStatusFlags_Checked765,52192
enum ImGuiInputTextFlagsPrivate_ImGuiInputTextFlagsPrivate_770,52298
    ImGuiInputTextFlags_Multiline           = 1 << 26,  // For internal use by InputTextMultilinImGuiInputTextFlags_Multiline773,52354
    ImGuiInputTextFlags_NoMarkEdited        = 1 << 27,  // For internal use by functions using IImGuiInputTextFlags_NoMarkEdited774,52455
    ImGuiInputTextFlags_MergedItem          = 1 << 28   // For internal use by TempInputText(), ImGuiInputTextFlags_MergedItem775,52588
enum ImGuiButtonFlagsPrivate_ImGuiButtonFlagsPrivate_779,52789
    ImGuiButtonFlags_PressedOnClick         = 1 << 4,   // return true on click (mouse down evenImGuiButtonFlags_PressedOnClick781,52823
    ImGuiButtonFlags_PressedOnClickRelease  = 1 << 5,   // [Default] return true on click + releImGuiButtonFlags_PressedOnClickRelease782,52923
    ImGuiButtonFlags_PressedOnClickReleaseAnywhere = 1 << 6, // return true on click + release eImGuiButtonFlags_PressedOnClickReleaseAnywhere783,53087
    ImGuiButtonFlags_PressedOnRelease       = 1 << 7,   // return true on release (default requiImGuiButtonFlags_PressedOnRelease784,53245
    ImGuiButtonFlags_PressedOnDoubleClick   = 1 << 8,   // return true on double-click (default ImGuiButtonFlags_PressedOnDoubleClick785,53361
    ImGuiButtonFlags_PressedOnDragDropHold  = 1 << 9,   // return true when held into while we aImGuiButtonFlags_PressedOnDragDropHold786,53482
    ImGuiButtonFlags_Repeat                 = 1 << 10,  // hold to repeatImGuiButtonFlags_Repeat787,53659
    ImGuiButtonFlags_FlattenChildren        = 1 << 11,  // allow interactions even if a child wiImGuiButtonFlags_FlattenChildren788,53734
    ImGuiButtonFlags_AllowItemOverlap       = 1 << 12,  // require previous frame HoveredId to eImGuiButtonFlags_AllowItemOverlap789,53851
    ImGuiButtonFlags_DontClosePopups        = 1 << 13,  // disable automatically closing parent ImGuiButtonFlags_DontClosePopups790,54032
    ImGuiButtonFlags_Disabled               = 1 << 14,  // disable interactionsImGuiButtonFlags_Disabled791,54156
    ImGuiButtonFlags_AlignTextBaseLine      = 1 << 15,  // vertically align button to match textImGuiButtonFlags_AlignTextBaseLine792,54237
    ImGuiButtonFlags_NoKeyModifiers         = 1 << 16,  // disable mouse interaction if a key moImGuiButtonFlags_NoKeyModifiers793,54475
    ImGuiButtonFlags_NoHoldingActiveId      = 1 << 17,  // don't set ActiveId while holding the ImGuiButtonFlags_NoHoldingActiveId794,54587
    ImGuiButtonFlags_NoNavFocus             = 1 << 18,  // don't override navigation focus when ImGuiButtonFlags_NoNavFocus795,54729
    ImGuiButtonFlags_NoHoveredOnFocus       = 1 << 19,  // don't report as hovered when nav focuImGuiButtonFlags_NoHoveredOnFocus796,54836
    ImGuiButtonFlags_PressedOnMask_         = ImGuiButtonFlags_PressedOnClick | ImGuiButtonFlagsImGuiButtonFlags_PressedOnMask_797,54951
    ImGuiButtonFlags_PressedOnDefault_      = ImGuiButtonFlags_PressedOnClickReleaseImGuiButtonFlags_PressedOnDefault_798,55238
enum ImGuiSliderFlagsPrivate_ImGuiSliderFlagsPrivate_802,55359
    ImGuiSliderFlags_Vertical               = 1 << 20,  // Should this slider be orientated vertImGuiSliderFlags_Vertical804,55393
    ImGuiSliderFlags_ReadOnly               = 1 << 21ImGuiSliderFlags_ReadOnly805,55498
enum ImGuiSelectableFlagsPrivate_ImGuiSelectableFlagsPrivate_809,55592
    ImGuiSelectableFlags_NoHoldingActiveID      = 1 << 20,ImGuiSelectableFlags_NoHoldingActiveID812,55702
    ImGuiSelectableFlags_SelectOnClick          = 1 << 21,  // Override button behavior to reactImGuiSelectableFlags_SelectOnClick813,55762
    ImGuiSelectableFlags_SelectOnRelease        = 1 << 22,  // Override button behavior to reactImGuiSelectableFlags_SelectOnRelease814,55896
    ImGuiSelectableFlags_SpanAvailWidth         = 1 << 23,  // Span all avail width even if we dImGuiSelectableFlags_SpanAvailWidth815,56032
    ImGuiSelectableFlags_DrawHoveredWhenHeld    = 1 << 24,  // Always show active when held, eveImGuiSelectableFlags_DrawHoveredWhenHeld816,56239
    ImGuiSelectableFlags_SetNavIdOnHover        = 1 << 25,  // Set Nav/Focus ID on mouse hover (ImGuiSelectableFlags_SetNavIdOnHover817,56413
    ImGuiSelectableFlags_NoPadWithHalfSpacing   = 1 << 26   // Disable padding each side with ItImGuiSelectableFlags_NoPadWithHalfSpacing818,56528
enum ImGuiTreeNodeFlagsPrivate_ImGuiTreeNodeFlagsPrivate_822,56679
    ImGuiTreeNodeFlags_ClipLabelForTrailingButton = 1 << 20ImGuiTreeNodeFlags_ClipLabelForTrailingButton824,56715
enum ImGuiSeparatorFlags_ImGuiSeparatorFlags_827,56782
    ImGuiSeparatorFlags_None                = 0,ImGuiSeparatorFlags_None829,56812
    ImGuiSeparatorFlags_Horizontal          = 1 << 0,   // Axis default to current layout type, ImGuiSeparatorFlags_Horizontal830,56862
    ImGuiSeparatorFlags_Vertical            = 1 << 1,ImGuiSeparatorFlags_Vertical831,57009
    ImGuiSeparatorFlags_SpanAllColumns      = 1 << 2ImGuiSeparatorFlags_SpanAllColumns832,57064
enum ImGuiTextFlags_ImGuiTextFlags_835,57124
    ImGuiTextFlags_None = 0,ImGuiTextFlags_None837,57149
    ImGuiTextFlags_NoWidthForLargeClippedText = 1 << 0ImGuiTextFlags_NoWidthForLargeClippedText838,57179
enum ImGuiTooltipFlags_ImGuiTooltipFlags_841,57241
    ImGuiTooltipFlags_None = 0,ImGuiTooltipFlags_None843,57269
    ImGuiTooltipFlags_OverridePreviousTooltip = 1 << 0      // Override will clear/ignore previoImGuiTooltipFlags_OverridePreviousTooltip844,57302
enum ImGuiLayoutType_ImGuiLayoutType_849,57616
    ImGuiLayoutType_Horizontal = 0,ImGuiLayoutType_Horizontal851,57642
    ImGuiLayoutType_Vertical = 1ImGuiLayoutType_Vertical852,57679
enum ImGuiLogTypeImGuiLogType855,57719
    ImGuiLogType_None = 0,ImGuiLogType_None857,57741
    ImGuiLogType_TTY,ImGuiLogType_TTY858,57769
    ImGuiLogType_File,ImGuiLogType_File859,57792
    ImGuiLogType_Buffer,ImGuiLogType_Buffer860,57816
    ImGuiLogType_ClipboardImGuiLogType_Clipboard861,57842
enum ImGuiAxisImGuiAxis865,57943
    ImGuiAxis_None = -1,ImGuiAxis_None867,57962
    ImGuiAxis_X = 0,ImGuiAxis_X868,57988
    ImGuiAxis_Y = 1ImGuiAxis_Y869,58010
enum ImGuiPlotTypeImGuiPlotType872,58037
    ImGuiPlotType_Lines,ImGuiPlotType_Lines874,58060
    ImGuiPlotType_HistogramImGuiPlotType_Histogram875,58086
enum ImGuiInputSourceImGuiInputSource878,58121
    ImGuiInputSource_None = 0,ImGuiInputSource_None880,58147
    ImGuiInputSource_Mouse,ImGuiInputSource_Mouse881,58179
    ImGuiInputSource_Keyboard,ImGuiInputSource_Keyboard882,58208
    ImGuiInputSource_Gamepad,ImGuiInputSource_Gamepad883,58240
    ImGuiInputSource_Nav,               // Stored in g.ActiveIdSource onlyImGuiInputSource_Nav884,58271
    ImGuiInputSource_Clipboard,         // Currently only used by InputText()ImGuiInputSource_Clipboard885,58347
    ImGuiInputSource_COUNTImGuiInputSource_COUNT886,58426
enum ImGuiInputReadModeImGuiInputReadMode890,58516
    ImGuiInputReadMode_Down,ImGuiInputReadMode_Down892,58544
    ImGuiInputReadMode_Pressed,ImGuiInputReadMode_Pressed893,58574
    ImGuiInputReadMode_Released,ImGuiInputReadMode_Released894,58607
    ImGuiInputReadMode_Repeat,ImGuiInputReadMode_Repeat895,58641
    ImGuiInputReadMode_RepeatSlow,ImGuiInputReadMode_RepeatSlow896,58673
    ImGuiInputReadMode_RepeatFastImGuiInputReadMode_RepeatFast897,58709
enum ImGuiNavHighlightFlags_ImGuiNavHighlightFlags_900,58750
    ImGuiNavHighlightFlags_None         = 0,ImGuiNavHighlightFlags_None902,58783
    ImGuiNavHighlightFlags_TypeDefault  = 1 << 0,ImGuiNavHighlightFlags_TypeDefault903,58829
    ImGuiNavHighlightFlags_TypeThin     = 1 << 1,ImGuiNavHighlightFlags_TypeThin904,58880
    ImGuiNavHighlightFlags_AlwaysDraw   = 1 << 2,       // Draw rectangular highlight if (g.NavIImGuiNavHighlightFlags_AlwaysDraw905,58931
    ImGuiNavHighlightFlags_NoRounding   = 1 << 3ImGuiNavHighlightFlags_NoRounding906,59066
enum ImGuiNavDirSourceFlags_ImGuiNavDirSourceFlags_909,59122
    ImGuiNavDirSourceFlags_None         = 0,ImGuiNavDirSourceFlags_None911,59155
    ImGuiNavDirSourceFlags_Keyboard     = 1 << 0,ImGuiNavDirSourceFlags_Keyboard912,59201
    ImGuiNavDirSourceFlags_PadDPad      = 1 << 1,ImGuiNavDirSourceFlags_PadDPad913,59252
    ImGuiNavDirSourceFlags_PadLStick    = 1 << 2ImGuiNavDirSourceFlags_PadLStick914,59303
enum ImGuiNavMoveFlags_ImGuiNavMoveFlags_917,59359
    ImGuiNavMoveFlags_None                  = 0,ImGuiNavMoveFlags_None919,59387
    ImGuiNavMoveFlags_LoopX                 = 1 << 0,   // On failed request, restart from opposImGuiNavMoveFlags_LoopX920,59437
    ImGuiNavMoveFlags_LoopY                 = 1 << 1,ImGuiNavMoveFlags_LoopY921,59543
    ImGuiNavMoveFlags_WrapX                 = 1 << 2,   // On failed request, request from opposImGuiNavMoveFlags_WrapX922,59598
    ImGuiNavMoveFlags_WrapY                 = 1 << 3,   // This is not super useful for providedImGuiNavMoveFlags_WrapY923,59774
    ImGuiNavMoveFlags_AllowCurrentNavId     = 1 << 4,   // Allow scoring and considering the curImGuiNavMoveFlags_AllowCurrentNavId924,59889
    ImGuiNavMoveFlags_AlsoScoreVisibleSet   = 1 << 5,   // Store alternate result in NavMoveResuImGuiNavMoveFlags_AlsoScoreVisibleSet925,60215
    ImGuiNavMoveFlags_ScrollToEdge          = 1 << 6ImGuiNavMoveFlags_ScrollToEdge926,60390
enum ImGuiNavForwardImGuiNavForward929,60450
    ImGuiNavForward_None,ImGuiNavForward_None931,60475
    ImGuiNavForward_ForwardQueued,ImGuiNavForward_ForwardQueued932,60502
    ImGuiNavForward_ForwardActiveImGuiNavForward_ForwardActive933,60538
enum ImGuiNavLayerImGuiNavLayer936,60579
    ImGuiNavLayer_Main  = 0,    // Main scrolling layerImGuiNavLayer_Main938,60602
    ImGuiNavLayer_Menu  = 1,    // Menu layer (access with Alt/ImGuiNavInput_Menu)ImGuiNavLayer_Menu939,60659
    ImGuiNavLayer_COUNTImGuiNavLayer_COUNT940,60743
enum ImGuiPopupPositionPolicyImGuiPopupPositionPolicy943,60774
    ImGuiPopupPositionPolicy_Default,ImGuiPopupPositionPolicy_Default945,60808
    ImGuiPopupPositionPolicy_ComboBox,ImGuiPopupPositionPolicy_ComboBox946,60847
    ImGuiPopupPositionPolicy_TooltipImGuiPopupPositionPolicy_Tooltip947,60887
struct ImGuiDataTypeTempStorageImGuiDataTypeTempStorage950,60931
    ImU8        Data[8];        // Can fit any data up to ImGuiDataType_COUNTData952,60967
struct ImGuiDataTypeInfoImGuiDataTypeInfo956,61139
    size_t      Size;           // Size in bytesSize958,61168
    const char* Name;           // Short descriptive name for the type, for debuggingName959,61218
    const char* PrintFmt;       // Default printf format for the typePrintFmt960,61305
    const char* ScanFmt;        // Default scanf format for the typeScanFmt961,61376
enum ImGuiDataTypePrivate_ImGuiDataTypePrivate_965,61478
    ImGuiDataType_String = ImGuiDataType_COUNT + 1,ImGuiDataType_String967,61509
    ImGuiDataType_Pointer,ImGuiDataType_Pointer968,61562
    ImGuiDataType_IDImGuiDataType_ID969,61590
struct ImGuiColorModImGuiColorMod973,61691
    ImGuiCol    Col;Col975,61716
    ImVec4      BackupValue;BackupValue976,61738
struct ImGuiStyleModImGuiStyleMod980,61886
    ImGuiStyleVar   VarIdx;VarIdx982,61911
    union           { int BackupInt[2]; float BackupFloat[2]; };__anonf0d24701010a983,61940
    union           { int BackupInt[2]; float BackupFloat[2]; };BackupInt983,61940
    union           { int BackupInt[2]; float BackupFloat[2]; };BackupFloat983,61940
    ImGuiStyleMod(ImGuiStyleVar idx, int v)     { VarIdx = idx; BackupInt[0] = v; }ImGuiStyleMod984,62006
    ImGuiStyleMod(ImGuiStyleVar idx, float v)   { VarIdx = idx; BackupFloat[0] = v; }ImGuiStyleMod985,62091
    ImGuiStyleMod(ImGuiStyleVar idx, ImVec2 v)  { VarIdx = idx; BackupFloat[0] = v.x; BackupFloaImGuiStyleMod986,62178
struct IMGUI_API ImGuiGroupDataImGuiGroupData990,62348
    ImGuiID     WindowID;WindowID992,62384
    ImVec2      BackupCursorPos;BackupCursorPos993,62411
    ImVec2      BackupCursorMaxPos;BackupCursorMaxPos994,62445
    ImVec1      BackupIndent;BackupIndent995,62482
    ImVec1      BackupGroupOffset;BackupGroupOffset996,62513
    ImVec2      BackupCurrLineSize;BackupCurrLineSize997,62549
    float       BackupCurrLineTextBaseOffset;BackupCurrLineTextBaseOffset998,62586
    ImGuiID     BackupActiveIdIsAlive;BackupActiveIdIsAlive999,62633
    bool        BackupActiveIdPreviousFrameIsAlive;BackupActiveIdPreviousFrameIsAlive1000,62673
    bool        BackupHoveredIdIsAlive;BackupHoveredIdIsAlive1001,62726
    bool        EmitItem;EmitItem1002,62767
struct IMGUI_API ImGuiMenuColumnsImGuiMenuColumns1006,62937
    float       Spacing;Spacing1008,62975
    float       Width, NextWidth;Width1009,63001
    float       Width, NextWidth;NextWidth1009,63001
    float       Pos[3], NextWidths[3];Pos1010,63036
    float       Pos[3], NextWidths[3];NextWidths1010,63036
    ImGuiMenuColumns() { memset(this, 0, sizeof(*this)); }ImGuiMenuColumns1012,63078
struct IMGUI_API ImGuiInputTextStateImGuiInputTextState1020,63451
    ImGuiID                 ID;                     // widget id owning the text stateID1022,63492
    int                     CurLenW, CurLenA;       // we need to maintain our buffer length in CurLenW1023,63580
    int                     CurLenW, CurLenA;       // we need to maintain our buffer length in CurLenA1023,63580
    ImVector<ImWchar>       TextW;                  // edit buffer, we need to persist but can'tTextW1024,63750
    ImVector<char>          TextA;                  // temporary UTF8 buffer for callbacks and oTextA1025,63931
    ImVector<char>          InitialTextA;           // backup of end-user buffer at the time of InitialTextA1026,64100
    bool                    TextAIsValid;           // temporary UTF8 buffer is not initially vaTextAIsValid1027,64225
    int                     BufCapacityA;           // end-user buffer capacityBufCapacityA1028,64408
    float                   ScrollX;                // horizontal scrolling/offsetScrollX1029,64489
    ImStb::STB_TexteditState Stb;                   // state for stb_textedit.hStb1030,64573
    float                   CursorAnim;             // timer for cursor blink, reset on every usCursorAnim1031,64654
    bool                    CursorFollow;           // set when we want scrolling to follow the CursorFollow1032,64797
    bool                    SelectedAllMouseLock;   // after a double-click to select all, we igSelectedAllMouseLock1033,64932
    bool                    Edited;                 // edited this frameEdited1034,65074
    ImGuiInputTextFlags     Flags;                  // copy of InputText() flagsFlags1035,65148
    ImGuiInputTextCallback  UserCallback;           // "UserCallback1036,65230
    void*                   UserCallbackData;       // "UserCallbackData1037,65288
    ImGuiInputTextState()                   { memset(this, 0, sizeof(*this)); }ImGuiInputTextState1039,65348
    void        ClearText()                 { CurLenW = CurLenA = 0; TextW[0] = 0; TextA[0] = 0;ClearText1040,65429
    void        ClearFreeMemory()           { TextW.clear(); TextA.clear(); InitialTextA.clear()ClearFreeMemory1041,65544
    int         GetUndoAvailCount() const   { return Stb.undostate.undo_point; }GetUndoAvailCount1042,65645
    int         GetRedoAvailCount() const   { return STB_TEXTEDIT_UNDOSTATECOUNT - Stb.undostateGetRedoAvailCount1043,65727
    void        CursorAnimReset()           { CursorAnim = -0.30f; }                            CursorAnimReset1047,65990
    void        CursorClamp()               { Stb.cursor = ImMin(Stb.cursor, CurLenW); Stb.selecCursorClamp1048,66165
    bool        HasSelection() const        { return Stb.select_start != Stb.select_end; }HasSelection1049,66357
    void        ClearSelection()            { Stb.select_start = Stb.select_end = Stb.cursor; }ClearSelection1050,66449
    void        SelectAll()                 { Stb.select_start = 0; Stb.cursor = Stb.select_end SelectAll1051,66546
struct ImGuiPopupDataImGuiPopupData1055,66723
    ImGuiID             PopupId;        // Set on OpenPopup()PopupId1057,66749
    ImGuiWindow*        Window;         // Resolved on BeginPopup() - may stay unresolved if useWindow1058,66812
    ImGuiWindow*        SourceWindow;   // Set on OpenPopup() copy of NavWindow at the time of oSourceWindow1059,66935
    int                 OpenFrameCount; // Set on OpenPopup()OpenFrameCount1060,67049
    ImGuiID             OpenParentId;   // Set on OpenPopup(), we need this to differentiate mulOpenParentId1061,67112
    ImVec2              OpenPopupPos;   // Set on OpenPopup(), preferred popup position (typicalOpenPopupPos1062,67285
    ImVec2              OpenMousePos;   // Set on OpenPopup(), copy of mouse position at the timOpenMousePos1063,67419
    ImGuiPopupData()    { memset(this, 0, sizeof(*this)); OpenFrameCount = -1; }ImGuiPopupData1065,67537
struct ImGuiNavItemDataImGuiNavItemData1068,67625
    ImGuiWindow*        Window;         // Init,Move    // Best candidate window (result->ItemWiWindow1070,67653
    ImGuiID             ID;             // Init,Move    // Best candidate item IDID1071,67793
    ImGuiID             FocusScopeId;   // Init,Move    // Best candidate focus scope IDFocusScopeId1072,67876
    ImRect              RectRel;        // Init,Move    // Best candidate bounding box in windowRectRel1073,67966
    float               DistBox;        //      Move    // Best candidate box distance to currenDistBox1074,68079
    float               DistCenter;     //      Move    // Best candidate center distance to curDistCenter1075,68184
    float               DistAxial;      //      Move    // Best candidate axial distance to currDistAxial1076,68292
    ImGuiNavItemData()  { Clear(); }ImGuiNavItemData1078,68401
    void Clear()        { Window = NULL; ID = FocusScopeId = 0; RectRel = ImRect(); DistBox = DiClear1079,68439
enum ImGuiNextWindowDataFlags_ImGuiNextWindowDataFlags_1082,68576
    ImGuiNextWindowDataFlags_None               = 0,ImGuiNextWindowDataFlags_None1084,68611
    ImGuiNextWindowDataFlags_HasPos             = 1 << 0,ImGuiNextWindowDataFlags_HasPos1085,68665
    ImGuiNextWindowDataFlags_HasSize            = 1 << 1,ImGuiNextWindowDataFlags_HasSize1086,68724
    ImGuiNextWindowDataFlags_HasContentSize     = 1 << 2,ImGuiNextWindowDataFlags_HasContentSize1087,68783
    ImGuiNextWindowDataFlags_HasCollapsed       = 1 << 3,ImGuiNextWindowDataFlags_HasCollapsed1088,68842
    ImGuiNextWindowDataFlags_HasSizeConstraint  = 1 << 4,ImGuiNextWindowDataFlags_HasSizeConstraint1089,68901
    ImGuiNextWindowDataFlags_HasFocus           = 1 << 5,ImGuiNextWindowDataFlags_HasFocus1090,68960
    ImGuiNextWindowDataFlags_HasBgAlpha         = 1 << 6,ImGuiNextWindowDataFlags_HasBgAlpha1091,69019
    ImGuiNextWindowDataFlags_HasScroll          = 1 << 7ImGuiNextWindowDataFlags_HasScroll1092,69078
struct ImGuiNextWindowDataImGuiNextWindowData1096,69183
    ImGuiNextWindowDataFlags    Flags;Flags1098,69214
    ImGuiCond                   PosCond;PosCond1099,69254
    ImGuiCond                   SizeCond;SizeCond1100,69296
    ImGuiCond                   CollapsedCond;CollapsedCond1101,69339
    ImVec2                      PosVal;PosVal1102,69387
    ImVec2                      PosPivotVal;PosPivotVal1103,69428
    ImVec2                      SizeVal;SizeVal1104,69474
    ImVec2                      ContentSizeVal;ContentSizeVal1105,69516
    ImVec2                      ScrollVal;ScrollVal1106,69565
    bool                        CollapsedVal;CollapsedVal1107,69609
    ImRect                      SizeConstraintRect;SizeConstraintRect1108,69656
    ImGuiSizeCallback           SizeCallback;SizeCallback1109,69709
    void*                       SizeCallbackUserData;SizeCallbackUserData1110,69756
    float                       BgAlphaVal;             // Override background alphaBgAlphaVal1111,69811
    ImVec2                      MenuBarOffsetMinVal;    // *Always on* This is not exposed publiMenuBarOffsetMinVal1112,69897
    ImGuiNextWindowData()       { memset(this, 0, sizeof(*this)); }ImGuiNextWindowData1114,70023
    inline void ClearFlags()    { Flags = ImGuiNextWindowDataFlags_None; }ClearFlags1115,70092
enum ImGuiNextItemDataFlags_ImGuiNextItemDataFlags_1118,70174
    ImGuiNextItemDataFlags_None     = 0,ImGuiNextItemDataFlags_None1120,70207
    ImGuiNextItemDataFlags_HasWidth = 1 << 0,ImGuiNextItemDataFlags_HasWidth1121,70249
    ImGuiNextItemDataFlags_HasOpen  = 1 << 1ImGuiNextItemDataFlags_HasOpen1122,70296
struct ImGuiNextItemDataImGuiNextItemData1125,70348
    ImGuiNextItemDataFlags      Flags;Flags1127,70377
    float                       Width;          // Set by SetNextItemWidth()Width1128,70417
    ImGuiID                     FocusScopeId;   // Set by SetNextItemMultiSelectData() (!= 0 sigFocusScopeId1129,70495
    ImGuiCond                   OpenCond;OpenCond1130,70766
    bool                        OpenVal;        // Set by SetNextItemOpen()OpenVal1131,70809
    ImGuiNextItemData()         { memset(this, 0, sizeof(*this)); }ImGuiNextItemData1133,70888
    inline void ClearFlags()    { Flags = ImGuiNextItemDataFlags_None; } // Also cleared manuallClearFlags1134,70957
struct ImGuiShrinkWidthItemImGuiShrinkWidthItem1137,71076
    int         Index;Index1139,71108
    float       Width;Width1140,71132
struct ImGuiPtrOrIndexImGuiPtrOrIndex1143,71162
    void*       Ptr;            // Either field can be set, not both. e.g. Dock node tab bars arPtr1145,71189
    int         Index;          // Usually index in a main pool.Index1146,71334
    ImGuiPtrOrIndex(void* ptr)  { Ptr = ptr; Index = -1; }ImGuiPtrOrIndex1148,71402
    ImGuiPtrOrIndex(int index)  { Ptr = NULL; Index = index; }ImGuiPtrOrIndex1149,71462
enum ImGuiOldColumnFlags_ImGuiOldColumnFlags_1157,71803
    ImGuiOldColumnFlags_None                    = 0,ImGuiOldColumnFlags_None1159,71833
    ImGuiOldColumnFlags_NoBorder                = 1 << 0,   // Disable column dividersImGuiOldColumnFlags_NoBorder1160,71887
    ImGuiOldColumnFlags_NoResize                = 1 << 1,   // Disable resizing columns when cliImGuiOldColumnFlags_NoResize1161,71975
    ImGuiOldColumnFlags_NoPreserveWidths        = 1 << 2,   // Disable column width preservationImGuiOldColumnFlags_NoPreserveWidths1162,72094
    ImGuiOldColumnFlags_NoForceWithinWindow     = 1 << 3,   // Disable forcing columns to fit wiImGuiOldColumnFlags_NoForceWithinWindow1163,72215
    ImGuiOldColumnFlags_GrowParentContentsSize  = 1 << 4    // (WIP) Restore pre-1.51 behavior oImGuiOldColumnFlags_GrowParentContentsSize1164,72324
    , ImGuiColumnsFlags_None                    = ImGuiOldColumnFlags_None,ImGuiColumnsFlags_None1168,72624
    ImGuiColumnsFlags_NoBorder                  = ImGuiOldColumnFlags_NoBorder,ImGuiColumnsFlags_NoBorder1169,72701
    ImGuiColumnsFlags_NoResize                  = ImGuiOldColumnFlags_NoResize,ImGuiColumnsFlags_NoResize1170,72782
    ImGuiColumnsFlags_NoPreserveWidths          = ImGuiOldColumnFlags_NoPreserveWidths,ImGuiColumnsFlags_NoPreserveWidths1171,72863
    ImGuiColumnsFlags_NoForceWithinWindow       = ImGuiOldColumnFlags_NoForceWithinWindow,ImGuiColumnsFlags_NoForceWithinWindow1172,72952
    ImGuiColumnsFlags_GrowParentContentsSize    = ImGuiOldColumnFlags_GrowParentContentsSizeImGuiColumnsFlags_GrowParentContentsSize1173,73044
struct ImGuiOldColumnDataImGuiOldColumnData1177,73152
    float               OffsetNorm;         // Column start offset, normalized 0.0 (far left) ->OffsetNorm1179,73182
    float               OffsetNormBeforeResize;OffsetNormBeforeResize1180,73296
    ImGuiOldColumnFlags Flags;              // Not exposedFlags1181,73345
    ImRect              ClipRect;ClipRect1182,73405
    ImGuiOldColumnData() { memset(this, 0, sizeof(*this)); }ImGuiOldColumnData1184,73442
struct ImGuiOldColumnsImGuiOldColumns1187,73510
    ImGuiID             ID;ID1189,73537
    ImGuiOldColumnFlags Flags;Flags1190,73566
    bool                IsFirstFrame;IsFirstFrame1191,73598
    bool                IsBeingResized;IsBeingResized1192,73637
    int                 Current;Current1193,73678
    int                 Count;Count1194,73712
    float               OffMinX, OffMaxX;       // Offsets from HostWorkRect.Min.xOffMinX1195,73744
    float               OffMinX, OffMaxX;       // Offsets from HostWorkRect.Min.xOffMaxX1195,73744
    float               LineMinY, LineMaxY;LineMinY1196,73828
    float               LineMinY, LineMaxY;LineMaxY1196,73828
    float               HostCursorPosY;         // Backup of CursorPos at the time of BeginColumHostCursorPosY1197,73873
    float               HostCursorMaxPosX;      // Backup of CursorMaxPos at the time of BeginCoHostCursorMaxPosX1198,73975
    ImRect              HostInitialClipRect;    // Backup of ClipRect at the time of BeginColumnHostInitialClipRect1199,74080
    ImRect              HostBackupClipRect;     // Backup of ClipRect during PushColumnsBackgrouHostBackupClipRect1200,74181
    ImRect              HostBackupParentWorkRect;//Backup of WorkRect at the time of BeginColumnHostBackupParentWorkRect1201,74306
    ImVector<ImGuiOldColumnData> Columns;Columns1202,74407
    ImDrawListSplitter  Splitter;Splitter1203,74450
    ImGuiOldColumns()   { memset(this, 0, sizeof(*this)); }ImGuiOldColumns1205,74487
struct ImGuiViewportP : public ImGuiViewportImGuiViewportP1230,75511
    int                 DrawListsLastFrame[2];  // Last frame number the background (0) and foreDrawListsLastFrame1232,75560
    ImDrawList*         DrawLists[2];           // Convenience background (0) and foreground (1)DrawLists1233,75689
    ImDrawData          DrawDataP;DrawDataP1234,75906
    ImDrawDataBuilder   DrawDataBuilder;DrawDataBuilder1235,75942
    ImVec2              WorkOffsetMin;          // Work Area: Offset from Pos to top-left cornerWorkOffsetMin1237,75986
    ImVec2              WorkOffsetMax;          // Work Area: Offset from Pos+Size to bottom-rigWorkOffsetMax1238,76243
    ImVec2              BuildWorkOffsetMin;     // Work Area: Offset being built during current BuildWorkOffsetMin1239,76407
    ImVec2              BuildWorkOffsetMax;     // Work Area: Offset being built during current BuildWorkOffsetMax1240,76530
    ImGuiViewportP()    { DrawListsLastFrame[0] = DrawListsLastFrame[1] = -1; DrawLists[0] = DraImGuiViewportP1242,76655
    ~ImGuiViewportP()   { if (DrawLists[0]) IM_DELETE(DrawLists[0]); if (DrawLists[1]) IM_DELETE~ImGuiViewportP1243,76772
    ImVec2  CalcWorkRectPos(const ImVec2& off_min) const                            { return ImVCalcWorkRectPos1246,77052
    ImVec2  CalcWorkRectSize(const ImVec2& off_min, const ImVec2& off_max) const    { return ImVCalcWorkRectSize1247,77194
    void    UpdateWorkRect()            { WorkPos = CalcWorkRectPos(WorkOffsetMin); WorkSize = CUpdateWorkRect1248,77388
    ImRect  GetMainRect() const         { return ImRect(Pos.x, Pos.y, Pos.x + Size.x, Pos.y + SiGetMainRect1251,77694
    ImRect  GetWorkRect() const         { return ImRect(WorkPos.x, WorkPos.y, WorkPos.x + WorkSiGetWorkRect1252,77800
    ImRect  GetBuildWorkRect() const    { ImVec2 pos = CalcWorkRectPos(BuildWorkOffsetMin); ImVeGetBuildWorkRect1253,77930
struct ImGuiWindowSettingsImGuiWindowSettings1263,78629
    ImGuiID     ID;ID1265,78660
    ImVec2ih    Pos;Pos1266,78681
    ImVec2ih    Size;Size1267,78703
    bool        Collapsed;Collapsed1268,78726
    bool        WantApply;      // Set when loaded from .ini data (to enable merging/loading .inWantApply1269,78754
    ImGuiWindowSettings()       { memset(this, 0, sizeof(*this)); }ImGuiWindowSettings1271,78893
    char* GetName()             { return (char*)(this + 1); }GetName1272,78962
struct ImGuiSettingsHandlerImGuiSettingsHandler1275,79031
    const char* TypeName;       // Short description stored in .ini file. Disallowed characters:TypeName1277,79063
    ImGuiID     TypeHash;       // == ImHashStr(TypeName)TypeHash1278,79169
    void        (*ClearAllFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler);                ClearAllFn1279,79228
    void        (*ReadInitFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler);                ReadInitFn1280,79368
    void*       (*ReadOpenFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, const char* nameReadOpenFn1281,79536
    void        (*ReadLineFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, void* entry, conReadLineFn1282,79722
    void        (*ApplyAllFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler);                ApplyAllFn1283,79894
    void        (*WriteAllFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, ImGuiTextBuffer*WriteAllFn1284,80061
    void*       UserData;UserData1285,80220
    ImGuiSettingsHandler() { memset(this, 0, sizeof(*this)); }ImGuiSettingsHandler1287,80249
struct ImGuiMetricsConfigImGuiMetricsConfig1294,80512
    bool        ShowWindowsRects;ShowWindowsRects1296,80542
    bool        ShowWindowsBeginOrder;ShowWindowsBeginOrder1297,80577
    bool        ShowTablesRects;ShowTablesRects1298,80617
    bool        ShowDrawCmdMesh;ShowDrawCmdMesh1299,80651
    bool        ShowDrawCmdBoundingBoxes;ShowDrawCmdBoundingBoxes1300,80685
    int         ShowWindowsRectsType;ShowWindowsRectsType1301,80728
    int         ShowTablesRectsType;ShowTablesRectsType1302,80767
    ImGuiMetricsConfig()ImGuiMetricsConfig1304,80807
struct IMGUI_API ImGuiStackSizesImGuiStackSizes1316,81108
    short   SizeOfIDStack;SizeOfIDStack1318,81145
    short   SizeOfColorStack;SizeOfColorStack1319,81173
    short   SizeOfStyleVarStack;SizeOfStyleVarStack1320,81204
    short   SizeOfFontStack;SizeOfFontStack1321,81238
    short   SizeOfFocusScopeStack;SizeOfFocusScopeStack1322,81268
    short   SizeOfGroupStack;SizeOfGroupStack1323,81304
    short   SizeOfBeginPopupStack;SizeOfBeginPopupStack1324,81335
    ImGuiStackSizes() { memset(this, 0, sizeof(*this)); }ImGuiStackSizes1326,81373
typedef void (*ImGuiContextHookCallback)(ImGuiContext* ctx, ImGuiContextHook* hook);ImGuiContextHookCallback1335,81706
enum ImGuiContextHookType { ImGuiContextHookType_NewFramePre, ImGuiContextHookType_NewFramePost,ImGuiContextHookType1336,81792
enum ImGuiContextHookType { ImGuiContextHookType_NewFramePre, ImGuiContextHookType_NewFramePost,ImGuiContextHookType_NewFramePre1336,81792
enum ImGuiContextHookType { ImGuiContextHookType_NewFramePre, ImGuiContextHookType_NewFramePost,ImGuiContextHookType_NewFramePost1336,81792
enum ImGuiContextHookType { ImGuiContextHookType_NewFramePre, ImGuiContextHookType_NewFramePost,ImGuiContextHookType_EndFramePre1336,81792
enum ImGuiContextHookType { ImGuiContextHookType_NewFramePre, ImGuiContextHookType_NewFramePost,ImGuiContextHookType_EndFramePost1336,81792
enum ImGuiContextHookType { ImGuiContextHookType_NewFramePre, ImGuiContextHookType_NewFramePost,ImGuiContextHookType_RenderPre1336,81792
enum ImGuiContextHookType { ImGuiContextHookType_NewFramePre, ImGuiContextHookType_NewFramePost,ImGuiContextHookType_RenderPost1336,81792
enum ImGuiContextHookType { ImGuiContextHookType_NewFramePre, ImGuiContextHookType_NewFramePost,ImGuiContextHookType_Shutdown1336,81792
enum ImGuiContextHookType { ImGuiContextHookType_NewFramePre, ImGuiContextHookType_NewFramePost,ImGuiContextHookType_PendingRemoval_1336,81792
struct ImGuiContextHookImGuiContextHook1338,82097
    ImGuiID                     HookId;     // A unique ID assigned by AddContextHook()HookId1340,82125
    ImGuiContextHookType        Type;Type1341,82214
    ImGuiID                     Owner;Owner1342,82253
    ImGuiContextHookCallback    Callback;Callback1343,82293
    void*                       UserData;UserData1344,82336
    ImGuiContextHook()          { memset(this, 0, sizeof(*this)); }ImGuiContextHook1346,82381
struct ImGuiContextImGuiContext1353,82668
    bool                    Initialized;Initialized1355,82692
    bool                    FontAtlasOwnedByContext;            // IO.Fonts-> is owned by the ImFontAtlasOwnedByContext1356,82734
    ImGuiIO                 IO;IO1357,82880
    ImGuiStyle              Style;Style1358,82913
    ImFont*                 Font;                               // (Shortcut) == FontStack.emptyFont1359,82949
    float                   FontSize;                           // (Shortcut) == FontBaseSize * FontSize1360,83078
    float                   FontBaseSize;                       // (Shortcut) == IO.FontGlobalScFontBaseSize1361,83263
    ImDrawListSharedData    DrawListSharedData;DrawListSharedData1362,83414
    double                  Time;Time1363,83463
    int                     FrameCount;FrameCount1364,83498
    int                     FrameCountEnded;FrameCountEnded1365,83539
    int                     FrameCountRendered;FrameCountRendered1366,83585
    bool                    WithinFrameScope;                   // Set by NewFrame(), cleared byWithinFrameScope1367,83634
    bool                    WithinFrameScopeWithImplicitWindow; // Set by NewFrame(), cleared byWithinFrameScopeWithImplicitWindow1368,83743
    bool                    WithinEndChild;                     // Set within EndChild()WithinEndChild1369,83899
    bool                    GcCompactAll;                       // Request full GCGcCompactAll1370,83989
    bool                    TestEngineHookItems;                // Will call test engine hooks: TestEngineHookItems1371,84073
    ImGuiID                 TestEngineHookIdInfo;               // Will call test engine hooks: TestEngineHookIdInfo1372,84259
    void*                   TestEngine;                         // Test engine user dataTestEngine1373,84398
    ImVector<ImGuiWindow*>  Windows;                            // Windows, sorted in display orWindows1376,84512
    ImVector<ImGuiWindow*>  WindowsFocusOrder;                  // Root windows, sorted in focusWindowsFocusOrder1377,84628
    ImVector<ImGuiWindow*>  WindowsTempSortBuffer;              // Temporary buffer used in EndFWindowsTempSortBuffer1378,84748
    ImVector<ImGuiWindow*>  CurrentWindowStack;CurrentWindowStack1379,84910
    ImGuiStorage            WindowsById;                        // Map window's ImGuiID to ImGuiWindowsById1380,84959
    int                     WindowsActiveCount;                 // Number of unique windows submWindowsActiveCount1381,85064
    ImVec2                  WindowsHoverPadding;                // Padding around resizable windWindowsHoverPadding1382,85176
    ImGuiWindow*            CurrentWindow;                      // Window being drawn intoCurrentWindow1383,85386
    ImGuiWindow*            HoveredWindow;                      // Window the mouse is hovering.HoveredWindow1384,85478
    ImGuiWindow*            HoveredWindowUnderMovingWindow;     // Hovered window ignoring MovinHoveredWindowUnderMovingWindow1385,85611
    ImGuiWindow*            MovingWindow;                       // Track the window we clicked oMovingWindow1386,85750
    ImGuiWindow*            WheelingWindow;                     // Track the window we started mWheelingWindow1387,85950
    ImVec2                  WheelingWindowRefMousePos;WheelingWindowRefMousePos1388,86229
    float                   WheelingWindowTimer;WheelingWindowTimer1389,86285
    ImGuiItemFlags          CurrentItemFlags;                   // == g.ItemFlagsStack.back()CurrentItemFlags1392,86389
    ImGuiID                 HoveredId;                          // Hovered widget, filled duringHoveredId1393,86484
    ImGuiID                 HoveredIdPreviousFrame;HoveredIdPreviousFrame1394,86592
    bool                    HoveredIdAllowOverlap;HoveredIdAllowOverlap1395,86645
    bool                    HoveredIdUsingMouseWheel;           // Hovered widget will use mouseHoveredIdUsingMouseWheel1396,86697
    bool                    HoveredIdPreviousFrameUsingMouseWheel;HoveredIdPreviousFrameUsingMouseWheel1397,86842
    bool                    HoveredIdDisabled;                  // At least one widget passed thHoveredIdDisabled1398,86910
    float                   HoveredIdTimer;                     // Measure contiguous hovering tHoveredIdTimer1399,87114
    float                   HoveredIdNotActiveTimer;            // Measure contiguous hovering tHoveredIdNotActiveTimer1400,87215
    ImGuiID                 ActiveId;                           // Active widgetActiveId1401,87351
    ImGuiID                 ActiveIdIsAlive;                    // Active widget has been seen tActiveIdIsAlive1402,87433
    float                   ActiveIdTimer;ActiveIdTimer1403,87606
    bool                    ActiveIdIsJustActivated;            // Set at the time of activationActiveIdIsJustActivated1404,87650
    bool                    ActiveIdAllowOverlap;               // Active widget allows another ActiveIdAllowOverlap1405,87762
    bool                    ActiveIdNoClearOnFocusLoss;         // Disable losing active id if tActiveIdNoClearOnFocusLoss1406,87937
    bool                    ActiveIdHasBeenPressedBefore;       // Track whether the active id lActiveIdHasBeenPressedBefore1407,88070
    bool                    ActiveIdHasBeenEditedBefore;        // Was the value associated to tActiveIdHasBeenEditedBefore1408,88302
    bool                    ActiveIdHasBeenEditedThisFrame;ActiveIdHasBeenEditedThisFrame1409,88453
    bool                    ActiveIdUsingMouseWheel;            // Active widget will want to reActiveIdUsingMouseWheel1410,88514
    ImU32                   ActiveIdUsingNavDirMask;            // Active widget will want to reActiveIdUsingNavDirMask1411,88667
    ImU32                   ActiveIdUsingNavInputMask;          // Active widget will want to reActiveIdUsingNavInputMask1412,88842
    ImU64                   ActiveIdUsingKeyInputMask;          // Active widget will want to reActiveIdUsingKeyInputMask1413,88960
    ImVec2                  ActiveIdClickOffset;                // Clicked offset from upper-lefActiveIdClickOffset1414,89226
    ImGuiWindow*            ActiveIdWindow;ActiveIdWindow1415,89386
    ImGuiInputSource        ActiveIdSource;                     // Activating with mouse or nav ActiveIdSource1416,89431
    int                     ActiveIdMouseButton;ActiveIdMouseButton1417,89547
    ImGuiID                 ActiveIdPreviousFrame;ActiveIdPreviousFrame1418,89597
    bool                    ActiveIdPreviousFrameIsAlive;ActiveIdPreviousFrameIsAlive1419,89649
    bool                    ActiveIdPreviousFrameHasBeenEditedBefore;ActiveIdPreviousFrameHasBeenEditedBefore1420,89708
    ImGuiWindow*            ActiveIdPreviousFrameWindow;ActiveIdPreviousFrameWindow1421,89779
    ImGuiID                 LastActiveId;                       // Store the last non-zero ActivLastActiveId1422,89837
    float                   LastActiveIdTimer;                  // Store the last non-zero ActivLastActiveIdTimer1423,89961
    ImGuiNextWindowData     NextWindowData;                     // Storage for SetNextWindow** fNextWindowData1426,90157
    ImGuiNextItemData       NextItemData;                       // Storage for SetNextItem** funNextItemData1427,90263
    ImVector<ImGuiColorMod> ColorStack;                         // Stack for PushStyleColor()/PoColorStack1430,90391
    ImVector<ImGuiStyleMod> StyleVarStack;                      // Stack for PushStyleVar()/PopSStyleVarStack1431,90525
    ImVector<ImFont*>       FontStack;                          // Stack for PushFont()/PopFont(FontStack1432,90655
    ImVector<ImGuiID>       FocusScopeStack;                    // Stack for PushFocusScope()/PoFocusScopeStack1433,90777
    ImVector<ImGuiItemFlags>ItemFlagsStack;                     // Stack for PushItemFlag()/PopIItemFlagsStack1434,90936
    ImVector<ImGuiGroupData>GroupStack;                         // Stack for BeginGroup()/EndGroGroupStack1435,91066
    ImVector<ImGuiPopupData>OpenPopupStack;                     // Which popups are open (persisOpenPopupStack1436,91195
    ImVector<ImGuiPopupData>BeginPopupStack;                    // Which level of BeginPopup() wBeginPopupStack1437,91298
    ImVector<ImGuiViewportP*> Viewports;                        // Active viewports (Size==1 in Viewports1440,91444
    ImGuiWindow*            NavWindow;                          // Focused window for navigationNavWindow1443,91643
    ImGuiID                 NavId;                              // Focused item for navigationNavId1444,91772
    ImGuiID                 NavFocusScopeId;                    // Identify a selection scope (sNavFocusScopeId1445,91868
    ImGuiID                 NavActivateId;                      // ~~ (g.ActiveId == 0) && IsNavNavActivateId1446,92060
    ImGuiID                 NavActivateDownId;                  // ~~ IsNavInputDown(ImGuiNavInpNavActivateDownId1447,92244
    ImGuiID                 NavActivatePressedId;               // ~~ IsNavInputPressed(ImGuiNavNavActivatePressedId1448,92366
    ImGuiID                 NavInputId;                         // ~~ IsNavInputPressed(ImGuiNavNavInputId1449,92491
    ImGuiID                 NavJustTabbedId;                    // Just tabbed to this id.NavJustTabbedId1450,92613
    ImGuiID                 NavJustMovedToId;                   // Just navigated to this id (reNavJustMovedToId1451,92705
    ImGuiID                 NavJustMovedToFocusScopeId;         // Just navigated to this focus NavJustMovedToFocusScopeId1452,92839
    ImGuiKeyModFlags        NavJustMovedToKeyMods;NavJustMovedToKeyMods1453,92985
    ImGuiID                 NavNextActivateId;                  // Set by ActivateItem(), queuedNavNextActivateId1454,93037
    ImGuiInputSource        NavInputSource;                     // Keyboard or Gamepad mode? THINavInputSource1455,93153
    ImRect                  NavScoringRect;                     // Rectangle used for scoring, iNavScoringRect1456,93300
    int                     NavScoringCount;                    // Metrics for debuggingNavScoringCount1457,93489
    ImGuiNavLayer           NavLayer;                           // Layer we are navigating on. FNavLayer1458,93579
    int                     NavIdTabCounter;                    // == NavWindow->DC.FocusIdxTabCNavIdTabCounter1459,93775
    bool                    NavIdIsAlive;                       // Nav widget has been seen thisNavIdIsAlive1460,93907
    bool                    NavMousePosDirty;                   // When set we will update mouseNavMousePosDirty1461,94034
    bool                    NavDisableHighlight;                // When user starts using mouse,NavDisableHighlight1462,94242
    bool                    NavDisableMouseHover;               // When user starts using gamepaNavDisableMouseHover1463,94481
    bool                    NavAnyRequest;                      // ~~ NavMoveRequest || NavInitRNavAnyRequest1464,94653
    bool                    NavInitRequest;                     // Init request for appearing wiNavInitRequest1465,94757
    bool                    NavInitRequestFromMove;NavInitRequestFromMove1466,94880
    ImGuiID                 NavInitResultId;                    // Init request result (first itNavInitResultId1467,94933
    ImRect                  NavInitResultRectRel;               // Init request result rectangleNavInitResultRectRel1468,95099
    bool                    NavMoveRequest;                     // Move request for this frameNavMoveRequest1469,95225
    ImGuiNavMoveFlags       NavMoveRequestFlags;NavMoveRequestFlags1470,95321
    ImGuiNavForward         NavMoveRequestForward;              // None / ForwardQueued / ForwarNavMoveRequestForward1471,95371
    ImGuiKeyModFlags        NavMoveRequestKeyMods;NavMoveRequestKeyMods1472,95542
    ImGuiDir                NavMoveDir, NavMoveDirLast;         // Direction of the move requestNavMoveDir1473,95594
    ImGuiDir                NavMoveDir, NavMoveDirLast;         // Direction of the move requestNavMoveDirLast1473,95594
    ImGuiDir                NavMoveClipDir;                     // FIXME-NAV: Describe the purpoNavMoveClipDir1474,95753
    ImGuiNavItemData        NavMoveResultLocal;                 // Best move request candidate wNavMoveResultLocal1475,95891
    ImGuiNavItemData        NavMoveResultLocalVisibleSet;       // Best move request candidate wNavMoveResultLocalVisibleSet1476,96004
    ImGuiNavItemData        NavMoveResultOther;                 // Best move request candidate wNavMoveResultOther1477,96197
    ImGuiWindow*            NavWrapRequestWindow;               // Window which requested tryingNavWrapRequestWindow1478,96380
    ImGuiNavMoveFlags       NavWrapRequestFlags;                // Wrap-around operation flags.NavWrapRequestFlags1479,96495
    ImGuiWindow*            NavWindowingTarget;                 // Target window when doing CTRLNavWindowingTarget1482,96702
    ImGuiWindow*            NavWindowingTargetAnim;             // Record of last valid NavWindoNavWindowingTargetAnim1483,96883
    ImGuiWindow*            NavWindowingListWindow;             // Internal window actually listNavWindowingListWindow1484,97085
    float                   NavWindowingTimer;NavWindowingTimer1485,97208
    float                   NavWindowingHighlightAlpha;NavWindowingHighlightAlpha1486,97256
    bool                    NavWindowingToggleLayer;NavWindowingToggleLayer1487,97313
    ImGuiWindow*            TabFocusRequestCurrWindow;          //TabFocusRequestCurrWindow1490,97499
    ImGuiWindow*            TabFocusRequestNextWindow;          //TabFocusRequestNextWindow1491,97567
    int                     TabFocusRequestCurrCounterRegular;  // Any item being requested for TabFocusRequestCurrCounterRegular1492,97635
    int                     TabFocusRequestCurrCounterTabStop;  // Tab item being requested for TabFocusRequestCurrCounterTabStop1493,97847
    int                     TabFocusRequestNextCounterRegular;  // Stored for next frameTabFocusRequestNextCounterRegular1494,97970
    int                     TabFocusRequestNextCounterTabStop;  // "TabFocusRequestNextCounterTabStop1495,98060
    bool                    TabFocusPressed;                    // Set in NewFrame() when user pTabFocusPressed1496,98130
    float                   DimBgRatio;                         // 0.0..1.0 animation when fadinDimBgRatio1499,98255
    ImGuiMouseCursor        MouseCursor;MouseCursor1500,98415
    bool                    DragDropActive;DragDropActive1503,98481
    bool                    DragDropWithinSource;               // Set when within a BeginDragDrDragDropWithinSource1504,98526
    bool                    DragDropWithinTarget;               // Set when within a BeginDragDrDragDropWithinTarget1505,98669
    ImGuiDragDropFlags      DragDropSourceFlags;DragDropSourceFlags1506,98812
    int                     DragDropSourceFrameCount;DragDropSourceFrameCount1507,98862
    int                     DragDropMouseButton;DragDropMouseButton1508,98917
    ImGuiPayload            DragDropPayload;DragDropPayload1509,98967
    ImRect                  DragDropTargetRect;                 // Store rectangle of current taDragDropTargetRect1510,99013
    ImGuiID                 DragDropTargetId;DragDropTargetId1511,99167
    ImGuiDragDropFlags      DragDropAcceptFlags;DragDropAcceptFlags1512,99214
    float                   DragDropAcceptIdCurrRectSurface;    // Target item surface (we resolDragDropAcceptIdCurrRectSurface1513,99264
    ImGuiID                 DragDropAcceptIdCurr;               // Target item id (set at the tiDragDropAcceptIdCurr1514,99421
    ImGuiID                 DragDropAcceptIdPrev;               // Target item id from previous DragDropAcceptIdPrev1515,99547
    int                     DragDropAcceptFrameCount;           // Last time a target expressed DragDropAcceptFrameCount1516,99721
    ImGuiID                 DragDropHoldJustPressedId;          // Set when holding a payload juDragDropHoldJustPressedId1517,99848
    ImVector<unsigned char> DragDropPayloadBufHeap;             // We don't expose the ImVector<DragDropPayloadBufHeap1518,99986
    unsigned char           DragDropPayloadBufLocal[16];        // Local buffer for small payloaDragDropPayloadBufLocal1519,100132
    ImGuiTable*                     CurrentTable;CurrentTable1522,100248
    int                             CurrentTableStackIdx;CurrentTableStackIdx1523,100299
    ImPool<ImGuiTable>              Tables;Tables1524,100358
    ImVector<ImGuiTableTempData>    TablesTempDataStack;TablesTempDataStack1525,100403
    ImVector<float>                 TablesLastTimeActive;       // Last used timestamp of each tTablesLastTimeActive1526,100461
    ImVector<ImDrawChannel>         DrawChannelsTempMergeBuffer;DrawChannelsTempMergeBuffer1527,100588
    ImGuiTabBar*                    CurrentTabBar;CurrentTabBar1530,100673
    ImPool<ImGuiTabBar>             TabBars;TabBars1531,100725
    ImVector<ImGuiPtrOrIndex>       CurrentTabBarStack;CurrentTabBarStack1532,100771
    ImVector<ImGuiShrinkWidthItem>  ShrinkWidthBuffer;ShrinkWidthBuffer1533,100828
    ImVec2                  LastValidMousePos;LastValidMousePos1536,100907
    ImGuiInputTextState     InputTextState;InputTextState1537,100955
    ImFont                  InputTextPasswordFont;InputTextPasswordFont1538,101000
    ImGuiID                 TempInputId;                        // Temporary text input when CTRTempInputId1539,101052
    ImGuiColorEditFlags     ColorEditOptions;                   // Store user options for color ColorEditOptions1540,101178
    float                   ColorEditLastHue;                   // Backup of last Hue associatedColorEditLastHue1541,101288
    float                   ColorEditLastSat;                   // Backup of last Saturation assColorEditLastSat1542,101455
    float                   ColorEditLastColor[3];ColorEditLastColor1543,101636
    ImVec4                  ColorPickerRef;                     // Initial/reference color at thColorPickerRef1544,101688
    float                   SliderCurrentAccum;                 // Accumulated slider delta whenSliderCurrentAccum1545,101821
    bool                    SliderCurrentAccumDirty;            // Has the accumulated slider deSliderCurrentAccumDirty1546,101946
    bool                    DragCurrentAccumDirty;DragCurrentAccumDirty1547,102093
    float                   DragCurrentAccum;                   // Accumulator for dragging modiDragCurrentAccum1548,102145
    float                   DragSpeedDefaultRatio;              // If speed == 0.0f, uses (max-mDragSpeedDefaultRatio1549,102318
    float                   ScrollbarClickDeltaToGrabCenter;    // Distance between mouse and ceScrollbarClickDeltaToGrabCenter1550,102443
    int                     TooltipOverrideCount;TooltipOverrideCount1551,102599
    float                   TooltipSlowDelay;                   // Time before slow tooltips appTooltipSlowDelay1552,102650
    ImVector<char>          ClipboardHandlerData;               // If no custom clipboard handleClipboardHandlerData1553,102825
    ImVector<ImGuiID>       MenusIdSubmittedThisFrame;          // A list of menu IDs that were MenusIdSubmittedThisFrame1554,102935
    ImVec2                  PlatformImePos;                     // Cursor position request & lasPlatformImePos1557,103082
    ImVec2                  PlatformImeLastPos;PlatformImeLastPos1558,103218
    char                    PlatformLocaleDecimalPoint;         // '.' or *localeconv()->decimalPlatformLocaleDecimalPoint1559,103267
    bool                    SettingsLoaded;SettingsLoaded1562,103390
    float                   SettingsDirtyTimer;                 // Save .ini Settings to memory SettingsDirtyTimer1563,103435
    ImGuiTextBuffer         SettingsIniData;                    // In memory .ini settingsSettingsIniData1564,103555
    ImVector<ImGuiSettingsHandler>      SettingsHandlers;       // List of .ini settings handlerSettingsHandlers1565,103647
    ImChunkStream<ImGuiWindowSettings>  SettingsWindows;        // ImGuiWindow .ini settings entSettingsWindows1566,103746
    ImChunkStream<ImGuiTableSettings>   SettingsTables;         // ImGuiTable .ini settings entrSettingsTables1567,103848
    ImVector<ImGuiContextHook>          Hooks;                  // Hooks for extensions (e.g. teHooks1568,103949
    ImGuiID                             HookIdNext;             // Next available HookIdHookIdNext1569,104057
    bool                    LogEnabled;                         // Currently capturingLogEnabled1572,104173
    ImGuiLogType            LogType;                            // Capture targetLogType1573,104261
    ImFileHandle            LogFile;                            // If != NULL log to stdout/ filLogFile1574,104344
    ImGuiTextBuffer         LogBuffer;                          // Accumulation buffer when log LogBuffer1575,104443
    const char*             LogNextPrefix;LogNextPrefix1576,104633
    const char*             LogNextSuffix;LogNextSuffix1577,104677
    float                   LogLinePosY;LogLinePosY1578,104721
    bool                    LogLineFirstItem;LogLineFirstItem1579,104763
    int                     LogDepthRef;LogDepthRef1580,104810
    int                     LogDepthToExpand;LogDepthToExpand1581,104852
    int                     LogDepthToExpandDefault;            // Default/stored value for LogDLogDepthToExpandDefault1582,104899
    bool                    DebugItemPickerActive;              // Item picker is active (starteDebugItemPickerActive1585,105078
    ImGuiID                 DebugItemPickerBreakId;             // Will call IM_DEBUG_BREAK() whDebugItemPickerBreakId1586,105206
    ImGuiMetricsConfig      DebugMetricsConfig;DebugMetricsConfig1587,105327
    float                   FramerateSecPerFrame[120];          // Calculate estimate of frameraFramerateSecPerFrame1590,105391
    int                     FramerateSecPerFrameIdx;FramerateSecPerFrameIdx1591,105525
    int                     FramerateSecPerFrameCount;FramerateSecPerFrameCount1592,105579
    float                   FramerateSecPerFrameAccum;FramerateSecPerFrameAccum1593,105635
    int                     WantCaptureMouseNextFrame;          // Explicit capture via CaptureKWantCaptureMouseNextFrame1594,105691
    int                     WantCaptureKeyboardNextFrame;WantCaptureKeyboardNextFrame1595,105844
    int                     WantTextInputNextFrame;WantTextInputNextFrame1596,105903
    char                    TempBuffer[1024 * 3 + 1];           // Temporary text bufferTempBuffer1597,105956
    ImGuiContext(ImFontAtlas* shared_font_atlas)ImGuiContext1599,106048
struct IMGUI_API ImGuiWindowTempDataImGuiWindowTempData1754,112679
    ImVec2                  CursorPos;              // Current emitting position, in absolute coCursorPos1757,112735
    ImVec2                  CursorPosPrevLine;CursorPosPrevLine1758,112843
    ImVec2                  CursorStartPos;         // Initial position after Begin(), generallyCursorStartPos1759,112891
    ImVec2                  CursorMaxPos;           // Used to implicitly calculate ContentSize CursorMaxPos1760,113024
    ImVec2                  IdealMaxPos;            // Used to implicitly calculate ContentSizeIIdealMaxPos1761,113223
    ImVec2                  CurrLineSize;CurrLineSize1762,113412
    ImVec2                  PrevLineSize;PrevLineSize1763,113455
    float                   CurrLineTextBaseOffset; // Baseline offset (0.0f by default on a newCurrLineTextBaseOffset1764,113498
    float                   PrevLineTextBaseOffset;PrevLineTextBaseOffset1765,113672
    ImVec1                  Indent;                 // Indentation / start position from left ofIndent1766,113725
    ImVec1                  ColumnsOffset;          // Offset to the current column (if ColumnsCColumnsOffset1767,113868
    ImVec1                  GroupOffset;GroupOffset1768,114091
    ImGuiID                 LastItemId;             // ID for last itemLastItemId1771,114160
    ImGuiItemStatusFlags    LastItemStatusFlags;    // Status flags for last item (see ImGuiItemLastItemStatusFlags1772,114233
    ImRect                  LastItemRect;           // Interaction rect for last itemLastItemRect1773,114344
    ImRect                  LastItemDisplayRect;    // End-user display rect for last item (onlyLastItemDisplayRect1774,114431
    ImGuiNavLayer           NavLayerCurrent;        // Current layer, 0..31 (we currently only uNavLayerCurrent1777,114635
    short                   NavLayersActiveMask;    // Which layers have been written to (resultNavLayersActiveMask1778,114741
    short                   NavLayersActiveMaskNext;// Which layers have been written to (accumuNavLayersActiveMaskNext1779,114860
    ImGuiID                 NavFocusScopeIdCurrent; // Current focus scope ID while appendingNavFocusScopeIdCurrent1780,114982
    bool                    NavHideHighlightOneFrame;NavHideHighlightOneFrame1781,115077
    bool                    NavHasScroll;           // Set when scrolling can be used (ScrollMaxNavHasScroll1782,115132
    bool                    MenuBarAppending;       // FIXME: Remove thisMenuBarAppending1785,115262
    ImVec2                  MenuBarOffset;          // MenuBarOffset.x is sort of equivalent of MenuBarOffset1786,115337
    ImGuiMenuColumns        MenuColumns;            // Simplified columns storage for menu itemsMenuColumns1787,115616
    int                     TreeDepth;              // Current tree depth.TreeDepth1788,115726
    ImU32                   TreeJumpToParentOnPopMask; // Store a copy of !g.NavIdIsAlive for TrTreeJumpToParentOnPopMask1789,115802
    ImVector<ImGuiWindow*>  ChildWindows;ChildWindows1790,115958
    ImGuiStorage*           StateStorage;           // Current persistent per-window storage (stStateStorage1791,116001
    ImGuiOldColumns*        CurrentColumns;         // Current columns setCurrentColumns1792,116135
    int                     CurrentTableIdx;        // Current table index (into g.Tables)CurrentTableIdx1793,116211
    ImGuiLayoutType         LayoutType;LayoutType1794,116303
    ImGuiLayoutType         ParentLayoutType;       // Layout type of parent window at the time ParentLayoutType1795,116344
    int                     FocusCounterRegular;    // (Legacy Focus/Tabbing system) Sequential FocusCounterRegular1796,116452
    int                     FocusCounterTabStop;    // (Legacy Focus/Tabbing system) Same, but oFocusCounterTabStop1797,116651
    float                   ItemWidth;              // Current item width (>0.0: width in pixelsItemWidth1801,117071
    float                   TextWrapPos;            // Current text wrap pos.TextWrapPos1802,117217
    ImVector<float>         ItemWidthStack;         // Store item widths to restore (attention: ItemWidthStack1803,117296
    ImVector<float>         TextWrapPosStack;       // Store text wrap pos to restore (attentionTextWrapPosStack1804,117422
    ImGuiStackSizes         StackSizesOnBegin;      // Store size of various stacks for assertinStackSizesOnBegin1805,117552
struct IMGUI_API ImGuiWindowImGuiWindow1809,117684
    char*                   Name;                               // Window name, owned by the winName1811,117717
    ImGuiID                 ID;                                 // == ImHashStr(Name)ID1812,117819
    ImGuiWindowFlags        Flags;                              // See enum ImGuiWindowFlags_Flags1813,117906
    ImVec2                  Pos;                                // Position (always rounded-up tPos1814,118001
    ImVec2                  Size;                               // Current size (==SizeFull or cSize1815,118115
    ImVec2                  SizeFull;                           // Size when non collapsedSizeFull1816,118237
    ImVec2                  ContentSize;                        // Size of contents/scrollable cContentSize1817,118329
    ImVec2                  ContentSizeIdeal;ContentSizeIdeal1818,118562
    ImVec2                  ContentSizeExplicit;                // Size of contents/scrollable cContentSizeExplicit1819,118609
    ImVec2                  WindowPadding;                      // Window padding at the time ofWindowPadding1820,118780
    float                   WindowRounding;                     // Window rounding at the time oWindowRounding1821,118887
    float                   WindowBorderSize;                   // Window border size at the timWindowBorderSize1822,119075
    int                     NameBufLen;                         // Size of buffer storing Name. NameBufLen1823,119186
    ImGuiID                 MoveId;                             // == window->GetID("#MOVE")MoveId1824,119316
    ImGuiID                 ChildId;                            // ID of corresponding item in pChildId1825,119410
    ImVec2                  Scroll;Scroll1826,119582
    ImVec2                  ScrollMax;ScrollMax1827,119619
    ImVec2                  ScrollTarget;                       // target scroll position. storeScrollTarget1828,119659
    ImVec2                  ScrollTargetCenterRatio;            // 0.0f = scroll so that target ScrollTargetCenterRatio1829,119867
    ImVec2                  ScrollTargetEdgeSnapDist;           // 0.0f = no snapping, >0.0f snaScrollTargetEdgeSnapDist1830,120034
    ImVec2                  ScrollbarSizes;                     // Size taken by each scrollbarsScrollbarSizes1831,120147
    bool                    ScrollbarX, ScrollbarY;             // Are scrollbars visible?ScrollbarX1832,120391
    bool                    ScrollbarX, ScrollbarY;             // Are scrollbars visible?ScrollbarY1832,120391
    bool                    Active;                             // Set to true on Begin(), unlesActive1833,120483
    bool                    WasActive;WasActive1834,120592
    bool                    WriteAccessed;                      // Set to true when any widget aWriteAccessed1835,120632
    bool                    Collapsed;                          // Set when collapsing window toCollapsed1836,120754
    bool                    WantCollapseToggle;WantCollapseToggle1837,120874
    bool                    SkipItems;                          // Set when items can safely be SkipItems1838,120923
    bool                    Appearing;                          // Set during the frame where thAppearing1839,121071
    bool                    Hidden;                             // Do not display (== HiddenFramHidden1840,121208
    bool                    IsFallbackWindow;                   // Set on the "Debug##Default" wIsFallbackWindow1841,121316
    bool                    HasCloseButton;                     // Set when the window has a cloHasCloseButton1842,121420
    signed char             ResizeBorderHeld;                   // Current border being held forResizeBorderHeld1843,121544
    short                   BeginCount;                         // Number of Begin() during the BeginCount1844,121675
    short                   BeginOrderWithinParent;             // Begin() order within immediatBeginOrderWithinParent1845,121851
    short                   BeginOrderWithinContext;            // Begin() order within entire iBeginOrderWithinContext1846,122004
    short                   FocusOrder;                         // Order within WindowsFocusOrdeFocusOrder1847,122182
    ImGuiID                 PopupId;                            // ID in the popup stack when thPopupId1848,122318
    ImS8                    AutoFitFramesX, AutoFitFramesY;AutoFitFramesX1849,122496
    ImS8                    AutoFitFramesX, AutoFitFramesY;AutoFitFramesY1849,122496
    ImS8                    AutoFitChildAxises;AutoFitChildAxises1850,122557
    bool                    AutoFitOnlyGrows;AutoFitOnlyGrows1851,122606
    ImGuiDir                AutoPosLastDirection;AutoPosLastDirection1852,122653
    ImS8                    HiddenFramesCanSkipItems;           // Hide the window for N framesHiddenFramesCanSkipItems1853,122704
    ImS8                    HiddenFramesCannotSkipItems;        // Hide the window for N frames HiddenFramesCannotSkipItems1854,122801
    ImS8                    HiddenFramesForRenderOnly;          // Hide the window until frame NHiddenFramesForRenderOnly1855,122964
    ImS8                    DisableInputsFrames;                // Disable window interactions fDisableInputsFrames1856,123084
    ImGuiCond               SetWindowPosAllowFlags : 8;         // store acceptable condition flSetWindowPosAllowFlags1857,123193
    ImGuiCond               SetWindowSizeAllowFlags : 8;        // store acceptable condition flSetWindowSizeAllowFlags1858,123322
    ImGuiCond               SetWindowCollapsedAllowFlags : 8;   // store acceptable condition flSetWindowCollapsedAllowFlags1859,123452
    ImVec2                  SetWindowPosVal;                    // store window position when usSetWindowPosVal1860,123587
    ImVec2                  SetWindowPosPivot;                  // store window pivot for positiSetWindowPosPivot1861,123771
    ImVector<ImGuiID>       IDStack;                            // ID stack. ID are hashes seedeIDStack1863,123994
    ImGuiWindowTempData     DC;                                 // Temporary per-window data, reDC1864,124186
    ImRect                  OuterRectClipped;                   // == Window->Rect() just after OuterRectClipped1868,124585
    ImRect                  InnerRect;                          // Inner rectangle (omit title bInnerRect1869,124735
    ImRect                  InnerClipRect;                      // == InnerRect shrunk by WindowInnerClipRect1870,124858
    ImRect                  WorkRect;                           // Initially covers the whole scWorkRect1871,125027
    ImRect                  ParentWorkRect;                     // Backup of WorkRect before entParentWorkRect1872,125311
    ImRect                  ClipRect;                           // Current clipping/scissoring rClipRect1873,125600
    ImRect                  ContentRegionRect;                  // FIXME: This is currently confContentRegionRect1874,125788
    ImVec2ih                HitTestHoleSize;                    // Define an optional rectangulaHitTestHoleSize1875,126053
    ImVec2ih                HitTestHoleOffset;HitTestHoleOffset1876,126199
    int                     LastFrameActive;                    // Last frame number the window LastFrameActive1878,126249
    float                   LastTimeActive;                     // Last timestamp the window wasLastTimeActive1879,126358
    float                   ItemWidthDefault;ItemWidthDefault1880,126515
    ImGuiStorage            StateStorage;StateStorage1881,126562
    ImVector<ImGuiOldColumns> ColumnsStorage;ColumnsStorage1882,126605
    float                   FontWindowScale;                    // User scale multiplier per-winFontWindowScale1883,126652
    int                     SettingsOffset;                     // Offset into SettingsWindows[]SettingsOffset1884,126779
    ImDrawList*             DrawList;                           // == &DrawListInst (for backwarDrawList1886,126946
    ImDrawList              DrawListInst;DrawListInst1887,127123
    ImGuiWindow*            ParentWindow;                       // If we are a child _or_ popup ParentWindow1888,127166
    ImGuiWindow*            RootWindow;                         // Point to ourself or first ancRootWindow1889,127319
    ImGuiWindow*            RootWindowForTitleBarHighlight;     // Point to ourself or first ancRootWindowForTitleBarHighlight1890,127470
    ImGuiWindow*            RootWindowForNav;                   // Point to ourself or first ancRootWindowForNav1891,127640
    ImGuiWindow*            NavLastChildNavWindow;              // When going to the menu bar, wNavLastChildNavWindow1893,127787
    ImGuiID                 NavLastIds[ImGuiNavLayer_COUNT];    // Last known NavId for this winNavLastIds1894,128033
    ImRect                  NavRectRel[ImGuiNavLayer_COUNT];    // Reference rectangle, in windoNavRectRel1895,128151
    int                     MemoryDrawListIdxCapacity;          // Backup of last idx/vtx count,MemoryDrawListIdxCapacity1897,128267
    int                     MemoryDrawListVtxCapacity;MemoryDrawListVtxCapacity1898,128444
    bool                    MemoryCompacted;                    // Set when window extraneous daMemoryCompacted1899,128500
    ImRect      Rect() const            { return ImRect(Pos.x, Pos.y, Pos.x + Size.x, Pos.y + SiRect1914,129173
    float       CalcFontSize() const    { ImGuiContext& g = *GImGui; float scale = g.FontBaseSizCalcFontSize1915,129279
    float       TitleBarHeight() const  { ImGuiContext& g = *GImGui; return (Flags & ImGuiWindowTitleBarHeight1916,129471
    ImRect      TitleBarRect() const    { return ImRect(Pos, ImVec2(Pos.x + SizeFull.x, Pos.y + TitleBarRect1917,129645
    float       MenuBarHeight() const   { ImGuiContext& g = *GImGui; return (Flags & ImGuiWindowMenuBarHeight1918,129764
    ImRect      MenuBarRect() const     { float y1 = Pos.y + TitleBarHeight(); return ImRect(PosMenuBarRect1919,129956
struct ImGuiLastItemDataBackupImGuiLastItemDataBackup1923,130257
    ImGuiID                 LastItemId;LastItemId1925,130292
    ImGuiItemStatusFlags    LastItemStatusFlags;LastItemStatusFlags1926,130333
    ImRect                  LastItemRect;LastItemRect1927,130383
    ImRect                  LastItemDisplayRect;LastItemDisplayRect1928,130426
    ImGuiLastItemDataBackup() { Backup(); }ImGuiLastItemDataBackup1930,130478
    void Backup()           { ImGuiWindow* window = GImGui->CurrentWindow; LastItemId = window->Backup1931,130523
    void Restore() const    { ImGuiWindow* window = GImGui->CurrentWindow; window->DC.LastItemIdRestore1932,130785
enum ImGuiTabBarFlagsPrivate_ImGuiTabBarFlagsPrivate_1940,131286
    ImGuiTabBarFlags_DockNode                   = 1 << 20,  // Part of a dock node [we don't useImGuiTabBarFlags_DockNode1942,131320
    ImGuiTabBarFlags_IsFocused                  = 1 << 21,ImGuiTabBarFlags_IsFocused1943,131498
    ImGuiTabBarFlags_SaveSettings               = 1 << 22   // FIXME: Settings are handled by thImGuiTabBarFlags_SaveSettings1944,131558
enum ImGuiTabItemFlagsPrivate_ImGuiTabItemFlagsPrivate_1948,131783
    ImGuiTabItemFlags_SectionMask_              = ImGuiTabItemFlags_Leading | ImGuiTabItemFlags_ImGuiTabItemFlags_SectionMask_1950,131818
    ImGuiTabItemFlags_NoCloseButton             = 1 << 20,  // Track whether p_open was set or nImGuiTabItemFlags_NoCloseButton1951,131925
    ImGuiTabItemFlags_Button                    = 1 << 21   // Used by TabItemButton, change theImGuiTabItemFlags_Button1952,132106
struct ImGuiTabItemImGuiTabItem1956,132305
    ImGuiID             ID;ID1958,132329
    ImGuiTabItemFlags   Flags;Flags1959,132358
    int                 LastFrameVisible;LastFrameVisible1960,132390
    int                 LastFrameSelected;      // This allows us to infer an ordered list of thLastFrameSelected1961,132433
    float               Offset;                 // Position relative to beginning of tabOffset1962,132576
    float               Width;                  // Width currently displayedWidth1963,132666
    float               ContentWidth;           // Width of label, stored during BeginTabItem() ContentWidth1964,132744
    ImS16               NameOffset;             // When Window==NULL, offset to name within pareNameOffset1965,132846
    ImS16               BeginOrder;             // BeginTabItem() order, used to re-order tabs aBeginOrder1966,132969
    ImS16               IndexDuringLayout;      // Index only used during TabBarLayout()IndexDuringLayout1967,133109
    bool                WantClose;              // Marked as closed by SetTabItemClosed()WantClose1968,133199
    ImGuiTabItem()      { memset(this, 0, sizeof(*this)); LastFrameVisible = LastFrameSelected =ImGuiTabItem1970,133292
struct ImGuiTabBarImGuiTabBar1974,133499
    ImVector<ImGuiTabItem> Tabs;Tabs1976,133522
    ImGuiTabBarFlags    Flags;Flags1977,133556
    ImGuiID             ID;                     // Zero for tab-bars used by dockingID1978,133588
    ImGuiID             SelectedTabId;          // Selected tab/windowSelectedTabId1979,133674
    ImGuiID             NextSelectedTabId;      // Next selected tab/window. Will also trigger aNextSelectedTabId1980,133746
    ImGuiID             VisibleTabId;           // Can occasionally be != SelectedTabId (e.g. whVisibleTabId1981,133864
    int                 CurrFrameVisible;CurrFrameVisible1982,134006
    int                 PrevFrameVisible;PrevFrameVisible1983,134049
    ImRect              BarRect;BarRect1984,134092
    float               CurrTabsContentsHeight;CurrTabsContentsHeight1985,134126
    float               PrevTabsContentsHeight; // Record the height of contents submitted belowPrevTabsContentsHeight1986,134175
    float               WidthAllTabs;           // Actual width of all tabs (locked during layouWidthAllTabs1987,134285
    float               WidthAllTabsIdeal;      // Ideal width if all tabs were visible and not WidthAllTabsIdeal1988,134385
    float               ScrollingAnim;ScrollingAnim1989,134490
    float               ScrollingTarget;ScrollingTarget1990,134530
    float               ScrollingTargetDistToVisibility;ScrollingTargetDistToVisibility1991,134572
    float               ScrollingSpeed;ScrollingSpeed1992,134630
    float               ScrollingRectMinX;ScrollingRectMinX1993,134671
    float               ScrollingRectMaxX;ScrollingRectMaxX1994,134715
    ImGuiID             ReorderRequestTabId;ReorderRequestTabId1995,134759
    ImS16               ReorderRequestOffset;ReorderRequestOffset1996,134805
    ImS8                BeginCount;BeginCount1997,134852
    bool                WantLayout;WantLayout1998,134889
    bool                VisibleTabWasSubmitted;VisibleTabWasSubmitted1999,134926
    bool                TabsAddedNew;           // Set to true when a new tab item or button hasTabsAddedNew2000,134975
    ImS16               TabsActiveCount;        // Number of tabs submitted this frame.TabsActiveCount2001,135117
    ImS16               LastTabItemIdx;         // Index of last BeginTabItem() tab for use by ELastTabItemIdx2002,135206
    float               ItemSpacingY;ItemSpacingY2003,135315
    ImVec2              FramePadding;           // style.FramePadding locked at the time of BegiFramePadding2004,135354
    ImVec2              BackupCursorPos;BackupCursorPos2005,135461
    ImGuiTextBuffer     TabsNames;              // For non-docking tab bar we re-append names inTabsNames2006,135503
    int                 GetTabOrder(const ImGuiTabItem* tab) const  { return Tabs.index_from_ptrGetTabOrder2009,135644
    const char*         GetTabName(const ImGuiTabItem* tab) constGetTabName2010,135750
#define IM_COL32_DISABLE IM_COL32_DISABLE2021,136171
#define IMGUI_TABLE_MAX_COLUMNS IMGUI_TABLE_MAX_COLUMNS2022,136298
#define IMGUI_TABLE_MAX_DRAW_CHANNELS IMGUI_TABLE_MAX_DRAW_CHANNELS2023,136449
typedef ImS8 ImGuiTableColumnIdx;ImGuiTableColumnIdx2026,136618
typedef ImU8 ImGuiTableDrawChannelIdx;ImGuiTableDrawChannelIdx2027,136653
struct ImGuiTableColumnImGuiTableColumn2033,137060
    ImGuiTableColumnFlags   Flags;                          // Flags after some patching (not diFlags2035,137088
    float                   WidthGiven;                     // Final/actual width visible == (MaWidthGiven2036,137246
    float                   MinX;                           // Absolute positionsMinX2037,137502
    float                   MaxX;MaxX2038,137585
    float                   WidthRequest;                   // Master width absolute value when WidthRequest2039,137620
    float                   WidthAuto;                      // Automatic widthWidthAuto2040,137826
    float                   StretchWeight;                  // Master width weight when (Flags &StretchWeight2041,137906
    float                   InitStretchWeightOrWidth;       // Value passed to TableSetupColumn(InitStretchWeightOrWidth2042,138050
    ImRect                  ClipRect;                       // Clipping rectangle for the columnClipRect2043,138203
    ImGuiID                 UserID;                         // Optional, value passed to TableSeUserID2044,138301
    float                   WorkMinX;                       // Contents region min ~(MinX + CellWorkMinX2045,138410
    float                   WorkMaxX;                       // Contents region max ~(MaxX - CellWorkMaxX2046,138579
    float                   ItemWidth;                      // Current item width for the columnItemWidth2047,138702
    float                   ContentMaxXFrozen;              // Contents maximum position for froContentMaxXFrozen2048,138823
    float                   ContentMaxXUnfrozen;ContentMaxXUnfrozen2049,138990
    float                   ContentMaxXHeadersUsed;         // Contents maximum position for heaContentMaxXHeadersUsed2050,139040
    float                   ContentMaxXHeadersIdeal;ContentMaxXHeadersIdeal2051,139286
    ImS16                   NameOffset;                     // Offset into parent ColumnsNames[]NameOffset2052,139340
    ImGuiTableColumnIdx     DisplayOrder;                   // Index within Table's IndexToDisplDisplayOrder2053,139438
    ImGuiTableColumnIdx     IndexWithinEnabledSet;          // Index within enabled/visible set IndexWithinEnabledSet2054,139580
    ImGuiTableColumnIdx     PrevEnabledColumn;              // Index of prev enabled/visible colPrevEnabledColumn2055,139702
    ImGuiTableColumnIdx     NextEnabledColumn;              // Index of next enabled/visible colNextEnabledColumn2056,139856
    ImGuiTableColumnIdx     SortOrder;                      // Index of this column within sort SortOrder2057,140009
    ImGuiTableDrawChannelIdx DrawChannelCurrent;            // Index within DrawSplitter.ChannelDrawChannelCurrent2058,140190
    ImGuiTableDrawChannelIdx DrawChannelFrozen;DrawChannelFrozen2059,140291
    ImGuiTableDrawChannelIdx DrawChannelUnfrozen;DrawChannelUnfrozen2060,140340
    bool                    IsEnabled;                      // Is the column not marked Hidden bIsEnabled2061,140391
    bool                    IsEnabledNextFrame;IsEnabledNextFrame2062,140547
    bool                    IsVisibleX;                     // Is actually in view (e.g. overlapIsVisibleX2063,140596
    bool                    IsVisibleY;IsVisibleY2064,140749
    bool                    IsRequestOutput;                // Return value for TableSetColumnInIsRequestOutput2065,140790
    bool                    IsSkipItems;                    // Do we want item submissions to thIsSkipItems2066,140965
    bool                    IsPreserveWidthAuto;IsPreserveWidthAuto2067,141122
    ImS8                    NavLayerCurrent;                // ImGuiNavLayer in 1 byteNavLayerCurrent2068,141172
    ImU8                    AutoFitQueue;                   // Queue of 8 values for the next 8 AutoFitQueue2069,141260
    ImU8                    CannotSkipItemsQueue;           // Queue of 8 values for the next 8 CannotSkipItemsQueue2070,141384
    ImU8                    SortDirection : 2;              // ImGuiSortDirection_Ascending or ISortDirection2071,141516
    ImU8                    SortDirectionsAvailCount : 2;   // Number of available sort directioSortDirectionsAvailCount2072,141642
    ImU8                    SortDirectionsAvailMask : 4;    // Mask of available sort directionsSortDirectionsAvailMask2073,141751
    ImU8                    SortDirectionsAvailList;        // Ordered of available sort directiSortDirectionsAvailList2074,141862
    ImGuiTableColumn()ImGuiTableColumn2076,141979
struct ImGuiTableCellDataImGuiTableCellData2091,142456
    ImU32                       BgColor;    // Actual colorBgColor2093,142486
    ImGuiTableColumnIdx         Column;     // Column numberColumn2094,142547
struct ImGuiTableImGuiTable2098,142744
    ImGuiID                     ID;ID2100,142766
    ImGuiTableFlags             Flags;Flags2101,142803
    void*                       RawData;                    // Single allocation to hold ColumnsRawData2102,142843
    ImGuiTableTempData*         TempData;                   // Transient data while table is actTempData2103,142984
    ImSpan<ImGuiTableColumn>    Columns;                    // Point within RawData[]Columns2104,143121
    ImSpan<ImGuiTableColumnIdx> DisplayOrderToIndex;        // Point within RawData[]. Store disDisplayOrderToIndex2105,143208
    ImSpan<ImGuiTableCellData>  RowCellData;                // Point within RawData[]. Store celRowCellData2106,143376
    ImU64                       EnabledMaskByDisplayOrder;  // Column DisplayOrder -> IsEnabled EnabledMaskByDisplayOrder2107,143513
    ImU64                       EnabledMaskByIndex;         // Column Index -> IsEnabled map (==EnabledMaskByIndex2108,143614
    ImU64                       VisibleMaskByIndex;         // Column Index -> IsVisibleX|IsVisiVisibleMaskByIndex2109,143805
    ImU64                       RequestOutputMaskByIndex;   // Column Index -> IsVisible || AutoRequestOutputMaskByIndex2110,143975
    ImGuiTableFlags             SettingsLoadedFlags;        // Which data were loaded from the .SettingsLoadedFlags2111,144109
    int                         SettingsOffset;             // Offset in g.SettingsTablesSettingsOffset2112,144268
    int                         LastFrameActive;LastFrameActive2113,144359
    int                         ColumnsCount;               // Number of columns declared in BegColumnsCount2114,144409
    int                         CurrentRow;CurrentRow2115,144516
    int                         CurrentColumn;CurrentColumn2116,144561
    ImS16                       InstanceCurrent;            // Count of BeginTable() calls with InstanceCurrent2117,144609
    ImS16                       InstanceInteracted;         // Mark which instance (generally 0)InstanceInteracted2118,144885
    float                       RowPosY1;RowPosY12119,145023
    float                       RowPosY2;RowPosY22120,145066
    float                       RowMinHeight;               // Height submitted to TableNextRow(RowMinHeight2121,145109
    float                       RowTextBaseline;RowTextBaseline2122,145208
    float                       RowIndentOffsetX;RowIndentOffsetX2123,145258
    ImGuiTableRowFlags          RowFlags : 16;              // Current row flags, see ImGuiTableRowFlags2124,145309
    ImGuiTableRowFlags          LastRowFlags : 16;LastRowFlags2125,145416
    int                         RowBgColorCounter;          // Counter for alternating backgrounRowBgColorCounter2126,145468
    ImU32                       RowBgColor[2];              // Background color override for curRowBgColor2127,145688
    ImU32                       BorderColorStrong;BorderColorStrong2128,145795
    ImU32                       BorderColorLight;BorderColorLight2129,145847
    float                       BorderX1;BorderX12130,145898
    float                       BorderX2;BorderX22131,145941
    float                       HostIndentX;HostIndentX2132,145984
    float                       MinColumnWidth;MinColumnWidth2133,146030
    float                       OuterPaddingX;OuterPaddingX2134,146079
    float                       CellPaddingX;               // Padding from each bordersCellPaddingX2135,146127
    float                       CellPaddingY;CellPaddingY2136,146217
    float                       CellSpacingX1;              // Spacing between non-bordered cellCellSpacingX12137,146264
    float                       CellSpacingX2;CellSpacingX22138,146363
    float                       LastOuterHeight;            // Outer height from last frameLastOuterHeight2139,146411
    float                       LastFirstRowHeight;         // Height of first row from last fraLastFirstRowHeight2140,146504
    float                       InnerWidth;                 // User value passed to BeginTable()InnerWidth2141,146604
    float                       ColumnsGivenWidth;          // Sum of current column widthColumnsGivenWidth2142,146756
    float                       ColumnsAutoFitWidth;        // Sum of ideal column width in ordeColumnsAutoFitWidth2143,146848
    float                       ResizedColumnNextWidth;ResizedColumnNextWidth2144,147037
    float                       ResizeLockMinContentsX2;    // Lock minimum contents width whileResizeLockMinContentsX22145,147094
    float                       RefScale;                   // Reference scale to be able to resRefScale2146,147277
    ImRect                      OuterRect;                  // Note: for non-scrolling table, OuOuterRect2147,147408
    ImRect                      InnerRect;                  // InnerRect but without decoration.InnerRect2148,147606
    ImRect                      WorkRect;WorkRect2149,147768
    ImRect                      InnerClipRect;InnerClipRect2150,147811
    ImRect                      BgClipRect;                 // We use this to cpu-clip cell backBgClipRect2151,147859
    ImRect                      Bg0ClipRectForDrawCmd;      // Actual ImDrawCmd clip rect for BGBg0ClipRectForDrawCmd2152,147974
    ImRect                      Bg2ClipRectForDrawCmd;      // Actual ImDrawCmd clip rect for BGBg2ClipRectForDrawCmd2153,148183
    ImRect                      HostClipRect;               // This is used to check if we can eHostClipRect2154,148401
    ImRect                      HostBackupInnerClipRect;    // Backup of InnerWindow->ClipRect dHostBackupInnerClipRect2155,148587
    ImGuiWindow*                OuterWindow;                // Parent window for the tableOuterWindow2156,148733
    ImGuiWindow*                InnerWindow;                // Window holding the table data (==InnerWindow2157,148825
    ImGuiTextBuffer             ColumnsNames;               // Contiguous buffer holding columnsColumnsNames2158,148954
    ImDrawListSplitter*         DrawSplitter;               // Shortcut to TempData->DrawSplitteDrawSplitter2159,149058
    ImGuiTableSortSpecs         SortSpecs;                  // Public facing sorts specs, this iSortSpecs2160,149247
    ImGuiTableColumnIdx         SortSpecsCount;SortSpecsCount2161,149384
    ImGuiTableColumnIdx         ColumnsEnabledCount;        // Number of enabled columns (<= ColColumnsEnabledCount2162,149433
    ImGuiTableColumnIdx         ColumnsEnabledFixedCount;   // Number of enabled columns (<= ColColumnsEnabledFixedCount2163,149541
    ImGuiTableColumnIdx         DeclColumnsCount;           // Count calls to TableSetupColumn()DeclColumnsCount2164,149649
    ImGuiTableColumnIdx         HoveredColumnBody;          // Index of column whose visible regHoveredColumnBody2165,149747
    ImGuiTableColumnIdx         HoveredColumnBorder;        // Index of column whose right-bordeHoveredColumnBorder2166,149949
    ImGuiTableColumnIdx         AutoFitSingleColumn;        // Index of single column requestingAutoFitSingleColumn2167,150081
    ImGuiTableColumnIdx         ResizedColumn;              // Index of column being resized. ReResizedColumn2168,150189
    ImGuiTableColumnIdx         LastResizedColumn;          // Index of column being resized froLastResizedColumn2169,150315
    ImGuiTableColumnIdx         HeldHeaderColumn;           // Index of column header being heldHeldHeaderColumn2170,150430
    ImGuiTableColumnIdx         ReorderColumn;              // Index of column being reordered. ReorderColumn2171,150529
    ImGuiTableColumnIdx         ReorderColumnDir;           // -1 or +1ReorderColumnDir2172,150640
    ImGuiTableColumnIdx         LeftMostEnabledColumn;      // Index of left-most non-hidden colLeftMostEnabledColumn2173,150713
    ImGuiTableColumnIdx         RightMostEnabledColumn;     // Index of right-most non-hidden coRightMostEnabledColumn2174,150815
    ImGuiTableColumnIdx         LeftMostStretchedColumn;    // Index of left-most stretched coluLeftMostStretchedColumn2175,150918
    ImGuiTableColumnIdx         RightMostStretchedColumn;   // Index of right-most stretched colRightMostStretchedColumn2176,151019
    ImGuiTableColumnIdx         ContextPopupColumn;         // Column right-clicked on, of -1 ifContextPopupColumn2177,151121
    ImGuiTableColumnIdx         FreezeRowsRequest;          // Requested frozen rows countFreezeRowsRequest2178,151266
    ImGuiTableColumnIdx         FreezeRowsCount;            // Actual frozen row count (== FreezFreezeRowsCount2179,151358
    ImGuiTableColumnIdx         FreezeColumnsRequest;       // Requested frozen columns countFreezeColumnsRequest2180,151503
    ImGuiTableColumnIdx         FreezeColumnsCount;         // Actual frozen columns count (== FFreezeColumnsCount2181,151598
    ImGuiTableColumnIdx         RowCellDataCurrent;         // Index of current RowCellData[] enRowCellDataCurrent2182,151750
    ImGuiTableDrawChannelIdx    DummyDrawChannel;           // Redirect non-visible columns hereDummyDrawChannel2183,151866
    ImGuiTableDrawChannelIdx    Bg2DrawChannelCurrent;      // For Selectable() and other widgetBg2DrawChannelCurrent2184,151965
    ImGuiTableDrawChannelIdx    Bg2DrawChannelUnfrozen;Bg2DrawChannelUnfrozen2185,152149
    bool                        IsLayoutLocked;             // Set by TableUpdateLayout() which IsLayoutLocked2186,152206
    bool                        IsInsideRow;                // Set when inside TableBeginRow()/TIsInsideRow2187,152343
    bool                        IsInitializing;IsInitializing2188,152454
    bool                        IsSortSpecsDirty;IsSortSpecsDirty2189,152503
    bool                        IsUsingHeaders;             // Set when the first row had the ImIsUsingHeaders2190,152554
    bool                        IsContextPopupOpen;         // Set when default context menu is IsContextPopupOpen2191,152682
    bool                        IsSettingsRequestLoad;IsSettingsRequestLoad2192,152836
    bool                        IsSettingsDirty;            // Set when table settings have chanIsSettingsDirty2193,152892
    bool                        IsDefaultDisplayOrder;      // Set when display order is unchangIsDefaultDisplayOrder2194,153049
    bool                        IsResetAllRequest;IsResetAllRequest2195,153198
    bool                        IsResetDisplayOrderRequest;IsResetDisplayOrderRequest2196,153250
    bool                        IsUnfrozenRows;             // Set when we got past the frozen rIsUnfrozenRows2197,153311
    bool                        IsDefaultSizingPolicy;      // Set if user didn't explicitly setIsDefaultSizingPolicy2198,153412
    bool                        MemoryCompacted;MemoryCompacted2199,153542
    bool                        HostSkipItems;              // Backup of InnerWindow->SkipItem aHostSkipItems2200,153592
    IMGUI_API ImGuiTable()      { memset(this, 0, sizeof(*this)); LastFrameActive = -1; }ImGuiTable2202,153788
    IMGUI_API ~ImGuiTable()     { IM_FREE(RawData); }~ImGuiTable2203,153879
struct ImGuiTableTempDataImGuiTableTempData2210,154403
    int                         TableIndex;                 // Index in g.Tables.Buf[] poolTableIndex2212,154433
    float                       LastTimeActive;             // Last timestamp this structure wasLastTimeActive2213,154526
    ImVec2                      UserOuterSize;              // outer_size.x passed to BeginTableUserOuterSize2215,154631
    ImDrawListSplitter          DrawSplitter;DrawSplitter2216,154731
    ImGuiTableColumnSortSpecs   SortSpecsSingle;SortSpecsSingle2217,154778
    ImVector<ImGuiTableColumnSortSpecs> SortSpecsMulti;     // FIXME-OPT: Using a small-vector pSortSpecsMulti2218,154828
    ImRect                      HostBackupWorkRect;         // Backup of InnerWindow->WorkRect aHostBackupWorkRect2220,154949
    ImRect                      HostBackupParentWorkRect;   // Backup of InnerWindow->ParentWorkHostBackupParentWorkRect2221,155072
    ImVec2                      HostBackupPrevLineSize;     // Backup of InnerWindow->DC.PrevLinHostBackupPrevLineSize2222,155201
    ImVec2                      HostBackupCurrLineSize;     // Backup of InnerWindow->DC.CurrLinHostBackupCurrLineSize2223,155331
    ImVec2                      HostBackupCursorMaxPos;     // Backup of InnerWindow->DC.CursorMHostBackupCursorMaxPos2224,155461
    ImVec1                      HostBackupColumnsOffset;    // Backup of OuterWindow->DC.ColumnsHostBackupColumnsOffset2225,155591
    float                       HostBackupItemWidth;        // Backup of OuterWindow->DC.ItemWidHostBackupItemWidth2226,155722
    int                         HostBackupItemWidthStackSize;//Backup of OuterWindow->DC.ItemWidHostBackupItemWidthStackSize2227,155849
    IMGUI_API ImGuiTableTempData() { memset(this, 0, sizeof(*this)); LastTimeActive = -1.0f; }ImGuiTableTempData2229,155988
struct ImGuiTableColumnSettingsImGuiTableColumnSettings2233,156108
    float                   WidthOrWeight;WidthOrWeight2235,156144
    ImGuiID                 UserID;UserID2236,156188
    ImGuiTableColumnIdx     Index;Index2237,156225
    ImGuiTableColumnIdx     DisplayOrder;DisplayOrder2238,156261
    ImGuiTableColumnIdx     SortOrder;SortOrder2239,156304
    ImU8                    SortDirection : 2;SortDirection2240,156344
    ImU8                    IsEnabled : 1; // "Visible" in ini fileIsEnabled2241,156392
    ImU8                    IsStretch : 1;IsStretch2242,156461
    ImGuiTableColumnSettings()ImGuiTableColumnSettings2244,156507
struct ImGuiTableSettingsImGuiTableSettings2257,156886
    ImGuiID                     ID;                     // Set to 0 to invalidate/delete the setID2259,156916
    ImGuiTableFlags             SaveFlags;              // Indicate data we want to save using tSaveFlags2260,157018
    float                       RefScale;               // Reference scale to be able to rescaleRefScale2261,157197
    ImGuiTableColumnIdx         ColumnsCount;ColumnsCount2262,157324
    ImGuiTableColumnIdx         ColumnsCountMax;        // Maximum number of columns this settinColumnsCountMax2263,157371
    bool                        WantApply;              // Set when loaded from .ini data (to enWantApply2264,157570
    ImGuiTableSettings()        { memset(this, 0, sizeof(*this)); }ImGuiTableSettings2266,157733
    ImGuiTableColumnSettings*   GetColumnSettings()     { return (ImGuiTableColumnSettings*)(thiGetColumnSettings2267,157802
namespace ImGuiImGui2275,158160
    inline    ImGuiWindow*  GetCurrentWindowRead()      { ImGuiContext& g = *GImGui; return g.CuGetCurrentWindowRead2282,158586
    inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWiGetCurrentWindow2283,158698
    inline ImFont*          GetDefaultFont() { ImGuiContext& g = *GImGui; return g.IO.FontDefaulGetDefaultFont2306,160500
    inline ImDrawList*      GetForegroundDrawList(ImGuiWindow* window) { IM_UNUSED(window); retuGetForegroundDrawList2307,160644
    inline ImGuiID          GetItemID()     { ImGuiContext& g = *GImGui; return g.CurrentWindow-GetItemID2344,163432
    inline ImGuiItemStatusFlags GetItemStatusFlags() { ImGuiContext& g = *GImGui; return g.CurreGetItemStatusFlags2345,163619
    inline ImGuiID          GetActiveID()   { ImGuiContext& g = *GImGui; return g.ActiveId; }GetActiveID2346,163752
    inline ImGuiID          GetFocusID()    { ImGuiContext& g = *GImGui; return g.NavId; }GetFocusID2347,163847
    inline ImGuiItemFlags   GetItemFlags()  { ImGuiContext& g = *GImGui; return g.CurrentItemFlaGetItemFlags2348,163939
    inline bool FocusableItemRegister(ImGuiWindow* window, ImGuiID id)  { IM_ASSERT(0); IM_UNUSEFocusableItemRegister2381,166943
    inline void FocusableItemUnregister(ImGuiWindow* window)            { IM_ASSERT(0); IM_UNUSEFocusableItemUnregister2382,167139
    inline ImGuiID          GetFocusedFocusScope()          { ImGuiContext& g = *GImGui; return GetFocusedFocusScope2421,170720
    inline ImGuiID          GetFocusScope()                 { ImGuiContext& g = *GImGui; return GetFocusScope2422,170905
    inline bool             IsActiveIdUsingNavDir(ImGuiDir dir)                         { ImGuiCIsActiveIdUsingNavDir2427,171284
    inline bool             IsActiveIdUsingNavInput(ImGuiNavInput input)                { ImGuiCIsActiveIdUsingNavInput2428,171458
    inline bool             IsActiveIdUsingKey(ImGuiKey key)                            { ImGuiCIsActiveIdUsingKey2429,171636
    inline bool             IsKeyPressedMap(ImGuiKey key, bool repeat = true)           { ImGuiCIsKeyPressedMap2431,171950
    inline bool             IsNavInputDown(ImGuiNavInput n)                             { ImGuiCIsNavInputDown2432,172177
    inline bool             IsNavInputTest(ImGuiNavInput n, ImGuiInputReadMode rm)      { returnIsNavInputTest2433,172330
    inline    ImGuiTable*   GetCurrentTable() { ImGuiContext& g = *GImGui; return g.CurrentTableGetCurrentTable2463,174638
    inline void RenderArrow(ImVec2 pos, ImGuiDir dir, float scale=1.0f) { ImGuiWindow* window = RenderArrow2542,182300
    inline void RenderBullet(ImVec2 pos)                                { ImGuiWindow* window = RenderBullet2543,182495
    inline bool             TempInputIsActive(ImGuiID id)       { ImGuiContext& g = *GImGui; retTempInputIsActive2594,188456
    inline ImGuiInputTextState* GetInputTextState(ImGuiID id)   { ImGuiContext& g = *GImGui; retGetInputTextState2595,188602
    inline void             DebugDrawItemRect(ImU32 col = IM_COL32(255,0,0,255))    { ImGuiConteDebugDrawItemRect2616,190233
    inline void             DebugStartItemPicker()                                  { ImGuiConteDebugStartItemPicker2617,190491
struct ImFontBuilderIOImFontBuilderIO2642,192252
    bool    (*FontBuilder_Build)(ImFontAtlas* atlas);FontBuilder_Build2644,192279
#define IMGUI_TEST_ENGINE_ITEM_ADD(IMGUI_TEST_ENGINE_ITEM_ADD2668,194309
#define IMGUI_TEST_ENGINE_ITEM_INFO(IMGUI_TEST_ENGINE_ITEM_INFO2669,194483
#define IMGUI_TEST_ENGINE_LOG(IMGUI_TEST_ENGINE_LOG2670,194678
#define IMGUI_TEST_ENGINE_ID_INFO(IMGUI_TEST_ENGINE_ID_INFO2671,194871
#define IMGUI_TEST_ENGINE_ID_INFO2(IMGUI_TEST_ENGINE_ID_INFO22672,195032
#define IMGUI_TEST_ENGINE_ITEM_ADD(IMGUI_TEST_ENGINE_ITEM_ADD2674,195223
#define IMGUI_TEST_ENGINE_ITEM_INFO(IMGUI_TEST_ENGINE_ITEM_INFO2675,195301
#define IMGUI_TEST_ENGINE_LOG(IMGUI_TEST_ENGINE_LOG2676,195379
#define IMGUI_TEST_ENGINE_ID_INFO(IMGUI_TEST_ENGINE_ID_INFO2677,195457
#define IMGUI_TEST_ENGINE_ID_INFO2(IMGUI_TEST_ENGINE_ID_INFO22678,195535

../gejo/libs/imgui/imgui_tables.cpp,10267
#define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS188,15105
#define IMGUI_DEFINE_MATH_OPERATORSIMGUI_DEFINE_MATH_OPERATORS195,15230
static const int TABLE_DRAW_CHANNEL_BG0 = 0;TABLE_DRAW_CHANNEL_BG0256,19701
static const int TABLE_DRAW_CHANNEL_BG2_FROZEN = 1;TABLE_DRAW_CHANNEL_BG2_FROZEN257,19747
static const int TABLE_DRAW_CHANNEL_NOCLIP = 2;                     // When using ImGuiTableFlagTABLE_DRAW_CHANNEL_NOCLIP258,19800
static const float TABLE_BORDER_SIZE                     = 1.0f;    // FIXME-TABLE: Currently haTABLE_BORDER_SIZE259,19946
static const float TABLE_RESIZE_SEPARATOR_HALF_THICKNESS = 4.0f;    // Extend outside inner bordTABLE_RESIZE_SEPARATOR_HALF_THICKNESS260,20114
static const float TABLE_RESIZE_SEPARATOR_FEEDBACK_TIMER = 0.06f;   // Delay/timer before makingTABLE_RESIZE_SEPARATOR_FEEDBACK_TIMER261,20216
inline ImGuiTableFlags TableFixFlags(ImGuiTableFlags flags, ImGuiWindow* outer_window)TableFixFlags264,20418
ImGuiTable* ImGui::TableFindByID(ImGuiID id)TableFindByID302,22320
bool    ImGui::BeginTable(const char* str_id, int columns_count, ImGuiTableFlags flags, const ImBeginTable309,22496
bool    ImGui::BeginTableEx(const char* name, ImGuiID id, int columns_count, ImGuiTableFlags flaBeginTableEx315,22756
void ImGui::TableBeginInitMemory(ImGuiTable* table, int columns_count)TableBeginInitMemory576,37348
void ImGui::TableBeginApplyRequests(ImGuiTable* table)TableBeginApplyRequests592,38153
static void TableSetupColumnFlags(ImGuiTable* table, ImGuiTableColumn* column, ImGuiTableColumnFTableSetupColumnFlags660,41825
void ImGui::TableUpdateLayout(ImGuiTable* table)TableUpdateLayout719,45508
void ImGui::TableUpdateBorders(ImGuiTable* table)TableUpdateBorders1138,70372
void    ImGui::EndTable()EndTable1199,73635
void ImGui::TableSetupColumn(const char* label, ImGuiTableColumnFlags flags, float init_width_orTableSetupColumn1402,84774
void ImGui::TableSetupScrollFreeze(int columns, int rows)TableSetupScrollFreeze1470,88462
int ImGui::TableGetColumnCount()TableGetColumnCount1500,90093
const char* ImGui::TableGetColumnName(int column_n)TableGetColumnName1507,90253
const char* ImGui::TableGetColumnName(const ImGuiTable* table, int column_n)TableGetColumnName1518,90540
void ImGui::TableSetColumnEnabled(int column_n, bool enabled)TableSetColumnEnabled1532,91422
ImGuiTableColumnFlags ImGui::TableGetColumnFlags(int column_n)TableGetColumnFlags1547,91968
ImRect ImGui::TableGetCellBgRect(const ImGuiTable* table, int column_n)TableGetCellBgRect1565,92970
ImGuiID ImGui::TableGetColumnResizeID(const ImGuiTable* table, int column_n, int instance_no)TableGetColumnResizeID1578,93463
int ImGui::TableGetHoveredColumn()TableGetHoveredColumn1586,93855
void ImGui::TableSetBgColor(ImGuiTableBgTarget target, ImU32 color, int column_n)TableSetBgColor1595,94052
int ImGui::TableGetRowIndex()TableGetRowIndex1647,96027
void ImGui::TableNextRow(ImGuiTableRowFlags row_flags, float row_min_height)TableNextRow1657,96259
void ImGui::TableBeginRow(ImGuiTable* table)TableBeginRow1682,97155
void ImGui::TableEndRow(ImGuiTable* table)TableEndRow1715,98375
int ImGui::TableGetColumnIndex()TableGetColumnIndex1859,105976
bool ImGui::TableSetColumnIndex(int column_n)TableSetColumnIndex1869,106204
bool ImGui::TableNextColumn()TableNextColumn1890,107009
void ImGui::TableBeginCell(ImGuiTable* table, int column_n)TableBeginCell1919,108073
void ImGui::TableEndCell(ImGuiTable* table)TableEndCell1976,110467
float ImGui::TableGetMaxColumnWidth(const ImGuiTable* table, int column_n)TableGetMaxColumnWidth2008,112174
float ImGui::TableGetColumnWidthAuto(ImGuiTable* table, ImGuiTableColumn* column)TableGetColumnWidthAuto2039,114053
void ImGui::TableSetColumnWidth(int column_n, float width)TableSetColumnWidth2056,114979
void ImGui::TableSetColumnWidthAutoSingle(ImGuiTable* table, int column_n)TableSetColumnWidthAutoSingle2139,120324
void ImGui::TableSetColumnWidthAutoAll(ImGuiTable* table)TableSetColumnWidthAutoAll2149,120664
void ImGui::TableUpdateColumnsWeightFromWidth(ImGuiTable* table)TableUpdateColumnsWeightFromWidth2161,121133
void ImGui::TablePushBackgroundChannel()TablePushBackgroundChannel2202,123059
void ImGui::TablePopBackgroundChannel()TablePopBackgroundChannel2214,123520
void ImGui::TableSetupDrawChannels(ImGuiTable* table)TableSetupDrawChannels2242,125406
void ImGui::TableMergeDrawChannels(ImGuiTable* table)TableMergeDrawChannels2310,130119
    struct MergeGroupMergeGroup2319,130536
        ImRect  ClipRect;ClipRect2321,130566
        int     ChannelsCount;ChannelsCount2322,130593
        ImBitArray<IMGUI_TABLE_MAX_DRAW_CHANNELS> ChannelsMask;ChannelsMask2323,130625
        MergeGroup() { ChannelsCount = 0; }MergeGroup2325,130692
void ImGui::TableDrawBorders(ImGuiTable* table)TableDrawBorders2477,140246
ImGuiTableSortSpecs* ImGui::TableGetSortSpecs()TableGetSortSpecs2587,146753
static inline ImGuiSortDirection TableGetColumnAvailSortDirection(ImGuiTableColumn* column, int TableGetColumnAvailSortDirection2606,147285
void ImGui::TableFixColumnSortDirection(ImGuiTable* table, ImGuiTableColumn* column)TableFixColumnSortDirection2613,147636
ImGuiSortDirection ImGui::TableGetColumnNextSortDirection(ImGuiTableColumn* column)TableGetColumnNextSortDirection2625,148398
void ImGui::TableSetColumnSortDirection(int column_n, ImGuiSortDirection sort_direction, bool apTableSetColumnSortDirection2639,149162
void ImGui::TableSortSpecsSanitize(ImGuiTable* table)TableSortSpecsSanitize2672,150604
void ImGui::TableSortSpecsBuild(ImGuiTable* table)TableSortSpecsBuild2738,153872
float ImGui::TableGetHeaderRowHeight()TableGetHeaderRowHeight2774,155617
void ImGui::TableHeadersRow()TableHeadersRow2795,157100
void ImGui::TableHeader(const char* label)TableHeader2837,159184
void ImGui::TableOpenContextMenu(int column_n)TableOpenContextMenu2984,167273
void ImGui::TableDrawContextMenu(ImGuiTable* table)TableDrawContextMenu3005,168381
static void TableSettingsInit(ImGuiTableSettings* settings, ImGuiID id, int columns_count, int cTableSettingsInit3118,173918
static size_t TableSettingsCalcChunkSize(int columns_count)TableSettingsCalcChunkSize3130,174510
ImGuiTableSettings* ImGui::TableSettingsCreate(ImGuiID id, int columns_count)TableSettingsCreate3135,174678
ImGuiTableSettings* ImGui::TableSettingsFindByID(ImGuiID id)TableSettingsFindByID3144,175023
ImGuiTableSettings* ImGui::TableGetBoundSettings(ImGuiTable* table)TableGetBoundSettings3155,175452
void ImGui::TableResetSettings(ImGuiTable* table)TableResetSettings3170,176035
void ImGui::TableSaveSettings(ImGuiTable* table)TableSaveSettings3178,176412
void ImGui::TableLoadSettings(ImGuiTable* table)TableLoadSettings3233,179267
static void TableSettingsHandler_ClearAll(ImGuiContext* ctx, ImGuiSettingsHandler*)TableSettingsHandler_ClearAll3298,182065
static void TableSettingsHandler_ApplyAll(ImGuiContext* ctx, ImGuiSettingsHandler*)TableSettingsHandler_ApplyAll3307,182362
static void* TableSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, const char* namTableSettingsHandler_ReadOpen3318,182685
static void TableSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void* entry, conTableSettingsHandler_ReadLine3337,183371
static void TableSettingsHandler_WriteAll(ImGuiContext* ctx, ImGuiSettingsHandler* handler, ImGuTableSettingsHandler_WriteAll3363,185354
void ImGui::TableSettingsInstallHandler(ImGuiContext* context)TableSettingsInstallHandler3404,187928
void ImGui::TableRemove(ImGuiTable* table)TableRemove3427,188960
void ImGui::TableGcCompactTransientBuffers(ImGuiTable* table)TableGcCompactTransientBuffers3439,189426
void ImGui::TableGcCompactTransientBuffers(ImGuiTableTempData* temp_data)TableGcCompactTransientBuffers3453,189962
void ImGui::TableGcCompactSettings()TableGcCompactSettings3461,190253
static const char* DebugNodeTableGetSizingPolicyDesc(ImGuiTableFlags sizing_policy)DebugNodeTableGetSizingPolicyDesc3487,191517
void ImGui::DebugNodeTable(ImGuiTable* table)DebugNodeTable3497,192023
void ImGui::DebugNodeTableSettings(ImGuiTableSettings* settings)DebugNodeTableSettings3559,196825
void ImGui::DebugNodeTable(ImGuiTable*) {}DebugNodeTable3579,198007
void ImGui::DebugNodeTableSettings(ImGuiTableSettings*) {}DebugNodeTableSettings3580,198051
void ImGui::SetWindowClipRectBeforeSetChannel(ImGuiWindow* window, const ImRect& clip_rect)SetWindowClipRectBeforeSetChannel3613,199467
int ImGui::GetColumnIndex()GetColumnIndex3621,199817
int ImGui::GetColumnsCount()GetColumnsCount3627,199985
float ImGui::GetColumnOffsetFromNorm(const ImGuiOldColumns* columns, float offset_norm)GetColumnOffsetFromNorm3633,200152
float ImGui::GetColumnNormFromOffset(const ImGuiOldColumns* columns, float offset)GetColumnNormFromOffset3638,200314
static const float COLUMNS_HIT_RECT_HALF_WIDTH = 4.0f;COLUMNS_HIT_RECT_HALF_WIDTH3643,200466
static float GetDraggedColumnOffset(ImGuiOldColumns* columns, int column_index)GetDraggedColumnOffset3645,200524
float ImGui::GetColumnOffset(int column_index)GetColumnOffset3662,201472
static float GetColumnWidthEx(ImGuiOldColumns* columns, int column_index, bool before_resize = fGetColumnWidthEx3678,201974
float ImGui::GetColumnWidth(int column_index)GetColumnWidth3691,202532
void ImGui::SetColumnOffset(int column_index, float offset)SetColumnOffset3704,202999
void ImGui::SetColumnWidth(int column_index, float width)SetColumnWidth3726,204024
void ImGui::PushColumnClipRect(int column_index)PushColumnClipRect3737,204384
void ImGui::PushColumnsBackground()PushColumnsBackground3749,204885
void ImGui::PopColumnsBackground()PopColumnsBackground3762,205348
ImGuiOldColumns* ImGui::FindOrCreateColumns(ImGuiWindow* window, ImGuiID id)FindOrCreateColumns3774,205774
ImGuiID ImGui::GetColumnsID(const char* str_id, int columns_count)GetColumnsID3787,206300
void ImGui::BeginColumns(const char* str_id, int columns_count, ImGuiOldColumnFlags flags)BeginColumns3800,206836
void ImGui::NextColumn()NextColumn3877,210397
void ImGui::EndColumns()EndColumns3932,212632
void ImGui::Columns(int columns_count, const char* id, bool border)Columns4008,216165

../gejo/libs/imgui/imgui_widgets.cpp,28693
#define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS32,1222
#define IMGUI_DEFINE_MATH_OPERATORSIMGUI_DEFINE_MATH_OPERATORS39,1347
static const float          DRAGDROP_HOLD_TO_OPEN_TIMER = 0.70f;    // Time for drag-hold to actDRAGDROP_HOLD_TO_OPEN_TIMER92,5516
static const float          DRAG_MOUSE_THRESHOLD_FACTOR = 0.50f;    // Multiplier for the defaulDRAG_MOUSE_THRESHOLD_FACTOR93,5695
static const signed char    IM_S8_MIN  = -128;IM_S8_MIN96,5955
static const signed char    IM_S8_MAX  = 127;IM_S8_MAX97,6003
static const unsigned char  IM_U8_MIN  = 0;IM_U8_MIN98,6050
static const unsigned char  IM_U8_MAX  = 0xFF;IM_U8_MAX99,6095
static const signed short   IM_S16_MIN = -32768;IM_S16_MIN100,6143
static const signed short   IM_S16_MAX = 32767;IM_S16_MAX101,6193
static const unsigned short IM_U16_MIN = 0;IM_U16_MIN102,6242
static const unsigned short IM_U16_MAX = 0xFFFF;IM_U16_MAX103,6287
static const ImS32          IM_S32_MIN = INT_MIN;    // (-2147483647 - 1), (0x80000000);IM_S32_MIN104,6337
static const ImS32          IM_S32_MAX = INT_MAX;    // (2147483647), (0x7FFFFFFF)IM_S32_MAX105,6427
static const ImU32          IM_U32_MIN = 0;IM_U32_MIN106,6511
static const ImU32          IM_U32_MAX = UINT_MAX;   // (0xFFFFFFFF)IM_U32_MAX107,6556
static const ImS64          IM_S64_MIN = LLONG_MIN;  // (-9223372036854775807ll - 1ll);IM_S64_MIN109,6644
static const ImS64          IM_S64_MAX = LLONG_MAX;  // (9223372036854775807ll);IM_S64_MAX110,6733
static const ImS64          IM_S64_MIN = -9223372036854775807LL - 1;IM_S64_MIN112,6822
static const ImS64          IM_S64_MAX = 9223372036854775807LL;IM_S64_MAX113,6892
static const ImU64          IM_U64_MIN = 0;IM_U64_MIN115,6965
static const ImU64          IM_U64_MAX = ULLONG_MAX; // (0xFFFFFFFFFFFFFFFFull);IM_U64_MAX117,7029
static const ImU64          IM_U64_MAX = (2ULL * 9223372036854775807LL + 1);IM_U64_MAX119,7118
void ImGui::TextEx(const char* text, const char* text_end, ImGuiTextFlags flags)TextEx150,8450
void ImGui::TextUnformatted(const char* text, const char* text_end)TextUnformatted253,12786
void ImGui::Text(const char* fmt, ...)Text258,12935
void ImGui::TextV(const char* fmt, va_list args)TextV266,13070
void ImGui::TextColored(const ImVec4& col, const char* fmt, ...)TextColored277,13447
void ImGui::TextColoredV(const ImVec4& col, const char* fmt, va_list args)TextColoredV285,13620
void ImGui::TextDisabled(const char* fmt, ...)TextDisabled295,13972
void ImGui::TextDisabledV(const char* fmt, va_list args)TextDisabledV303,14123
void ImGui::TextWrapped(const char* fmt, ...)TextWrapped314,14523
void ImGui::TextWrappedV(const char* fmt, va_list args)TextWrappedV322,14672
void ImGui::LabelText(const char* label, const char* fmt, ...)LabelText336,15197
void ImGui::LabelTextV(const char* label, const char* fmt, va_list args)LabelTextV345,15432
void ImGui::BulletText(const char* fmt, ...)BulletText373,16772
void ImGui::BulletTextV(const char* fmt, va_list args)BulletTextV382,16983
bool ImGui::ButtonBehavior(const ImRect& bb, ImGuiID id, bool* out_hovered, bool* out_held, ImGuButtonBehavior486,25645
bool ImGui::ButtonEx(const char* label, const ImVec2& size_arg, ImGuiButtonFlags flags)ButtonEx670,34730
bool ImGui::Button(const char* label, const ImVec2& size_arg)Button713,36678
bool ImGui::SmallButton(const char* label)SmallButton719,36883
bool ImGui::InvisibleButton(const char* str_id, const ImVec2& size_arg, ImGuiButtonFlags flags)InvisibleButton731,37421
bool ImGui::ArrowButtonEx(const char* str_id, ImGuiDir dir, ImVec2 size, ImGuiButtonFlags flags)ArrowButtonEx753,38169
bool ImGui::ArrowButton(const char* str_id, ImGuiDir dir)ArrowButton783,39395
bool ImGui::CloseButton(ImGuiID id, const ImVec2& pos)CloseButton790,39604
bool ImGui::CollapseButton(ImGuiID id, const ImVec2& pos)CollapseButton828,41618
ImGuiID ImGui::GetWindowScrollbarID(ImGuiWindow* window, ImGuiAxis axis)GetWindowScrollbarID853,42696
ImRect ImGui::GetWindowScrollbarRect(ImGuiWindow* window, ImGuiAxis axis)GetWindowScrollbarRect859,42970
void ImGui::Scrollbar(ImGuiAxis axis)Scrollbar872,43745
bool ImGui::ScrollbarEx(const ImRect& bb_frame, ImGuiID id, ImGuiAxis axis, float* p_scroll_v, fScrollbarEx907,45429
void ImGui::Image(ImTextureID user_texture_id, const ImVec2& size, const ImVec2& uv0, const ImVeImage998,50589
bool ImGui::ImageButtonEx(ImGuiID id, ImTextureID texture_id, const ImVec2& size, const ImVec2& ImageButtonEx1024,51646
bool ImGui::ImageButton(ImTextureID user_texture_id, const ImVec2& size, const ImVec2& uv0, consImageButton1053,52919
bool ImGui::Checkbox(const char* label, bool* v)Checkbox1069,53650
bool ImGui::CheckboxFlagsT(const char* label, T* flags, T flags_value)CheckboxFlagsT1127,56303
bool ImGui::CheckboxFlags(const char* label, int* flags, int flags_value)CheckboxFlags1155,57034
bool ImGui::CheckboxFlags(const char* label, unsigned int* flags, unsigned int flags_value)CheckboxFlags1160,57172
bool ImGui::CheckboxFlags(const char* label, ImS64* flags, ImS64 flags_value)CheckboxFlags1165,57328
bool ImGui::CheckboxFlags(const char* label, ImU64* flags, ImU64 flags_value)CheckboxFlags1170,57470
bool ImGui::RadioButton(const char* label, bool active)RadioButton1175,57612
bool ImGui::RadioButton(const char* label, int* v, int v_button)RadioButton1229,59969
void ImGui::ProgressBar(float fraction, const ImVec2& size_arg, const char* overlay)ProgressBar1238,60254
void ImGui::Bullet()Bullet1274,61790
void ImGui::Spacing()Spacing1310,63073
void ImGui::Dummy(const ImVec2& size)Dummy1318,63225
void ImGui::NewLine()NewLine1329,63481
void ImGui::AlignTextToFramePadding()AlignTextToFramePadding1345,64062
void ImGui::SeparatorEx(ImGuiSeparatorFlags flags)SeparatorEx1357,64490
void ImGui::Separator()Separator1417,67005
bool ImGui::SplitterBehavior(const ImRect& bb, ImGuiID id, ImGuiAxis axis, float* size1, float* SplitterBehavior1431,67603
static int IMGUI_CDECL ShrinkWidthItemComparer(const void* lhs, const void* rhs)ShrinkWidthItemComparer1488,70124
void ImGui::ShrinkWidths(ImGuiShrinkWidthItem* items, int count, float width_excess)ShrinkWidths1499,70607
static float CalcMaxPopupHeightFromItemCount(int items_count)CalcMaxPopupHeightFromItemCount1545,72747
bool ImGui::BeginCombo(const char* label, const char* preview_value, ImGuiComboFlags flags)BeginCombo1553,73022
void ImGui::EndCombo()EndCombo1672,79595
static bool Items_ArrayGetter(void* data, int idx, const char** out_text)Items_ArrayGetter1678,79694
static bool Items_SingleStringGetter(void* data, int idx, const char** out_text)Items_SingleStringGetter1687,79965
bool ImGui::Combo(const char* label, int* current_item, bool (*items_getter)(void*, int, const cCombo1708,80605
bool ImGui::Combo(const char* label, int* current_item, const char* const items[], int items_couCombo1752,82434
bool ImGui::Combo(const char* label, int* current_item, const char* items_separated_by_zeros, inCombo1759,82845
static const ImGuiDataTypeInfo GDataTypeInfo[] =GDataTypeInfo1785,83907
static const char* PatchFormatStringFloatToInt(const char* fmt)PatchFormatStringFloatToInt1808,85441
const ImGuiDataTypeInfo* ImGui::DataTypeGetInfo(ImGuiDataType data_type)DataTypeGetInfo1829,86613
int ImGui::DataTypeFormatString(char* buf, int buf_size, ImGuiDataType data_type, const void* p_DataTypeFormatString1835,86801
void ImGui::DataTypeApplyOp(ImGuiDataType data_type, int op, void* output, const void* arg1, conDataTypeApplyOp1858,88053
bool ImGui::DataTypeApplyOpFromText(const char* buf, const char* initial_value_buf, ImGuiDataTypDataTypeApplyOpFromText1910,91586
static int DataTypeCompareT(const T* lhs, const T* rhs)DataTypeCompareT2012,96474
int ImGui::DataTypeCompare(ImGuiDataType data_type, const void* arg_1, const void* arg_2)DataTypeCompare2019,96620
static bool DataTypeClampT(T* v, const T* v_min, const T* v_max)DataTypeClampT2040,97942
bool ImGui::DataTypeClamp(ImGuiDataType data_type, void* p_data, const void* p_min, const void* DataTypeClamp2048,98221
static float GetMinimumStepAtDecimalPrecision(int decimal_precision)GetMinimumStepAtDecimalPrecision2068,99688
static const char* ImAtoi(const char* src, TYPE* output)ImAtoi2077,100120
static void SanitizeFormatString(const char* fmt, char* fmt_out, size_t fmt_out_size)SanitizeFormatString2092,100676
bool ImGui::DragBehaviorT(ImGuiDataType data_type, TYPE* v, float v_speed, const TYPE v_min, conDragBehaviorT2152,102887
bool ImGui::DragBehavior(ImGuiID id, ImGuiDataType data_type, void* p_v, float v_speed, const voDragBehavior2267,108597
bool ImGui::DragScalar(const char* label, ImGuiDataType data_type, void* p_data, float v_speed, DragScalar2305,112449
bool ImGui::DragScalarN(const char* label, ImGuiDataType data_type, void* p_data, int componentsDragScalarN2389,117072
bool ImGui::DragFloat(const char* label, float* v, float v_speed, float v_min, float v_max, consDragFloat2424,118184
bool ImGui::DragFloat2(const char* label, float v[2], float v_speed, float v_min, float v_max, cDragFloat22429,118424
bool ImGui::DragFloat3(const char* label, float v[3], float v_speed, float v_min, float v_max, cDragFloat32434,118671
bool ImGui::DragFloat4(const char* label, float v[4], float v_speed, float v_min, float v_max, cDragFloat42439,118918
bool ImGui::DragFloatRange2(const char* label, float* v_current_min, float* v_current_max, floatDragFloatRange22445,119250
bool ImGui::DragInt(const char* label, int* v, float v_speed, int v_min, int v_max, const char* DragInt2477,120771
bool ImGui::DragInt2(const char* label, int v[2], float v_speed, int v_min, int v_max, const chaDragInt22482,121001
bool ImGui::DragInt3(const char* label, int v[3], float v_speed, int v_min, int v_max, const chaDragInt32487,121238
bool ImGui::DragInt4(const char* label, int v[4], float v_speed, int v_min, int v_max, const chaDragInt42492,121475
bool ImGui::DragIntRange2(const char* label, int* v_current_min, int* v_current_max, float v_speDragIntRange22498,121797
bool ImGui::DragScalar(const char* label, ImGuiDataType data_type, void* p_data, float v_speed, DragScalar2533,123320
bool ImGui::DragScalarN(const char* label, ImGuiDataType data_type, void* p_data, int componentsDragScalarN2545,124036
float ImGui::ScaleRatioFromValueT(ImGuiDataType data_type, TYPE v, TYPE v_min, TYPE v_max, bool ScaleRatioFromValueT2584,125776
bool ImGui::SliderBehaviorT(const ImRect& bb, ImGuiID id, ImGuiDataType data_type, TYPE* v, consSliderBehaviorT2719,133540
bool ImGui::SliderBehavior(const ImRect& bb, ImGuiID id, ImGuiDataType data_type, void* p_v, conSliderBehavior2879,141891
bool ImGui::SliderScalar(const char* label, ImGuiDataType data_type, void* p_data, const void* pSliderScalar2920,145695
bool ImGui::SliderScalarN(const char* label, ImGuiDataType data_type, void* v, int components, cSliderScalarN3001,149844
bool ImGui::SliderFloat(const char* label, float* v, float v_min, float v_max, const char* formaSliderFloat3036,150916
bool ImGui::SliderFloat2(const char* label, float v[2], float v_min, float v_max, const char* foSliderFloat23041,151136
bool ImGui::SliderFloat3(const char* label, float v[3], float v_min, float v_max, const char* foSliderFloat33046,151363
bool ImGui::SliderFloat4(const char* label, float v[4], float v_min, float v_max, const char* foSliderFloat43051,151590
bool ImGui::SliderAngle(const char* label, float* v_rad, float v_degrees_min, float v_degrees_maSliderAngle3056,151817
bool ImGui::SliderInt(const char* label, int* v, int v_min, int v_max, const char* format, ImGuiSliderInt3066,152246
bool ImGui::SliderInt2(const char* label, int v[2], int v_min, int v_max, const char* format, ImSliderInt23071,152456
bool ImGui::SliderInt3(const char* label, int v[3], int v_min, int v_max, const char* format, ImSliderInt33076,152673
bool ImGui::SliderInt4(const char* label, int v[4], int v_min, int v_max, const char* format, ImSliderInt43081,152890
bool ImGui::VSliderScalar(const char* label, const ImVec2& size, ImGuiDataType data_type, void* VSliderScalar3086,153107
bool ImGui::VSliderFloat(const char* label, const ImVec2& size, float* v, float v_min, float v_mVSliderFloat3145,156050
bool ImGui::VSliderInt(const char* label, const ImVec2& size, int* v, int v_min, int v_max, consVSliderInt3150,156298
bool ImGui::SliderScalar(const char* label, ImGuiDataType data_type, void* p_data, const void* pSliderScalar3158,156686
bool ImGui::SliderScalarN(const char* label, ImGuiDataType data_type, void* v, int components, cSliderScalarN3169,157271
const char* ImParseFormatFindStart(const char* fmt)ImParseFormatFindStart3204,158734
const char* ImParseFormatFindEnd(const char* fmt)ImParseFormatFindEnd3217,158984
const char* ImParseFormatTrimDecorations(const char* fmt, char* buf, size_t buf_size)ImParseFormatTrimDecorations3239,160019
int ImParseFormatPrecision(const char* fmt, int default_precision)ImParseFormatPrecision3253,160718
bool ImGui::TempInputText(const ImRect& bb, ImGuiID id, const char* label, char* buf, int buf_siTempInputText3277,161610
bool ImGui::TempInputScalar(const ImRect& bb, ImGuiID id, const char* label, ImGuiDataType data_TempInputScalar3300,162809
bool ImGui::InputScalar(const char* label, ImGuiDataType data_type, void* p_data, const void* p_InputScalar3339,164852
bool ImGui::InputScalarN(const char* label, ImGuiDataType data_type, void* p_data, int componentInputScalarN3411,167918
bool ImGui::InputFloat(const char* label, float* v, float step, float step_fast, const char* forInputFloat3446,169028
bool ImGui::InputFloat2(const char* label, float v[2], const char* format, ImGuiInputTextFlags fInputFloat23452,169378
bool ImGui::InputFloat3(const char* label, float v[3], const char* format, ImGuiInputTextFlags fInputFloat33457,169576
bool ImGui::InputFloat4(const char* label, float v[4], const char* format, ImGuiInputTextFlags fInputFloat43462,169774
bool ImGui::InputInt(const char* label, int* v, int step, int step_fast, ImGuiInputTextFlags flaInputInt3467,169972
bool ImGui::InputInt2(const char* label, int v[2], ImGuiInputTextFlags flags)InputInt23474,170495
bool ImGui::InputInt3(const char* label, int v[3], ImGuiInputTextFlags flags)InputInt33479,170665
bool ImGui::InputInt4(const char* label, int v[4], ImGuiInputTextFlags flags)InputInt43484,170835
bool ImGui::InputDouble(const char* label, double* v, double step, double step_fast, const char*InputDouble3489,171005
bool ImGui::InputText(const char* label, char* buf, size_t buf_size, ImGuiInputTextFlags flags, InputText3504,171765
bool ImGui::InputTextMultiline(const char* label, char* buf, size_t buf_size, const ImVec2& sizeInputTextMultiline3510,172107
bool ImGui::InputTextWithHint(const char* label, const char* hint, char* buf, size_t buf_size, IInputTextWithHint3515,172415
static int InputTextCalcTextLenAndLineCount(const char* text_begin, const char** out_text_end)InputTextCalcTextLenAndLineCount3521,172783
static ImVec2 InputTextCalcTextSizeW(const ImWchar* text_begin, const ImWchar* text_end, const IInputTextCalcTextSizeW3535,173206
namespace ImStbImStb3581,174774
static int     STB_TEXTEDIT_STRINGLEN(const ImGuiInputTextState* obj)                           STB_TEXTEDIT_STRINGLEN3584,174796
static ImWchar STB_TEXTEDIT_GETCHAR(const ImGuiInputTextState* obj, int idx)                    STB_TEXTEDIT_GETCHAR3585,174920
static float   STB_TEXTEDIT_GETWIDTH(ImGuiInputTextState* obj, int line_start_idx, int char_idx)STB_TEXTEDIT_GETWIDTH3586,175047
static int     STB_TEXTEDIT_KEYTOTEXT(int key)                                                  STB_TEXTEDIT_KEYTOTEXT3587,175349
static ImWchar STB_TEXTEDIT_NEWLINE = '\n';STB_TEXTEDIT_NEWLINE3588,175486
static void    STB_TEXTEDIT_LAYOUTROW(StbTexteditRow* r, ImGuiInputTextState* obj, int line_starSTB_TEXTEDIT_LAYOUTROW3589,175531
static bool is_separator(unsigned int c)                                        { return ImCharIis_separator3603,176191
static int  is_word_boundary_from_right(ImGuiInputTextState* obj, int idx)      { if (obj->Flagsis_word_boundary_from_right3604,176392
static int  STB_TEXTEDIT_MOVEWORDLEFT_IMPL(ImGuiInputTextState* obj, int idx)   { idx--; while (STB_TEXTEDIT_MOVEWORDLEFT_IMPL3605,176627
static int  is_word_boundary_from_left(ImGuiInputTextState* obj, int idx)       { if (obj->Flagsis_word_boundary_from_left3607,176871
static int  STB_TEXTEDIT_MOVEWORDRIGHT_IMPL(ImGuiInputTextState* obj, int idx)  { idx++; int lenSTB_TEXTEDIT_MOVEWORDRIGHT_IMPL3608,177106
static int  STB_TEXTEDIT_MOVEWORDRIGHT_IMPL(ImGuiInputTextState* obj, int idx)  { idx++; int lenSTB_TEXTEDIT_MOVEWORDRIGHT_IMPL3610,177325
#define STB_TEXTEDIT_MOVEWORDLEFT STB_TEXTEDIT_MOVEWORDLEFT3612,177546
#define STB_TEXTEDIT_MOVEWORDRIGHT STB_TEXTEDIT_MOVEWORDRIGHT3613,177663
static void STB_TEXTEDIT_DELETECHARS(ImGuiInputTextState* obj, int pos, int n)STB_TEXTEDIT_DELETECHARS3615,177734
static bool STB_TEXTEDIT_INSERTCHARS(ImGuiInputTextState* obj, int pos, const ImWchar* new_text,STB_TEXTEDIT_INSERTCHARS3631,178231
#define STB_TEXTEDIT_K_LEFT STB_TEXTEDIT_K_LEFT3664,179584
#define STB_TEXTEDIT_K_RIGHT STB_TEXTEDIT_K_RIGHT3665,179668
#define STB_TEXTEDIT_K_UP STB_TEXTEDIT_K_UP3666,179753
#define STB_TEXTEDIT_K_DOWN STB_TEXTEDIT_K_DOWN3667,179835
#define STB_TEXTEDIT_K_LINESTART STB_TEXTEDIT_K_LINESTART3668,179919
#define STB_TEXTEDIT_K_LINEEND STB_TEXTEDIT_K_LINEEND3669,180015
#define STB_TEXTEDIT_K_TEXTSTART STB_TEXTEDIT_K_TEXTSTART3670,180109
#define STB_TEXTEDIT_K_TEXTEND STB_TEXTEDIT_K_TEXTEND3671,180205
#define STB_TEXTEDIT_K_DELETE STB_TEXTEDIT_K_DELETE3672,180299
#define STB_TEXTEDIT_K_BACKSPACE STB_TEXTEDIT_K_BACKSPACE3673,180409
#define STB_TEXTEDIT_K_UNDO STB_TEXTEDIT_K_UNDO3674,180521
#define STB_TEXTEDIT_K_REDO STB_TEXTEDIT_K_REDO3675,180601
#define STB_TEXTEDIT_K_WORDLEFT STB_TEXTEDIT_K_WORDLEFT3676,180681
#define STB_TEXTEDIT_K_WORDRIGHT STB_TEXTEDIT_K_WORDRIGHT3677,180774
#define STB_TEXTEDIT_K_PGUP STB_TEXTEDIT_K_PGUP3678,180868
#define STB_TEXTEDIT_K_PGDOWN STB_TEXTEDIT_K_PGDOWN3679,180957
#define STB_TEXTEDIT_K_SHIFT STB_TEXTEDIT_K_SHIFT3680,181048
#define STB_TEXTEDIT_IMPLEMENTATIONSTB_TEXTEDIT_IMPLEMENTATION3682,181096
static void stb_textedit_replace(ImGuiInputTextState* str, STB_TexteditState* state, const STB_Tstb_textedit_replace3687,181402
void ImGuiInputTextState::OnKeyPressed(int key)OnKeyPressed3704,182041
ImGuiInputTextCallbackData::ImGuiInputTextCallbackData()ImGuiInputTextCallbackData3711,182188
void ImGuiInputTextCallbackData::DeleteChars(int pos, int bytes_count)DeleteChars3719,182514
void ImGuiInputTextCallbackData::InsertChars(int pos, const char* new_text, const char* new_textInsertChars3737,183025
static bool InputTextFilterCharacter(unsigned int* p_char, ImGuiInputTextFlags flags, ImGuiInputInputTextFilterCharacter3770,184507
bool ImGui::InputTextEx(const char* label, const char* hint, char* buf, int buf_size, const ImVeInputTextEx3863,189236
bool ImGui::ColorEdit3(const char* label, float col[3], ImGuiColorEditFlags flags)ColorEdit34682,236881
bool ImGui::ColorEdit4(const char* label, float col[4], ImGuiColorEditFlags flags)ColorEdit44690,237416
bool ImGui::ColorPicker3(const char* label, float col[3], ImGuiColorEditFlags flags)ColorPicker34930,249212
static void RenderArrowsForVerticalBar(ImDrawList* draw_list, ImVec2 pos, ImVec2 half_sz, float RenderArrowsForVerticalBar4940,249565
bool ImGui::ColorPicker4(const char* label, float col[4], ImGuiColorEditFlags flags, const floatColorPicker44953,251034
bool ImGui::ColorButton(const char* desc_id, const ImVec4& col, ImGuiColorEditFlags flags, ImVecColorButton5332,270994
void ImGui::SetColorEditOptions(ImGuiColorEditFlags flags)SetColorEditOptions5416,275117
void ImGui::ColorTooltip(const char* text, const float* col, ImGuiColorEditFlags flags)ColorTooltip5435,276361
void ImGui::ColorEditOptionsPopup(const float* col, ImGuiColorEditFlags flags)ColorEditOptionsPopup5469,278116
void ImGui::ColorPickerOptionsPopup(const float* ref_col, ImGuiColorEditFlags flags)ColorPickerOptionsPopup5520,280706
bool ImGui::TreeNode(const char* str_id, const char* fmt, ...)TreeNode5573,283404
bool ImGui::TreeNode(const void* ptr_id, const char* fmt, ...)TreeNode5582,283616
bool ImGui::TreeNode(const char* label)TreeNode5591,283828
bool ImGui::TreeNodeV(const char* str_id, const char* fmt, va_list args)TreeNodeV5599,284043
bool ImGui::TreeNodeV(const void* ptr_id, const char* fmt, va_list args)TreeNodeV5604,284172
bool ImGui::TreeNodeEx(const char* label, ImGuiTreeNodeFlags flags)TreeNodeEx5609,284301
bool ImGui::TreeNodeEx(const char* str_id, ImGuiTreeNodeFlags flags, const char* fmt, ...)TreeNodeEx5618,284550
bool ImGui::TreeNodeEx(const void* ptr_id, ImGuiTreeNodeFlags flags, const char* fmt, ...)TreeNodeEx5627,284794
bool ImGui::TreeNodeExV(const char* str_id, ImGuiTreeNodeFlags flags, const char* fmt, va_list aTreeNodeExV5636,285038
bool ImGui::TreeNodeExV(const void* ptr_id, ImGuiTreeNodeFlags flags, const char* fmt, va_list aTreeNodeExV5647,285479
bool ImGui::TreeNodeBehaviorIsOpen(ImGuiID id, ImGuiTreeNodeFlags flags)TreeNodeBehaviorIsOpen5658,285920
bool ImGui::TreeNodeBehavior(ImGuiID id, ImGuiTreeNodeFlags flags, const char* label, const charTreeNodeBehavior5704,287586
void ImGui::TreePush(const char* str_id)TreePush5891,298305
void ImGui::TreePush(const void* ptr_id)TreePush5899,298490
void ImGui::TreePushOverrideID(ImGuiID id)TreePushOverrideID5907,298688
void ImGui::TreePop()TreePop5916,298896
float ImGui::GetTreeNodeToLabelSpacing()GetTreeNodeToLabelSpacing5939,299876
void ImGui::SetNextItemOpen(bool is_open, ImGuiCond cond)SetNextItemOpen5946,300067
bool ImGui::CollapsingHeader(const char* label, ImGuiTreeNodeFlags flags)CollapsingHeader5958,300723
bool ImGui::CollapsingHeader(const char* label, bool* p_visible, ImGuiTreeNodeFlags flags)CollapsingHeader5971,301455
bool ImGui::Selectable(const char* label, bool selected, ImGuiSelectableFlags flags, const ImVecSelectable6014,303612
bool ImGui::Selectable(const char* label, bool* p_selected, ImGuiSelectableFlags flags, const ImSelectable6158,310605
bool ImGui::BeginListBox(const char* label, const ImVec2& size_arg)BeginListBox6178,311512
bool ImGui::ListBoxHeader(const char* label, int items_count, int height_in_items)ListBoxHeader6219,313211
void ImGui::EndListBox()EndListBox6231,313685
bool ImGui::ListBox(const char* label, int* current_item, const char* const items[], int items_cListBox6242,314113
bool ImGui::ListBox(const char* label, int* current_item, bool (*items_getter)(void*, int, constListBox6250,314547
int ImGui::PlotEx(ImGuiPlotType plot_type, const char* label, float (*values_getter)(void* data,PlotEx6306,316920
struct ImGuiPlotArrayGetterDataImGuiPlotArrayGetterData6424,322726
    const float* Values;Values6426,322762
    int Stride;Stride6427,322788
    ImGuiPlotArrayGetterData(const float* values, int stride) { Values = values; Stride = strideImGuiPlotArrayGetterData6429,322807
static float Plot_ArrayGetter(void* data, int idx)Plot_ArrayGetter6432,322914
void ImGui::PlotLines(const char* label, const float* values, int values_count, int values_offsePlotLines6439,323191
void ImGui::PlotLines(const char* label, float (*values_getter)(void* data, int idx), void* dataPlotLines6445,323593
void ImGui::PlotHistogram(const char* label, const float* values, int values_count, int values_oPlotHistogram6450,323955
void ImGui::PlotHistogram(const char* label, float (*values_getter)(void* data, int idx), void* PlotHistogram6456,324365
void ImGui::Value(const char* prefix, bool b)Value6468,325061
void ImGui::Value(const char* prefix, int v)Value6473,325169
void ImGui::Value(const char* prefix, unsigned int v)Value6478,325255
void ImGui::Value(const char* prefix, float v, const char* float_format)Value6483,325350
void ImGuiMenuColumns::Update(int count, float spacing, bool clear)Update6511,326143
float ImGuiMenuColumns::DeclColumns(float w0, float w1, float w2) // not using va_arg because thDeclColumns6529,326647
float ImGuiMenuColumns::CalcExtraSpace(float avail_w) constCalcExtraSpace6540,327119
bool ImGui::BeginMenuBar()BeginMenuBar6549,327711
void ImGui::EndMenuBar()EndMenuBar6577,329396
bool ImGui::BeginViewportSideBar(const char* name, ImGuiViewport* viewport_p, ImGuiDir dir, floaBeginViewportSideBar6621,332108
bool ImGui::BeginMainMenuBar()BeginMainMenuBar6656,333728
void ImGui::EndMainMenuBar()EndMainMenuBar6677,334861
bool ImGui::BeginMenu(const char* label, bool enabled)BeginMenu6690,335338
void ImGui::EndMenu()EndMenu6854,345246
bool ImGui::MenuItem(const char* label, const char* shortcut, bool selected, bool enabled)MenuItem6870,346018
bool ImGui::MenuItem(const char* label, const char* shortcut, bool* p_selected, bool enabled)MenuItem6919,349194
struct ImGuiTabBarSectionImGuiTabBarSection6949,350272
    int                 TabCount;               // Number of tabs in this section.TabCount6951,350302
    float               Width;                  // Sum of width of tabs in this section (after sWidth6952,350386
    float               Spacing;                // Horizontal spacing at the end of the section.Spacing6953,350498
    ImGuiTabBarSection() { memset(this, 0, sizeof(*this)); }ImGuiTabBarSection6955,350598
namespace ImGuiImGui6958,350666
ImGuiTabBar::ImGuiTabBar()ImGuiTabBar6969,351252
static inline int TabItemGetSectionIdx(const ImGuiTabItem* tab)TabItemGetSectionIdx6976,351398
static int IMGUI_CDECL TabItemComparerBySection(const void* lhs, const void* rhs)TabItemComparerBySection6981,351581
static int IMGUI_CDECL TabItemComparerByBeginOrder(const void* lhs, const void* rhs)TabItemComparerByBeginOrder6992,352022
static ImGuiTabBar* GetTabBarFromTabBarRef(const ImGuiPtrOrIndex& ref)GetTabBarFromTabBarRef6999,352276
static ImGuiPtrOrIndex GetTabBarRefFromTabBar(ImGuiTabBar* tab_bar)GetTabBarRefFromTabBar7005,352467
bool    ImGui::BeginTabBar(const char* str_id, ImGuiTabBarFlags flags)BeginTabBar7013,352714
bool    ImGui::BeginTabBarEx(ImGuiTabBar* tab_bar, const ImRect& tab_bar_bb, ImGuiTabBarFlags flBeginTabBarEx7027,353299
void    ImGui::EndTabBar()EndTabBar7086,356082
static void ImGui::TabBarLayout(ImGuiTabBar* tab_bar)TabBarLayout7127,357775
static ImU32   ImGui::TabBarCalcTabID(ImGuiTabBar* tab_bar, const char* label)TabBarCalcTabID7357,370010
static float ImGui::TabBarCalcMaxTabWidth()TabBarCalcMaxTabWidth7372,370367
ImGuiTabItem* ImGui::TabBarFindTabByID(ImGuiTabBar* tab_bar, ImGuiID tab_id)TabBarFindTabByID7378,370484
void ImGui::TabBarRemoveTab(ImGuiTabBar* tab_bar, ImGuiID tab_id)TabBarRemoveTab7388,370884
void ImGui::TabBarCloseTab(ImGuiTabBar* tab_bar, ImGuiTabItem* tab)TabBarCloseTab7398,371336
static float ImGui::TabBarScrollClamp(ImGuiTabBar* tab_bar, float scrolling)TabBarScrollClamp7420,372215
static void ImGui::TabBarScrollToTab(ImGuiTabBar* tab_bar, ImGuiID tab_id, ImGuiTabBarSection* sTabBarScrollToTab7427,372510
void ImGui::TabBarQueueReorder(ImGuiTabBar* tab_bar, const ImGuiTabItem* tab, int offset)TabBarQueueReorder7461,374269
void ImGui::TabBarQueueReorderFromMousePos(ImGuiTabBar* tab_bar, const ImGuiTabItem* src_tab, ImTabBarQueueReorderFromMousePos7469,374545
bool ImGui::TabBarProcessReorder(ImGuiTabBar* tab_bar)TabBarProcessReorder7505,376368
static ImGuiTabItem* ImGui::TabBarScrollingButtons(ImGuiTabBar* tab_bar)TabBarScrollingButtons7536,377882
static ImGuiTabItem* ImGui::TabBarTabListPopupButton(ImGuiTabBar* tab_bar)TabBarTabListPopupButton7597,380862
bool    ImGui::BeginTabItem(const char* label, bool* p_open, ImGuiTabItemFlags flags)BeginTabItem7648,382817
void    ImGui::EndTabItem()EndTabItem7672,383749
bool    ImGui::TabItemButton(const char* label, ImGuiTabItemFlags flags)TabItemButton7691,384303
bool    ImGui::TabItemEx(ImGuiTabBar* tab_bar, const char* label, bool* p_open, ImGuiTabItemFlagTabItemEx7707,384840
void    ImGui::SetTabItemClosed(const char* label)SetTabItemClosed7923,395204
ImVec2 ImGui::TabItemCalcSize(const char* label, bool has_close_button)TabItemCalcSize7936,395721
void ImGui::TabItemBackground(ImDrawList* draw_list, const ImRect& bb, ImGuiTabItemFlags flags, TabItemBackground7948,396304
void ImGui::TabItemLabelAndCloseButton(ImDrawList* draw_list, const ImRect& bb, ImGuiTabItemFlagTabItemLabelAndCloseButton7975,397923

../gejo/libs/imgui/imstb_rectpack.h,3413
#define STB_INCLUDE_STB_RECT_PACK_HSTB_INCLUDE_STB_RECT_PACK_H66,2128
#define STB_RECT_PACK_VERSION STB_RECT_PACK_VERSION68,2167
#define STBRP_DEF STBRP_DEF71,2224
#define STBRP_DEF STBRP_DEF73,2257
typedef struct stbrp_context stbrp_context;stbrp_context80,2337
typedef struct stbrp_node    stbrp_node;stbrp_node81,2382
typedef struct stbrp_rect    stbrp_rect;stbrp_rect82,2424
typedef int            stbrp_coord;stbrp_coord85,2494
typedef unsigned short stbrp_coord;stbrp_coord87,2538
struct stbrp_rectstbrp_rect115,3836
   int            id;id118,3888
   stbrp_coord    w, h;w121,3927
   stbrp_coord    w, h;h121,3927
   stbrp_coord    x, y;x124,3969
   stbrp_coord    x, y;y124,3969
   int            was_packed;  // non-zero if valid packingwas_packed125,3994
{__anonea8375950103163,5818
   STBRP_HEURISTIC_Skyline_default=0,STBRP_HEURISTIC_Skyline_default164,5821
   STBRP_HEURISTIC_Skyline_BL_sortHeight = STBRP_HEURISTIC_Skyline_default,STBRP_HEURISTIC_Skyline_BL_sortHeight165,5860
   STBRP_HEURISTIC_Skyline_BF_sortHeightSTBRP_HEURISTIC_Skyline_BF_sortHeight166,5937
struct stbrp_nodestbrp_node175,6217
   stbrp_coord  x,y;x177,6239
   stbrp_coord  x,y;y177,6239
   stbrp_node  *next;next178,6261
struct stbrp_contextstbrp_context181,6290
   int width;width183,6315
   int height;height184,6330
   int align;align185,6346
   int init_mode;init_mode186,6361
   int heuristic;heuristic187,6380
   int num_nodes;num_nodes188,6399
   stbrp_node *active_head;active_head189,6418
   stbrp_node *free_head;free_head190,6447
   stbrp_node extra[2]; // we allocate two extra nodes so optimal user-node-count is 'width' notextra191,6474
#define STBRP_SORT STBRP_SORT208,6830
#define STBRP_ASSERT STBRP_ASSERT213,6909
#define STBRP__NOTUSED(STBRP__NOTUSED218,7001
#define STBRP__CDECL STBRP__CDECL219,7039
#define STBRP__NOTUSED(STBRP__NOTUSED221,7076
#define STBRP__CDECLSTBRP__CDECL222,7120
{__anonea8375950203226,7158
   STBRP__INIT_skyline = 1STBRP__INIT_skyline227,7161
STBRP_DEF void stbrp_setup_heuristic(stbrp_context *context, int heuristic)stbrp_setup_heuristic230,7195
STBRP_DEF void stbrp_setup_allow_out_of_mem(stbrp_context *context, int allow_out_of_mem)stbrp_setup_allow_out_of_mem242,7585
STBRP_DEF void stbrp_init_target(stbrp_context *context, int width, int height, stbrp_node *nodestbrp_init_target262,8439
static int stbrp__skyline_find_min_y(stbrp_context *c, stbrp_node *first, int x0, int width, intstbrp__skyline_find_min_y295,9530
{__anonea8375950308346,11030
   int x,y;x347,11033
   int x,y;y347,11033
   stbrp_node **prev_link;prev_link348,11046
} stbrp__findresult;stbrp__findresult349,11074
static stbrp__findresult stbrp__skyline_find_best_pos(stbrp_context *c, int width, int height)stbrp__skyline_find_best_pos351,11098
static stbrp__findresult stbrp__skyline_pack_rectangle(stbrp_context *context, int width, int hestbrp__skyline_pack_rectangle453,14209
static int STBRP__CDECL rect_height_compare(const void *a, const void *b)rect_height_compare533,16411
static int STBRP__CDECL rect_original_order(const void *a, const void *b)rect_original_order545,16755
#define STBRP__MAXVAL STBRP__MAXVAL553,17047
#define STBRP__MAXVAL STBRP__MAXVAL555,17089
STBRP_DEF int stbrp_pack_rects(stbrp_context *context, stbrp_rect *rects, int num_rects)stbrp_pack_rects558,17130

../gejo/libs/imgui/imstb_textedit.h,7058
#define INCLUDE_STB_TEXTEDIT_HINCLUDE_STB_TEXTEDIT_H275,14585
#define STB_TEXTEDIT_UNDOSTATECOUNT STB_TEXTEDIT_UNDOSTATECOUNT287,14914
#define STB_TEXTEDIT_UNDOCHARCOUNT STB_TEXTEDIT_UNDOCHARCOUNT290,15000
#define STB_TEXTEDIT_CHARTYPE STB_TEXTEDIT_CHARTYPE293,15081
#define STB_TEXTEDIT_POSITIONTYPE STB_TEXTEDIT_POSITIONTYPE296,15166
{__anon3a9009730108300,15234
   STB_TEXTEDIT_POSITIONTYPE  where;where302,15257
   STB_TEXTEDIT_POSITIONTYPE  insert_length;insert_length303,15295
   STB_TEXTEDIT_POSITIONTYPE  delete_length;delete_length304,15341
   int                        char_storage;char_storage305,15387
} StbUndoRecord;StbUndoRecord306,15432
{__anon3a9009730208309,15468
   StbUndoRecord          undo_rec [STB_TEXTEDIT_UNDOSTATECOUNT];undo_rec311,15491
   STB_TEXTEDIT_CHARTYPE  undo_char[STB_TEXTEDIT_UNDOCHARCOUNT];undo_char312,15558
   short undo_point, redo_point;undo_point313,15624
   short undo_point, redo_point;redo_point313,15624
   int undo_char_point, redo_char_point;undo_char_point314,15658
   int undo_char_point, redo_char_point;redo_char_point314,15658
} StbUndoState;StbUndoState315,15700
{__anon3a9009730308318,15735
   int cursor;cursor324,15799
   int select_start;          // selection start pointselect_start327,15870
   int select_end;select_end328,15926
   unsigned char insert_mode;insert_mode334,16205
   int row_count_per_page;row_count_per_page338,16373
   unsigned char cursor_at_end_of_line; // not implemented yetcursor_at_end_of_line346,16582
   unsigned char initialized;initialized347,16646
   unsigned char has_preferred_x;has_preferred_x348,16677
   unsigned char single_line;single_line349,16712
   unsigned char padding1, padding2, padding3;padding1350,16743
   unsigned char padding1, padding2, padding3;padding2350,16743
   unsigned char padding1, padding2, padding3;padding3350,16743
   float preferred_x; // this determines where the cursor up/down tries to seek to along xpreferred_x351,16791
   StbUndoState undostate;undostate352,16883
} STB_TexteditState;STB_TexteditState353,16911
{__anon3a9009730408365,17184
   float x0,x1;             // starting x location, end x location (allows for align=right, etc)x0366,17187
   float x0,x1;             // starting x location, end x location (allows for align=right, etc)x1366,17187
   float baseline_y_delta;  // position of baseline relative to previous row's baselinebaseline_y_delta367,17285
   float ymin,ymax;         // height of row above and below baselineymin368,17374
   float ymin,ymax;         // height of row above and below baselineymax368,17374
   int num_chars;num_chars369,17445
} StbTexteditRow;StbTexteditRow370,17464
#define STB_TEXTEDIT_memmove STB_TEXTEDIT_memmove388,17927
static int stb_text_locate_coord(STB_TEXTEDIT_STRING *str, float x, float y)stb_text_locate_coord398,18174
static void stb_textedit_click(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, float x, floastb_textedit_click458,19821
static void stb_textedit_drag(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, float x, floatstb_textedit_drag476,20462
{__anon3a9009730508509,21704
   float x,y;    // position of n'th characterx510,21707
   float x,y;    // position of n'th charactery510,21707
   float height; // height of lineheight511,21755
   int first_char, length; // first char of row, and lengthfirst_char512,21791
   int first_char, length; // first char of row, and lengthlength512,21791
   int prev_first;  // first char of previous rowprev_first513,21852
} StbFindState;StbFindState514,21903
static void stb_textedit_find_charpos(StbFindState *find, STB_TEXTEDIT_STRING *str, int n, int sstb_textedit_find_charpos518,22076
#define STB_TEXT_HAS_SELECTION(STB_TEXT_HAS_SELECTION574,23608
static void stb_textedit_clamp(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)stb_textedit_clamp577,23757
static void stb_textedit_delete(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int where, istb_textedit_delete591,24317
static void stb_textedit_delete_selection(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)stb_textedit_delete_selection599,24586
static void stb_textedit_sortselection(STB_TexteditState *state)stb_textedit_sortselection615,25275
static void stb_textedit_move_to_first(STB_TexteditState *state)stb_textedit_move_to_first625,25574
static void stb_textedit_move_to_last(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)stb_textedit_move_to_last636,25911
static int is_word_boundary( STB_TEXTEDIT_STRING *str, int idx )is_word_boundary648,26293
static int stb_textedit_move_to_word_previous( STB_TEXTEDIT_STRING *str, int c )stb_textedit_move_to_word_previous654,26548
#define STB_TEXTEDIT_MOVEWORDLEFT STB_TEXTEDIT_MOVEWORDLEFT665,26794
static int stb_textedit_move_to_word_next( STB_TEXTEDIT_STRING *str, int c )stb_textedit_move_to_word_next669,26910
#define STB_TEXTEDIT_MOVEWORDRIGHT STB_TEXTEDIT_MOVEWORDRIGHT681,27206
static void stb_textedit_prep_selection_at_cursor(STB_TexteditState *state)stb_textedit_prep_selection_at_cursor687,27345
static int stb_textedit_cut(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)stb_textedit_cut696,27615
static int stb_textedit_paste_internal(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, STB_Tstb_textedit_paste_internal707,27949
#define STB_TEXTEDIT_KEYTYPE STB_TEXTEDIT_KEYTYPE726,28666
static void stb_textedit_key(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, STB_TEXTEDIT_KEstb_textedit_key730,28748
static void stb_textedit_flush_redo(StbUndoState *state)stb_textedit_flush_redo1120,42815
static void stb_textedit_discard_undo(StbUndoState *state)stb_textedit_discard_undo1127,43037
static void stb_textedit_discard_redo(StbUndoState *state)stb_textedit_discard_redo1149,44155
static StbUndoRecord *stb_text_create_undo_record(StbUndoState *state, int numchars)stb_text_create_undo_record1179,45850
static STB_TEXTEDIT_CHARTYPE *stb_text_createundo(StbUndoState *state, int pos, int insert_len, stb_text_createundo1203,46720
static void stb_text_undo(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)stb_text_undo1223,47340
static void stb_text_redo(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)stb_text_redo1291,49841
static void stb_text_makeundo_insert(STB_TexteditState *state, int where, int length)stb_text_makeundo_insert1342,51485
static void stb_text_makeundo_delete(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int whestb_text_makeundo_delete1347,51642
static void stb_text_makeundo_replace(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int whstb_text_makeundo_replace1357,51969
static void stb_textedit_clear_state(STB_TexteditState *state, int is_single_line)stb_textedit_clear_state1368,52365
static void stb_textedit_initialize_state(STB_TexteditState *state, int is_single_line)stb_textedit_initialize_state1386,53003
static int stb_textedit_paste(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, STB_TEXTEDIT_Cstb_textedit_paste1396,53283

../gejo/libs/imgui/imstb_truetype.h,32314
   typedef unsigned char   stbtt_uint8;stbtt_uint8429,17776
   typedef signed   char   stbtt_int8;stbtt_int8430,17817
   typedef unsigned short  stbtt_uint16;stbtt_uint16431,17857
   typedef signed   short  stbtt_int16;stbtt_int16432,17899
   typedef unsigned int    stbtt_uint32;stbtt_uint32433,17940
   typedef signed   int    stbtt_int32;stbtt_int32434,17982
   typedef char stbtt__check_size32[sizeof(stbtt_int32)==4 ? 1 : -1];stbtt__check_size32437,18036
   typedef char stbtt__check_size16[sizeof(stbtt_int16)==2 ? 1 : -1];stbtt__check_size16438,18107
   #define STBTT_ifloor(STBTT_ifloor443,18299
   #define STBTT_iceil(STBTT_iceil444,18346
   #define STBTT_sqrt(STBTT_sqrt449,18450
   #define STBTT_pow(STBTT_pow450,18489
   #define STBTT_fmod(STBTT_fmod455,18587
   #define STBTT_cos(STBTT_cos460,18685
   #define STBTT_acos(STBTT_acos461,18723
   #define STBTT_fabs(STBTT_fabs466,18820
   #define STBTT_malloc(STBTT_malloc472,19003
   #define STBTT_free(STBTT_free473,19056
   #define STBTT_assert(STBTT_assert478,19169
   #define STBTT_strlen(STBTT_strlen483,19272
   #define STBTT_memcpy STBTT_memcpy488,19375
   #define STBTT_memset STBTT_memset489,19413
#define __STB_INCLUDE_STB_TRUETYPE_H____STB_INCLUDE_STB_TRUETYPE_H__501,19712
#define STBTT_DEF STBTT_DEF504,19775
#define STBTT_DEF STBTT_DEF506,19808
{__anon01efb36a0108515,19926
   unsigned char *data;data516,19929
   int cursor;cursor517,19954
   int size;size518,19970
} stbtt__buf;stbtt__buf519,19984
{__anon01efb36a0208529,20201
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapx0530,20204
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapy0530,20204
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapx1530,20204
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapy1530,20204
   float xoff,yoff,xadvance;xoff531,20269
   float xoff,yoff,xadvance;yoff531,20269
   float xoff,yoff,xadvance;xadvance531,20269
} stbtt_bakedchar;stbtt_bakedchar532,20299
{__anon01efb36a0308545,21116
   float x0,y0,s0,t0; // top-leftx0546,21119
   float x0,y0,s0,t0; // top-lefty0546,21119
   float x0,y0,s0,t0; // top-lefts0546,21119
   float x0,y0,s0,t0; // top-leftt0546,21119
   float x1,y1,s1,t1; // bottom-rightx1547,21154
   float x1,y1,s1,t1; // bottom-righty1547,21154
   float x1,y1,s1,t1; // bottom-rights1547,21154
   float x1,y1,s1,t1; // bottom-rightt1547,21154
} stbtt_aligned_quad;stbtt_aligned_quad548,21193
{__anon01efb36a0408577,22586
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapx0578,22589
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapy0578,22589
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapx1578,22589
   unsigned short x0,y0,x1,y1; // coordinates of bbox in bitmapy1578,22589
   float xoff,yoff,xadvance;xoff579,22654
   float xoff,yoff,xadvance;yoff579,22654
   float xoff,yoff,xadvance;xadvance579,22654
   float xoff2,yoff2;xoff2580,22684
   float xoff2,yoff2;yoff2580,22684
} stbtt_packedchar;stbtt_packedchar581,22707
typedef struct stbtt_pack_context stbtt_pack_context;stbtt_pack_context583,22730
typedef struct stbtt_fontinfo stbtt_fontinfo;stbtt_fontinfo584,22785
typedef struct stbrp_rect stbrp_rect;stbrp_rect586,22863
#define STBTT_POINT_SIZE(STBTT_POINT_SIZE603,23720
{__anon01efb36a0508621,24861
   float font_size;font_size622,24864
   int first_unicode_codepoint_in_range;  // if non-zero, then the chars are continuous, and thifirst_unicode_codepoint_in_range623,24885
   int *array_of_unicode_codepoints;       // if non-zero, then this is an array of unicode codearray_of_unicode_codepoints624,25007
   int num_chars;num_chars625,25111
   stbtt_packedchar *chardata_for_range; // outputchardata_for_range626,25130
   unsigned char h_oversample, v_oversample; // don't set these, they're used internallyh_oversample627,25182
   unsigned char h_oversample, v_oversample; // don't set these, they're used internallyv_oversample627,25182
} stbtt_pack_range;stbtt_pack_range628,25272
struct stbtt_pack_context {stbtt_pack_context679,28635
   void *user_allocator_context;user_allocator_context680,28664
   void *pack_info;pack_info681,28698
   int   width;width682,28719
   int   height;height683,28736
   int   stride_in_bytes;stride_in_bytes684,28754
   int   padding;padding685,28781
   int   skip_missing;skip_missing686,28800
   unsigned int   h_oversample, v_oversample;h_oversample687,28824
   unsigned int   h_oversample, v_oversample;v_oversample687,28824
   unsigned char *pixels;pixels688,28871
   void  *nodes;nodes689,28898
struct stbtt_fontinfostbtt_fontinfo714,30081
   void           * userdata;userdata716,30107
   unsigned char  * data;              // pointer to .ttf filedata717,30138
   int              fontstart;         // offset of start of fontfontstart718,30202
   int numGlyphs;                     // number of glyphs, needed for range checkingnumGlyphs720,30271
   int loca,head,glyf,hhea,hmtx,kern,gpos; // table locations as offset from start of .ttfloca722,30359
   int loca,head,glyf,hhea,hmtx,kern,gpos; // table locations as offset from start of .ttfhead722,30359
   int loca,head,glyf,hhea,hmtx,kern,gpos; // table locations as offset from start of .ttfglyf722,30359
   int loca,head,glyf,hhea,hmtx,kern,gpos; // table locations as offset from start of .ttfhhea722,30359
   int loca,head,glyf,hhea,hmtx,kern,gpos; // table locations as offset from start of .ttfhmtx722,30359
   int loca,head,glyf,hhea,hmtx,kern,gpos; // table locations as offset from start of .ttfkern722,30359
   int loca,head,glyf,hhea,hmtx,kern,gpos; // table locations as offset from start of .ttfgpos722,30359
   int index_map;                     // a cmap mapping for our chosen character encodingindex_map723,30451
   int indexToLocFormat;              // format needed to map from glyph index to glyphindexToLocFormat724,30542
   stbtt__buf cff;                    // cff font datacff726,30633
   stbtt__buf charstrings;            // the charstring indexcharstrings727,30689
   stbtt__buf gsubrs;                 // global charstring subroutines indexgsubrs728,30752
   stbtt__buf subrs;                  // private charstring subroutines indexsubrs729,30830
   stbtt__buf fontdicts;              // array of font dictsfontdicts730,30909
   stbtt__buf fdselect;               // map from glyph to fontdictfdselect731,30971
   enum {__anon01efb36a0603813,35406
      STBTT_vmove=1,STBTT_vmove814,35417
      STBTT_vline,STBTT_vline815,35439
      STBTT_vcurve,STBTT_vcurve816,35459
      STBTT_vcubicSTBTT_vcubic817,35480
   #define stbtt_vertex_type stbtt_vertex_type823,35651
   {__anon01efb36a0708825,35777
      stbtt_vertex_type x,y,cx,cy,cx1,cy1;x826,35783
      stbtt_vertex_type x,y,cx,cy,cx1,cy1;y826,35783
      stbtt_vertex_type x,y,cx,cy,cx1,cy1;cx826,35783
      stbtt_vertex_type x,y,cx,cy,cx1,cy1;cy826,35783
      stbtt_vertex_type x,y,cx,cy,cx1,cy1;cx1826,35783
      stbtt_vertex_type x,y,cx,cy,cx1,cy1;cy1826,35783
      unsigned char type,padding;type827,35827
      unsigned char type,padding;padding827,35827
   } stbtt_vertex;stbtt_vertex828,35862
{__anon01efb36a0808908,41556
   int w,h,stride;w909,41559
   int w,h,stride;h909,41559
   int w,h,stride;stride909,41559
   unsigned char *pixels;pixels910,41579
} stbtt__bitmap;stbtt__bitmap911,41606
#define STBTT_MACSTYLE_DONTCARE STBTT_MACSTYLE_DONTCARE1009,47968
#define STBTT_MACSTYLE_BOLD STBTT_MACSTYLE_BOLD1010,48007
#define STBTT_MACSTYLE_ITALIC STBTT_MACSTYLE_ITALIC1011,48046
#define STBTT_MACSTYLE_UNDERSCORE STBTT_MACSTYLE_UNDERSCORE1012,48085
#define STBTT_MACSTYLE_NONE STBTT_MACSTYLE_NONE1013,48124
enum { // platformID__anon01efb36a09031027,48990
   STBTT_PLATFORM_ID_UNICODE   =0,STBTT_PLATFORM_ID_UNICODE1028,49012
   STBTT_PLATFORM_ID_MAC       =1,STBTT_PLATFORM_ID_MAC1029,49048
   STBTT_PLATFORM_ID_ISO       =2,STBTT_PLATFORM_ID_ISO1030,49084
   STBTT_PLATFORM_ID_MICROSOFT =3STBTT_PLATFORM_ID_MICROSOFT1031,49120
enum { // encodingID for STBTT_PLATFORM_ID_UNICODE__anon01efb36a0a031034,49161
   STBTT_UNICODE_EID_UNICODE_1_0    =0,STBTT_UNICODE_EID_UNICODE_1_01035,49213
   STBTT_UNICODE_EID_UNICODE_1_1    =1,STBTT_UNICODE_EID_UNICODE_1_11036,49254
   STBTT_UNICODE_EID_ISO_10646      =2,STBTT_UNICODE_EID_ISO_106461037,49295
   STBTT_UNICODE_EID_UNICODE_2_0_BMP=3,STBTT_UNICODE_EID_UNICODE_2_0_BMP1038,49336
   STBTT_UNICODE_EID_UNICODE_2_0_FULL=4STBTT_UNICODE_EID_UNICODE_2_0_FULL1039,49377
enum { // encodingID for STBTT_PLATFORM_ID_MICROSOFT__anon01efb36a0b031042,49424
   STBTT_MS_EID_SYMBOL        =0,STBTT_MS_EID_SYMBOL1043,49478
   STBTT_MS_EID_UNICODE_BMP   =1,STBTT_MS_EID_UNICODE_BMP1044,49513
   STBTT_MS_EID_SHIFTJIS      =2,STBTT_MS_EID_SHIFTJIS1045,49548
   STBTT_MS_EID_UNICODE_FULL  =10STBTT_MS_EID_UNICODE_FULL1046,49583
enum { // encodingID for STBTT_PLATFORM_ID_MAC; same as Script Manager codes__anon01efb36a0c031049,49624
   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,STBTT_MAC_EID_ROMAN1050,49702
   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,STBTT_MAC_EID_ARABIC1050,49702
   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,STBTT_MAC_EID_JAPANESE1051,49770
   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,STBTT_MAC_EID_HEBREW1051,49770
   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,STBTT_MAC_EID_CHINESE_TRAD1052,49838
   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,STBTT_MAC_EID_GREEK1052,49838
   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7STBTT_MAC_EID_KOREAN1053,49906
   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7STBTT_MAC_EID_RUSSIAN1053,49906
enum { // languageID for STBTT_PLATFORM_ID_MICROSOFT; same as LCID...__anon01efb36a0d031056,49979
   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,STBTT_MS_LANG_ENGLISH1058,50133
   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,STBTT_MS_LANG_ITALIAN1058,50133
   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,STBTT_MS_LANG_CHINESE1059,50209
   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,STBTT_MS_LANG_JAPANESE1059,50209
   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,STBTT_MS_LANG_DUTCH1060,50285
   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,STBTT_MS_LANG_KOREAN1060,50285
   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,STBTT_MS_LANG_FRENCH1061,50361
   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,STBTT_MS_LANG_RUSSIAN1061,50361
   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,STBTT_MS_LANG_GERMAN1062,50437
   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,STBTT_MS_LANG_SPANISH1062,50437
   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041DSTBTT_MS_LANG_HEBREW1063,50513
   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041DSTBTT_MS_LANG_SWEDISH1063,50513
enum { // languageID for STBTT_PLATFORM_ID_MAC__anon01efb36a0e031066,50594
   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,STBTT_MAC_LANG_ENGLISH1067,50642
   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,STBTT_MAC_LANG_JAPANESE1067,50642
   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,STBTT_MAC_LANG_ARABIC1068,50714
   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,STBTT_MAC_LANG_KOREAN1068,50714
   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,STBTT_MAC_LANG_DUTCH1069,50786
   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,STBTT_MAC_LANG_RUSSIAN1069,50786
   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,STBTT_MAC_LANG_FRENCH1070,50858
   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,STBTT_MAC_LANG_SPANISH1070,50858
   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,STBTT_MAC_LANG_GERMAN1071,50930
   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,STBTT_MAC_LANG_SWEDISH1071,50930
   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,STBTT_MAC_LANG_HEBREW1072,51002
   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,STBTT_MAC_LANG_CHINESE_SIMPLIFIED1072,51002
   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19STBTT_MAC_LANG_ITALIAN1073,51080
   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19STBTT_MAC_LANG_CHINESE_TRAD1073,51080
#define STBTT_MAX_OVERSAMPLE STBTT_MAX_OVERSAMPLE1092,51507
typedef int stbtt__test_oversample_pow2[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1)) == 0 ?stbtt__test_oversample_pow21099,51640
#define STBTT_RASTERIZER_VERSION STBTT_RASTERIZER_VERSION1102,51783
#define STBTT__NOTUSED(STBTT__NOTUSED1106,51846
#define STBTT__NOTUSED(STBTT__NOTUSED1108,51891
static stbtt_uint8 stbtt__buf_get8(stbtt__buf *b)stbtt__buf_get81116,52078
static stbtt_uint8 stbtt__buf_peek8(stbtt__buf *b)stbtt__buf_peek81123,52217
static void stbtt__buf_seek(stbtt__buf *b, int o)stbtt__buf_seek1130,52355
static void stbtt__buf_skip(stbtt__buf *b, int o)stbtt__buf_skip1136,52511
static stbtt_uint32 stbtt__buf_get(stbtt__buf *b, int n)stbtt__buf_get1141,52609
static stbtt__buf stbtt__new_buf(const void *p, size_t size)stbtt__new_buf1151,52830
#define stbtt__buf_get16(stbtt__buf_get161161,53043
#define stbtt__buf_get32(stbtt__buf_get321162,53096
static stbtt__buf stbtt__buf_range(const stbtt__buf *b, int o, int s)stbtt__buf_range1164,53151
static stbtt__buf stbtt__cff_get_index(stbtt__buf *b)stbtt__cff_get_index1173,53398
static stbtt_uint32 stbtt__cff_int(stbtt__buf *b)stbtt__cff_int1187,53820
static void stbtt__cff_skip_operand(stbtt__buf *b) {stbtt__cff_skip_operand1199,54306
static stbtt__buf stbtt__dict_get(stbtt__buf *b, int key)stbtt__dict_get1214,54676
static void stbtt__dict_get_ints(stbtt__buf *b, int key, int outcount, stbtt_uint32 *out)stbtt__dict_get_ints1229,55145
static int stbtt__cff_index_count(stbtt__buf *b)stbtt__cff_index_count1237,55419
static stbtt__buf stbtt__cff_index_get(stbtt__buf b, int i)stbtt__cff_index_get1243,55536
#define ttBYTE(ttBYTE1265,56296
#define ttCHAR(ttCHAR1266,56343
#define ttFixed(ttFixed1267,56389
static stbtt_uint16 ttUSHORT(stbtt_uint8 *p) { return p[0]*256 + p[1]; }ttUSHORT1269,56424
static stbtt_int16 ttSHORT(stbtt_uint8 *p)   { return p[0]*256 + p[1]; }ttSHORT1270,56498
static stbtt_uint32 ttULONG(stbtt_uint8 *p)  { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]ttULONG1271,56572
static stbtt_int32 ttLONG(stbtt_uint8 *p)    { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]ttLONG1272,56673
#define stbtt_tag4(stbtt_tag41274,56776
#define stbtt_tag(stbtt_tag1275,56882
static int stbtt__isfont(stbtt_uint8 *font)stbtt__isfont1277,56962
static stbtt_uint32 stbtt__find_table(stbtt_uint8 *data, stbtt_uint32 fontstart, const char *tagstbtt__find_table1289,57466
static int stbtt_GetFontOffsetForIndex_internal(unsigned char *font_collection, int index)stbtt_GetFontOffsetForIndex_internal1302,57870
static int stbtt_GetNumberOfFonts_internal(unsigned char *font_collection)stbtt_GetNumberOfFonts_internal1321,58484
static stbtt__buf stbtt__get_subrs(stbtt__buf cff, stbtt__buf fontdict)stbtt__get_subrs1337,58949
static int stbtt_InitFont_internal(stbtt_fontinfo *info, unsigned char *data, int fontstart)stbtt_InitFont_internal1350,59505
STBTT_DEF int stbtt_FindGlyphIndex(const stbtt_fontinfo *info, int unicode_codepoint)stbtt_FindGlyphIndex1461,63670
STBTT_DEF int stbtt_GetCodepointShape(const stbtt_fontinfo *info, int unicode_codepoint, stbtt_vstbtt_GetCodepointShape1554,67478
static void stbtt_setvertex(stbtt_vertex *v, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbstbtt_setvertex1559,67696
static int stbtt__GetGlyfOffset(const stbtt_fontinfo *info, int glyph_index)stbtt__GetGlyfOffset1568,67966
STBTT_DEF int stbtt_GetGlyphBox(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, istbtt_GetGlyphBox1590,68837
STBTT_DEF int stbtt_GetCodepointBox(const stbtt_fontinfo *info, int codepoint, int *x0, int *y0,stbtt_GetCodepointBox1606,69369
STBTT_DEF int stbtt_IsGlyphEmpty(const stbtt_fontinfo *info, int glyph_index)stbtt_IsGlyphEmpty1611,69580
static int stbtt__close_shape(stbtt_vertex *vertices, int num_vertices, int was_off, int start_ostbtt__close_shape1623,69977
static int stbtt__GetGlyphShapeTT(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvstbtt__GetGlyphShapeTT1639,70644
{__anon01efb36a0f081866,79344
   int bounds;bounds1867,79347
   int started;started1868,79363
   float first_x, first_y;first_x1869,79380
   float first_x, first_y;first_y1869,79380
   float x, y;x1870,79408
   float x, y;y1870,79408
   stbtt_int32 min_x, max_x, min_y, max_y;min_x1871,79424
   stbtt_int32 min_x, max_x, min_y, max_y;max_x1871,79424
   stbtt_int32 min_x, max_x, min_y, max_y;min_y1871,79424
   stbtt_int32 min_x, max_x, min_y, max_y;max_y1871,79424
   stbtt_vertex *pvertices;pvertices1873,79470
   int num_vertices;num_vertices1874,79499
} stbtt__csctx;stbtt__csctx1875,79521
#define STBTT__CSCTX_INIT(STBTT__CSCTX_INIT1877,79540
static void stbtt__track_vertex(stbtt__csctx *c, stbtt_int32 x, stbtt_int32 y)stbtt__track_vertex1879,79616
static void stbtt__csctx_v(stbtt__csctx *c, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbtstbtt__csctx_v1888,79928
static void stbtt__csctx_close_shape(stbtt__csctx *ctx)stbtt__csctx_close_shape1904,80525
static void stbtt__csctx_rmove_to(stbtt__csctx *ctx, float dx, float dy)stbtt__csctx_rmove_to1910,80739
static void stbtt__csctx_rline_to(stbtt__csctx *ctx, float dx, float dy)stbtt__csctx_rline_to1918,81014
static void stbtt__csctx_rccurve_to(stbtt__csctx *ctx, float dx1, float dy1, float dx2, float dystbtt__csctx_rccurve_to1925,81208
static stbtt__buf stbtt__get_subr(stbtt__buf idx, int n)stbtt__get_subr1936,81605
static stbtt__buf stbtt__cid_get_glyph_subrs(const stbtt_fontinfo *info, int glyph_index)stbtt__cid_get_glyph_subrs1950,81954
static int stbtt__run_charstring(const stbtt_fontinfo *info, int glyph_index, stbtt__csctx *c)stbtt__run_charstring1978,82905
#define STBTT__CSERR(STBTT__CSERR1986,83205
static int stbtt__GetGlyphShapeT2(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvstbtt__GetGlyphShapeT22237,91626
static int stbtt__GetGlyphInfoT2(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, stbtt__GetGlyphInfoT22254,92382
STBTT_DEF int stbtt_GetGlyphShape(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvstbtt_GetGlyphShape2265,92785
STBTT_DEF void stbtt_GetGlyphHMetrics(const stbtt_fontinfo *info, int glyph_index, int *advanceWstbtt_GetGlyphHMetrics2273,93069
static int  stbtt__GetGlyphKernInfoAdvance(const stbtt_fontinfo *info, int glyph1, int glyph2)stbtt__GetGlyphKernInfoAdvance2285,93799
static stbtt_int32  stbtt__GetCoverageIndex(stbtt_uint8 *coverageTable, int glyph)stbtt__GetCoverageIndex2315,94655
static stbtt_int32  stbtt__GetGlyphClass(stbtt_uint8 *classDefTable, int glyph)stbtt__GetGlyphClass2374,96616
#define STBTT_GPOS_TODO_assert(STBTT_GPOS_TODO_assert2426,98589
static stbtt_int32  stbtt__GetGlyphGPOSInfoAdvance(const stbtt_fontinfo *info, int glyph1, int gstbtt__GetGlyphGPOSInfoAdvance2428,98626
STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int g1, int g2)stbtt_GetGlyphKernAdvance2556,104781
STBTT_DEF int  stbtt_GetCodepointKernAdvance(const stbtt_fontinfo *info, int ch1, int ch2)stbtt_GetCodepointKernAdvance2569,105094
STBTT_DEF void stbtt_GetCodepointHMetrics(const stbtt_fontinfo *info, int codepoint, int *advancstbtt_GetCodepointHMetrics2576,105430
STBTT_DEF void stbtt_GetFontVMetrics(const stbtt_fontinfo *info, int *ascent, int *descent, int stbtt_GetFontVMetrics2581,105668
STBTT_DEF int  stbtt_GetFontVMetricsOS2(const stbtt_fontinfo *info, int *typoAscent, int *typoDestbtt_GetFontVMetricsOS22588,105975
STBTT_DEF void stbtt_GetFontBoundingBox(const stbtt_fontinfo *info, int *x0, int *y0, int *x1, istbtt_GetFontBoundingBox2599,106418
STBTT_DEF float stbtt_ScaleForPixelHeight(const stbtt_fontinfo *info, float height)stbtt_ScaleForPixelHeight2607,106727
STBTT_DEF float stbtt_ScaleForMappingEmToPixels(const stbtt_fontinfo *info, float pixels)stbtt_ScaleForMappingEmToPixels2613,106952
STBTT_DEF void stbtt_FreeShape(const stbtt_fontinfo *info, stbtt_vertex *v)stbtt_FreeShape2619,107144
STBTT_DEF void stbtt_GetGlyphBitmapBoxSubpixel(const stbtt_fontinfo *font, int glyph, float scalstbtt_GetGlyphBitmapBoxSubpixel2629,107391
STBTT_DEF void stbtt_GetGlyphBitmapBox(const stbtt_fontinfo *font, int glyph, float scale_x, flostbtt_GetGlyphBitmapBox2647,108202
STBTT_DEF void stbtt_GetCodepointBitmapBoxSubpixel(const stbtt_fontinfo *font, int codepoint, flstbtt_GetCodepointBitmapBoxSubpixel2652,108457
STBTT_DEF void stbtt_GetCodepointBitmapBox(const stbtt_fontinfo *font, int codepoint, float scalstbtt_GetCodepointBitmapBox2657,108792
typedef struct stbtt__hheap_chunkstbtt__hheap_chunk2666,109162
   struct stbtt__hheap_chunk *next;next2668,109200
} stbtt__hheap_chunk;stbtt__hheap_chunk2669,109237
typedef struct stbtt__hheapstbtt__hheap2671,109262
   struct stbtt__hheap_chunk *head;head2673,109294
   void   *first_free;first_free2674,109331
   int    num_remaining_in_head_chunk;num_remaining_in_head_chunk2675,109355
} stbtt__hheap;stbtt__hheap2676,109395
static void *stbtt__hheap_alloc(stbtt__hheap *hh, size_t size, void *userdata)stbtt__hheap_alloc2678,109414
static void stbtt__hheap_free(stbtt__hheap *hh, void *p)stbtt__hheap_free2699,110190
static void stbtt__hheap_cleanup(stbtt__hheap *hh, void *userdata)stbtt__hheap_cleanup2705,110315
typedef struct stbtt__edge {stbtt__edge2715,110537
   float x0,y0, x1,y1;x02716,110567
   float x0,y0, x1,y1;y02716,110567
   float x0,y0, x1,y1;x12716,110567
   float x0,y0, x1,y1;y12716,110567
   int invert;invert2717,110591
} stbtt__edge;stbtt__edge2718,110607
typedef struct stbtt__active_edgestbtt__active_edge2721,110627
   struct stbtt__active_edge *next;next2723,110665
   int x,dx;x2725,110738
   int x,dx;dx2725,110738
   float ey;ey2726,110752
   int direction;direction2727,110766
   float fx,fdx,fdy;fx2729,110823
   float fx,fdx,fdy;fdx2729,110823
   float fx,fdx,fdy;fdy2729,110823
   float direction;direction2730,110845
   float sy;sy2731,110866
   float ey;ey2732,110880
} stbtt__active_edge;stbtt__active_edge2736,110975
#define STBTT_FIXSHIFT STBTT_FIXSHIFT2739,111035
#define STBTT_FIX STBTT_FIX2740,111064
#define STBTT_FIXMASK STBTT_FIXMASK2741,111112
static stbtt__active_edge *stbtt__new_active(stbtt__hheap *hh, stbtt__edge *e, int off_x, float stbtt__new_active2743,111154
static stbtt__active_edge *stbtt__new_active(stbtt__hheap *hh, stbtt__edge *e, int off_x, float stbtt__new_active2765,111955
static void stbtt__fill_active_edges(unsigned char *scanline, int len, stbtt__active_edge *e, instbtt__fill_active_edges2790,112902
static void stbtt__rasterize_sorted_edges(stbtt__bitmap *result, stbtt__edge *e, int n, int vsubstbtt__rasterize_sorted_edges2832,114464
static void stbtt__handle_clipped_edge(float *scanline, int x, stbtt__active_edge *e, float x0, stbtt__handle_clipped_edge2936,118150
static void stbtt__fill_active_edges_new(float *scanline, float *scanline_fill, int len, stbtt__stbtt__fill_active_edges_new2973,119194
static void stbtt__rasterize_sorted_edges(stbtt__bitmap *result, stbtt__edge *e, int n, int vsubstbtt__rasterize_sorted_edges3137,126663
#define STBTT__COMPARE(STBTT__COMPARE3237,129924
static void stbtt__sort_edges_ins_sort(stbtt__edge *p, int n)stbtt__sort_edges_ins_sort3239,129976
static void stbtt__sort_edges_quicksort(stbtt__edge *p, int n)stbtt__sort_edges_quicksort3257,130357
static void stbtt__sort_edges(stbtt__edge *p, int n)stbtt__sort_edges3319,132099
{__anon01efb36a10083326,132254
   float x,y;x3327,132257
   float x,y;y3327,132257
} stbtt__point;stbtt__point3328,132272
static void stbtt__rasterize(stbtt__bitmap *result, stbtt__point *pts, int *wcount, int windingsstbtt__rasterize3330,132291
static void stbtt__add_point(stbtt__point *points, int n, float x, float y)stbtt__add_point3387,134317
static int stbtt__tesselate_curve(stbtt__point *points, int *num_points, float x0, float y0, flostbtt__tesselate_curve3395,134606
static void stbtt__tesselate_cubic(stbtt__point *points, int *num_points, float x0, float y0, flstbtt__tesselate_cubic3415,135526
static stbtt__point *stbtt_FlattenCurves(stbtt_vertex *vertices, int num_verts, float objspace_fstbtt_FlattenCurves3458,137111
STBTT_DEF void stbtt_Rasterize(stbtt__bitmap *result, float flatness_in_pixels, stbtt_vertex *vestbtt_Rasterize3535,139875
STBTT_DEF void stbtt_FreeBitmap(unsigned char *bitmap, void *userdata)stbtt_FreeBitmap3548,140645
STBTT_DEF unsigned char *stbtt_GetGlyphBitmapSubpixel(const stbtt_fontinfo *info, float scale_x,stbtt_GetGlyphBitmapSubpixel3553,140759
STBTT_DEF unsigned char *stbtt_GetGlyphBitmap(const stbtt_fontinfo *info, float scale_x, float sstbtt_GetGlyphBitmap3593,142059
STBTT_DEF void stbtt_MakeGlyphBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *output, stbtt_MakeGlyphBitmapSubpixel3598,142341
STBTT_DEF void stbtt_MakeGlyphBitmap(const stbtt_fontinfo *info, unsigned char *output, int out_stbtt_MakeGlyphBitmap3617,143078
STBTT_DEF unsigned char *stbtt_GetCodepointBitmapSubpixel(const stbtt_fontinfo *info, float scalstbtt_GetCodepointBitmapSubpixel3622,143365
STBTT_DEF void stbtt_MakeCodepointBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned cstbtt_MakeCodepointBitmapSubpixelPrefilter3627,143728
STBTT_DEF void stbtt_MakeCodepointBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *outpstbtt_MakeCodepointBitmapSubpixel3632,144223
STBTT_DEF unsigned char *stbtt_GetCodepointBitmap(const stbtt_fontinfo *info, float scale_x, flostbtt_GetCodepointBitmap3637,144594
STBTT_DEF void stbtt_MakeCodepointBitmap(const stbtt_fontinfo *info, unsigned char *output, int stbtt_MakeCodepointBitmap3642,144891
static int stbtt_BakeFontBitmap_internal(unsigned char *data, int offset,  // font location (usestbtt_BakeFontBitmap_internal3653,145361
STBTT_DEF void stbtt_GetBakedQuad(const stbtt_bakedchar *chardata, int pw, int ph, int char_indestbtt_GetBakedQuad3699,147210
typedef int stbrp_coord;stbrp_coord3727,148144
{__anon01efb36a11083741,149050
   int width,height;width3742,149053
   int width,height;height3742,149053
   int x,y,bottom_y;x3743,149075
   int x,y,bottom_y;y3743,149075
   int x,y,bottom_y;bottom_y3743,149075
} stbrp_context;stbrp_context3744,149097
{__anon01efb36a12083747,149133
   unsigned char x;x3748,149136
} stbrp_node;stbrp_node3749,149157
struct stbrp_rectstbrp_rect3751,149174
   stbrp_coord x,y;x3753,149196
   stbrp_coord x,y;y3753,149196
   int id,w,h,was_packed;id3754,149217
   int id,w,h,was_packed;w3754,149217
   int id,w,h,was_packed;h3754,149217
   int id,w,h,was_packed;was_packed3754,149217
static void stbrp_init_target(stbrp_context *con, int pw, int ph, stbrp_node *nodes, int num_nodstbrp_init_target3757,149250
static void stbrp_pack_rects(stbrp_context *con, stbrp_rect *rects, int num_rects)stbrp_pack_rects3768,149519
STBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, instbtt_PackBegin3797,150384
STBTT_DEF void stbtt_PackEnd  (stbtt_pack_context *spc)stbtt_PackEnd3829,151531
STBTT_DEF void stbtt_PackSetOversampling(stbtt_pack_context *spc, unsigned int h_oversample, unsstbtt_PackSetOversampling3835,151718
STBTT_DEF void stbtt_PackSetSkipMissingCodepoints(stbtt_pack_context *spc, int skip)stbtt_PackSetSkipMissingCodepoints3845,152133
#define STBTT__OVER_MASK STBTT__OVER_MASK3850,152257
static void stbtt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsignestbtt__h_prefilter3852,152311
static void stbtt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsignestbtt__v_prefilter3914,154609
static float stbtt__oversample_shift(int oversample)stbtt__oversample_shift3976,157165
STBTT_DEF int stbtt_PackFontRangesGatherRects(stbtt_pack_context *spc, const stbtt_fontinfo *infstbtt_PackFontRangesGatherRects3989,157632
STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char stbtt_MakeGlyphBitmapSubpixelPrefilter4021,159105
STBTT_DEF int stbtt_PackFontRangesRenderIntoRects(stbtt_pack_context *spc, const stbtt_fontinfo stbtt_PackFontRangesRenderIntoRects4045,160245
STBTT_DEF void stbtt_PackFontRangesPackRects(stbtt_pack_context *spc, stbrp_rect *rects, int numstbtt_PackFontRangesPackRects4127,163991
STBTT_DEF int stbtt_PackFontRanges(stbtt_pack_context *spc, const unsigned char *fontdata, int fstbtt_PackFontRanges4132,164178
STBTT_DEF int stbtt_PackFontRange(stbtt_pack_context *spc, const unsigned char *fontdata, int fostbtt_PackFontRange4168,165497
STBTT_DEF void stbtt_GetScaledFontVMetrics(const unsigned char *fontdata, int index, float size,stbtt_GetScaledFontVMetrics4180,166137
STBTT_DEF void stbtt_GetPackedQuad(const stbtt_packedchar *chardata, int pw, int ph, int char_instbtt_GetPackedQuad4193,166761
#define STBTT_min(STBTT_min4225,167704
#define STBTT_max(STBTT_max4226,167753
static int stbtt__ray_intersect_bezier(float orig[2], float ray[2], float q0[2], float q1[2], flstbtt__ray_intersect_bezier4228,167804
static int equal(float *a, float *b)equal4292,169630
static int stbtt__compute_crossings_x(float x, float y, int nverts, stbtt_vertex *verts)stbtt__compute_crossings_x4297,169719
static float stbtt__cuberoot( float x )stbtt__cuberoot4366,172315
static int stbtt__solve_cubic(float a, float b, float c, float* r)stbtt__solve_cubic4375,172512
STBTT_DEF unsigned char * stbtt_GetGlyphSDF(const stbtt_fontinfo *info, float scale, int glyph, stbtt_GetGlyphSDF4406,173602
STBTT_DEF unsigned char * stbtt_GetCodepointSDF(const stbtt_fontinfo *info, float scale, int codstbtt_GetCodepointSDF4592,182567
STBTT_DEF void stbtt_FreeSDF(unsigned char *bitmap, void *userdata)stbtt_FreeSDF4597,182942
static stbtt_int32 stbtt__CompareUTF8toUTF16_bigendian_prefix(stbtt_uint8 *s1, stbtt_int32 len1,stbtt__CompareUTF8toUTF16_bigendian_prefix4608,183313
static int stbtt_CompareUTF8toUTF16_bigendian_internal(char *s1, int len1, char *s2, int len2) stbtt_CompareUTF8toUTF16_bigendian_internal4647,184791
STBTT_DEF const char *stbtt_GetFontNameString(const stbtt_fontinfo *font, int *length, int platfstbtt_GetFontNameString4654,185174
static int stbtt__matchpair(stbtt_uint8 *fc, stbtt_uint32 nm, stbtt_uint8 *name, stbtt_int32 nlestbtt__matchpair4675,185988
static int stbtt__matches(stbtt_uint8 *fc, stbtt_uint32 offset, stbtt_uint8 *name, stbtt_int32 fstbtt__matches4722,188075
static int stbtt_FindMatchingFont_internal(unsigned char *font_collection, char *name_utf8, stbtstbtt_FindMatchingFont_internal4751,189147
STBTT_DEF int stbtt_BakeFontBitmap(const unsigned char *data, int offset,stbtt_BakeFontBitmap4767,189669
STBTT_DEF int stbtt_GetFontOffsetForIndex(const unsigned char *data, int index)stbtt_GetFontOffsetForIndex4774,190072
STBTT_DEF int stbtt_GetNumberOfFonts(const unsigned char *data)stbtt_GetNumberOfFonts4779,190244
STBTT_DEF int stbtt_InitFont(stbtt_fontinfo *info, const unsigned char *data, int offset)stbtt_InitFont4784,190385
STBTT_DEF int stbtt_FindMatchingFont(const unsigned char *fontdata, const char *name, int flags)stbtt_FindMatchingFont4789,190558
STBTT_DEF int stbtt_CompareUTF8toUTF16_bigendian(const char *s1, int len1, const char *s2, int lstbtt_CompareUTF8toUTF16_bigendian4794,190758

../gejo/libs/imgui/LICENSE.txt,0

../gejo/libs/imgui/misc/cpp/imgui_stdlib.cpp,706
struct InputTextCallback_UserDataInputTextCallback_UserData14,505
    std::string*            Str;Str16,543
    ImGuiInputTextCallback  ChainCallback;ChainCallback17,577
    void*                   ChainCallbackUserData;ChainCallbackUserData18,621
static int InputTextCallback(ImGuiInputTextCallbackData* data)InputTextCallback21,679
bool ImGui::InputText(const char* label, std::string* str, ImGuiInputTextFlags flags, ImGuiInputInputText42,1486
bool ImGui::InputTextMultiline(const char* label, std::string* str, const ImVec2& size, ImGuiInpInputTextMultiline54,2035
bool ImGui::InputTextWithHint(const char* label, const char* hint, std::string* str, ImGuiInputTInputTextWithHint66,2628

../gejo/libs/imgui/misc/cpp/imgui_stdlib.h,29
namespace ImGuiImGui15,493

../gejo/libs/imgui/misc/cpp/README.txt,0

../gejo/libs/imgui/misc/debuggers/imgui.gdb,0

../gejo/libs/imgui/misc/debuggers/imgui.natstepfilter,0

../gejo/libs/imgui/misc/debuggers/imgui.natvis,0

../gejo/libs/imgui/misc/debuggers/README.txt,0

../gejo/libs/imgui/misc/fonts/binary_to_compressed_c.cpp,1969
#define _CRT_SECURE_NO_WARNINGS_CRT_SECURE_NO_WARNINGS23,1222
typedef unsigned int stb_uint;stb_uint30,1383
typedef unsigned char stb_uchar;stb_uchar31,1415
int main(int argc, char** argv)main36,1649
char Encode85Byte(unsigned int x)Encode85Byte64,2512
bool binary_to_compressed_c(const char* filename, const char* symbol, bool use_base85_encoding, binary_to_compressed_c70,2616
static stb_uint stb_adler32(stb_uint adler32, stb_uchar *buffer, stb_uint buflen)stb_adler32140,5582
static unsigned int stb_matchlen(stb_uchar *m1, stb_uchar *m2, stb_uint maxlen)stb_matchlen171,6485
static stb_uchar *stb__out;stb__out181,6752
static FILE      *stb__outfile;stb__outfile182,6781
static stb_uint   stb__outbytes;stb__outbytes183,6814
static void stb__write(unsigned char v)stb__write185,6850
#define stb_out(stb_out192,7048
static void stb_out2(stb_uint v) { stb_out(v >> 8); stb_out(v); }stb_out2194,7169
static void stb_out3(stb_uint v) { stb_out(v >> 16); stb_out(v >> 8); stb_out(v); }stb_out3195,7236
static void stb_out4(stb_uint v) { stb_out(v >> 24); stb_out(v >> 16); stb_out(v >> 8 ); stb_outstb_out4196,7321
static void outliterals(stb_uchar *in, int numlit)outliterals198,7427
static int stb__window = 0x40000; // 256Kstb__window218,7988
static int stb_not_crap(int best, int dist)stb_not_crap220,8033
static  stb_uint stb__hashsize = 32768;stb__hashsize227,8223
#define stb__hc(stb__hc231,8380
#define stb__hc2(stb__hc2232,8443
#define stb__hc3(stb__hc3233,8521
static unsigned int stb__running_adler;stb__running_adler235,8588
static int stb_compress_chunk(stb_uchar *history,stb_compress_chunk237,8631
#define STB__SCRAMBLE(STB__SCRAMBLE251,8978
#define stb__nc(stb__nc267,9481
#define STB__TRY(STB__TRY269,9556
static int stb_compress_inner(stb_uchar *input, stb_uint length)stb_compress_inner342,12695
stb_uint stb_compress(stb_uchar *out, stb_uchar *input, stb_uint length)stb_compress377,13562

../gejo/libs/imgui/misc/fonts/Cousine-Regular.ttf,0

../gejo/libs/imgui/misc/fonts/DroidSans.ttf,0

../gejo/libs/imgui/misc/fonts/Karla-Regular.ttf,0

../gejo/libs/imgui/misc/fonts/ProggyClean.ttf,0

../gejo/libs/imgui/misc/fonts/ProggyTiny.ttf,0

../gejo/libs/imgui/misc/fonts/Roboto-Medium.ttf,0

../gejo/libs/imgui/misc/freetype/imgui_freetype.cpp,5705
static void* ImGuiFreeTypeDefaultAllocFunc(size_t size, void* user_data) { IM_UNUSED(user_data);ImGuiFreeTypeDefaultAllocFunc57,3650
static void  ImGuiFreeTypeDefaultFreeFunc(void* ptr, void* user_data) { IM_UNUSED(user_data); IMImGuiFreeTypeDefaultFreeFunc58,3773
static void* (*GImGuiFreeTypeAllocFunc)(size_t size, void* user_data) = ImGuiFreeTypeDefaultAlloGImGuiFreeTypeAllocFunc61,3916
static void  (*GImGuiFreeTypeFreeFunc)(void* ptr, void* user_data) = ImGuiFreeTypeDefaultFreeFunGImGuiFreeTypeFreeFunc62,4020
static void* GImGuiFreeTypeAllocatorUserData = NULL;GImGuiFreeTypeAllocatorUserData63,4120
{__anoncc47c6b1011170,4352
    struct GlyphInfoGlyphInfo103,6380
        int         Width;              // Glyph's width in pixels.Width105,6409
        int         Height;             // Glyph's height in pixels.Height106,6478
        FT_Int      OffsetX;            // The distance from the origin ("pen position") to the OffsetX107,6548
        FT_Int      OffsetY;            // The distance from the origin to the top of the glyph.OffsetY108,6664
        float       AdvanceX;           // The distance from the origin to the origin of the nexAdvanceX109,6791
        bool        IsColored;          // The glyph is coloredIsColored110,6926
    struct FontInfoFontInfo114,7038
        uint32_t    PixelHeight;        // Size this font was generated with.PixelHeight116,7066
        float       Ascender;           // The pixel extents above the baseline in pixels (typicAscender117,7145
        float       Descender;          // The extents below the baseline in pixels (typically nDescender118,7258
        float       LineSpacing;        // The baseline-to-baseline distance. Note that it usualLineSpacing119,7365
        float       LineGap;            // The spacing in pixels between one row's descent and tLineGap120,7722
        float       MaxAdvanceWidth;    // This field gives the maximum horizontal cursor advancMaxAdvanceWidth121,7841
    struct FreeTypeFontFreeTypeFont126,8073
        ~FreeTypeFont()         { CloseFont(); }~FreeTypeFont134,8847
        FontInfo        Info;               // Font descriptor of the current font.Info137,8923
        FT_Face         Face;Face138,9008
        unsigned int    UserFlags;          // = ImFontConfig::RasterizerFlagsUserFlags139,9039
        FT_Int32        LoadFlags;LoadFlags140,9119
        FT_Render_Mode  RenderMode;RenderMode141,9155
    #define FT_CEIL(FT_CEIL145,9271
    bool FreeTypeFont::InitFont(FT_Library ft_library, const ImFontConfig& cfg, unsigned int extInitFont147,9322
    void FreeTypeFont::CloseFont()CloseFont190,11085
    void FreeTypeFont::SetPixelHeight(int pixel_height)SetPixelHeight199,11237
    const FT_Glyph_Metrics* FreeTypeFont::LoadGlyph(uint32_t codepoint)LoadGlyph222,12483
    const FT_Bitmap* FreeTypeFont::RenderGlyphAndGetInfo(GlyphInfo* out_glyph_info)RenderGlyphAndGetInfo250,13631
    void FreeTypeFont::BlitGlyph(const FT_Bitmap* ft_bitmap, uint32_t* dst, uint32_t dst_pitch, BlitGlyph268,14358
                #define DE_MULTIPLY(DE_MULTIPLY314,16483
#define STBRP_ASSERT(STBRP_ASSERT346,18103
#define STBRP_STATICSTBRP_STATIC347,18163
#define STB_RECT_PACK_IMPLEMENTATIONSTB_RECT_PACK_IMPLEMENTATION348,18185
struct ImFontBuildSrcGlyphFTImFontBuildSrcGlyphFT357,18361
    GlyphInfo           Info;Info359,18394
    uint32_t            Codepoint;Codepoint360,18425
    unsigned int*       BitmapData;         // Point within one of the dst_tmp_bitmap_buffers[] BitmapData361,18461
    ImFontBuildSrcGlyphFT() { memset(this, 0, sizeof(*this)); }ImFontBuildSrcGlyphFT363,18566
struct ImFontBuildSrcDataFTImFontBuildSrcDataFT366,18637
    FreeTypeFont        Font;Font368,18669
    stbrp_rect*         Rects;              // Rectangle to pack. We first fill in their size anRects369,18700
    const ImWchar*      SrcRanges;          // Ranges as requested by user (user is allowed to rSrcRanges370,18839
    int                 DstIndex;           // Index into atlas->Fonts[] and dst_tmp_array[]DstIndex371,18974
    int                 GlyphsHighest;      // Highest requested codepointGlyphsHighest372,19068
    int                 GlyphsCount;        // Glyph count (excluding missing glyphs and glyphs GlyphsCount373,19144
    ImBitVector         GlyphsSet;          // Glyph bit map (random access, 1-bit per codepointGlyphsSet374,19280
    ImVector<ImFontBuildSrcGlyphFT>   GlyphsList;GlyphsList375,19410
struct ImFontBuildDstDataFTImFontBuildDstDataFT379,19580
    int                 SrcCount;           // Number of source fonts targeting this destinationSrcCount381,19612
    int                 GlyphsHighest;GlyphsHighest382,19716
    int                 GlyphsCount;GlyphsCount383,19756
    ImBitVector         GlyphsSet;          // This is used to resolve collision when multiple sGlyphsSet384,19794
bool ImFontAtlasBuildWithFreeTypeEx(FT_Library ft_library, ImFontAtlas* atlas, unsigned int extrImFontAtlasBuildWithFreeTypeEx387,19945
static void* FreeType_Alloc(FT_Memory /*memory*/, long size)FreeType_Alloc700,35901
static void FreeType_Free(FT_Memory /*memory*/, void* block)FreeType_Free705,36055
static void* FreeType_Realloc(FT_Memory /*memory*/, long cur_size, long new_size, void* block)FreeType_Realloc710,36194
static bool ImFontAtlasBuildWithFreeType(ImFontAtlas* atlas)ImFontAtlasBuildWithFreeType733,36936
const ImFontBuilderIO* ImGuiFreeType::GetBuilderForFreeType()GetBuilderForFreeType757,37844
void ImGuiFreeType::SetAllocatorFunctions(void* (*alloc_func)(size_t sz, void* user_data), void SetAllocatorFunctions764,38022

../gejo/libs/imgui/misc/freetype/imgui_freetype.h,1614
enum ImGuiFreeTypeBuilderFlagsImGuiFreeTypeBuilderFlags19,830
    ImGuiFreeTypeBuilderFlags_NoHinting     = 1 << 0,   // Disable hinting. This generally generImGuiFreeTypeBuilderFlags_NoHinting21,865
    ImGuiFreeTypeBuilderFlags_NoAutoHint    = 1 << 1,   // Disable auto-hinter.ImGuiFreeTypeBuilderFlags_NoAutoHint22,1054
    ImGuiFreeTypeBuilderFlags_ForceAutoHint = 1 << 2,   // Indicates that the auto-hinter is preImGuiFreeTypeBuilderFlags_ForceAutoHint23,1135
    ImGuiFreeTypeBuilderFlags_LightHinting  = 1 << 3,   // A lighter hinting algorithm for gray-ImGuiFreeTypeBuilderFlags_LightHinting24,1270
    ImGuiFreeTypeBuilderFlags_MonoHinting   = 1 << 4,   // Strong hinting algorithm that should ImGuiFreeTypeBuilderFlags_MonoHinting25,1666
    ImGuiFreeTypeBuilderFlags_Bold          = 1 << 5,   // Styling: Should we artificially embolImGuiFreeTypeBuilderFlags_Bold26,1799
    ImGuiFreeTypeBuilderFlags_Oblique       = 1 << 6,   // Styling: Should we slant the font, emImGuiFreeTypeBuilderFlags_Oblique27,1910
    ImGuiFreeTypeBuilderFlags_Monochrome    = 1 << 7,   // Disable anti-aliasing. Combine this wImGuiFreeTypeBuilderFlags_Monochrome28,2029
    ImGuiFreeTypeBuilderFlags_LoadColor     = 1 << 8,   // Enable FreeType color-layered glyphsImGuiFreeTypeBuilderFlags_LoadColor29,2160
    ImGuiFreeTypeBuilderFlags_Bitmap        = 1 << 9    // Enable FreeType bitmap glyphsImGuiFreeTypeBuilderFlags_Bitmap30,2257
namespace ImGuiFreeTypeImGuiFreeType33,2353
    static inline bool BuildFontAtlas(ImFontAtlas* atlas, unsigned int flags = 0) { atlas->FontBBuildFontAtlas48,3392

../gejo/libs/imgui/misc/freetype/README.md,370
# imgui_freetypeimgui_freetype1,0
### UsageUsage6,158
### About Gamma Correct BlendingAbout Gamma Correct Blending12,498
### Testbed for toying with settings (for developers)Testbed for toying with settings (for developers)19,938
### Known issuesKnown issues23,1067
### ComparaisonComparaison27,1191
### Colorful glyphs/emojisColorful glyphs/emojis32,1434

../gejo/libs/imgui/misc/README.txt,0

../gejo/libs/imgui/misc/single_file/imgui_single_file.h,0

../gejo/libs/implot/implot.cpp,16880
#define sprintf sprintf78,6341
#define ImDrawFlags_RoundCornersAll ImDrawFlags_RoundCornersAll83,6610
ImPlotContext* GImPlot = NULL;GImPlot87,6703
ImPlotInputMap::ImPlotInputMap() {ImPlotInputMap93,6928
ImPlotStyle::ImPlotStyle() {ImPlotStyle108,7597
ImPlotItem* ImPlotPlot::GetLegendItem(int i) {GetLegendItem149,8821
const char* ImPlotPlot::GetLegendLabel(int i) {GetLegendLabel154,8964
namespace ImPlot {ImPlot165,9412
const char* GetStyleColorName(ImPlotCol col) {GetStyleColorName167,9434
const char* GetMarkerName(ImPlotMarker marker) {GetMarkerName197,10068
ImVec4 GetAutoColor(ImPlotCol idx) {GetAutoColor214,10784
struct ImPlotStyleVarInfo {ImPlotStyleVarInfo245,13002
    ImGuiDataType   Type;Type246,13031
    ImU32           Count;Count247,13058
    ImU32           Offset;Offset248,13086
    void*           GetVarPtr(ImPlotStyle* style) const { return (void*)((unsigned char*)style +GetVarPtr249,13115
static const ImPlotStyleVarInfo GPlotStyleVarInfo[] =GPlotStyleVarInfo252,13230
static const ImPlotStyleVarInfo* GetPlotStyleVarInfo(ImPlotStyleVar idx) {GetPlotStyleVarInfo285,16470
void AddTextVertical(ImDrawList *DrawList, ImVec2 pos, ImU32 col, const char *text_begin, const AddTextVertical295,16901
double NiceNum(double x, bool round) {NiceNum338,18683
void SetImGuiContext(ImGuiContext* ctx) {SetImGuiContext367,19469
ImPlotContext* CreateContext() {CreateContext371,19553
void DestroyContext(ImPlotContext* ctx) {DestroyContext379,19741
ImPlotContext* GetCurrentContext() {GetCurrentContext387,19915
void SetCurrentContext(ImPlotContext* ctx) {SetCurrentContext391,19979
#define IMPLOT_APPEND_CMAP(IMPLOT_APPEND_CMAP395,20050
#define IM_RGB(IM_RGB396,20162
void Initialize(ImPlotContext* ctx) {Initialize398,20207
void Reset(ImPlotContext* ctx) {Reset437,24036
ImPlotPlot* GetPlot(const char* title) {GetPlot476,25262
ImPlotPlot* GetCurrentPlot() {GetCurrentPlot482,25453
void BustPlotCache() {BustPlotCache486,25524
void PushLinkedAxis(ImPlotAxis& axis) {PushLinkedAxis490,25582
void PullLinkedAxis(ImPlotAxis& axis) {PullLinkedAxis495,25754
void UpdateTransformCache() {UpdateTransformCache504,26113
ImPlotPoint PixelsToPlot(float x, float y, ImPlotYAxis y_axis_in) {PixelsToPlot520,27397
ImPlotPoint PixelsToPlot(const ImVec2& pix, ImPlotYAxis y_axis) {PixelsToPlot538,28519
ImVec2 PlotToPixels(double x, double y, ImPlotYAxis y_axis_in) {PlotToPixels543,28773
ImVec2 PlotToPixels(const ImPlotPoint& plt, ImPlotYAxis y_axis) {PlotToPixels562,30047
ImVec2 GetLocationPos(const ImRect& outer_rect, const ImVec2& inner_size, ImPlotLocation loc, coGetLocationPos570,30348
ImVec2 CalcLegendSize(ImPlotPlot& plot, const ImVec2& pad, const ImVec2& spacing, ImPlotOrientatCalcLegendSize590,31306
void ShowLegendEntries(ImPlotPlot& plot, const ImRect& legend_bb, bool interactable, const ImVecShowLegendEntries611,32398
void AddTicksDefault(const ImPlotRange& range, float pix, ImPlotOrientation orn, ImPlotTickColleAddTicksDefault666,35221
void AddTicksLogarithmic(const ImPlotRange& range, float pix, ImPlotOrientation orn, ImPlotTickCAddTicksLogarithmic711,37233
void AddTicksCustom(const double* values, const char* const labels[], int n, ImPlotTickCollectioAddTicksCustom744,38906
static const double TimeUnitSpans[ImPlotTimeUnit_COUNT] = {TimeUnitSpans764,39715
inline ImPlotTimeUnit GetUnitForRange(double range) {GetUnitForRange775,39877
inline int LowerBoundStep(int max_divs, const int* divs, const int* step, int size) {LowerBoundStep784,40218
inline int GetTimeStep(int max_divs, ImPlotTimeUnit unit) {GetTimeStep794,40493
ImPlotTime MkGmtTime(struct tm *ptm) {MkGmtTime823,41692
tm* GetGmtTime(const ImPlotTime& t, tm* ptm)GetGmtTime835,41888
ImPlotTime MkLocTime(struct tm *ptm) {MkLocTime847,42079
tm* GetLocTime(const ImPlotTime& t, tm* ptm) {GetLocTime855,42218
inline ImPlotTime MkTime(struct tm *ptm) {MkTime866,42416
inline tm* GetTime(const ImPlotTime& t, tm* ptm) {GetTime873,42573
ImPlotTime MakeTime(int year, int month, int day, int hour, int min, int sec, int us) {MakeTime880,42744
int GetYear(const ImPlotTime& t) {GetYear903,43198
ImPlotTime AddTime(const ImPlotTime& t, ImPlotTimeUnit unit, int count) {AddTime909,43319
ImPlotTime FloorTime(const ImPlotTime& t, ImPlotTimeUnit unit) {FloorTime941,45130
ImPlotTime CeilTime(const ImPlotTime& t, ImPlotTimeUnit unit) {CeilTime957,45889
ImPlotTime RoundTime(const ImPlotTime& t, ImPlotTimeUnit unit) {RoundTime961,46009
ImPlotTime CombineDateTime(const ImPlotTime& date_part, const ImPlotTime& tod_part) {CombineDateTime969,46287
static const char* MONTH_NAMES[]  = {"January","February","March","April","May","June","July","AMONTH_NAMES984,46693
static const char* WD_ABRVS[]     = {"Su","Mo","Tu","We","Th","Fr","Sa"};WD_ABRVS985,46843
static const char* MONTH_ABRVS[]  = {"Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct"MONTH_ABRVS986,46918
int FormatTime(const ImPlotTime& t, char* buffer, int size, ImPlotTimeFmt fmt, bool use_24_hr_clFormatTime988,47032
int FormatDate(const ImPlotTime& t, char* buffer, int size, ImPlotDateFmt fmt, bool use_iso_8601FormatDate1026,49332
int FormatDateTime(const ImPlotTime& t, char* buffer, int size, ImPlotDateTimeFmt fmt) {FormatDateTime1055,50811
inline float GetDateTimeWidth(ImPlotDateTimeFmt fmt) {GetDateTimeWidth1067,51297
void LabelTickTime(ImPlotTick& tick, ImGuiTextBuffer& buffer, const ImPlotTime& t, ImPlotDateTimLabelTickTime1074,51610
inline bool TimeLabelSame(const char* l1, const char* l2) {TimeLabelSame1084,52000
static const ImPlotDateTimeFmt TimeFormatLevel0[ImPlotTimeUnit_COUNT] = {TimeFormatLevel01091,52227
static const ImPlotDateTimeFmt TimeFormatLevel1[ImPlotTimeUnit_COUNT] = {TimeFormatLevel11102,52820
static const ImPlotDateTimeFmt TimeFormatLevel1First[ImPlotTimeUnit_COUNT] = {TimeFormatLevel1First1113,53441
static const ImPlotDateTimeFmt TimeFormatMouseCursor[ImPlotTimeUnit_COUNT] = {TimeFormatMouseCursor1124,54068
inline ImPlotDateTimeFmt GetDateTimeFmt(const ImPlotDateTimeFmt* ctx, ImPlotTimeUnit idx) {GetDateTimeFmt1135,54694
void AddTicksTime(const ImPlotRange& range, float plot_width, ImPlotTickCollection& ticks) {AddTicksTime1143,54991
static inline int AxisPrecision(const ImPlotAxis& axis, const ImPlotTickCollection& ticks) {AxisPrecision1243,60309
static inline double RoundAxisValue(const ImPlotAxis& axis, const ImPlotTickCollection& ticks, dRoundAxisValue1248,60552
int LabelAxisValue(const ImPlotAxis& axis, const ImPlotTickCollection& ticks, double value, charLabelAxisValue1252,60724
void UpdateAxisColors(int axis_flag, ImPlotAxis* axis) {UpdateAxisColors1266,61574
static inline void RenderGridLinesX(ImDrawList& DrawList, const ImPlotTickCollection& ticks, conRenderGridLinesX1278,62138
static inline void RenderGridLinesY(ImDrawList& DrawList, const ImPlotTickCollection& ticks, conRenderGridLinesY1294,63034
static inline void RenderSelectionRect(ImDrawList& DrawList, const ImVec2& p_min, const ImVec2& RenderSelectionRect1308,63874
bool BeginPlot(const char* title, const char* x_label, const char* y1_label, const ImVec2& size,BeginPlot1319,64404
bool DragFloat(const char*, F*, float, F, F) {DragFloat2009,102125
bool DragFloat<double>(const char* label, double* v, float v_speed, double v_min, double v_max) DragFloat2014,102210
bool DragFloat<float>(const char* label, float* v, float v_speed, float v_min, float v_max) {DragFloat2019,102426
inline void BeginDisabledControls(bool cond) {BeginDisabledControls2023,102624
inline void EndDisabledControls(bool cond) {EndDisabledControls2030,102846
void ShowAxisContextMenu(ImPlotAxis& axis, ImPlotAxis* equal_axis, bool time_allowed) {ShowAxisContextMenu2037,102983
void ShowPlotContextMenu(ImPlotPlot& plot) {ShowPlotContextMenu2148,108336
void EndPlot() {EndPlot2225,112634
ImPlotInputMap& GetInputMap() {GetInputMap2543,128086
void SetNextPlotLimits(double x_min, double x_max, double y_min, double y_max, ImGuiCond cond) {SetNextPlotLimits2547,128155
void SetNextPlotLimitsX(double x_min, double x_max, ImGuiCond cond) {SetNextPlotLimitsX2553,128467
void SetNextPlotLimitsY(double y_min, double y_max, ImGuiCond cond, ImPlotYAxis y_axis) {SetNextPlotLimitsY2563,128997
void LinkNextPlotLimits(double* xmin, double* xmax, double* ymin, double* ymax, double* ymin2, dLinkNextPlotLimits2574,129677
void FitNextPlotAxes(bool x, bool y, bool y2, bool y3) {FitNextPlotAxes2586,130208
void SetNextPlotTicksX(const double* values, int n_ticks, const char* const labels[], bool show_SetNextPlotTicksX2595,130552
void SetNextPlotTicksX(double x_min, double x_max, int n_ticks, const char* const labels[], boolSetNextPlotTicksX2602,130939
void SetNextPlotTicksY(const double* values, int n_ticks, const char* const labels[], bool show_SetNextPlotTicksY2609,131295
void SetNextPlotTicksY(double y_min, double y_max, int n_ticks, const char* const labels[], boolSetNextPlotTicksY2617,131840
void SetNextPlotFormatX(const char* fmt){SetNextPlotFormatX2624,132223
void SetNextPlotFormatY(const char* fmt, ImPlotYAxis y_axis) {SetNextPlotFormatY2631,132504
void SetPlotYAxis(ImPlotYAxis y_axis) {SetPlotYAxis2639,132938
ImVec2 GetPlotPos() {GetPlotPos2646,133302
ImVec2 GetPlotSize() {GetPlotSize2652,133528
ImDrawList* GetPlotDrawList() {GetPlotDrawList2658,133762
void PushPlotClipRect(float expand) {PushPlotClipRect2662,133840
void PopPlotClipRect() {PopPlotClipRect2670,134169
bool IsPlotHovered() {IsPlotHovered2674,134227
bool IsPlotXAxisHovered() {IsPlotXAxisHovered2680,134456
bool IsPlotYAxisHovered(ImPlotYAxis y_axis_in) {IsPlotYAxisHovered2686,134700
ImPlotPoint GetPlotMousePos(ImPlotYAxis y_axis_in) {GetPlotMousePos2694,135185
ImPlotLimits GetPlotLimits(ImPlotYAxis y_axis_in) {GetPlotLimits2703,135652
bool IsPlotSelected() {IsPlotSelected2716,136246
ImPlotLimits GetPlotSelection(ImPlotYAxis y_axis) {GetPlotSelection2722,136474
bool IsPlotQueried() {IsPlotQueried2741,137382
ImPlotLimits GetPlotQuery(ImPlotYAxis y_axis) {GetPlotQuery2747,137607
void SetPlotQuery(const ImPlotLimits& query, ImPlotYAxis y_axis) {SetPlotQuery2766,138504
void AnnotateEx(double x, double y, bool clamp, const ImVec4& col, const ImVec2& off, const charAnnotateEx2780,139237
void AnnotateV(double x, double y, const ImVec2& offset, const char* fmt, va_list args) {AnnotateV2789,139752
void Annotate(double x, double y, const ImVec2& offset, const char* fmt, ...) {Annotate2793,139908
void AnnotateV(double x, double y, const ImVec2& offset, const ImVec4& col, const char* fmt, va_AnnotateV2800,140095
void Annotate(double x, double y, const ImVec2& offset, const ImVec4& col, const char* fmt, ...)Annotate2804,140258
void AnnotateClampedV(double x, double y, const ImVec2& offset, const char* fmt, va_list args) {AnnotateClampedV2811,140468
void AnnotateClamped(double x, double y, const ImVec2& offset, const char* fmt, ...) {AnnotateClamped2815,140630
void AnnotateClampedV(double x, double y, const ImVec2& offset, const ImVec4& col, const char* fAnnotateClampedV2822,140831
void AnnotateClamped(double x, double y, const ImVec2& offset, const ImVec4& col, const char* fmAnnotateClamped2826,141000
bool DragLineX(const char* id, double* value, bool show_label, const ImVec4& col, float thicknesDragLineX2833,141224
bool DragLineY(const char* id, double* value, bool show_label, const ImVec4& col, float thicknesDragLineY2877,143490
bool DragPoint(const char* id, double* x, double* y, bool show_label, const ImVec4& col, float rDragPoint2923,145870
#define IMPLOT_ID_PLT IMPLOT_ID_PLT2972,148230
#define IMPLOT_ID_LEG IMPLOT_ID_LEG2973,148262
#define IMPLOT_ID_XAX IMPLOT_ID_XAX2974,148294
#define IMPLOT_ID_YAX IMPLOT_ID_YAX2975,148326
bool BeginDragDropTargetEx(int id, const ImRect& rect) {BeginDragDropTargetEx2977,148360
bool BeginDragDropTarget() {BeginDragDropTarget2986,148632
bool BeginDragDropTargetX() {BeginDragDropTargetX2990,148749
bool BeginDragDropTargetY(ImPlotYAxis axis) {BeginDragDropTargetY2994,148874
bool BeginDragDropTargetLegend() {BeginDragDropTargetLegend2998,149028
void EndDragDropTarget() {EndDragDropTarget3003,149230
bool BeginDragDropSourceEx(ImGuiID source_id, bool is_hovered, ImGuiDragDropFlags flags, ImGuiKeBeginDragDropSourceEx3007,149293
bool BeginDragDropSource(ImGuiKeyModFlags key_mods, ImGuiDragDropFlags flags) {BeginDragDropSource3059,151107
bool BeginDragDropSourceX(ImGuiKeyModFlags key_mods, ImGuiDragDropFlags flags) {BeginDragDropSourceX3070,151660
bool BeginDragDropSourceY(ImPlotYAxis axis, ImGuiKeyModFlags key_mods, ImGuiDragDropFlags flags)BeginDragDropSourceY3078,152106
bool BeginDragDropSourceItem(const char* label_id, ImGuiDragDropFlags flags) {BeginDragDropSourceItem3086,152595
void EndDragDropSource() {EndDragDropSource3095,153105
void ItemIcon(const ImVec4& col) {ItemIcon3099,153171
void ItemIcon(ImU32 col) {ItemIcon3103,153264
void ColormapIcon(ImPlotColormap cmap) {ColormapIcon3112,153609
void SetLegendLocation(ImPlotLocation location, ImPlotOrientation orientation, bool outside) {SetLegendLocation3126,154243
void SetMousePosLocation(ImPlotLocation location) {SetMousePosLocation3135,154730
bool IsLegendEntryHovered(const char* label_id) {IsLegendEntryHovered3141,155003
bool BeginLegendPopup(const char* label_id, ImGuiMouseButton mouse_button) {BeginLegendPopup3149,155367
void EndLegendPopup() {EndLegendPopup3164,156091
void ShowAltLegend(const char* title_id, ImPlotOrientation orientation, const ImVec2 size, bool ShowAltLegend3168,156145
ImPlotStyle& GetStyle() {GetStyle3208,158224
void PushStyleColor(ImPlotCol idx, ImU32 col) {PushStyleColor3213,158313
void PushStyleColor(ImPlotCol idx, const ImVec4& col) {PushStyleColor3222,158607
void PopStyleColor(int count) {PopStyleColor3231,158877
void PushStyleVar(ImPlotStyleVar idx, float val) {PushStyleVar3243,159277
void PushStyleVar(ImPlotStyleVar idx, int val) {PushStyleVar3255,159774
void PushStyleVar(ImGuiStyleVar idx, const ImVec2& val)PushStyleVar3273,160519
void PopStyleVar(int count) {PopStyleVar3287,161033
ImPlotColormap AddColormap(const char* name, const ImVec4* colormap, int size, bool qual) {AddColormap3313,162148
ImPlotColormap AddColormap(const char* name, const ImU32*  colormap, int size, bool qual) {AddColormap3324,162696
int GetColormapCount() {GetColormapCount3331,163082
const char* GetColormapName(ImPlotColormap colormap) {GetColormapName3336,163183
ImPlotColormap GetColormapIndex(const char* name) {GetColormapIndex3341,163326
void PushColormap(ImPlotColormap colormap) {PushColormap3346,163463
void PushColormap(const char* name) {PushColormap3353,163752
void PopColormap(int count) {PopColormap3360,163984
ImU32 NextColormapColorU32() {NextColormapColorU323371,164375
ImVec4 NextColormapColor() {NextColormapColor3380,164792
int GetColormapSize(ImPlotColormap cmap) {GetColormapSize3384,164895
ImU32 GetColormapColorU32(int idx, ImPlotColormap cmap) {GetColormapColorU323391,165196
ImVec4 GetColormapColor(int idx, ImPlotColormap cmap) {GetColormapColor3399,165556
ImU32  SampleColormapU32(float t, ImPlotColormap cmap) {SampleColormapU323403,165693
ImVec4 SampleColormap(float t, ImPlotColormap cmap) {SampleColormap3410,165996
void RenderColorBar(const ImU32* colors, int size, ImDrawList& DrawList, const ImRect& bounds, bRenderColorBar3414,166127
void ColormapScale(const char* label, double scale_min, double scale_max, const ImVec2& size, ImColormapScale3451,167565
bool ColormapSlider(const char* label, float* t, ImVec4* out, const char* format, ImPlotColormapColormapSlider3515,171023
bool ColormapButton(const char* label, const ImVec2& size_arg, ImPlotColormap cmap) {ColormapButton3549,172858
static void HelpMarker(const char* desc) {HelpMarker3583,174674
bool ShowStyleSelector(const char* label)ShowStyleSelector3594,174996
bool ShowColormapSelector(const char* label) {ShowColormapSelector3611,175434
void ShowStyleEditor(ImPlotStyle* ref) {ShowStyleEditor3628,176002
void ShowUserGuide() {ShowUserGuide3876,188824
void ShowAxisMetrics(ImPlotAxis* axis, bool show_axis_rects) {ShowAxisMetrics3902,190131
void ShowMetricsWindow(bool* p_popen) {ShowMetricsWindow3920,191273
bool ShowDatePicker(const char* id, int* level, ImPlotTime* t, const ImPlotTime* t1, const ImPloShowDatePicker4049,197916
bool ShowTimePicker(const char* id, ImPlotTime* t) {ShowTimePicker4258,206299
void StyleColorsAuto(ImPlotStyle* dst) {StyleColorsAuto4354,209497
void StyleColorsClassic(ImPlotStyle* dst) {StyleColorsClassic4387,211120
void StyleColorsDark(ImPlotStyle* dst) {StyleColorsDark4419,213069
void StyleColorsLight(ImPlotStyle* dst) {StyleColorsLight4451,214997

../gejo/libs/implot/implot.h,21802
#define IMPLOT_APIIMPLOT_API37,1747
#define IMPLOT_VERSION IMPLOT_VERSION41,1803
#define IMPLOT_AUTO IMPLOT_AUTO43,1891
#define IMPLOT_AUTO_COL IMPLOT_AUTO_COL45,1996
typedef int ImPlotFlags;       // -> enum ImPlotFlags_ImPlotFlags55,2377
typedef int ImPlotAxisFlags;   // -> enum ImPlotAxisFlags_ImPlotAxisFlags56,2433
typedef int ImPlotCol;         // -> enum ImPlotCol_ImPlotCol57,2493
typedef int ImPlotStyleVar;    // -> enum ImPlotStyleVar_ImPlotStyleVar58,2547
typedef int ImPlotMarker;      // -> enum ImPlotMarker_ImPlotMarker59,2606
typedef int ImPlotColormap;    // -> enum ImPlotColormap_ImPlotColormap60,2663
typedef int ImPlotLocation;    // -> enum ImPlotLocation_ImPlotLocation61,2722
typedef int ImPlotOrientation; // -> enum ImPlotOrientation_ImPlotOrientation62,2781
typedef int ImPlotYAxis;       // -> enum ImPlotYAxis_;ImPlotYAxis63,2843
typedef int ImPlotBin;         // -> enum ImPlotBin_ImPlotBin64,2900
enum ImPlotFlags_ {ImPlotFlags_67,2979
    ImPlotFlags_None          = 0,       // defaultImPlotFlags_None68,3000
    ImPlotFlags_NoTitle       = 1 << 0,  // the plot title will not be displayed (titles are alsImPlotFlags_NoTitle69,3053
    ImPlotFlags_NoLegend      = 1 << 1,  // the legend will not be displayedImPlotFlags_NoLegend70,3207
    ImPlotFlags_NoMenus       = 1 << 2,  // the user will not be able to open context menus withImPlotFlags_NoMenus71,3285
    ImPlotFlags_NoBoxSelect   = 1 << 3,  // the user will not be able to box-select with right-cImPlotFlags_NoBoxSelect72,3395
    ImPlotFlags_NoMousePos    = 1 << 4,  // the mouse position, in plot coordinates, will not beImPlotFlags_NoMousePos73,3502
    ImPlotFlags_NoHighlight   = 1 << 5,  // plot items will not be highlighted when their legendImPlotFlags_NoHighlight74,3629
    ImPlotFlags_NoChild       = 1 << 6,  // a child window region will not be used to capture moImPlotFlags_NoChild75,3744
    ImPlotFlags_Equal         = 1 << 7,  // primary x and y axes will be constrained to have theImPlotFlags_Equal76,3913
    ImPlotFlags_YAxis2        = 1 << 8,  // enable a 2nd y-axis on the right sideImPlotFlags_YAxis277,4065
    ImPlotFlags_YAxis3        = 1 << 9,  // enable a 3rd y-axis on the right sideImPlotFlags_YAxis378,4148
    ImPlotFlags_Query         = 1 << 10, // the user will be able to draw query rects with middlImPlotFlags_Query79,4231
    ImPlotFlags_Crosshairs    = 1 << 11, // the default mouse cursor will be replaced with a croImPlotFlags_Crosshairs80,4363
    ImPlotFlags_AntiAliased   = 1 << 12, // plot lines will be software anti-aliased (not recommImPlotFlags_AntiAliased81,4480
    ImPlotFlags_CanvasOnly    = ImPlotFlags_NoTitle | ImPlotFlags_NoLegend | ImPlotFlags_NoMenusImPlotFlags_CanvasOnly82,4620
enum ImPlotAxisFlags_ {ImPlotAxisFlags_86,4812
    ImPlotAxisFlags_None          = 0,       // defaultImPlotAxisFlags_None87,4837
    ImPlotAxisFlags_NoLabel       = 1 << 0,  // the axis label will not be displayed (axis labelImPlotAxisFlags_NoLabel88,4894
    ImPlotAxisFlags_NoGridLines   = 1 << 1,  // no grid lines will be displayedImPlotAxisFlags_NoGridLines89,5042
    ImPlotAxisFlags_NoTickMarks   = 1 << 2,  // no tick marks will be displayedImPlotAxisFlags_NoTickMarks90,5123
    ImPlotAxisFlags_NoTickLabels  = 1 << 3,  // no text labels will be displayedImPlotAxisFlags_NoTickLabels91,5204
    ImPlotAxisFlags_Foreground    = 1 << 4,  // grid lines will be displayed in the foreground (ImPlotAxisFlags_Foreground92,5286
    ImPlotAxisFlags_LogScale      = 1 << 5,  // a logartithmic (base 10) axis scale will be usedImPlotAxisFlags_LogScale93,5431
    ImPlotAxisFlags_Time          = 1 << 6,  // axis will display date/time formatted labels (muImPlotAxisFlags_Time94,5576
    ImPlotAxisFlags_Invert        = 1 << 7,  // the axis will be invertedImPlotAxisFlags_Invert95,5721
    ImPlotAxisFlags_NoInitialFit  = 1 << 8,  // axis will not be initially fit to data extents oImPlotAxisFlags_NoInitialFit96,5796
    ImPlotAxisFlags_AutoFit       = 1 << 9,  // axis will be auto-fitting to data extentsImPlotAxisFlags_AutoFit97,5975
    ImPlotAxisFlags_RangeFit      = 1 << 10, // axis will only fit points if the point is in theImPlotAxisFlags_RangeFit98,6066
    ImPlotAxisFlags_LockMin       = 1 << 11, // the axis minimum value will be locked when panniImPlotAxisFlags_LockMin99,6205
    ImPlotAxisFlags_LockMax       = 1 << 12, // the axis maximum value will be locked when panniImPlotAxisFlags_LockMax100,6313
    ImPlotAxisFlags_Lock          = ImPlotAxisFlags_LockMin | ImPlotAxisFlags_LockMax,ImPlotAxisFlags_Lock101,6421
    ImPlotAxisFlags_NoDecorations = ImPlotAxisFlags_NoLabel | ImPlotAxisFlags_NoGridLines | ImPlImPlotAxisFlags_NoDecorations102,6509
enum ImPlotCol_ {ImPlotCol_106,6692
    ImPlotCol_Line,          // plot line/outline color (defaults to next unused color in currenImPlotCol_Line108,6739
    ImPlotCol_Fill,          // plot fill color for bars (defaults to the current line color)ImPlotCol_Fill109,6848
    ImPlotCol_MarkerOutline, // marker outline color (defaults to the current line color)ImPlotCol_MarkerOutline110,6943
    ImPlotCol_MarkerFill,    // marker fill color (defaults to the current line color)ImPlotCol_MarkerFill111,7034
    ImPlotCol_ErrorBar,      // error bar color (defaults to ImGuiCol_Text)ImPlotCol_ErrorBar112,7122
    ImPlotCol_FrameBg,       // plot frame background color (defaults to ImGuiCol_FrameBg)ImPlotCol_FrameBg114,7227
    ImPlotCol_PlotBg,        // plot area background color (defaults to ImGuiCol_WindowBg)ImPlotCol_PlotBg115,7319
    ImPlotCol_PlotBorder,    // plot area border color (defaults to ImGuiCol_Border)ImPlotCol_PlotBorder116,7411
    ImPlotCol_LegendBg,      // legend background color (defaults to ImGuiCol_PopupBg)ImPlotCol_LegendBg117,7497
    ImPlotCol_LegendBorder,  // legend border color (defaults to ImPlotCol_PlotBorder)ImPlotCol_LegendBorder118,7585
    ImPlotCol_LegendText,    // legend text color (defaults to ImPlotCol_InlayText)ImPlotCol_LegendText119,7673
    ImPlotCol_TitleText,     // plot title text color (defaults to ImGuiCol_Text)ImPlotCol_TitleText120,7758
    ImPlotCol_InlayText,     // color of text appearing inside of plots (defaults to ImGuiCol_TeImPlotCol_InlayText121,7841
    ImPlotCol_XAxis,         // x-axis label and tick lables color (defaults to ImGuiCol_Text)ImPlotCol_XAxis122,7942
    ImPlotCol_XAxisGrid,     // x-axis grid color (defaults to 25% ImPlotCol_XAxis)ImPlotCol_XAxisGrid123,8038
    ImPlotCol_YAxis,         // y-axis label and tick labels color (defaults to ImGuiCol_Text)ImPlotCol_YAxis124,8123
    ImPlotCol_YAxisGrid,     // y-axis grid color (defaults to 25% ImPlotCol_YAxis)ImPlotCol_YAxisGrid125,8219
    ImPlotCol_YAxis2,        // 2nd y-axis label and tick labels color (defaults to ImGuiCol_TexImPlotCol_YAxis2126,8304
    ImPlotCol_YAxisGrid2,    // 2nd y-axis grid/label color (defaults to 25% ImPlotCol_YAxis2)ImPlotCol_YAxisGrid2127,8404
    ImPlotCol_YAxis3,        // 3rd y-axis label and tick labels color (defaults to ImGuiCol_TexImPlotCol_YAxis3128,8500
    ImPlotCol_YAxisGrid3,    // 3rd y-axis grid/label color (defaults to 25% ImPlotCol_YAxis3)ImPlotCol_YAxisGrid3129,8600
    ImPlotCol_Selection,     // box-selection color (defaults to yellow)ImPlotCol_Selection130,8696
    ImPlotCol_Query,         // box-query color (defaults to green)ImPlotCol_Query131,8770
    ImPlotCol_Crosshairs,    // crosshairs color (defaults to ImPlotCol_PlotBorder)ImPlotCol_Crosshairs132,8839
    ImPlotCol_COUNTImPlotCol_COUNT133,8924
enum ImPlotStyleVar_ {ImPlotStyleVar_137,8979
    ImPlotStyleVar_LineWeight,         // float,  plot item line weight in pixelsImPlotStyleVar_LineWeight139,9034
    ImPlotStyleVar_Marker,             // int,    marker specificationImPlotStyleVar_Marker140,9117
    ImPlotStyleVar_MarkerSize,         // float,  marker size in pixels (roughly the marker's "rImPlotStyleVar_MarkerSize141,9189
    ImPlotStyleVar_MarkerWeight,       // float,  plot outline weight of markers in pixelsImPlotStyleVar_MarkerWeight142,9294
    ImPlotStyleVar_FillAlpha,          // float,  alpha modifier applied to all plot item fillsImPlotStyleVar_FillAlpha143,9386
    ImPlotStyleVar_ErrorBarSize,       // float,  error bar whisker width in pixelsImPlotStyleVar_ErrorBarSize144,9483
    ImPlotStyleVar_ErrorBarWeight,     // float,  error bar whisker weight in pixelsImPlotStyleVar_ErrorBarWeight145,9568
    ImPlotStyleVar_DigitalBitHeight,   // float,  digital channels bit height (at 1) in pixelsImPlotStyleVar_DigitalBitHeight146,9654
    ImPlotStyleVar_DigitalBitGap,      // float,  digital channels bit padding gap in pixelsImPlotStyleVar_DigitalBitGap147,9750
    ImPlotStyleVar_PlotBorderSize,     // float,  thickness of border around plot areaImPlotStyleVar_PlotBorderSize149,9875
    ImPlotStyleVar_MinorAlpha,         // float,  alpha multiplier applied to minor axis grid liImPlotStyleVar_MinorAlpha150,9963
    ImPlotStyleVar_MajorTickLen,       // ImVec2, major tick lengths for X and Y axesImPlotStyleVar_MajorTickLen151,10064
    ImPlotStyleVar_MinorTickLen,       // ImVec2, minor tick lengths for X and Y axesImPlotStyleVar_MinorTickLen152,10151
    ImPlotStyleVar_MajorTickSize,      // ImVec2, line thickness of major ticksImPlotStyleVar_MajorTickSize153,10238
    ImPlotStyleVar_MinorTickSize,      // ImVec2, line thickness of minor ticksImPlotStyleVar_MinorTickSize154,10319
    ImPlotStyleVar_MajorGridSize,      // ImVec2, line thickness of major grid linesImPlotStyleVar_MajorGridSize155,10400
    ImPlotStyleVar_MinorGridSize,      // ImVec2, line thickness of minor grid linesImPlotStyleVar_MinorGridSize156,10486
    ImPlotStyleVar_PlotPadding,        // ImVec2, padding between widget frame and plot area, laImPlotStyleVar_PlotPadding157,10572
    ImPlotStyleVar_LabelPadding,       // ImVec2, padding between axes labels, tick labels, and ImPlotStyleVar_LabelPadding158,10714
    ImPlotStyleVar_LegendPadding,      // ImVec2, legend padding from plot edgesImPlotStyleVar_LegendPadding159,10821
    ImPlotStyleVar_LegendInnerPadding, // ImVec2, legend inner padding from legend edgesImPlotStyleVar_LegendInnerPadding160,10903
    ImPlotStyleVar_LegendSpacing,      // ImVec2, spacing between legend entriesImPlotStyleVar_LegendSpacing161,10993
    ImPlotStyleVar_MousePosPadding,    // ImVec2, padding between plot edge and interior info teImPlotStyleVar_MousePosPadding162,11075
    ImPlotStyleVar_AnnotationPadding,  // ImVec2, text padding around annotation labelsImPlotStyleVar_AnnotationPadding163,11175
    ImPlotStyleVar_FitPadding,         // ImVec2, additional fit padding as a percentage of the ImPlotStyleVar_FitPadding164,11264
    ImPlotStyleVar_PlotDefaultSize,    // ImVec2, default size used when ImVec2(0,0) is passed tImPlotStyleVar_PlotDefaultSize165,11437
    ImPlotStyleVar_PlotMinSize,        // ImVec2, minimum size plot frame can be when shrunkImPlotStyleVar_PlotMinSize166,11546
    ImPlotStyleVar_COUNTImPlotStyleVar_COUNT167,11640
enum ImPlotMarker_ {ImPlotMarker_171,11699
    ImPlotMarker_None = -1, // no markerImPlotMarker_None172,11721
    ImPlotMarker_Circle,    // a circle markerImPlotMarker_Circle173,11763
    ImPlotMarker_Square,    // a square makerImPlotMarker_Square174,11811
    ImPlotMarker_Diamond,   // a diamond markerImPlotMarker_Diamond175,11858
    ImPlotMarker_Up,        // an upward-pointing triangle markerImPlotMarker_Up176,11907
    ImPlotMarker_Down,      // an downward-pointing triangle markerImPlotMarker_Down177,11974
    ImPlotMarker_Left,      // an leftward-pointing triangle markerImPlotMarker_Left178,12043
    ImPlotMarker_Right,     // an rightward-pointing triangle markerImPlotMarker_Right179,12112
    ImPlotMarker_Cross,     // a cross marker (not fillable)ImPlotMarker_Cross180,12182
    ImPlotMarker_Plus,      // a plus marker (not fillable)ImPlotMarker_Plus181,12244
    ImPlotMarker_Asterisk,  // a asterisk marker (not fillable)ImPlotMarker_Asterisk182,12305
    ImPlotMarker_COUNTImPlotMarker_COUNT183,12370
enum ImPlotColormap_ {ImPlotColormap_187,12423
    ImPlotColormap_Deep     = 0,   // a.k.a. seaborn deep             (qual=true,  n=10) (defaulImPlotColormap_Deep188,12447
    ImPlotColormap_Dark     = 1,   // a.k.a. matplotlib "Set1"        (qual=true,  n=9 )ImPlotColormap_Dark189,12547
    ImPlotColormap_Pastel   = 2,   // a.k.a. matplotlib "Pastel1"     (qual=true,  n=9 )ImPlotColormap_Pastel190,12637
    ImPlotColormap_Paired   = 3,   // a.k.a. matplotlib "Paired"      (qual=true,  n=12)ImPlotColormap_Paired191,12727
    ImPlotColormap_Viridis  = 4,   // a.k.a. matplotlib "viridis"     (qual=false, n=11)ImPlotColormap_Viridis192,12817
    ImPlotColormap_Plasma   = 5,   // a.k.a. matplotlib "plasma"      (qual=false, n=11)ImPlotColormap_Plasma193,12907
    ImPlotColormap_Hot      = 6,   // a.k.a. matplotlib/MATLAB "hot"  (qual=false, n=11)ImPlotColormap_Hot194,12997
    ImPlotColormap_Cool     = 7,   // a.k.a. matplotlib/MATLAB "cool" (qual=false, n=11)ImPlotColormap_Cool195,13087
    ImPlotColormap_Pink     = 8,   // a.k.a. matplotlib/MATLAB "pink" (qual=false, n=11)ImPlotColormap_Pink196,13177
    ImPlotColormap_Jet      = 9,   // a.k.a. MATLAB "jet"             (qual=false, n=11)ImPlotColormap_Jet197,13267
    ImPlotColormap_Twilight = 10,  // a.k.a. matplotlib "twilight"    (qual=false, n=11)ImPlotColormap_Twilight198,13357
    ImPlotColormap_RdBu     = 11,  // red/blue, Color Brewer          (qual=false, n=11)ImPlotColormap_RdBu199,13447
    ImPlotColormap_BrBG     = 12,  // brown/blue-green, Color Brewer  (qual=false, n=11)ImPlotColormap_BrBG200,13537
    ImPlotColormap_PiYG     = 13,  // pink/yellow-green, Color Brewer (qual=false, n=11)ImPlotColormap_PiYG201,13627
    ImPlotColormap_Spectral = 14,  // color spectrum, Color Brewer    (qual=false, n=11)ImPlotColormap_Spectral202,13717
    ImPlotColormap_Greys    = 15,  // white/black                     (qual=false, n=2 )ImPlotColormap_Greys203,13807
enum ImPlotLocation_ {ImPlotLocation_207,13969
    ImPlotLocation_Center    = 0,                                          // center-centerImPlotLocation_Center208,13993
    ImPlotLocation_North     = 1 << 0,                                     // top-centerImPlotLocation_North209,14086
    ImPlotLocation_South     = 1 << 1,                                     // bottom-centerImPlotLocation_South210,14176
    ImPlotLocation_West      = 1 << 2,                                     // center-leftImPlotLocation_West211,14269
    ImPlotLocation_East      = 1 << 3,                                     // center-rightImPlotLocation_East212,14360
    ImPlotLocation_NorthWest = ImPlotLocation_North | ImPlotLocation_West, // top-leftImPlotLocation_NorthWest213,14452
    ImPlotLocation_NorthEast = ImPlotLocation_North | ImPlotLocation_East, // top-rightImPlotLocation_NorthEast214,14540
    ImPlotLocation_SouthWest = ImPlotLocation_South | ImPlotLocation_West, // bottom-leftImPlotLocation_SouthWest215,14629
    ImPlotLocation_SouthEast = ImPlotLocation_South | ImPlotLocation_East  // bottom-rightImPlotLocation_SouthEast216,14720
enum ImPlotOrientation_ {ImPlotOrientation_220,14882
    ImPlotOrientation_Horizontal, // left/rightImPlotOrientation_Horizontal221,14909
    ImPlotOrientation_Vertical    // up/downImPlotOrientation_Vertical222,14958
enum ImPlotYAxis_ {ImPlotYAxis_226,15042
    ImPlotYAxis_1 = 0, // left (default)ImPlotYAxis_1227,15063
    ImPlotYAxis_2 = 1, // first on right sideImPlotYAxis_2228,15105
    ImPlotYAxis_3 = 2  // second on right sideImPlotYAxis_3229,15152
enum ImPlotBin_ {ImPlotBin_233,15299
    ImPlotBin_Sqrt    = -1, // k = sqrt(n)ImPlotBin_Sqrt234,15318
    ImPlotBin_Sturges = -2, // k = 1 + log2(n)ImPlotBin_Sturges235,15362
    ImPlotBin_Rice    = -3, // k = 2 * cbrt(n)ImPlotBin_Rice236,15410
    ImPlotBin_Scott   = -4, // w = 3.49 * sigma / cbrt(n)ImPlotBin_Scott237,15458
struct ImPlotPoint {ImPlotPoint241,15603
    double x, y;x242,15625
    double x, y;y242,15625
    ImPlotPoint()                         { x = y = 0.0; }ImPlotPoint243,15643
    ImPlotPoint(double _x, double _y)     { x = _x; y = _y; }ImPlotPoint244,15703
    ImPlotPoint(const ImVec2& p)          { x = p.x; y = p.y; }ImPlotPoint245,15766
    double  operator[] (size_t idx) const { return (&x)[idx]; }operator [] 246,15831
    double& operator[] (size_t idx)       { return (&x)[idx]; }operator [] 247,15896
struct ImPlotRange {ImPlotRange255,16289
    double Min, Max;Min256,16311
    double Min, Max;Max256,16311
    ImPlotRange()                         { Min = 0; Max = 0; }ImPlotRange257,16333
    ImPlotRange(double _min, double _max) { Min = _min; Max = _max; }ImPlotRange258,16398
    bool Contains(double value) const     { return value >= Min && value <= Max; };Contains259,16469
    double Size() const                   { return Max - Min; };Size260,16554
struct ImPlotLimits {ImPlotLimits264,16674
    ImPlotRange X, Y;X265,16697
    ImPlotRange X, Y;Y265,16697
    ImPlotLimits()                                                        { }ImPlotLimits266,16720
    ImPlotLimits(double x_min, double x_max, double y_min, double y_max)  { X.Min = x_min; X.MaxImPlotLimits267,16799
    bool Contains(const ImPlotPoint& p) const                             { return Contains(p.x,Contains268,16938
    bool Contains(double x, double y) const                               { return X.Contains(x)Contains269,17044
    ImPlotPoint Min() const                                               { return ImPlotPoint(XMin270,17162
    ImPlotPoint Max() const                                               { return ImPlotPoint(XMax271,17275
struct ImPlotStyle {ImPlotStyle275,17419
    float   LineWeight;              // = 1,      item line weight in pixelsLineWeight277,17472
    int     Marker;                  // = ImPlotMarker_None, marker specificationMarker278,17550
    float   MarkerSize;              // = 4,      marker size in pixels (roughly the marker's "rMarkerSize279,17633
    float   MarkerWeight;            // = 1,      outline weight of markers in pixelsMarkerWeight280,17738
    float   FillAlpha;               // = 1,      alpha modifier applied to plot fillsFillAlpha281,17825
    float   ErrorBarSize;            // = 5,      error bar whisker width in pixelsErrorBarSize282,17913
    float   ErrorBarWeight;          // = 1.5,    error bar whisker weight in pixelsErrorBarWeight283,17998
    float   DigitalBitHeight;        // = 8,      digital channels bit height (at y = 1.0f) in pDigitalBitHeight284,18084
    float   DigitalBitGap;           // = 4,      digital channels bit padding gap in pixelsDigitalBitGap285,18187
    float   PlotBorderSize;          // = 1,      line thickness of border around plot areaPlotBorderSize287,18312
    float   MinorAlpha;              // = 0.25    alpha multiplier applied to minor axis grid liMinorAlpha288,18405
    ImVec2  MajorTickLen;            // = 10,10   major tick lengths for X and Y axesMajorTickLen289,18506
    ImVec2  MinorTickLen;            // = 5,5     minor tick lengths for X and Y axesMinorTickLen290,18593
    ImVec2  MajorTickSize;           // = 1,1     line thickness of major ticksMajorTickSize291,18680
    ImVec2  MinorTickSize;           // = 1,1     line thickness of minor ticksMinorTickSize292,18761
    ImVec2  MajorGridSize;           // = 1,1     line thickness of major grid linesMajorGridSize293,18842
    ImVec2  MinorGridSize;           // = 1,1     line thickness of minor grid linesMinorGridSize294,18928
    ImVec2  PlotPadding;             // = 10,10   padding between widget frame and plot area, laPlotPadding295,19014
    ImVec2  LabelPadding;            // = 5,5     padding between axes labels, tick labels, and LabelPadding296,19156
    ImVec2  LegendPadding;           // = 10,10   legend padding from plot edgesLegendPadding297,19263
    ImVec2  LegendInnerPadding;      // = 5,5     legend inner padding from legend edgesLegendInnerPadding298,19345
    ImVec2  LegendSpacing;           // = 5,0     spacing between legend entriesLegendSpacing299,19435
    ImVec2  MousePosPadding;         // = 10,10   padding between plot edge and interior mouse lMousePosPadding300,19517
    ImVec2  AnnotationPadding;       // = 2,2     text padding around annotation labelsAnnotationPadding301,19627
    ImVec2  FitPadding;              // = 0,0     additional fit padding as a percentage of the FitPadding302,19716
    ImVec2  PlotDefaultSize;         // = 400,300 default size used when ImVec2(0,0) is passed tPlotDefaultSize303,19889
    ImVec2  PlotMinSize;             // = 300,225 minimum size plot frame can be when shrunkPlotMinSize304,19998
    ImVec4  Colors[ImPlotCol_COUNT]; // Array of styling colors. Indexable with ImPlotCol_ enumsColors306,20113
    ImPlotColormap Colormap;         // The current colormap. Set this to either an ImPlotColormColormap308,20229
    bool    AntiAliasedLines;        // = false,  enable global anti-aliasing on plot lines (oveAntiAliasedLines310,20395
    bool    UseLocalTime;            // = false,  axis labels will be formatted for your timezonUseLocalTime311,20524
    bool    UseISO8601;              // = false,  dates will be formatted according to ISO 8601 UseISO8601312,20659
    bool    Use24HourClock;          // = false,  times will be formatted using a 24 hour clockUse24HourClock313,20815
namespace ImPlot {ImPlot321,21137

../gejo/libs/implot/implot_demo.cpp,3575
#define sprintf sprintf32,1284
#define PI PI36,1333
namespace MyImPlot {MyImPlot40,1428
struct Vector2f {Vector2f43,1501
    Vector2f(float _x, float _y) { x = _x; y = _y; }Vector2f44,1520
    float x, y;x45,1574
    float x, y;y45,1574
struct WaveData {WaveData49,1646
    double X, Amp, Freq, Offset;X50,1665
    double X, Amp, Freq, Offset;Amp50,1665
    double X, Amp, Freq, Offset;Freq50,1665
    double X, Amp, Freq, Offset;Offset50,1665
    WaveData(double x, double amp, double freq, double offset) { X = x; Amp = amp; Freq = freq; WaveData51,1699
namespace ImPlot {ImPlot68,2553
inline T RandomRange(T min, T max) {RandomRange73,2627
ImVec4 RandomColor() {RandomColor78,2749
double RandomGauss() {RandomGauss87,2942
struct NormalDistribution {NormalDistribution108,3379
    NormalDistribution(double mean, double sd) {NormalDistribution109,3408
    double Data[N];Data113,3550
struct ScrollingBuffer {ScrollingBuffer117,3617
    int MaxSize;MaxSize118,3643
    int Offset;Offset119,3661
    ImVector<ImVec2> Data;Data120,3678
    ScrollingBuffer(int max_size = 2000) {ScrollingBuffer121,3706
    void AddPoint(float x, float y) {AddPoint126,3840
    void Erase() {Erase134,4079
struct RollingBuffer {RollingBuffer143,4250
    float Span;Span144,4274
    ImVector<ImVec2> Data;Data145,4291
    RollingBuffer() {RollingBuffer146,4319
    void AddPoint(float x, float y) {AddPoint150,4401
struct HugeTimeData {HugeTimeData159,4682
    HugeTimeData(double min) {HugeTimeData160,4705
    ~HugeTimeData() { delete[] Ts;  delete[] Ys; }~HugeTimeData168,4925
    static double GetY(double t) {GetY169,4977
    double* Ts;Ts172,5089
    double* Ys;Ys173,5106
    static const int Size = 60*60*24*366;Size174,5123
void ShowDemoWindow(bool* p_open) {ShowDemoWindow177,5172
        struct MyDndItem {MyDndItem1191,56947
            int              Idx;Idx1192,56975
            int              Plt;Plt1193,57010
            int              Yax;Yax1194,57045
            char             Label[16];Label1195,57080
            ImVector<ImVec2> Data;Data1196,57121
            ImVec4           Color;Color1197,57157
            MyDndItem()        {MyDndItem1198,57194
            void Reset() { Plt = 0; Yax = ImPlotYAxis_1; }Reset1211,57701
namespace MyImPlot {MyImPlot1600,86002
ImPlotPoint SineWave(void* data , int idx) {SineWave1602,86026
ImPlotPoint SawWave(void* data, int idx) {SawWave1608,86224
ImPlotPoint Spiral(void*, int idx) {Spiral1614,86463
void Sparkline(const char* id, const float* values, int count, float min_v, float max_v, int offSparkline1626,87057
void StyleSeaborn() {StyleSeaborn1641,87869
namespace MyImPlot {MyImPlot1707,91096
int BinarySearch(const T* arr, int l, int r, T x) {BinarySearch1710,91143
void PlotCandlestick(const char* label_id, const double* xs, const double* opens, const double* PlotCandlestick1722,91463
namespace ImPlot {ImPlot1785,94468
struct BenchData {BenchData1791,94668
    BenchData() {BenchData1792,94688
    ~BenchData() { delete[] Data; }~BenchData1800,94995
    float* Data;Data1801,95032
    ImVec4 Col;Col1802,95050
enum BenchMode {BenchMode1805,95073
    Line = 0,Line1806,95091
    Shaded = 1,Shaded1807,95106
    Scatter = 2,Scatter1808,95123
    Bars = 3Bars1809,95141
struct BenchRecord {BenchRecord1812,95161
    int Mode;Mode1813,95183
    bool AA;AA1814,95198
    ImVector<ImPlotPoint> Data;Data1815,95212
void ShowBenchmarkTool() {ShowBenchmarkTool1818,95251

../gejo/libs/implot/implot_internal.h,13116
#define IMGUI_DEFINE_MATH_OPERATORSIMGUI_DEFINE_MATH_OPERATORS35,1548
#define IMPLOT_Y_AXES IMPLOT_Y_AXES53,2102
#define IMPLOT_ZOOM_RATE IMPLOT_ZOOM_RATE55,2203
#define IMPLOT_MIN_TIME IMPLOT_MIN_TIME57,2322
#define IMPLOT_MAX_TIME IMPLOT_MAX_TIME59,2438
#define IMPLOT_LABEL_FMT IMPLOT_LABEL_FMT61,2517
#define IM_COL32_SPLIT_RGB(IM_COL32_SPLIT_RGB68,2785
static inline float  ImLog10(float x)  { return log10f(x); }ImLog1096,3858
static inline double ImLog10(double x) { return log10(x);  }ImLog1097,3920
static inline bool ImHasFlag(TSet set, TFlag flag) { return (set & flag) == flag; }ImHasFlag100,4058
static inline void ImFlipFlag(TSet& set, TFlag flag) { ImHasFlag(set, flag) ? set &= ~flag : setImFlipFlag103,4215
static inline T ImRemap(T x, T x0, T x1, T y0, T y1) { return y0 + (x - x0) * (y1 - y0) / (x1 - ImRemap106,4394
static inline T ImRemap01(T x, T x0, T x1) { return (x - x0) / (x1 - x0); }ImRemap01109,4563
static inline int ImPosMod(int l, int r) { return (l % r + r) % r; }ImPosMod111,4692
static inline bool ImNanOrInf(double val) { return val == HUGE_VAL || val == -HUGE_VAL || isnan(ImNanOrInf113,4805
static inline double ImConstrainNan(double val) { return isnan(val) ? 0 : val; }ImConstrainNan115,4931
static inline double ImConstrainInf(double val) { return val == HUGE_VAL ?  DBL_MAX : val == -HUImConstrainInf117,5059
static inline double ImConstrainLog(double val) { return val <= 0 ? 0.001f : val; }ImConstrainLog119,5279
static inline double ImConstrainTime(double val) { return val < IMPLOT_MIN_TIME ? IMPLOT_MIN_TIMImConstrainTime121,5402
static inline bool ImAlmostEqual(double v1, double v2, int ulp = 2) { return ImAbs(v1-v2) < DBL_ImAlmostEqual123,5633
static inline T ImMinArray(const T* values, int count) { T m = values[0]; for (int i = 1; i < coImMinArray126,5852
static inline T ImMaxArray(const T* values, int count) { T m = values[0]; for (int i = 1; i < coImMaxArray129,6081
static inline void ImMinMaxArray(const T* values, int count, T* min_out, T* max_out) {ImMinMaxArray132,6318
static inline double ImMean(const T* values, int count) {ImMean142,6691
static inline double ImStdDev(const T* values, int count) {ImStdDev151,6965
static inline ImU32 ImMixU32(ImU32 a, ImU32 b, ImU32 s) {ImMixU32160,7290
static inline ImU32 ImLerpU32(const ImU32* colors, int size, float t) {ImLerpU32182,8140
static inline ImU32 ImAlphaU32(ImU32 col, float alpha) {ImAlphaU32195,8597
struct ImBufferWriterImBufferWriter200,8814
    char*  Buffer;Buffer202,8840
    int Size;Size203,8860
    int Pos;Pos204,8875
    ImBufferWriter(char* buffer, int size) {ImBufferWriter206,8891
    void Write(const char* fmt, ...) {Write212,9012
    void WriteV(const char* fmt, va_list args) {WriteV219,9165
struct ImPlotPointArray {ImPlotPointArray228,9428
    inline ImPlotPoint&       operator[](int i)       { return Data[i]; }operator []229,9455
    inline const ImPlotPoint& operator[](int i) const { return Data[i]; }operator []230,9530
    inline int Size()                                 { return N; }Size231,9605
    ImPlotPoint Data[N];Data232,9674
typedef int ImPlotScale;       // -> enum ImPlotScale_ImPlotScale239,9897
typedef int ImPlotTimeUnit;    // -> enum ImPlotTimeUnit_ImPlotTimeUnit240,9953
typedef int ImPlotDateFmt;     // -> enum ImPlotDateFmt_ImPlotDateFmt241,10012
typedef int ImPlotTimeFmt;     // -> enum ImPlotTimeFmt_ImPlotTimeFmt242,10070
enum ImPlotScale_ {ImPlotScale_245,10163
    ImPlotScale_LinLin, // linear x, linear yImPlotScale_LinLin246,10184
    ImPlotScale_LogLin, // log x,    linear yImPlotScale_LogLin247,10231
    ImPlotScale_LinLog, // linear x, log yImPlotScale_LinLog248,10278
    ImPlotScale_LogLog  // log x,    log yImPlotScale_LogLog249,10322
enum ImPlotTimeUnit_ {ImPlotTimeUnit_252,10372
    ImPlotTimeUnit_Us,  // microsecondImPlotTimeUnit_Us253,10396
    ImPlotTimeUnit_Ms,  // millisecondImPlotTimeUnit_Ms254,10436
    ImPlotTimeUnit_S,   // secondImPlotTimeUnit_S255,10476
    ImPlotTimeUnit_Min, // minuteImPlotTimeUnit_Min256,10511
    ImPlotTimeUnit_Hr,  // hourImPlotTimeUnit_Hr257,10546
    ImPlotTimeUnit_Day, // dayImPlotTimeUnit_Day258,10579
    ImPlotTimeUnit_Mo,  // monthImPlotTimeUnit_Mo259,10611
    ImPlotTimeUnit_Yr,  // yearImPlotTimeUnit_Yr260,10645
    ImPlotTimeUnit_COUNTImPlotTimeUnit_COUNT261,10678
enum ImPlotDateFmt_ {              // default        [ ISO 8601     ]ImPlotDateFmt_264,10710
    ImPlotDateFmt_None = 0,ImPlotDateFmt_None265,10781
    ImPlotDateFmt_DayMo,           // 10/3           [ --10-03      ]ImPlotDateFmt_DayMo266,10810
    ImPlotDateFmt_DayMoYr,         // 10/3/91        [ 1991-10-03   ]ImPlotDateFmt_DayMoYr267,10881
    ImPlotDateFmt_MoYr,            // Oct 1991       [ 1991-10      ]ImPlotDateFmt_MoYr268,10952
    ImPlotDateFmt_Mo,              // Oct            [ --10         ]ImPlotDateFmt_Mo269,11023
    ImPlotDateFmt_Yr               // 1991           [ 1991         ]ImPlotDateFmt_Yr270,11094
enum ImPlotTimeFmt_ {              // default        [ 24 Hour Clock ]ImPlotTimeFmt_273,11171
    ImPlotTimeFmt_None = 0,ImPlotTimeFmt_None274,11243
    ImPlotTimeFmt_Us,              // .428 552       [ .428 552     ]ImPlotTimeFmt_Us275,11272
    ImPlotTimeFmt_SUs,             // :29.428 552    [ :29.428 552  ]ImPlotTimeFmt_SUs276,11343
    ImPlotTimeFmt_SMs,             // :29.428        [ :29.428      ]ImPlotTimeFmt_SMs277,11414
    ImPlotTimeFmt_S,               // :29            [ :29          ]ImPlotTimeFmt_S278,11485
    ImPlotTimeFmt_HrMinSMs,        // 7:21:29.428pm  [ 19:21:29.428 ]ImPlotTimeFmt_HrMinSMs279,11556
    ImPlotTimeFmt_HrMinS,          // 7:21:29pm      [ 19:21:29     ]ImPlotTimeFmt_HrMinS280,11627
    ImPlotTimeFmt_HrMin,           // 7:21pm         [ 19:21        ]ImPlotTimeFmt_HrMin281,11698
    ImPlotTimeFmt_Hr               // 7pm            [ 19:00        ]ImPlotTimeFmt_Hr282,11769
struct ImPlotInputMap {ImPlotInputMap286,11914
    ImGuiMouseButton PanButton;             // LMB      enables panning when heldPanButton287,11939
    ImGuiKeyModFlags PanMod;                // none     optional modifier that must be held for PanMod288,12022
    ImGuiMouseButton FitButton;             // LMB      fits visible data when double clickedFitButton289,12127
    ImGuiMouseButton ContextMenuButton;     // RMB      opens plot context menu (if enabled) wheContextMenuButton290,12222
    ImGuiMouseButton BoxSelectButton;       // RMB      begins box selection when pressed and coBoxSelectButton291,12329
    ImGuiKeyModFlags BoxSelectMod;          // none     optional modifier that must be held for BoxSelectMod292,12457
    ImGuiMouseButton BoxSelectCancelButton; // LMB      cancels active box selection when presseBoxSelectCancelButton293,12568
    ImGuiMouseButton QueryButton;           // MMB      begins query selection when pressed and QueryButton294,12667
    ImGuiKeyModFlags QueryMod;              // none     optional modifier that must be held for QueryMod295,12798
    ImGuiKeyModFlags QueryToggleMod;        // Ctrl     when held, active box selections turn inQueryToggleMod296,12911
    ImGuiKeyModFlags HorizontalMod;         // Alt      expands active box selection/query horizHorizontalMod297,13019
    ImGuiKeyModFlags VerticalMod;           // Shift    expands active box selection/query vertiVerticalMod298,13147
struct ImPlotDateTimeFmt {ImPlotDateTimeFmt307,13541
    ImPlotDateTimeFmt(ImPlotDateFmt date_fmt, ImPlotTimeFmt time_fmt, bool use_24_hr_clk = falseImPlotDateTimeFmt308,13569
    ImPlotDateFmt Date;Date314,13857
    ImPlotTimeFmt Time;Time315,13882
    bool UseISO8601;UseISO8601316,13907
    bool Use24HourClock;Use24HourClock317,13929
struct ImPlotTime {ImPlotTime321,13992
    time_t S;  // second partS322,14013
    int    Us; // microsecond partUs323,14044
    ImPlotTime() { S = 0; Us = 0; }ImPlotTime324,14080
    ImPlotTime(time_t s, int us = 0) { S  = s + us / 1000000; Us = us % 1000000; }ImPlotTime325,14117
    void RollOver() { S  = S + Us / 1000000;  Us = Us % 1000000; }RollOver326,14201
    double ToDouble() const { return (double)S + (double)Us / 1000000.0; }ToDouble327,14269
    static ImPlotTime FromDouble(double t) { return ImPlotTime((time_t)t, (int)(t * 1000000 - flFromDouble328,14345
static inline ImPlotTime operator+(const ImPlotTime& lhs, const ImPlotTime& rhs)operator +331,14470
static inline ImPlotTime operator-(const ImPlotTime& lhs, const ImPlotTime& rhs)operator -333,14608
static inline bool operator==(const ImPlotTime& lhs, const ImPlotTime& rhs)operator ==335,14746
static inline bool operator<(const ImPlotTime& lhs, const ImPlotTime& rhs)operator <337,14871
static inline bool operator>(const ImPlotTime& lhs, const ImPlotTime& rhs)operator >339,15009
static inline bool operator<=(const ImPlotTime& lhs, const ImPlotTime& rhs)operator <=341,15108
static inline bool operator>=(const ImPlotTime& lhs, const ImPlotTime& rhs)operator >=343,15222
struct ImPlotColormapData {ImPlotColormapData347,15364
struct ImPlotPointError {ImPlotPointError450,19795
struct ImPlotAnnotation {ImPlotAnnotation458,20011
struct ImPlotAnnotationCollection {ImPlotAnnotationCollection468,20196
struct ImPlotTickImPlotTick508,21422
struct ImPlotTickCollection {ImPlotTickCollection528,21848
struct ImPlotAxisImPlotAxis577,23588
struct ImPlotItemImPlotItem700,28747
struct ImPlotLegendDataImPlotLegendData721,29206
struct ImPlotPlotImPlotPlot729,29427
struct ImPlotNextPlotDataImPlotNextPlotData788,32192
struct ImPlotNextItemData {ImPlotNextItemData829,33452
struct ImPlotContext {ImPlotContext858,34570
namespace ImPlot {ImPlot924,36521
static inline int GetCurrentYAxis() { return GImPlot->CurrentPlot->CurrentYAxis; }GetCurrentYAxis979,38921
static inline ImPlotScale GetCurrentScale() { return GImPlot->Scales[GetCurrentYAxis()]; }GetCurrentScale986,39296
static inline bool FitThisFrame() { return GImPlot->FitThisFrame; }FitThisFrame989,39449
static inline void FitPointAxis(ImPlotAxis& axis, ImPlotRange& ext, double v) {FitPointAxis991,39594
static inline void FitPointMultiAxis(ImPlotAxis& axis, ImPlotAxis& alt, ImPlotRange& ext, doubleFitPointMultiAxis998,39944
static inline void FitPointX(double x) {FitPointX1007,40439
static inline void FitPointY(double y) {FitPointY1011,40636
static inline void FitPoint(const ImPlotPoint& p) {FitPoint1016,40903
static inline bool RangesOverlap(const ImPlotRange& r1, const ImPlotRange& r2)RangesOverlap1023,41315
static inline const char* GetFormatX()              { return GImPlot->NextPlotData.HasFmtX    ? GetFormatX1035,41847
static inline const char* GetFormatY(ImPlotYAxis y) { return GImPlot->NextPlotData.HasFmtY[y] ? GetFormatY1036,41996
static inline const ImPlotNextItemData& GetItemData() { return GImPlot->NextItemData; }GetItemData1075,44986
static inline bool IsColorAuto(const ImVec4& col) { return col.w == -1; }IsColorAuto1078,45143
static inline bool IsColorAuto(ImPlotCol idx) { return IsColorAuto(GImPlot->Style.Colors[idx]); IsColorAuto1080,45289
static inline ImVec4 GetStyleColorVec4(ImPlotCol idx) { return IsColorAuto(idx) ? GetAutoColor(iGetStyleColorVec41085,45554
static inline ImU32  GetStyleColorU32(ImPlotCol idx)  { return ImGui::ColorConvertFloat4ToU32(GeGetStyleColorU321086,45687
static inline ImVec2 CalcTextSizeVertical(const char *text) {CalcTextSizeVertical1091,46059
static inline ImU32 CalcTextColor(const ImVec4& bg) { return (bg.x * 0.299 + bg.y * 0.587 + bg.zCalcTextColor1096,46256
static inline ImU32 CalcTextColor(ImU32 bg)         { return CalcTextColor(ImGui::ColorConvertU3CalcTextColor1097,46406
static inline ImU32 CalcHoverColor(ImU32 col)       {  return ImMixU32(col, CalcTextColor(col), CalcHoverColor1099,46563
static inline ImVec2 ClampLabelPos(ImVec2 pos, const ImVec2& size, const ImVec2& Min, const ImVeClampLabelPos1102,46739
static inline int OrderOfMagnitude(double val) { return val == 0 ? 0 : (int)(floor(log10(fabs(vaOrderOfMagnitude1127,48129
static inline int OrderToPrecision(int order) { return order > 0 ? 0 : 1 - order; }OrderToPrecision1129,48296
static inline int Precision(double val) { return OrderToPrecision(OrderOfMagnitude(val)); }Precision1131,48441
static inline double RoundTo(double val, int prec) { double p = pow(10,(double)prec); return floRoundTo1133,48573
static inline ImVec2 Intersection(const ImVec2& a1, const ImVec2& a2, const ImVec2& b1, const ImIntersection1136,48780
void FillRange(ImVector<T>& buffer, int n, T vmin, T vmax) {FillRange1144,49272
static inline T OffsetAndStride(const T* data, int idx, int count, int offset, int stride) {OffsetAndStride1154,49542
static inline void CalculateBins(const T* values, int count, ImPlotBin meth, const ImPlotRange& CalculateBins1161,49841
static inline bool IsLeapYear(int year) {IsLeapYear1185,50784
static inline int GetDaysInMonth(int year, int month) {GetDaysInMonth1189,50997

../gejo/libs/implot/implot_items.cpp,19305
#define sprintf sprintf29,1235
#define SQRT_1_2 SQRT_1_232,1272
#define SQRT_3_2 SQRT_3_233,1305
#define IMPLOT_NORMALIZE2F_OVER_ZERO(IMPLOT_NORMALIZE2F_OVER_ZERO35,1340
#define ImDrawFlags_RoundCornersAll ImDrawFlags_RoundCornersAll47,2397
namespace ImPlot {ImPlot50,2466
ImPlotItem* RegisterOrGetItem(const char* label_id, bool* just_created) {RegisterOrGetItem56,2667
ImPlotItem* GetItem(const char* label_id) {GetItem80,3563
ImPlotItem* GetCurrentItem() {GetCurrentItem86,3738
void SetNextLineStyle(const ImVec4& col, float weight) {SetNextLineStyle91,3838
void SetNextFillStyle(const ImVec4& col, float alpha) {SetNextFillStyle97,4041
void SetNextMarkerStyle(ImPlotMarker marker, float size, const ImVec4& fill, float weight, constSetNextMarkerStyle103,4242
void SetNextErrorBarStyle(const ImVec4& col, float size, float weight) {SetNextErrorBarStyle112,4711
ImVec4 GetLastItemColor() {GetLastItemColor119,4994
void HideNextItem(bool hidden, ImGuiCond cond) {HideNextItem126,5183
void BustItemCache() {BustItemCache133,5395
void BustColorCache(const char* plot_title_id) {BustColorCache143,5665
bool BeginItem(const char* label_id, ImPlotCol recolor_from) {BeginItem163,6336
void EndItem() {EndItem234,10877
struct GetterYs {GetterYs254,11531
    GetterYs(const T* ys, int count, double xscale, double x0, int offset, int stride) :GetterYs255,11550
    inline ImPlotPoint operator()(int idx) const {operator ()263,11809
    const T* const Ys;Ys266,11973
    const int Count;Count267,11997
    const double XScale;XScale268,12019
    const double X0;X0269,12045
    const int Offset;Offset270,12067
    const int Stride;Stride271,12090
struct GetterXsYs {GetterXsYs276,12208
    GetterXsYs(const T* xs, const T* ys, int count, int offset, int stride) :GetterXsYs277,12229
    inline ImPlotPoint operator()(int idx) const {operator ()284,12452
    const T* const Xs;Xs287,12654
    const T* const Ys;Ys288,12678
    const int Count;Count289,12702
    const int Offset;Offset290,12724
    const int Stride;Stride291,12747
struct GetterYRef {GetterYRef295,12855
    GetterYRef(double y_ref, int count, double xscale, double x0) :GetterYRef296,12876
    inline ImPlotPoint operator()(int idx) const {operator ()302,13040
    const double YRef;YRef305,13151
    const int Count;Count306,13175
    const double XScale;XScale307,13197
    const double X0;X0308,13223
struct GetterXsYRef {GetterXsYRef313,13374
    GetterXsYRef(const T* xs, double y_ref, int count, int offset, int stride) :GetterXsYRef314,13397
    inline ImPlotPoint operator()(int idx) const {operator ()321,13628
    const T* const Xs;Xs324,13779
    const double YRef;YRef325,13803
    const int Count;Count326,13827
    const int Offset;Offset327,13849
    const int Stride;Stride328,13872
struct GetterXRefYs {GetterXRefYs333,14024
    GetterXRefYs(double x_ref, const T* ys, int count, int offset, int stride) :GetterXRefYs334,14047
    inline ImPlotPoint operator()(int idx) const {operator ()341,14278
    const double XRef;XRef344,14429
    const T* const Ys;Ys345,14453
    const int Count;Count346,14477
    const int Offset;Offset347,14499
    const int Stride;Stride348,14522
struct GetterFuncPtr {GetterFuncPtr352,14609
    GetterFuncPtr(ImPlotPoint (*getter)(void* data, int idx), void* data, int count, int offset)GetterFuncPtr353,14633
    inline ImPlotPoint operator()(int idx) const {operator ()359,14864
    ImPlotPoint (* const Getter)(void* data, int idx);Getter363,15004
    void* const Data;Data364,15060
    const int Count;Count365,15083
    const int Offset;Offset366,15105
struct GetterBarV {GetterBarV370,15157
    const T* Ys; double XShift; int Count; int Offset; int Stride;Ys371,15178
    const T* Ys; double XShift; int Count; int Offset; int Stride;XShift371,15178
    const T* Ys; double XShift; int Count; int Offset; int Stride;Count371,15178
    const T* Ys; double XShift; int Count; int Offset; int Stride;Offset371,15178
    const T* Ys; double XShift; int Count; int Offset; int Stride;Stride371,15178
    GetterBarV(const T* ys, double xshift, int count, int offset, int stride) { Ys = ys; XShift GetterBarV372,15246
    inline ImPlotPoint operator()(int idx) const { return ImPlotPoint((double)idx + (double)XShioperator ()373,15404
struct GetterBarH {GetterBarH377,15594
    const T* Xs; double YShift; int Count; int Offset; int Stride;Xs378,15615
    const T* Xs; double YShift; int Count; int Offset; int Stride;YShift378,15615
    const T* Xs; double YShift; int Count; int Offset; int Stride;Count378,15615
    const T* Xs; double YShift; int Count; int Offset; int Stride;Offset378,15615
    const T* Xs; double YShift; int Count; int Offset; int Stride;Stride378,15615
    GetterBarH(const T* xs, double yshift, int count, int offset, int stride) { Xs = xs; YShift GetterBarH379,15683
    inline ImPlotPoint operator()(int idx) const { return ImPlotPoint((double)OffsetAndStride(Xsoperator ()380,15841
struct GetterError {GetterError384,16031
    GetterError(const T* xs, const T* ys, const T* neg, const T* pos, int count, int offset, intGetterError385,16053
    inline ImPlotPointError operator()(int idx) const {operator ()394,16343
    const T* const Xs;Xs400,16772
    const T* const Ys;Ys401,16796
    const T* const Neg;Neg402,16820
    const T* const Pos;Pos403,16845
    const int Count;Count404,16870
    const int Offset;Offset405,16892
    const int Stride;Stride406,16915
struct TransformerLinLin {TransformerLinLin416,17273
    TransformerLinLin() : YAxis(GetCurrentYAxis()) {}TransformerLinLin417,17301
    inline ImVec2 operator()(const ImPlotPoint& plt) const {operator ()419,17453
    const int YAxis;YAxis424,17803
struct TransformerLogLin {TransformerLogLin428,17882
    TransformerLogLin() : YAxis(GetCurrentYAxis()) {}TransformerLogLin429,17910
    inline ImVec2 operator()(const ImPlotPoint& plt) const {operator ()430,17965
    const int YAxis;YAxis437,18498
struct TransformerLinLog {TransformerLinLog441,18577
    TransformerLinLog() : YAxis(GetCurrentYAxis()) {}TransformerLinLog442,18605
    inline ImVec2 operator()(const ImPlotPoint& plt) const {operator ()443,18660
    const int YAxis;YAxis450,19221
struct TransformerLogLog {TransformerLogLog454,19297
    TransformerLogLog() : YAxis(GetCurrentYAxis()) {}TransformerLogLog455,19325
    inline ImVec2 operator()(const ImPlotPoint& plt) const {operator ()456,19380
    const int YAxis;YAxis465,20124
inline void AddLine(const ImVec2& P1, const ImVec2& P2, float weight, ImU32 col, ImDrawList& DraAddLine472,20340
inline void AddRectFilled(const ImVec2& Pmin, const ImVec2& Pmax, ImU32 col, ImDrawList& DrawLisAddRectFilled505,21888
struct LineStripRenderer {LineStripRenderer532,23207
    inline LineStripRenderer(const TGetter& getter, const TTransformer& transformer, ImU32 col, LineStripRenderer533,23235
    inline bool operator()(ImDrawList& DrawList, const ImRect& cull_rect, const ImVec2& uv, int operator ()542,23537
    const TGetter& Getter;Getter552,23929
    const TTransformer& Transformer;Transformer553,23957
    const int Prims;Prims554,23995
    const ImU32 Col;Col555,24017
    const float Weight;Weight556,24039
    mutable ImVec2 P1;P1557,24064
    static const int IdxConsumed = 6;IdxConsumed558,24088
    static const int VtxConsumed = 4;VtxConsumed559,24127
struct StairsRenderer {StairsRenderer563,24224
    inline StairsRenderer(const TGetter& getter, const TTransformer& transformer, ImU32 col, floStairsRenderer564,24249
    inline bool operator()(ImDrawList& DrawList, const ImRect& cull_rect, const ImVec2& uv, int operator ()573,24559
    const TGetter& Getter;Getter587,25237
    const TTransformer& Transformer;Transformer588,25265
    const int Prims;Prims589,25303
    const ImU32 Col;Col590,25325
    const float HalfWeight;HalfWeight591,25347
    mutable ImVec2 P1;P1592,25376
    static const int IdxConsumed = 12;IdxConsumed593,25400
    static const int VtxConsumed = 8;VtxConsumed594,25440
struct LineSegmentsRenderer {LineSegmentsRenderer598,25557
    inline LineSegmentsRenderer(const TGetter1& getter1, const TGetter2& getter2, const TTransfoLineSegmentsRenderer599,25588
    inline bool operator()(ImDrawList& DrawList, const ImRect& cull_rect, const ImVec2& uv, int operator ()607,25924
    const TGetter1& Getter1;Getter1615,26309
    const TGetter2& Getter2;Getter2616,26339
    const TTransformer& Transformer;Transformer617,26369
    const int Prims;Prims618,26407
    const ImU32 Col;Col619,26429
    const float Weight;Weight620,26451
    static const int IdxConsumed = 6;IdxConsumed621,26476
    static const int VtxConsumed = 4;VtxConsumed622,26515
struct ShadedRenderer {ShadedRenderer626,26632
    ShadedRenderer(const TGetter1& getter1, const TGetter2& getter2, const TTransformer& transfoShadedRenderer627,26657
    inline bool operator()(ImDrawList& DrawList, const ImRect& cull_rect, const ImVec2& uv, int operator ()638,27033
    const TGetter1& Getter1;Getter1677,28986
    const TGetter2& Getter2;Getter2678,29016
    const TTransformer& Transformer;Transformer679,29046
    const int Prims;Prims680,29084
    const ImU32 Col;Col681,29106
    mutable ImVec2 P11;P11682,29128
    mutable ImVec2 P12;P12683,29153
    static const int IdxConsumed = 6;IdxConsumed684,29178
    static const int VtxConsumed = 5;VtxConsumed685,29217
struct MaxIdx { static const unsigned int Value; };MaxIdx690,29379
struct MaxIdx { static const unsigned int Value; };Value690,29379
template <> const unsigned int MaxIdx<unsigned short>::Value = 65535;Value691,29432
template <> const unsigned int MaxIdx<unsigned int>::Value   = 4294967295;Value692,29503
inline void RenderPrimitives(const Renderer& renderer, ImDrawList& DrawList, const ImRect& cull_RenderPrimitives696,29677
inline void RenderLineStrip(const Getter& getter, const Transformer& transformer, ImDrawList& DrRenderLineStrip733,31605
inline void RenderLineSegments(const Getter1& getter1, const Getter2& getter2, const TransformerRenderLineSegments750,32445
inline void RenderStairs(const Getter& getter, const Transformer& transformer, ImDrawList& DrawLRenderStairs767,33344
inline void TransformMarker(ImVec2* points, int n, const ImVec2& c, float s) {TransformMarker790,34415
inline void RenderMarkerGeneral(ImDrawList& DrawList, ImVec2* points, int n, const ImVec2& c, flRenderMarkerGeneral797,34634
inline void RenderMarkerCircle(ImDrawList& DrawList, const ImVec2& c, float s, bool outline, ImURenderMarkerCircle807,35115
inline void RenderMarkerDiamond(ImDrawList& DrawList, const ImVec2& c, float s, bool outline, ImRenderMarkerDiamond821,35950
inline void RenderMarkerSquare(ImDrawList& DrawList, const ImVec2& c, float s, bool outline, ImURenderMarkerSquare826,36295
inline void RenderMarkerUp(ImDrawList& DrawList, const ImVec2& c, float s, bool outline, ImU32 cRenderMarkerUp831,36690
inline void RenderMarkerDown(ImDrawList& DrawList, const ImVec2& c, float s, bool outline, ImU32RenderMarkerDown836,37031
inline void RenderMarkerLeft(ImDrawList& DrawList, const ImVec2& c, float s, bool outline, ImU32RenderMarkerLeft841,37375
inline void RenderMarkerRight(ImDrawList& DrawList, const ImVec2& c, float s, bool outline, ImU3RenderMarkerRight846,37720
inline void RenderMarkerAsterisk(ImDrawList& DrawList, const ImVec2& c, float s, bool /*outline*RenderMarkerAsterisk851,38067
inline void RenderMarkerPlus(ImDrawList& DrawList, const ImVec2& c, float s, bool /*outline*/, IRenderMarkerPlus859,38635
inline void RenderMarkerCross(ImDrawList& DrawList, const ImVec2& c, float s, bool /*outline*/, RenderMarkerCross866,39061
inline void RenderMarkers(Getter getter, Transformer transformer, ImDrawList& DrawList, ImPlotMaRenderMarkers874,39589
inline void PlotLineEx(const char* label_id, const Getter& getter) {PlotLineEx900,40731
void PlotLine(const char* label_id, const T* values, int count, double xscale, double x0, int ofPlotLine937,43122
void PlotLine(const char* label_id, const T* xs, const T* ys, int count, int offset, int stride)PlotLine954,44837
void PlotLineG(const char* label_id, ImPlotPoint (*getter_func)(void* data, int idx), void* dataPlotLineG971,46388
inline void PlotScatterEx(const char* label_id, const Getter& getter) {PlotScatterEx981,46828
void PlotScatter(const char* label_id, const T* values, int count, double xscale, double x0, intPlotScatter1010,48598
void PlotScatter(const char* label_id, const T* xs, const T* ys, int count, int offset, int striPlotScatter1027,50347
void PlotScatterG(const char* label_id, ImPlotPoint (*getter_func)(void* data, int idx), void* dPlotScatterG1044,51934
inline void PlotStairsEx(const char* label_id, const Getter& getter) {PlotStairsEx1054,52379
void PlotStairs(const char* label_id, const T* values, int count, double xscale, double x0, int PlotStairs1091,54760
void PlotStairs(const char* label_id, const T* xs, const T* ys, int count, int offset, int stridPlotStairs1108,56499
void PlotStairsG(const char* label_id, ImPlotPoint (*getter_func)(void* data, int idx), void* daPlotStairsG1125,58074
inline void PlotShadedEx(const char* label_id, const Getter1& getter1, const Getter2& getter2, bPlotShadedEx1135,58536
void PlotShaded(const char* label_id, const T* values, int count, double y_ref, double xscale, dPlotShaded1161,60105
void PlotShaded(const char* label_id, const T* xs, const T* ys, int count, double y_ref, int offPlotShaded1188,62285
void PlotShaded(const char* label_id, const T* xs, const T* ys1, const T* ys2, int count, int ofPlotShaded1215,64328
void PlotShadedG(const char* label_id, ImPlotPoint (*g1)(void* data, int idx), void* data1, ImPlPlotShadedG1233,66182
void PlotBarsEx(const char* label_id, const Getter& getter, double width) {PlotBarsEx1246,66764
void PlotBars(const char* label_id, const T* values, int count, double width, double shift, int PlotBars1279,68133
void PlotBars(const char* label_id, const T* xs, const T* ys, int count, double width, int offsePlotBars1296,69873
void PlotBarsG(const char* label_id, ImPlotPoint (*getter_func)(void* data, int idx), void* dataPlotBarsG1313,71578
void PlotBarsHEx(const char* label_id, const Getter& getter, THeight height) {PlotBarsHEx1325,72089
void PlotBarsH(const char* label_id, const T* values, int count, double height, double shift, inPlotBarsH1358,73468
void PlotBarsH(const char* label_id, const T* xs, const T* ys, int count, double height, int offPlotBarsH1375,75232
void PlotBarsHG(const char* label_id, ImPlotPoint (*getter_func)(void* data, int idx), void* datPlotBarsHG1392,76961
void PlotErrorBarsEx(const char* label_id, const Getter& getter) {PlotErrorBarsEx1402,77424
void PlotErrorBars(const char* label_id, const T* xs, const T* ys, const T* err, int count, int PlotErrorBars1431,78720
void PlotErrorBars(const char* label_id, const T* xs, const T* ys, const T* neg, const T* pos, iPlotErrorBars1448,80544
void PlotErrorBarsHEx(const char* label_id, const Getter& getter) {PlotErrorBarsHEx1469,82752
void PlotErrorBarsH(const char* label_id, const T* xs, const T* ys, const T* err, int count, intPlotErrorBarsH1498,84048
void PlotErrorBarsH(const char* label_id, const T* xs, const T* ys, const T* neg, const T* pos, PlotErrorBarsH1515,85884
inline void PlotStemsEx(const char* label_id, const GetterM& get_mark, const GetterB& get_base) PlotStemsEx1536,88116
void PlotStems(const char* label_id, const T* values, int count, double y_ref, double xscale, doPlotStems1575,90699
void PlotStems(const char* label_id, const T* xs, const T* ys, int count, double y_ref, int offsPlotStems1593,92641
void PlotVLines(const char* label_id, const T* xs, int count, int offset, int stride) {PlotVLines1615,94621
void PlotHLines(const char* label_id, const T* ys, int count, int offset, int stride) {PlotHLines1653,97210
inline void RenderPieSlice(ImDrawList& DrawList, const ImPlotPoint& center, double radius, doublRenderPieSlice1693,99957
void PlotPieChart(const char* const label_ids[], const T* values, int count, double x, double y,PlotPieChart1707,100554
struct RectInfo {RectInfo1771,104861
    ImPlotPoint Min, Max;Min1772,104880
    ImPlotPoint Min, Max;Max1772,104880
    ImU32 Color;Color1773,104907
struct RectRenderer {RectRenderer1777,104983
    inline RectRenderer(const TGetter& getter, const TTransformer& transformer) :RectRenderer1778,105006
    inline bool operator()(ImDrawList& DrawList, const ImRect& cull_rect, const ImVec2& uv, int operator ()1783,105186
    const TGetter& Getter;Getter1816,106858
    const TTransformer& Transformer;Transformer1817,106886
    const int Prims;Prims1818,106924
    static const int IdxConsumed = 6;IdxConsumed1819,106946
    static const int VtxConsumed = 4;VtxConsumed1820,106985
struct GetterHeatmap {GetterHeatmap1824,107053
    GetterHeatmap(const T* values, int rows, int cols, double scale_min, double scale_max, doublGetterHeatmap1825,107077
    inline RectInfo operator()(int idx) const {operator ()1840,107556
    const T* const Values;Values1854,108199
    const int Count, Rows, Cols;Count1855,108227
    const int Count, Rows, Cols;Rows1855,108227
    const int Count, Rows, Cols;Cols1855,108227
    const double ScaleMin, ScaleMax, Width, Height, XRef, YRef, YDir;ScaleMin1856,108261
    const double ScaleMin, ScaleMax, Width, Height, XRef, YRef, YDir;ScaleMax1856,108261
    const double ScaleMin, ScaleMax, Width, Height, XRef, YRef, YDir;Width1856,108261
    const double ScaleMin, ScaleMax, Width, Height, XRef, YRef, YDir;Height1856,108261
    const double ScaleMin, ScaleMax, Width, Height, XRef, YRef, YDir;XRef1856,108261
    const double ScaleMin, ScaleMax, Width, Height, XRef, YRef, YDir;YRef1856,108261
    const double ScaleMin, ScaleMax, Width, Height, XRef, YRef, YDir;YDir1856,108261
    const ImPlotPoint HalfSize;HalfSize1857,108332
void RenderHeatmap(Transformer transformer, ImDrawList& DrawList, const T* values, int rows, intRenderHeatmap1861,108416
void PlotHeatmap(const char* label_id, const T* values, int rows, int cols, double scale_min, doPlotHeatmap1910,111179
double PlotHistogram(const char* label_id, const T* values, int count, int bins, bool cumulativePlotHistogram1943,114768
double PlotHistogram2D(const char* label_id, const T* xs, const T* ys, int count, int x_bins, inPlotHistogram2D2029,119242
inline void PlotDigitalEx(const char* label_id, Getter getter) {PlotDigitalEx2120,124418
void PlotDigital(const char* label_id, const T* xs, const T* ys, int count, int offset, int striPlotDigital2177,127572
void PlotDigitalG(const char* label_id, ImPlotPoint (*getter_func)(void* data, int idx), void* dPlotDigitalG2194,129159
void PlotImage(const char* label_id, ImTextureID user_texture_id, const ImPlotPoint& bmin, constPlotImage2203,129573
void PlotText(const char* text, double x, double y, bool vertical, const ImVec2& pixel_offset) {PlotText2226,130510
void PlotDummy(const char* label_id) {PlotDummy2247,131477

../gejo/libs/implot/LICENSE,0

../gejo/libs/implot/README.md,189
# ImPlotImPlot1,0
## FeaturesFeatures15,1724
## UsageUsage47,3145
## DemosDemos71,3957
## IntegrationIntegration79,5132
## Special NotesSpecial Notes97,5893
## FAQFAQ105,7087

../gejo/libs/khrplatform.h,4638
#define __khrplatform_h___khrplatform_h_2,26
#   define KHRONOS_STATIC KHRONOS_STATIC94,4353
#   define KHRONOS_APICALLKHRONOS_APICALL105,4814
#   define KHRONOS_APICALL KHRONOS_APICALL107,4865
#   define KHRONOS_APICALL KHRONOS_APICALL109,4946
#   define KHRONOS_APICALL KHRONOS_APICALL111,5011
#   define KHRONOS_APICALLKHRONOS_APICALL113,5085
#   define KHRONOS_APIENTRY KHRONOS_APIENTRY124,5535
#   define KHRONOS_APIENTRYKHRONOS_APIENTRY126,5581
#define KHRONOS_APIATTRIBUTES KHRONOS_APIATTRIBUTES135,5924
#define KHRONOS_APIATTRIBUTESKHRONOS_APIATTRIBUTES137,5971
typedef int32_t                 khronos_int32_t;khronos_int32_t150,6374
typedef uint32_t                khronos_uint32_t;khronos_uint32_t151,6424
typedef int64_t                 khronos_int64_t;khronos_int64_t152,6475
typedef uint64_t                khronos_uint64_t;khronos_uint64_t153,6525
#define KHRONOS_SUPPORT_INT64 KHRONOS_SUPPORT_INT64154,6576
#define KHRONOS_SUPPORT_FLOAT KHRONOS_SUPPORT_FLOAT155,6611
typedef int32_t                 khronos_int32_t;khronos_int32_t163,6746
typedef uint32_t                khronos_uint32_t;khronos_uint32_t164,6796
typedef int64_t                 khronos_int64_t;khronos_int64_t165,6847
typedef uint64_t                khronos_uint64_t;khronos_uint64_t166,6897
#define KHRONOS_SUPPORT_INT64 KHRONOS_SUPPORT_INT64167,6948
#define KHRONOS_SUPPORT_FLOAT KHRONOS_SUPPORT_FLOAT168,6983
typedef __int32                 khronos_int32_t;khronos_int32_t175,7094
typedef unsigned __int32        khronos_uint32_t;khronos_uint32_t176,7144
typedef __int64                 khronos_int64_t;khronos_int64_t177,7195
typedef unsigned __int64        khronos_uint64_t;khronos_uint64_t178,7245
#define KHRONOS_SUPPORT_INT64 KHRONOS_SUPPORT_INT64179,7296
#define KHRONOS_SUPPORT_FLOAT KHRONOS_SUPPORT_FLOAT180,7331
typedef int                     khronos_int32_t;khronos_int32_t187,7446
typedef unsigned int            khronos_uint32_t;khronos_uint32_t188,7496
typedef long int                khronos_int64_t;khronos_int64_t190,7590
typedef unsigned long int       khronos_uint64_t;khronos_uint64_t191,7640
typedef long long int           khronos_int64_t;khronos_int64_t193,7698
typedef unsigned long long int  khronos_uint64_t;khronos_uint64_t194,7748
#define KHRONOS_SUPPORT_INT64 KHRONOS_SUPPORT_INT64196,7824
#define KHRONOS_SUPPORT_FLOAT KHRONOS_SUPPORT_FLOAT197,7859
typedef int                     khronos_int32_t;khronos_int32_t204,7973
typedef unsigned int            khronos_uint32_t;khronos_uint32_t205,8023
#define KHRONOS_SUPPORT_INT64 KHRONOS_SUPPORT_INT64206,8074
#define KHRONOS_SUPPORT_FLOAT KHRONOS_SUPPORT_FLOAT207,8109
typedef int32_t                 khronos_int32_t;khronos_int32_t215,8206
typedef uint32_t                khronos_uint32_t;khronos_uint32_t216,8256
typedef int64_t                 khronos_int64_t;khronos_int64_t217,8307
typedef uint64_t                khronos_uint64_t;khronos_uint64_t218,8357
#define KHRONOS_SUPPORT_INT64 KHRONOS_SUPPORT_INT64219,8408
#define KHRONOS_SUPPORT_FLOAT KHRONOS_SUPPORT_FLOAT220,8443
typedef signed   char          khronos_int8_t;khronos_int8_t228,8555
typedef unsigned char          khronos_uint8_t;khronos_uint8_t229,8603
typedef signed   short int     khronos_int16_t;khronos_int16_t230,8652
typedef unsigned short int     khronos_uint16_t;khronos_uint16_t231,8701
typedef signed   long long int khronos_intptr_t;khronos_intptr_t239,8971
typedef unsigned long long int khronos_uintptr_t;khronos_uintptr_t240,9021
typedef signed   long long int khronos_ssize_t;khronos_ssize_t241,9072
typedef unsigned long long int khronos_usize_t;khronos_usize_t242,9121
typedef signed   long  int     khronos_intptr_t;khronos_intptr_t244,9177
typedef unsigned long  int     khronos_uintptr_t;khronos_uintptr_t245,9227
typedef signed   long  int     khronos_ssize_t;khronos_ssize_t246,9278
typedef unsigned long  int     khronos_usize_t;khronos_usize_t247,9327
typedef          float         khronos_float_t;khronos_float_t254,9437
typedef khronos_uint64_t       khronos_utime_nanoseconds_t;khronos_utime_nanoseconds_t267,9955
typedef khronos_int64_t        khronos_stime_nanoseconds_t;khronos_stime_nanoseconds_t268,10016
#define KHRONOS_MAX_ENUM KHRONOS_MAX_ENUM275,10173
typedef enum {__anonb41227aa0103284,10389
    KHRONOS_FALSE = 0,KHRONOS_FALSE285,10405
    KHRONOS_TRUE  = 1,KHRONOS_TRUE286,10429
    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUMKHRONOS_BOOLEAN_ENUM_FORCE_SIZE287,10453
} khronos_boolean_enum_t;khronos_boolean_enum_t288,10509

../gejo/libs/stb_image.h,37928
#define STBI_INCLUDE_STB_IMAGE_HSTBI_INCLUDE_STB_IMAGE_H111,5395
#define STBI_VERSION STBI_VERSION323,14214
{__anon57a7b9ab0103326,14246
   STBI_default = 0, // only used for desired_channelsSTBI_default327,14249
   STBI_grey       = 1,STBI_grey329,14307
   STBI_grey_alpha = 2,STBI_grey_alpha330,14332
   STBI_rgb        = 3,STBI_rgb331,14357
   STBI_rgb_alpha  = 4STBI_rgb_alpha332,14382
typedef unsigned char stbi_uc;stbi_uc336,14433
typedef unsigned short stbi_us;stbi_us337,14465
#define STBIDEF STBIDEF345,14586
{__anon57a7b9ab0208361,14877
   int      (*read)  (void *user,char *data,int size);   // fill 'data' with 'size' bytes.  returead362,14880
   void     (*skip)  (void *user,int n);                 // skip the next 'n' bytes, or 'unget' skip363,15010
   int      (*eof)   (void *user);                       // returns nonzero if we are at end of eof364,15137
} stbi_io_callbacks;stbi_io_callbacks365,15244
   #define STBI_NO_JPEGSTBI_NO_JPEG496,21260
   #define STBI_NO_PNGSTBI_NO_PNG499,21322
   #define STBI_NO_BMPSTBI_NO_BMP502,21383
   #define STBI_NO_PSDSTBI_NO_PSD505,21444
   #define STBI_NO_TGASTBI_NO_TGA508,21505
   #define STBI_NO_GIFSTBI_NO_GIF511,21566
   #define STBI_NO_HDRSTBI_NO_HDR514,21627
   #define STBI_NO_PICSTBI_NO_PIC517,21688
   #define STBI_NO_PNMSTBI_NO_PNM520,21749
#define STBI_NO_ZLIBSTBI_NO_ZLIB525,21877
#define STBI_ASSERT(STBI_ASSERT545,22232
#define STBI_EXTERN STBI_EXTERN549,22296
#define STBI_EXTERN STBI_EXTERN551,22335
   #define stbi_inline stbi_inline557,22416
   #define stbi_inlinestbi_inline559,22457
   #define stbi_inline stbi_inline562,22499
typedef unsigned short stbi__uint16;stbi__uint16567,22566
typedef   signed short stbi__int16;stbi__int16568,22604
typedef unsigned int   stbi__uint32;stbi__uint32569,22641
typedef   signed int   stbi__int32;stbi__int32570,22679
typedef uint16_t stbi__uint16;stbi__uint16573,22744
typedef int16_t  stbi__int16;stbi__int16574,22776
typedef uint32_t stbi__uint32;stbi__uint32575,22807
typedef int32_t  stbi__int32;stbi__int32576,22839
typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];validate_uint32580,22931
#define STBI_NOTUSED(STBI_NOTUSED583,23024
#define STBI_NOTUSED(STBI_NOTUSED585,23067
#define STBI_HAS_LROTLSTBI_HAS_LROTL589,23136
   #define stbi_lrot(stbi_lrot593,23193
   #define stbi_lrot(stbi_lrot595,23240
#define STBI_MALLOC(STBI_MALLOC607,23686
#define STBI_REALLOC(STBI_REALLOC608,23732
#define STBI_FREE(STBI_FREE609,23784
#define STBI_REALLOC_SIZED(STBI_REALLOC_SIZED613,23865
#define STBI__X64_TARGETSTBI__X64_TARGET618,24006
#define STBI__X86_TARGETSTBI__X86_TARGET620,24075
#define STBI_NO_SIMDSTBI_NO_SIMD631,24690
#define STBI_NO_SIMDSTBI_NO_SIMD646,25449
#define STBI_SSE2STBI_SSE2650,25569
static int stbi__cpuid3(void)stbi__cpuid3657,25699
static int stbi__cpuid3(void)stbi__cpuid3664,25801
#define STBI_SIMD_ALIGN(STBI_SIMD_ALIGN676,25946
static int stbi__sse2_available(void)stbi__sse2_available679,26067
#define STBI_SIMD_ALIGN(STBI_SIMD_ALIGN687,26230
static int stbi__sse2_available(void)stbi__sse2_available690,26358
#define STBI_SIMD_ALIGN(STBI_SIMD_ALIGN710,26801
#define STBI_SIMD_ALIGN(STBI_SIMD_ALIGN714,26912
{__anon57a7b9ab0308724,27232
   stbi__uint32 img_x, img_y;img_x725,27235
   stbi__uint32 img_x, img_y;img_y725,27235
   int img_n, img_out_n;img_n726,27266
   int img_n, img_out_n;img_out_n726,27266
   stbi_io_callbacks io;io728,27294
   void *io_user_data;io_user_data729,27320
   int read_from_callbacks;read_from_callbacks731,27346
   int buflen;buflen732,27375
   stbi_uc buffer_start[128];buffer_start733,27391
   stbi_uc *img_buffer, *img_buffer_end;img_buffer735,27424
   stbi_uc *img_buffer, *img_buffer_end;img_buffer_end735,27424
   stbi_uc *img_buffer_original, *img_buffer_original_end;img_buffer_original736,27466
   stbi_uc *img_buffer_original, *img_buffer_original_end;img_buffer_original_end736,27466
} stbi__context;stbi__context737,27526
static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)stbi__start_mem743,27641
static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)stbi__start_callbacks752,27965
static int stbi__stdio_read(void *user, char *data, int size)stbi__stdio_read765,28328
static void stbi__stdio_skip(void *user, int n)stbi__stdio_skip770,28449
static int stbi__stdio_eof(void *user)stbi__stdio_eof775,28544
static stbi_io_callbacks stbi__stdio_callbacks =stbi__stdio_callbacks780,28623
static void stbi__start_file(stbi__context *s, FILE *f)stbi__start_file787,28747
static void stbi__rewind(stbi__context *s)stbi__rewind796,28955
{__anon57a7b9ab0403806,29340
   STBI_ORDER_RGB,STBI_ORDER_RGB807,29343
   STBI_ORDER_BGRSTBI_ORDER_BGR808,29363
{__anon57a7b9ab0508812,29404
   int bits_per_channel;bits_per_channel813,29407
   int num_channels;num_channels814,29433
   int channel_order;channel_order815,29455
} stbi__result_info;stbi__result_info816,29478
static const char *stbi__g_failure_reason;stbi__g_failure_reason876,32238
STBIDEF const char *stbi_failure_reason(void)stbi_failure_reason878,32284
static int stbi__err(const char *str)stbi__err883,32374
static void *stbi__malloc(size_t size)stbi__malloc889,32469
static int stbi__addsizes_valid(int a, int b)stbi__addsizes_valid906,33143
static int stbi__mul2sizes_valid(int a, int b)stbi__mul2sizes_valid918,33533
static int stbi__mad2sizes_valid(int a, int b, int add)stbi__mad2sizes_valid927,33836
static int stbi__mad3sizes_valid(int a, int b, int c, int add)stbi__mad3sizes_valid933,34057
static int stbi__mad4sizes_valid(int a, int b, int c, int d, int add)stbi__mad4sizes_valid941,34384
static void *stbi__malloc_mad2(int a, int b, int add)stbi__malloc_mad2949,34664
static void *stbi__malloc_mad3(int a, int b, int c, int add)stbi__malloc_mad3955,34819
static void *stbi__malloc_mad4(int a, int b, int c, int d, int add)stbi__malloc_mad4962,35041
   #define stbi__err(stbi__err974,35395
   #define stbi__err(stbi__err976,35462
   #define stbi__err(stbi__err978,35510
#define stbi__errpf(stbi__errpf981,35561
#define stbi__errpuc(stbi__errpuc982,35636
STBIDEF void stbi_image_free(void *retval_from_stbi_load)stbi_image_free984,35721
static int stbi__vertically_flip_on_load = 0;stbi__vertically_flip_on_load997,36039
STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)stbi_set_flip_vertically_on_load999,36088
static void *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__restbi__load_main1004,36236
static stbi_uc *stbi__convert_16_to_8(stbi__uint16 *orig, int w, int h, int channels)stbi__convert_16_to_81049,37934
static stbi__uint16 *stbi__convert_8_to_16(stbi_uc *orig, int w, int h, int channels)stbi__convert_8_to_161065,38424
static void stbi__vertical_flip(void *image, int w, int h, int bytes_per_pixel)stbi__vertical_flip1081,38947
static void stbi__vertical_flip_slices(void *image, int w, int h, int z, int bytes_per_pixel)stbi__vertical_flip_slices1106,39766
static unsigned char *stbi__load_and_postprocess_8bit(stbi__context *s, int *x, int *y, int *comstbi__load_and_postprocess_8bit1119,40115
static stbi__uint16 *stbi__load_and_postprocess_16bit(stbi__context *s, int *x, int *y, int *comstbi__load_and_postprocess_16bit1143,40868
static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)stbi__float_postprocess1169,41780
STBIDEF int stbi_convert_wchar_to_utf8(char *buffer, size_t bufferlen, const wchar_t* input)stbi_convert_wchar_to_utf81186,42588
static FILE *stbi__fopen(char const *filename, char const *mode)stbi__fopen1192,42797
STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)stbi_load1221,43499
STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)stbi_load_from_file1231,43828
STBIDEF stbi__uint16 *stbi_load_from_file_16(FILE *f, int *x, int *y, int *comp, int req_comp)stbi_load_from_file_161244,44243
STBIDEF stbi_us *stbi_load_16(char const *filename, int *x, int *y, int *comp, int req_comp)stbi_load_161257,44666
STBIDEF stbi_us *stbi_load_16_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *cstbi_load_16_from_memory1270,45041
STBIDEF stbi_us *stbi_load_16_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, stbi_load_16_from_callbacks1277,45329
STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *compstbi_load_from_memory1284,45659
STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, intstbi_load_from_callbacks1291,45903
STBIDEF stbi_uc *stbi_load_gif_from_memory(stbi_uc const *buffer, int len, int **delays, int *x,stbi_load_gif_from_memory1299,46211
static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)stbi__loadf_main1315,46703
STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp,stbi_loadf_from_memory1333,47348
STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int stbi_loadf_from_callbacks1340,47576
STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)stbi_loadf1348,47870
STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)stbi_loadf_from_file1358,48190
STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)stbi_is_hdr_from_memory1372,48610
STBIDEF int      stbi_is_hdr          (char const *filename)stbi_is_hdr1386,48906
STBIDEF int stbi_is_hdr_from_file(FILE *f)stbi_is_hdr_from_file1397,49135
STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)stbi_is_hdr_from_callbacks1414,49455
static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;stbi__l2h_gamma1428,49799
static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;stbi__l2h_scale1428,49799
STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }stbi_ldr_to_hdr_gamma1430,49859
STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }stbi_ldr_to_hdr_scale1431,49939
static float stbi__h2l_gamma_i=1.0f/2.2f, stbi__h2l_scale_i=1.0f;stbi__h2l_gamma_i1434,50029
static float stbi__h2l_gamma_i=1.0f/2.2f, stbi__h2l_scale_i=1.0f;stbi__h2l_scale_i1434,50029
STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1/gamma; }stbi_hdr_to_ldr_gamma1436,50098
STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1/scale; }stbi_hdr_to_ldr_scale1437,50182
{__anon57a7b9ab06031446,50408
   STBI__SCAN_load=0,STBI__SCAN_load1447,50411
   STBI__SCAN_type,STBI__SCAN_type1448,50434
   STBI__SCAN_headerSTBI__SCAN_header1449,50455
static void stbi__refill_buffer(stbi__context *s)stbi__refill_buffer1452,50483
stbi_inline static stbi_uc stbi__get8(stbi__context *s)stbi__get81468,51049
stbi_inline static int stbi__at_eof(stbi__context *s)stbi__at_eof1479,51306
static void stbi__skip(stbi__context *s, int n)stbi__skip1491,51673
static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)stbi__getn1508,52069
static int stbi__get16be(stbi__context *s)stbi__get16be1532,52689
static stbi__uint32 stbi__get32be(stbi__context *s)stbi__get32be1538,52805
static int stbi__get16le(stbi__context *s)stbi__get16le1547,53039
static stbi__uint32 stbi__get32le(stbi__context *s)stbi__get32le1555,53184
#define STBI__BYTECAST(STBI__BYTECAST1562,53333
static stbi_uc stbi__compute_y(int r, int g, int b)stbi__compute_y1576,54000
static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsignestbi__convert_format1581,54119
      #define STBI__COMBO(STBI__COMBO1599,54699
      #define STBI__CASE(STBI__CASE1600,54744
static stbi__uint16 stbi__compute_y_16(int r, int g, int b)stbi__compute_y_161625,56402
static stbi__uint16 *stbi__convert_format16(stbi__uint16 *data, int img_n, int req_comp, unsignestbi__convert_format161630,56534
      #define STBI__COMBO(STBI__COMBO1648,57125
      #define STBI__CASE(STBI__CASE1649,57170
static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)stbi__ldr_to_hdr1675,58888
#define stbi__float2int(stbi__float2int1700,59661
static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)stbi__hdr_to_ldr1701,59703
#define FAST_BITS FAST_BITS1753,61716
{__anon57a7b9ab07081756,61814
   stbi_uc  fast[1 << FAST_BITS];fast1757,61817
   stbi__uint16 code[256];code1759,61930
   stbi_uc  values[256];values1760,61958
   stbi_uc  size[257];size1761,61984
   unsigned int maxcode[18];maxcode1762,62008
   int    delta[17];   // old 'firstsymbol' - old 'firstcode'delta1763,62038
} stbi__huffman;stbi__huffman1764,62101
{__anon57a7b9ab08081767,62137
   stbi__context *s;s1768,62140
   stbi__huffman huff_dc[4];huff_dc1769,62162
   stbi__huffman huff_ac[4];huff_ac1770,62192
   stbi__uint16 dequant[4][64];dequant1771,62222
   stbi__int16 fast_ac[4][1 << FAST_BITS];fast_ac1772,62255
   int img_h_max, img_v_max;img_h_max1775,62344
   int img_h_max, img_v_max;img_v_max1775,62344
   int img_mcu_x, img_mcu_y;img_mcu_x1776,62374
   int img_mcu_x, img_mcu_y;img_mcu_y1776,62374
   int img_mcu_w, img_mcu_h;img_mcu_w1777,62404
   int img_mcu_w, img_mcu_h;img_mcu_h1777,62404
   {__anon57a7b9ab09081781,62486
      int id;id1782,62492
      int h,v;h1783,62507
      int h,v;v1783,62507
      int tq;tq1784,62523
      int hd,ha;hd1785,62538
      int hd,ha;ha1785,62538
      int dc_pred;dc_pred1786,62556
      int x,y,w2,h2;x1788,62578
      int x,y,w2,h2;y1788,62578
      int x,y,w2,h2;w21788,62578
      int x,y,w2,h2;h21788,62578
      stbi_uc *data;data1789,62600
      void *raw_data, *raw_coeff;raw_data1790,62622
      void *raw_data, *raw_coeff;raw_coeff1790,62622
      stbi_uc *linebuf;linebuf1791,62657
      short   *coeff;   // progressive onlycoeff1792,62682
      int      coeff_w, coeff_h; // number of 8x8 coefficient blockscoeff_w1793,62727
      int      coeff_w, coeff_h; // number of 8x8 coefficient blockscoeff_h1793,62727
   } img_comp[4];img_comp1794,62797
   stbi__uint32   code_buffer; // jpeg entropy-coded buffercode_buffer1796,62818
   int            code_bits;   // number of valid bitscode_bits1797,62879
   unsigned char  marker;      // marker seen while filling entropy buffermarker1798,62935
   int            nomore;      // flag if we saw a marker so must stopnomore1799,63011
   int            progressive;progressive1801,63085
   int            spec_start;spec_start1802,63117
   int            spec_end;spec_end1803,63148
   int            succ_high;succ_high1804,63177
   int            succ_low;succ_low1805,63207
   int            eob_run;eob_run1806,63236
   int            jfif;jfif1807,63264
   int            app14_color_transform; // Adobe APP14 tagapp14_color_transform1808,63289
   int            rgb;rgb1809,63350
   int scan_n, order[4];scan_n1811,63376
   int scan_n, order[4];order1811,63376
   int restart_interval, todo;restart_interval1812,63402
   int restart_interval, todo;todo1812,63402
   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);idct_block_kernel1815,63448
   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_ucYCbCr_to_RGB_kernel1816,63525
   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, resample_row_hv_2_kernel1817,63651
} stbi__jpeg;stbi__jpeg1818,63757
static int stbi__build_huffman(stbi__huffman *h, int *count)stbi__build_huffman1820,63774
static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)stbi__build_fast_ac1864,65133
static void stbi__grow_buffer_unsafe(stbi__jpeg *j)stbi__grow_buffer_unsafe1889,66019
static const stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,1638stbi__bmask1908,66545
stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)stbi__jpeg_huff_decode1911,66711
static const int stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-819stbi__jbias1961,68276
stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)stbi__extend_receive1965,68498
stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)stbi__jpeg_get_bits1981,69013
stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)stbi__jpeg_get_bit1992,69304
static const stbi_uc stbi__jpeg_dezigzag[64+15] =stbi__jpeg_dezigzag2004,69666
static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huffstbi__jpeg_decode_block2020,70154
static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, instbi__jpeg_decode_block_prog_dc2072,71905
static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, ststbi__jpeg_decode_block_prog_ac2099,72824
stbi_inline static stbi_uc stbi__clamp(int x)stbi__clamp2219,76851
#define stbi__f2f(stbi__f2f2229,77084
#define stbi__fsh(stbi__fsh2230,77136
#define STBI__IDCT_1D(STBI__IDCT_1D2233,77213
static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])stbi__idct_block2270,78982
static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])stbi__idct_simd2333,81673
   #define dct_const(dct_const2340,81965
   #define dct_rot(dct_rot2344,82153
   #define dct_widen(dct_widen2353,82577
   #define dct_wadd(dct_wadd2358,82811
   #define dct_wsub(dct_wsub2363,82972
   #define dct_bfly32o(dct_bfly32o2368,83176
   #define dct_interleave8(dct_interleave82379,83668
   #define dct_interleave16(dct_interleave162385,83846
   #define dct_pass(dct_pass2390,83980
static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])stbi__idct_simd2514,88865
#define dct_long_mul(dct_long_mul2531,89738
#define dct_long_mac(dct_long_mac2535,89905
#define dct_widen(dct_widen2539,90095
#define dct_wadd(dct_wadd2544,90263
#define dct_wsub(dct_wsub2549,90408
#define dct_bfly32o(dct_bfly32o2554,90602
#define dct_pass(dct_pass2562,90863
#define dct_trn16(dct_trn162622,93095
#define dct_trn32(dct_trn322623,93185
#define dct_trn64(dct_trn642624,93367
#define dct_trn8_8(dct_trn8_82667,94776
#define dct_trn8_16(dct_trn8_162668,94865
#define dct_trn8_32(dct_trn8_322669,95041
#define STBI__MARKER_none STBI__MARKER_none2718,96314
static stbi_uc stbi__get_marker(stbi__jpeg *j)stbi__get_marker2722,96546
#define STBI__RESTART(STBI__RESTART2735,96997
static void stbi__jpeg_reset(stbi__jpeg *j)stbi__jpeg_reset2739,97151
static int stbi__parse_entropy_coded_data(stbi__jpeg *z)stbi__parse_entropy_coded_data2752,97621
static void stbi__jpeg_dequantize(short *data, stbi__uint16 *dequant)stbi__jpeg_dequantize2876,103511
static void stbi__jpeg_finish(stbi__jpeg *z)stbi__jpeg_finish2883,103658
static int stbi__process_marker(stbi__jpeg *z, int m)stbi__process_marker2902,104317
static int stbi__process_scan_header(stbi__jpeg *z)stbi__process_scan_header3005,107766
static int stbi__free_jpeg_components(stbi__jpeg *z, int ncomp, int why)stbi__free_jpeg_components3044,109368
static int stbi__process_frame_header(stbi__jpeg *z, int scan)stbi__process_frame_header3066,109991
#define stbi__DNL(stbi__DNL3150,114254
#define stbi__SOI(stbi__SOI3151,114298
#define stbi__EOI(stbi__EOI3152,114342
#define stbi__SOF(stbi__SOF3153,114386
#define stbi__SOS(stbi__SOS3154,114460
#define stbi__SOF_progressive(stbi__SOF_progressive3156,114506
static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)stbi__decode_jpeg_header3158,114558
static int stbi__decode_jpeg_image(stbi__jpeg *j)stbi__decode_jpeg_image3183,115464
typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,resample_row_func3225,116949
#define stbi__div4(stbi__div43228,117085
static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)resample_row_13230,117133
static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, istbi__resample_row_v_23239,117349
static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, stbi__resample_row_h_23249,117664
#define stbi__div16(stbi__div163277,118418
static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, stbi__resample_row_hv_23279,118467
static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, instbi__resample_row_hv_2_simd3304,119139
static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int stbi__resample_row_generic3420,123928
#define stbi__float2fixed(stbi__float2fixed3433,124376
static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbstbi__YCbCr_to_RGB_row3434,124445
static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc stbi__YCbCr_to_RGB_simd3460,125443
static void stbi__setup_jpeg(stbi__jpeg *j)stbi__setup_jpeg3595,131072
static void stbi__cleanup_jpeg(stbi__jpeg *j)stbi__cleanup_jpeg3617,131756
{__anon57a7b9ab0a083623,131878
   resample_row_func resample;resample3624,131881
   stbi_uc *line0,*line1;line03625,131913
   stbi_uc *line0,*line1;line13625,131913
   int hs,vs;   // expansion factor in each axishs3626,131940
   int hs,vs;   // expansion factor in each axisvs3626,131940
   int w_lores; // horizontal pixels pre-expansionw_lores3627,131990
   int ystep;   // how far through vertical expansion we areystep3628,132042
   int ypos;    // which pre-expansion row we're onypos3629,132104
} stbi__resample;stbi__resample3630,132157
static stbi_uc stbi__blinn_8x8(stbi_uc x, stbi_uc y)stbi__blinn_8x83633,132236
static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)load_jpeg_image3639,132373
static void *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__restbi__jpeg_load3798,139166
static int stbi__jpeg_test(stbi__context *s)stbi__jpeg_test3810,139531
static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)stbi__jpeg_info_raw3822,139809
static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)stbi__jpeg_info3834,140122
#define STBI__ZFAST_BITS STBI__ZFAST_BITS3855,140771
#define STBI__ZFAST_MASK STBI__ZFAST_MASK3856,140842
{__anon57a7b9ab0b083861,141015
   stbi__uint16 fast[1 << STBI__ZFAST_BITS];fast3862,141018
   stbi__uint16 firstcode[16];firstcode3863,141064
   int maxcode[17];maxcode3864,141096
   stbi__uint16 firstsymbol[16];firstsymbol3865,141117
   stbi_uc  size[288];size3866,141151
   stbi__uint16 value[288];value3867,141175
} stbi__zhuffman;stbi__zhuffman3868,141204
stbi_inline static int stbi__bitreverse16(int n)stbi__bitreverse163870,141225
stbi_inline static int stbi__bit_reverse(int v, int bits)stbi__bit_reverse3879,141500
static int stbi__zbuild_huffman(stbi__zhuffman *z, const stbi_uc *sizelist, int num)stbi__zbuild_huffman3887,141744
{__anon57a7b9ab0c083941,143543
   stbi_uc *zbuffer, *zbuffer_end;zbuffer3942,143546
   stbi_uc *zbuffer, *zbuffer_end;zbuffer_end3942,143546
   int num_bits;num_bits3943,143582
   stbi__uint32 code_buffer;code_buffer3944,143600
   char *zout;zout3946,143632
   char *zout_start;zout_start3947,143648
   char *zout_end;zout_end3948,143670
   int   z_expandable;z_expandable3949,143690
   stbi__zhuffman z_length, z_distance;z_length3951,143716
   stbi__zhuffman z_length, z_distance;z_distance3951,143716
} stbi__zbuf;stbi__zbuf3952,143757
stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)stbi__zget83954,143774
static void stbi__fill_bits(stbi__zbuf *z)stbi__fill_bits3960,143911
stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)stbi__zreceive3969,144159
static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)stbi__zhuffman_decode_slowpath3979,144405
stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)stbi__zhuffman_decode3997,144993
static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  // need to make room for n bytesstbi__zexpand4011,145356
static const int stbi__zlength_base[31] = {stbi__zlength_base4030,146022
static const int stbi__zlength_extra[31]=stbi__zlength_extra4035,146176
static const int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,stbi__zdist_base4038,146289
static const int stbi__zdist_extra[32] =stbi__zdist_extra4041,146454
static int stbi__parse_huffman_block(stbi__zbuf *a)stbi__parse_huffman_block4044,146571
static int stbi__compute_huffman_codes(stbi__zbuf *a)stbi__compute_huffman_codes4086,148087
static int stbi__parse_uncompressed_block(stbi__zbuf *a)stbi__parse_uncompressed_block4135,149834
static int stbi__parse_zlib_header(stbi__zbuf *a)stbi__parse_zlib_header4164,150824
static const stbi_uc stbi__zdefault_length[288] =stbi__zdefault_length4177,151394
static const stbi_uc stbi__zdefault_distance[32] =stbi__zdefault_distance4189,152081
static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)stbi__parse_zlib4206,152618
static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)stbi__do_zlib4234,153506
STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, istbi_zlib_decode_malloc_guesssize4244,153764
STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)stbi_zlib_decode_malloc4260,154275
STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int initstbi_zlib_decode_malloc_guesssize_headerflag4265,154438
STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)stbi_zlib_decode_buffer4281,154989
STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)stbi_zlib_decode_noheader_malloc4292,155313
STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int istbi_zlib_decode_noheader_buffer4308,155789
{__anon57a7b9ab0d084332,156587
   stbi__uint32 length;length4333,156590
   stbi__uint32 type;type4334,156615
} stbi__pngchunk;stbi__pngchunk4335,156638
static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)stbi__get_chunk_header4337,156659
static int stbi__check_png_header(stbi__context *s)stbi__check_png_header4345,156833
{__anon57a7b9ab0e084355,157114
   stbi__context *s;s4356,157117
   stbi_uc *idata, *expanded, *out;idata4357,157139
   stbi_uc *idata, *expanded, *out;expanded4357,157139
   stbi_uc *idata, *expanded, *out;out4357,157139
   int depth;depth4358,157176
} stbi__png;stbi__png4359,157191
enum {__anon57a7b9ab0f034362,157209
   STBI__F_none=0,STBI__F_none4363,157217
   STBI__F_sub=1,STBI__F_sub4364,157237
   STBI__F_up=2,STBI__F_up4365,157256
   STBI__F_avg=3,STBI__F_avg4366,157274
   STBI__F_paeth=4,STBI__F_paeth4367,157293
   STBI__F_avg_first,STBI__F_avg_first4369,157398
   STBI__F_paeth_firstSTBI__F_paeth_first4370,157421
static stbi_uc first_row_filter[5] =first_row_filter4373,157451
static int stbi__paeth(int a, int b, int c)stbi__paeth4382,157598
static const stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };stbi__depth_scale_table4393,157825
static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_stbi__create_png_image_raw4396,157967
         #define STBI__CASE(STBI__CASE4477,161302
         #define STBI__CASE(STBI__CASE4494,162442
static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_lenstbi__create_png_image4608,168041
static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)stbi__compute_transparency4652,169692
static int stbi__compute_transparency16(stbi__png *z, stbi__uint16 tc[3], int out_n)stbi__compute_transparency164677,170368
static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)stbi__expand_png_palette4702,171080
static int stbi__unpremultiply_on_load = 0;stbi__unpremultiply_on_load4739,172045
static int stbi__de_iphone_flag = 0;stbi__de_iphone_flag4740,172090
STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)stbi_set_unpremultiply_on_load4742,172130
STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)stbi_convert_iphone_png_to_rgb4747,172291
static void stbi__de_iphone(stbi__png *z)stbi__de_iphone4752,172433
#define STBI__PNG_TYPE(STBI__PNG_TYPE4795,173585
static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)stbi__parse_png_file4797,173712
static void *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp, stbi__result_info stbi__do_png4969,182547
static void *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__resstbi__png_load4999,183699
static int stbi__png_test(stbi__context *s)stbi__png_test5006,183900
static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)stbi__png_info_raw5014,184034
static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)stbi__png_info5026,184331
static int stbi__png_is16(stbi__context *s)stbi__png_is165033,184488
static int stbi__bmp_test_raw(stbi__context *s)stbi__bmp_test_raw5050,184788
static int stbi__bmp_test(stbi__context *s)stbi__bmp_test5065,185230
static int stbi__high_bit(unsigned int z)stbi__high_bit5074,185397
static int stbi__bitcount(unsigned int a)stbi__bitcount5086,185727
static int stbi__shiftsigned(unsigned int v, int shift, int bits)stbi__shiftsigned5099,186226
{__anon57a7b9ab10085120,186864
   int bpp, offset, hsz;bpp5121,186867
   int bpp, offset, hsz;offset5121,186867
   int bpp, offset, hsz;hsz5121,186867
   unsigned int mr,mg,mb,ma, all_a;mr5122,186893
   unsigned int mr,mg,mb,ma, all_a;mg5122,186893
   unsigned int mr,mg,mb,ma, all_a;mb5122,186893
   unsigned int mr,mg,mb,ma, all_a;ma5122,186893
   unsigned int mr,mg,mb,ma, all_a;all_a5122,186893
} stbi__bmp_data;stbi__bmp_data5123,186930
static void *stbi__bmp_parse_header(stbi__context *s, stbi__bmp_data *info)stbi__bmp_parse_header5125,186951
static void *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__resstbi__bmp_load5209,190281
static int stbi__tga_get_comp(int bits_per_pixel, int is_grey, int* is_rgb16)stbi__tga_get_comp5391,196880
static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)stbi__tga_info5407,197381
static int stbi__tga_test(stbi__context *s)stbi__tga_test5472,199973
static void stbi__tga_read_rgb16(stbi__context *s, stbi_uc* out)stbi__tga_read_rgb165504,201586
static void *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__resstbi__tga_load5523,202391
static int stbi__psd_test(stbi__context *s)stbi__psd_test5722,209532
static int stbi__psd_decode_rle(stbi__context *s, stbi_uc *p, int pixelCount)stbi__psd_decode_rle5729,209666
static void *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__resstbi__psd_load5767,210655
static int stbi__pic_is4(stbi__context *s,const char *str)stbi__pic_is45974,217989
static int stbi__pic_test_core(stbi__context *s)stbi__pic_test_core5984,218173
{__anon57a7b9ab11086001,218438
   stbi_uc size,type,channel;size6002,218441
   stbi_uc size,type,channel;type6002,218441
   stbi_uc size,type,channel;channel6002,218441
} stbi__pic_packet;stbi__pic_packet6003,218472
static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)stbi__readval6005,218495
static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)stbi__copyval6019,218821
static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *restbi__pic_load_core6028,219009
static void *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp, stbi__resulstbi__pic_load6138,222678
static int stbi__pic_test(stbi__context *s)stbi__pic_test6174,223697
{__anon57a7b9ab12086187,224051
   stbi__int16 prefix;prefix6188,224054
   stbi_uc first;first6189,224078
   stbi_uc suffix;suffix6190,224097
} stbi__gif_lzw;stbi__gif_lzw6191,224117
{__anon57a7b9ab13086194,224153
   int w,h;w6195,224156
   int w,h;h6195,224156
   stbi_uc *out;                 // output buffer (always 4 components)out6196,224169
   stbi_uc *background;          // The current "background" as far as a gif is concernedbackground6197,224242
   stbi_uc *history; history6198,224333
   int flags, bgindex, ratio, transparent, eflags;flags6199,224356
   int flags, bgindex, ratio, transparent, eflags;bgindex6199,224356
   int flags, bgindex, ratio, transparent, eflags;ratio6199,224356
   int flags, bgindex, ratio, transparent, eflags;transparent6199,224356
   int flags, bgindex, ratio, transparent, eflags;eflags6199,224356
   stbi_uc  pal[256][4];pal6200,224408
   stbi_uc lpal[256][4];lpal6201,224434
   stbi__gif_lzw codes[8192];codes6202,224460
   stbi_uc *color_table;color_table6203,224491
   int parse, step;parse6204,224517
   int parse, step;step6204,224517
   int lflags;lflags6205,224538
   int start_x, start_y;start_x6206,224554
   int start_x, start_y;start_y6206,224554
   int max_x, max_y;max_x6207,224580
   int max_x, max_y;max_y6207,224580
   int cur_x, cur_y;cur_x6208,224602
   int cur_x, cur_y;cur_y6208,224602
   int line_size;line_size6209,224624
   int delay;delay6210,224643
} stbi__gif;stbi__gif6211,224658
static int stbi__gif_test_raw(stbi__context *s)stbi__gif_test_raw6213,224674
static int stbi__gif_test(stbi__context *s)stbi__gif_test6223,224975
static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, istbi__gif_parse_colortable6230,225098
static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)stbi__gif_header6241,225413
static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)stbi__gif_info_raw6269,226345
static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)stbi__out_gif_code6283,226684
static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)stbi__process_gif_raster6320,227662
static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp, stbstbi__gif_load_next6407,230557
static void *stbi__load_gif_main(stbi__context *s, int **delays, int *x, int *y, int *z, int *costbi__load_gif_main6581,237320
static void *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__resstbi__gif_load6643,239171
static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)stbi__gif_info6672,240024
static int stbi__hdr_test_core(stbi__context *s, const char *signature)stbi__hdr_test_core6682,240340
static int stbi__hdr_test(stbi__context* s)stbi__hdr_test6692,240563
#define STBI__HDR_BUFLEN STBI__HDR_BUFLEN6703,240795
static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)stbi__hdr_gettoken6704,240827
static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)stbi__hdr_convert6726,241294
static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__restbi__hdr_load6753,242105
static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)stbi__hdr_info6881,246715
static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)stbi__bmp_info6927,247725
static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)stbi__psd_info6945,248102
static int stbi__psd_is16(stbi__context *s)stbi__psd_is166980,248917
static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)stbi__pic_info7009,249540
static int      stbi__pnm_test(stbi__context *s)stbi__pnm_test7081,251277
static void *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp, stbi__resstbi__pnm_load7093,251521
static int      stbi__pnm_isspace(char c)stbi__pnm_isspace7119,252405
static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)stbi__pnm_skip_whitespace7124,252542
static int      stbi__pnm_isdigit(char c)stbi__pnm_isdigit7138,252895
static int      stbi__pnm_getinteger(stbi__context *s, char *c)stbi__pnm_getinteger7143,252979
static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)stbi__pnm_info7155,253227
static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)stbi__info_main7194,254159
static int stbi__is_16_main(stbi__context *s)stbi__is_16_main7236,255165
STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)stbi_info7250,255407
STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)stbi_info_from_file7260,255703
STBIDEF int stbi_is_16_bit(char const *filename)stbi_is_16_bit7271,255945
STBIDEF int stbi_is_16_bit_from_file(FILE *f)stbi_is_16_bit_from_file7281,256212
STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)stbi_info_from_memory7293,256450
STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, intstbi_info_from_callbacks7300,256650
STBIDEF int stbi_is_16_bit_from_memory(stbi_uc const *buffer, int len)stbi_is_16_bit_from_memory7307,256887
STBIDEF int stbi_is_16_bit_from_callbacks(stbi_io_callbacks const *c, void *user)stbi_is_16_bit_from_callbacks7314,257057

../gejo/libs/wglext.h,38016
#define __wgl_wglext_h_ __wgl_wglext_h_2,25
#define WIN32_LEAN_AND_MEAN WIN32_LEAN_AND_MEAN19,545
#define WGL_WGLEXT_VERSION WGL_WGLEXT_VERSION23,608
#define WGL_ARB_buffer_region WGL_ARB_buffer_region35,906
#define WGL_FRONT_COLOR_BUFFER_BIT_ARB WGL_FRONT_COLOR_BUFFER_BIT_ARB36,939
#define WGL_BACK_COLOR_BUFFER_BIT_ARB WGL_BACK_COLOR_BUFFER_BIT_ARB37,993
#define WGL_DEPTH_BUFFER_BIT_ARB WGL_DEPTH_BUFFER_BIT_ARB38,1047
#define WGL_STENCIL_BUFFER_BIT_ARB WGL_STENCIL_BUFFER_BIT_ARB39,1101
typedef HANDLE (WINAPI * PFNWGLCREATEBUFFERREGIONARBPROC) (HDC hDC, int iLayerPlane, UINT uType)PFNWGLCREATEBUFFERREGIONARBPROC40,1155
typedef VOID (WINAPI * PFNWGLDELETEBUFFERREGIONARBPROC) (HANDLE hRegion);PFNWGLDELETEBUFFERREGIONARBPROC41,1254
typedef BOOL (WINAPI * PFNWGLSAVEBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int width, PFNWGLSAVEBUFFERREGIONARBPROC42,1329
typedef BOOL (WINAPI * PFNWGLRESTOREBUFFERREGIONARBPROC) (HANDLE hRegion, int x, int y, int widtPFNWGLRESTOREBUFFERREGIONARBPROC43,1439
#define WGL_ARB_context_flush_control WGL_ARB_context_flush_control53,2028
#define WGL_CONTEXT_RELEASE_BEHAVIOR_ARB WGL_CONTEXT_RELEASE_BEHAVIOR_ARB54,2069
#define WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB WGL_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB55,2119
#define WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB WGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB56,2168
#define WGL_ARB_create_context WGL_ARB_create_context60,2301
#define WGL_CONTEXT_DEBUG_BIT_ARB WGL_CONTEXT_DEBUG_BIT_ARB61,2335
#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB62,2389
#define WGL_CONTEXT_MAJOR_VERSION_ARB WGL_CONTEXT_MAJOR_VERSION_ARB63,2448
#define WGL_CONTEXT_MINOR_VERSION_ARB WGL_CONTEXT_MINOR_VERSION_ARB64,2498
#define WGL_CONTEXT_LAYER_PLANE_ARB WGL_CONTEXT_LAYER_PLANE_ARB65,2548
#define WGL_CONTEXT_FLAGS_ARB WGL_CONTEXT_FLAGS_ARB66,2598
#define ERROR_INVALID_VERSION_ARB ERROR_INVALID_VERSION_ARB67,2648
typedef HGLRC (WINAPI * PFNWGLCREATECONTEXTATTRIBSARBPROC) (HDC hDC, HGLRC hShareContext, const PFNWGLCREATECONTEXTATTRIBSARBPROC68,2698
#define WGL_ARB_create_context_no_error WGL_ARB_create_context_no_error75,3027
#define WGL_CONTEXT_OPENGL_NO_ERROR_ARB WGL_CONTEXT_OPENGL_NO_ERROR_ARB76,3070
#define WGL_ARB_create_context_profile WGL_ARB_create_context_profile80,3208
#define WGL_CONTEXT_PROFILE_MASK_ARB WGL_CONTEXT_PROFILE_MASK_ARB81,3250
#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB WGL_CONTEXT_CORE_PROFILE_BIT_ARB82,3300
#define WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB83,3354
#define ERROR_INVALID_PROFILE_ARB ERROR_INVALID_PROFILE_ARB84,3416
#define WGL_ARB_create_context_robustness WGL_ARB_create_context_robustness88,3556
#define WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB89,3601
#define WGL_LOSE_CONTEXT_ON_RESET_ARB WGL_LOSE_CONTEXT_ON_RESET_ARB90,3655
#define WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB91,3705
#define WGL_NO_RESET_NOTIFICATION_ARB WGL_NO_RESET_NOTIFICATION_ARB92,3765
#define WGL_ARB_extensions_string WGL_ARB_extensions_string96,3900
typedef const char *(WINAPI * PFNWGLGETEXTENSIONSSTRINGARBPROC) (HDC hdc);PFNWGLGETEXTENSIONSSTRINGARBPROC97,3937
#define WGL_ARB_framebuffer_sRGB WGL_ARB_framebuffer_sRGB104,4184
#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB105,4220
#define WGL_ARB_make_current_read WGL_ARB_make_current_read109,4346
#define ERROR_INVALID_PIXEL_TYPE_ARB ERROR_INVALID_PIXEL_TYPE_ARB110,4383
#define ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB111,4433
typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTARBPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);PFNWGLMAKECONTEXTCURRENTARBPROC112,4488
typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCARBPROC) (void);PFNWGLGETCURRENTREADDCARBPROC113,4586
#define WGL_ARB_multisample WGL_ARB_multisample121,4879
#define WGL_SAMPLE_BUFFERS_ARB WGL_SAMPLE_BUFFERS_ARB122,4910
#define WGL_SAMPLES_ARB WGL_SAMPLES_ARB123,4960
#define WGL_ARB_pbuffer WGL_ARB_pbuffer127,5071
#define WGL_DRAW_TO_PBUFFER_ARB WGL_DRAW_TO_PBUFFER_ARB129,5128
#define WGL_MAX_PBUFFER_PIXELS_ARB WGL_MAX_PBUFFER_PIXELS_ARB130,5178
#define WGL_MAX_PBUFFER_WIDTH_ARB WGL_MAX_PBUFFER_WIDTH_ARB131,5228
#define WGL_MAX_PBUFFER_HEIGHT_ARB WGL_MAX_PBUFFER_HEIGHT_ARB132,5278
#define WGL_PBUFFER_LARGEST_ARB WGL_PBUFFER_LARGEST_ARB133,5328
#define WGL_PBUFFER_WIDTH_ARB WGL_PBUFFER_WIDTH_ARB134,5378
#define WGL_PBUFFER_HEIGHT_ARB WGL_PBUFFER_HEIGHT_ARB135,5428
#define WGL_PBUFFER_LOST_ARB WGL_PBUFFER_LOST_ARB136,5478
typedef HPBUFFERARB (WINAPI * PFNWGLCREATEPBUFFERARBPROC) (HDC hDC, int iPixelFormat, int iWidthPFNWGLCREATEPBUFFERARBPROC137,5528
typedef HDC (WINAPI * PFNWGLGETPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer);PFNWGLGETPBUFFERDCARBPROC138,5666
typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCARBPROC) (HPBUFFERARB hPbuffer, HDC hDC);PFNWGLRELEASEPBUFFERDCARBPROC139,5740
typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFERARBPROC) (HPBUFFERARB hPbuffer);PFNWGLDESTROYPBUFFERARBPROC140,5827
typedef BOOL (WINAPI * PFNWGLQUERYPBUFFERARBPROC) (HPBUFFERARB hPbuffer, int iAttribute, int *piPFNWGLQUERYPBUFFERARBPROC141,5904
#define WGL_ARB_pixel_format WGL_ARB_pixel_format152,6495
#define WGL_NUMBER_PIXEL_FORMATS_ARB WGL_NUMBER_PIXEL_FORMATS_ARB153,6527
#define WGL_DRAW_TO_WINDOW_ARB WGL_DRAW_TO_WINDOW_ARB154,6577
#define WGL_DRAW_TO_BITMAP_ARB WGL_DRAW_TO_BITMAP_ARB155,6627
#define WGL_ACCELERATION_ARB WGL_ACCELERATION_ARB156,6677
#define WGL_NEED_PALETTE_ARB WGL_NEED_PALETTE_ARB157,6727
#define WGL_NEED_SYSTEM_PALETTE_ARB WGL_NEED_SYSTEM_PALETTE_ARB158,6777
#define WGL_SWAP_LAYER_BUFFERS_ARB WGL_SWAP_LAYER_BUFFERS_ARB159,6827
#define WGL_SWAP_METHOD_ARB WGL_SWAP_METHOD_ARB160,6877
#define WGL_NUMBER_OVERLAYS_ARB WGL_NUMBER_OVERLAYS_ARB161,6927
#define WGL_NUMBER_UNDERLAYS_ARB WGL_NUMBER_UNDERLAYS_ARB162,6977
#define WGL_TRANSPARENT_ARB WGL_TRANSPARENT_ARB163,7027
#define WGL_TRANSPARENT_RED_VALUE_ARB WGL_TRANSPARENT_RED_VALUE_ARB164,7077
#define WGL_TRANSPARENT_GREEN_VALUE_ARB WGL_TRANSPARENT_GREEN_VALUE_ARB165,7127
#define WGL_TRANSPARENT_BLUE_VALUE_ARB WGL_TRANSPARENT_BLUE_VALUE_ARB166,7177
#define WGL_TRANSPARENT_ALPHA_VALUE_ARB WGL_TRANSPARENT_ALPHA_VALUE_ARB167,7227
#define WGL_TRANSPARENT_INDEX_VALUE_ARB WGL_TRANSPARENT_INDEX_VALUE_ARB168,7277
#define WGL_SHARE_DEPTH_ARB WGL_SHARE_DEPTH_ARB169,7327
#define WGL_SHARE_STENCIL_ARB WGL_SHARE_STENCIL_ARB170,7377
#define WGL_SHARE_ACCUM_ARB WGL_SHARE_ACCUM_ARB171,7427
#define WGL_SUPPORT_GDI_ARB WGL_SUPPORT_GDI_ARB172,7477
#define WGL_SUPPORT_OPENGL_ARB WGL_SUPPORT_OPENGL_ARB173,7527
#define WGL_DOUBLE_BUFFER_ARB WGL_DOUBLE_BUFFER_ARB174,7577
#define WGL_STEREO_ARB WGL_STEREO_ARB175,7627
#define WGL_PIXEL_TYPE_ARB WGL_PIXEL_TYPE_ARB176,7677
#define WGL_COLOR_BITS_ARB WGL_COLOR_BITS_ARB177,7727
#define WGL_RED_BITS_ARB WGL_RED_BITS_ARB178,7777
#define WGL_RED_SHIFT_ARB WGL_RED_SHIFT_ARB179,7827
#define WGL_GREEN_BITS_ARB WGL_GREEN_BITS_ARB180,7877
#define WGL_GREEN_SHIFT_ARB WGL_GREEN_SHIFT_ARB181,7927
#define WGL_BLUE_BITS_ARB WGL_BLUE_BITS_ARB182,7977
#define WGL_BLUE_SHIFT_ARB WGL_BLUE_SHIFT_ARB183,8027
#define WGL_ALPHA_BITS_ARB WGL_ALPHA_BITS_ARB184,8077
#define WGL_ALPHA_SHIFT_ARB WGL_ALPHA_SHIFT_ARB185,8127
#define WGL_ACCUM_BITS_ARB WGL_ACCUM_BITS_ARB186,8177
#define WGL_ACCUM_RED_BITS_ARB WGL_ACCUM_RED_BITS_ARB187,8227
#define WGL_ACCUM_GREEN_BITS_ARB WGL_ACCUM_GREEN_BITS_ARB188,8277
#define WGL_ACCUM_BLUE_BITS_ARB WGL_ACCUM_BLUE_BITS_ARB189,8327
#define WGL_ACCUM_ALPHA_BITS_ARB WGL_ACCUM_ALPHA_BITS_ARB190,8377
#define WGL_DEPTH_BITS_ARB WGL_DEPTH_BITS_ARB191,8427
#define WGL_STENCIL_BITS_ARB WGL_STENCIL_BITS_ARB192,8477
#define WGL_AUX_BUFFERS_ARB WGL_AUX_BUFFERS_ARB193,8527
#define WGL_NO_ACCELERATION_ARB WGL_NO_ACCELERATION_ARB194,8577
#define WGL_GENERIC_ACCELERATION_ARB WGL_GENERIC_ACCELERATION_ARB195,8627
#define WGL_FULL_ACCELERATION_ARB WGL_FULL_ACCELERATION_ARB196,8677
#define WGL_SWAP_EXCHANGE_ARB WGL_SWAP_EXCHANGE_ARB197,8727
#define WGL_SWAP_COPY_ARB WGL_SWAP_COPY_ARB198,8777
#define WGL_SWAP_UNDEFINED_ARB WGL_SWAP_UNDEFINED_ARB199,8827
#define WGL_TYPE_RGBA_ARB WGL_TYPE_RGBA_ARB200,8877
#define WGL_TYPE_COLORINDEX_ARB WGL_TYPE_COLORINDEX_ARB201,8927
typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVARBPROC) (HDC hdc, int iPixelFormat, int iLayPFNWGLGETPIXELFORMATATTRIBIVARBPROC202,8977
typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVARBPROC) (HDC hdc, int iPixelFormat, int iLayPFNWGLGETPIXELFORMATATTRIBFVARBPROC203,9142
typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATARBPROC) (HDC hdc, const int *piAttribIList, constPFNWGLCHOOSEPIXELFORMATARBPROC204,9309
#define WGL_ARB_pixel_format_float WGL_ARB_pixel_format_float213,10043
#define WGL_TYPE_RGBA_FLOAT_ARB WGL_TYPE_RGBA_FLOAT_ARB214,10081
#define WGL_ARB_render_texture WGL_ARB_render_texture218,10206
#define WGL_BIND_TO_TEXTURE_RGB_ARB WGL_BIND_TO_TEXTURE_RGB_ARB219,10240
#define WGL_BIND_TO_TEXTURE_RGBA_ARB WGL_BIND_TO_TEXTURE_RGBA_ARB220,10290
#define WGL_TEXTURE_FORMAT_ARB WGL_TEXTURE_FORMAT_ARB221,10340
#define WGL_TEXTURE_TARGET_ARB WGL_TEXTURE_TARGET_ARB222,10390
#define WGL_MIPMAP_TEXTURE_ARB WGL_MIPMAP_TEXTURE_ARB223,10440
#define WGL_TEXTURE_RGB_ARB WGL_TEXTURE_RGB_ARB224,10490
#define WGL_TEXTURE_RGBA_ARB WGL_TEXTURE_RGBA_ARB225,10540
#define WGL_NO_TEXTURE_ARB WGL_NO_TEXTURE_ARB226,10590
#define WGL_TEXTURE_CUBE_MAP_ARB WGL_TEXTURE_CUBE_MAP_ARB227,10640
#define WGL_TEXTURE_1D_ARB WGL_TEXTURE_1D_ARB228,10690
#define WGL_TEXTURE_2D_ARB WGL_TEXTURE_2D_ARB229,10740
#define WGL_MIPMAP_LEVEL_ARB WGL_MIPMAP_LEVEL_ARB230,10790
#define WGL_CUBE_MAP_FACE_ARB WGL_CUBE_MAP_FACE_ARB231,10840
#define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB232,10890
#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB233,10942
#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB234,10994
#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB235,11046
#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB236,11098
#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB237,11150
#define WGL_FRONT_LEFT_ARB WGL_FRONT_LEFT_ARB238,11202
#define WGL_FRONT_RIGHT_ARB WGL_FRONT_RIGHT_ARB239,11252
#define WGL_BACK_LEFT_ARB WGL_BACK_LEFT_ARB240,11302
#define WGL_BACK_RIGHT_ARB WGL_BACK_RIGHT_ARB241,11352
#define WGL_AUX0_ARB WGL_AUX0_ARB242,11402
#define WGL_AUX1_ARB WGL_AUX1_ARB243,11452
#define WGL_AUX2_ARB WGL_AUX2_ARB244,11502
#define WGL_AUX3_ARB WGL_AUX3_ARB245,11552
#define WGL_AUX4_ARB WGL_AUX4_ARB246,11602
#define WGL_AUX5_ARB WGL_AUX5_ARB247,11652
#define WGL_AUX6_ARB WGL_AUX6_ARB248,11702
#define WGL_AUX7_ARB WGL_AUX7_ARB249,11752
#define WGL_AUX8_ARB WGL_AUX8_ARB250,11802
#define WGL_AUX9_ARB WGL_AUX9_ARB251,11852
typedef BOOL (WINAPI * PFNWGLBINDTEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);PFNWGLBINDTEXIMAGEARBPROC252,11902
typedef BOOL (WINAPI * PFNWGLRELEASETEXIMAGEARBPROC) (HPBUFFERARB hPbuffer, int iBuffer);PFNWGLRELEASETEXIMAGEARBPROC253,11990
typedef BOOL (WINAPI * PFNWGLSETPBUFFERATTRIBARBPROC) (HPBUFFERARB hPbuffer, const int *piAttribPFNWGLSETPBUFFERATTRIBARBPROC254,12081
#define WGL_ARB_robustness_application_isolation WGL_ARB_robustness_application_isolation263,12538
#define WGL_CONTEXT_RESET_ISOLATION_BIT_ARB WGL_CONTEXT_RESET_ISOLATION_BIT_ARB264,12590
#define WGL_ARB_robustness_share_group_isolation WGL_ARB_robustness_share_group_isolation268,12753
#define WGL_3DFX_multisample WGL_3DFX_multisample272,12892
#define WGL_SAMPLE_BUFFERS_3DFX WGL_SAMPLE_BUFFERS_3DFX273,12924
#define WGL_SAMPLES_3DFX WGL_SAMPLES_3DFX274,12974
#define WGL_3DL_stereo_control WGL_3DL_stereo_control278,13093
#define WGL_STEREO_EMITTER_ENABLE_3DL WGL_STEREO_EMITTER_ENABLE_3DL279,13127
#define WGL_STEREO_EMITTER_DISABLE_3DL WGL_STEREO_EMITTER_DISABLE_3DL280,13177
#define WGL_STEREO_POLARITY_NORMAL_3DL WGL_STEREO_POLARITY_NORMAL_3DL281,13227
#define WGL_STEREO_POLARITY_INVERT_3DL WGL_STEREO_POLARITY_INVERT_3DL282,13277
typedef BOOL (WINAPI * PFNWGLSETSTEREOEMITTERSTATE3DLPROC) (HDC hDC, UINT uState);PFNWGLSETSTEREOEMITTERSTATE3DLPROC283,13327
#define WGL_AMD_gpu_association WGL_AMD_gpu_association290,13586
#define WGL_GPU_VENDOR_AMD WGL_GPU_VENDOR_AMD291,13621
#define WGL_GPU_RENDERER_STRING_AMD WGL_GPU_RENDERER_STRING_AMD292,13671
#define WGL_GPU_OPENGL_VERSION_STRING_AMD WGL_GPU_OPENGL_VERSION_STRING_AMD293,13721
#define WGL_GPU_FASTEST_TARGET_GPUS_AMD WGL_GPU_FASTEST_TARGET_GPUS_AMD294,13771
#define WGL_GPU_RAM_AMD WGL_GPU_RAM_AMD295,13821
#define WGL_GPU_CLOCK_AMD WGL_GPU_CLOCK_AMD296,13871
#define WGL_GPU_NUM_PIPES_AMD WGL_GPU_NUM_PIPES_AMD297,13921
#define WGL_GPU_NUM_SIMD_AMD WGL_GPU_NUM_SIMD_AMD298,13971
#define WGL_GPU_NUM_RB_AMD WGL_GPU_NUM_RB_AMD299,14021
#define WGL_GPU_NUM_SPI_AMD WGL_GPU_NUM_SPI_AMD300,14071
typedef UINT (WINAPI * PFNWGLGETGPUIDSAMDPROC) (UINT maxCount, UINT *ids);PFNWGLGETGPUIDSAMDPROC301,14121
typedef INT (WINAPI * PFNWGLGETGPUINFOAMDPROC) (UINT id, INT property, GLenum dataType, UINT sizPFNWGLGETGPUINFOAMDPROC302,14197
typedef UINT (WINAPI * PFNWGLGETCONTEXTGPUIDAMDPROC) (HGLRC hglrc);PFNWGLGETCONTEXTGPUIDAMDPROC303,14310
typedef HGLRC (WINAPI * PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC) (UINT id);PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC304,14379
typedef HGLRC (WINAPI * PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC) (UINT id, HGLRC hShareContePFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC305,14453
typedef BOOL (WINAPI * PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC) (HGLRC hglrc);PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC306,14578
typedef BOOL (WINAPI * PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC) (HGLRC hglrc);PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC307,14655
typedef HGLRC (WINAPI * PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC) (void);PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC308,14737
typedef VOID (WINAPI * PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC) (HGLRC dstCtx, GLint srcX0, GLint srPFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC309,14812
#define WGL_ATI_pixel_format_float WGL_ATI_pixel_format_float324,15872
#define WGL_TYPE_RGBA_FLOAT_ATI WGL_TYPE_RGBA_FLOAT_ATI325,15910
#define WGL_ATI_render_texture_rectangle WGL_ATI_render_texture_rectangle329,16045
#define WGL_TEXTURE_RECTANGLE_ATI WGL_TEXTURE_RECTANGLE_ATI330,16089
#define WGL_EXT_colorspace WGL_EXT_colorspace334,16216
#define WGL_COLORSPACE_EXT WGL_COLORSPACE_EXT335,16246
#define WGL_COLORSPACE_SRGB_EXT WGL_COLORSPACE_SRGB_EXT336,16296
#define WGL_COLORSPACE_LINEAR_EXT WGL_COLORSPACE_LINEAR_EXT337,16346
#define WGL_EXT_create_context_es2_profile WGL_EXT_create_context_es2_profile341,16475
#define WGL_CONTEXT_ES2_PROFILE_BIT_EXT WGL_CONTEXT_ES2_PROFILE_BIT_EXT342,16521
#define WGL_EXT_create_context_es_profile WGL_EXT_create_context_es_profile346,16669
#define WGL_CONTEXT_ES_PROFILE_BIT_EXT WGL_CONTEXT_ES_PROFILE_BIT_EXT347,16714
#define WGL_EXT_depth_float WGL_EXT_depth_float351,16847
#define WGL_DEPTH_FLOAT_EXT WGL_DEPTH_FLOAT_EXT352,16878
#define WGL_EXT_display_color_table WGL_EXT_display_color_table356,17001
typedef GLboolean (WINAPI * PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC) (GLushort id);PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC357,17040
typedef GLboolean (WINAPI * PFNWGLLOADDISPLAYCOLORTABLEEXTPROC) (const GLushort *table, GLuint lPFNWGLLOADDISPLAYCOLORTABLEEXTPROC358,17122
typedef GLboolean (WINAPI * PFNWGLBINDDISPLAYCOLORTABLEEXTPROC) (GLushort id);PFNWGLBINDDISPLAYCOLORTABLEEXTPROC359,17227
typedef VOID (WINAPI * PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC) (GLushort id);PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC360,17307
#define WGL_EXT_extensions_string WGL_EXT_extensions_string370,17771
typedef const char *(WINAPI * PFNWGLGETEXTENSIONSSTRINGEXTPROC) (void);PFNWGLGETEXTENSIONSSTRINGEXTPROC371,17808
#define WGL_EXT_framebuffer_sRGB WGL_EXT_framebuffer_sRGB378,18049
#define WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT379,18085
#define WGL_EXT_make_current_read WGL_EXT_make_current_read383,18211
#define ERROR_INVALID_PIXEL_TYPE_EXT ERROR_INVALID_PIXEL_TYPE_EXT384,18248
typedef BOOL (WINAPI * PFNWGLMAKECONTEXTCURRENTEXTPROC) (HDC hDrawDC, HDC hReadDC, HGLRC hglrc);PFNWGLMAKECONTEXTCURRENTEXTPROC385,18298
typedef HDC (WINAPI * PFNWGLGETCURRENTREADDCEXTPROC) (void);PFNWGLGETCURRENTREADDCEXTPROC386,18396
#define WGL_EXT_multisample WGL_EXT_multisample394,18689
#define WGL_SAMPLE_BUFFERS_EXT WGL_SAMPLE_BUFFERS_EXT395,18720
#define WGL_SAMPLES_EXT WGL_SAMPLES_EXT396,18770
#define WGL_EXT_pbuffer WGL_EXT_pbuffer400,18881
#define WGL_DRAW_TO_PBUFFER_EXT WGL_DRAW_TO_PBUFFER_EXT402,18938
#define WGL_MAX_PBUFFER_PIXELS_EXT WGL_MAX_PBUFFER_PIXELS_EXT403,18988
#define WGL_MAX_PBUFFER_WIDTH_EXT WGL_MAX_PBUFFER_WIDTH_EXT404,19038
#define WGL_MAX_PBUFFER_HEIGHT_EXT WGL_MAX_PBUFFER_HEIGHT_EXT405,19088
#define WGL_OPTIMAL_PBUFFER_WIDTH_EXT WGL_OPTIMAL_PBUFFER_WIDTH_EXT406,19138
#define WGL_OPTIMAL_PBUFFER_HEIGHT_EXT WGL_OPTIMAL_PBUFFER_HEIGHT_EXT407,19188
#define WGL_PBUFFER_LARGEST_EXT WGL_PBUFFER_LARGEST_EXT408,19238
#define WGL_PBUFFER_WIDTH_EXT WGL_PBUFFER_WIDTH_EXT409,19288
#define WGL_PBUFFER_HEIGHT_EXT WGL_PBUFFER_HEIGHT_EXT410,19338
typedef HPBUFFEREXT (WINAPI * PFNWGLCREATEPBUFFEREXTPROC) (HDC hDC, int iPixelFormat, int iWidthPFNWGLCREATEPBUFFEREXTPROC411,19388
typedef HDC (WINAPI * PFNWGLGETPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer);PFNWGLGETPBUFFERDCEXTPROC412,19526
typedef int (WINAPI * PFNWGLRELEASEPBUFFERDCEXTPROC) (HPBUFFEREXT hPbuffer, HDC hDC);PFNWGLRELEASEPBUFFERDCEXTPROC413,19600
typedef BOOL (WINAPI * PFNWGLDESTROYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer);PFNWGLDESTROYPBUFFEREXTPROC414,19687
typedef BOOL (WINAPI * PFNWGLQUERYPBUFFEREXTPROC) (HPBUFFEREXT hPbuffer, int iAttribute, int *piPFNWGLQUERYPBUFFEREXTPROC415,19764
#define WGL_EXT_pixel_format WGL_EXT_pixel_format426,20355
#define WGL_NUMBER_PIXEL_FORMATS_EXT WGL_NUMBER_PIXEL_FORMATS_EXT427,20387
#define WGL_DRAW_TO_WINDOW_EXT WGL_DRAW_TO_WINDOW_EXT428,20437
#define WGL_DRAW_TO_BITMAP_EXT WGL_DRAW_TO_BITMAP_EXT429,20487
#define WGL_ACCELERATION_EXT WGL_ACCELERATION_EXT430,20537
#define WGL_NEED_PALETTE_EXT WGL_NEED_PALETTE_EXT431,20587
#define WGL_NEED_SYSTEM_PALETTE_EXT WGL_NEED_SYSTEM_PALETTE_EXT432,20637
#define WGL_SWAP_LAYER_BUFFERS_EXT WGL_SWAP_LAYER_BUFFERS_EXT433,20687
#define WGL_SWAP_METHOD_EXT WGL_SWAP_METHOD_EXT434,20737
#define WGL_NUMBER_OVERLAYS_EXT WGL_NUMBER_OVERLAYS_EXT435,20787
#define WGL_NUMBER_UNDERLAYS_EXT WGL_NUMBER_UNDERLAYS_EXT436,20837
#define WGL_TRANSPARENT_EXT WGL_TRANSPARENT_EXT437,20887
#define WGL_TRANSPARENT_VALUE_EXT WGL_TRANSPARENT_VALUE_EXT438,20937
#define WGL_SHARE_DEPTH_EXT WGL_SHARE_DEPTH_EXT439,20987
#define WGL_SHARE_STENCIL_EXT WGL_SHARE_STENCIL_EXT440,21037
#define WGL_SHARE_ACCUM_EXT WGL_SHARE_ACCUM_EXT441,21087
#define WGL_SUPPORT_GDI_EXT WGL_SUPPORT_GDI_EXT442,21137
#define WGL_SUPPORT_OPENGL_EXT WGL_SUPPORT_OPENGL_EXT443,21187
#define WGL_DOUBLE_BUFFER_EXT WGL_DOUBLE_BUFFER_EXT444,21237
#define WGL_STEREO_EXT WGL_STEREO_EXT445,21287
#define WGL_PIXEL_TYPE_EXT WGL_PIXEL_TYPE_EXT446,21337
#define WGL_COLOR_BITS_EXT WGL_COLOR_BITS_EXT447,21387
#define WGL_RED_BITS_EXT WGL_RED_BITS_EXT448,21437
#define WGL_RED_SHIFT_EXT WGL_RED_SHIFT_EXT449,21487
#define WGL_GREEN_BITS_EXT WGL_GREEN_BITS_EXT450,21537
#define WGL_GREEN_SHIFT_EXT WGL_GREEN_SHIFT_EXT451,21587
#define WGL_BLUE_BITS_EXT WGL_BLUE_BITS_EXT452,21637
#define WGL_BLUE_SHIFT_EXT WGL_BLUE_SHIFT_EXT453,21687
#define WGL_ALPHA_BITS_EXT WGL_ALPHA_BITS_EXT454,21737
#define WGL_ALPHA_SHIFT_EXT WGL_ALPHA_SHIFT_EXT455,21787
#define WGL_ACCUM_BITS_EXT WGL_ACCUM_BITS_EXT456,21837
#define WGL_ACCUM_RED_BITS_EXT WGL_ACCUM_RED_BITS_EXT457,21887
#define WGL_ACCUM_GREEN_BITS_EXT WGL_ACCUM_GREEN_BITS_EXT458,21937
#define WGL_ACCUM_BLUE_BITS_EXT WGL_ACCUM_BLUE_BITS_EXT459,21987
#define WGL_ACCUM_ALPHA_BITS_EXT WGL_ACCUM_ALPHA_BITS_EXT460,22037
#define WGL_DEPTH_BITS_EXT WGL_DEPTH_BITS_EXT461,22087
#define WGL_STENCIL_BITS_EXT WGL_STENCIL_BITS_EXT462,22137
#define WGL_AUX_BUFFERS_EXT WGL_AUX_BUFFERS_EXT463,22187
#define WGL_NO_ACCELERATION_EXT WGL_NO_ACCELERATION_EXT464,22237
#define WGL_GENERIC_ACCELERATION_EXT WGL_GENERIC_ACCELERATION_EXT465,22287
#define WGL_FULL_ACCELERATION_EXT WGL_FULL_ACCELERATION_EXT466,22337
#define WGL_SWAP_EXCHANGE_EXT WGL_SWAP_EXCHANGE_EXT467,22387
#define WGL_SWAP_COPY_EXT WGL_SWAP_COPY_EXT468,22437
#define WGL_SWAP_UNDEFINED_EXT WGL_SWAP_UNDEFINED_EXT469,22487
#define WGL_TYPE_RGBA_EXT WGL_TYPE_RGBA_EXT470,22537
#define WGL_TYPE_COLORINDEX_EXT WGL_TYPE_COLORINDEX_EXT471,22587
typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBIVEXTPROC) (HDC hdc, int iPixelFormat, int iLayPFNWGLGETPIXELFORMATATTRIBIVEXTPROC472,22637
typedef BOOL (WINAPI * PFNWGLGETPIXELFORMATATTRIBFVEXTPROC) (HDC hdc, int iPixelFormat, int iLayPFNWGLGETPIXELFORMATATTRIBFVEXTPROC473,22796
typedef BOOL (WINAPI * PFNWGLCHOOSEPIXELFORMATEXTPROC) (HDC hdc, const int *piAttribIList, constPFNWGLCHOOSEPIXELFORMATEXTPROC474,22957
#define WGL_EXT_pixel_format_packed_float WGL_EXT_pixel_format_packed_float483,23686
#define WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT484,23731
#define WGL_EXT_swap_control WGL_EXT_swap_control488,23861
typedef BOOL (WINAPI * PFNWGLSWAPINTERVALEXTPROC) (int interval);PFNWGLSWAPINTERVALEXTPROC489,23893
typedef int (WINAPI * PFNWGLGETSWAPINTERVALEXTPROC) (void);PFNWGLGETSWAPINTERVALEXTPROC490,23960
#define WGL_EXT_swap_control_tear WGL_EXT_swap_control_tear498,24221
#define WGL_I3D_digital_video_control WGL_I3D_digital_video_control502,24339
#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D503,24380
#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D504,24443
#define WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D505,24500
#define WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D506,24554
typedef BOOL (WINAPI * PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piPFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC507,24608
typedef BOOL (WINAPI * PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const iPFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC508,24713
#define WGL_I3D_gamma WGL_I3D_gamma516,25109
#define WGL_GAMMA_TABLE_SIZE_I3D WGL_GAMMA_TABLE_SIZE_I3D517,25134
#define WGL_GAMMA_EXCLUDE_DESKTOP_I3D WGL_GAMMA_EXCLUDE_DESKTOP_I3D518,25184
typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, int *piVaPFNWGLGETGAMMATABLEPARAMETERSI3DPROC519,25234
typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEPARAMETERSI3DPROC) (HDC hDC, int iAttribute, const intPFNWGLSETGAMMATABLEPARAMETERSI3DPROC520,25337
typedef BOOL (WINAPI * PFNWGLGETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, USHORT *puRed, USHORTPFNWGLGETGAMMATABLEI3DPROC521,25446
typedef BOOL (WINAPI * PFNWGLSETGAMMATABLEI3DPROC) (HDC hDC, int iEntries, const USHORT *puRed, PFNWGLSETGAMMATABLEI3DPROC522,25571
#define WGL_I3D_genlock WGL_I3D_genlock532,26211
#define WGL_GENLOCK_SOURCE_MULTIVIEW_I3D WGL_GENLOCK_SOURCE_MULTIVIEW_I3D533,26238
#define WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D534,26288
#define WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D535,26341
#define WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D536,26395
#define WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D537,26447
#define WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D538,26499
#define WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D539,26552
#define WGL_GENLOCK_SOURCE_EDGE_RISING_I3D WGL_GENLOCK_SOURCE_EDGE_RISING_I3D540,26604
#define WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D541,26655
typedef BOOL (WINAPI * PFNWGLENABLEGENLOCKI3DPROC) (HDC hDC);PFNWGLENABLEGENLOCKI3DPROC542,26705
typedef BOOL (WINAPI * PFNWGLDISABLEGENLOCKI3DPROC) (HDC hDC);PFNWGLDISABLEGENLOCKI3DPROC543,26768
typedef BOOL (WINAPI * PFNWGLISENABLEDGENLOCKI3DPROC) (HDC hDC, BOOL *pFlag);PFNWGLISENABLEDGENLOCKI3DPROC544,26832
typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEI3DPROC) (HDC hDC, UINT uSource);PFNWGLGENLOCKSOURCEI3DPROC545,26911
typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEI3DPROC) (HDC hDC, UINT *uSource);PFNWGLGETGENLOCKSOURCEI3DPROC546,26988
typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT uEdge);PFNWGLGENLOCKSOURCEEDGEI3DPROC547,27069
typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEEDGEI3DPROC) (HDC hDC, UINT *uEdge);PFNWGLGETGENLOCKSOURCEEDGEI3DPROC548,27148
typedef BOOL (WINAPI * PFNWGLGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT uRate);PFNWGLGENLOCKSAMPLERATEI3DPROC549,27231
typedef BOOL (WINAPI * PFNWGLGETGENLOCKSAMPLERATEI3DPROC) (HDC hDC, UINT *uRate);PFNWGLGETGENLOCKSAMPLERATEI3DPROC550,27310
typedef BOOL (WINAPI * PFNWGLGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT uDelay);PFNWGLGENLOCKSOURCEDELAYI3DPROC551,27393
typedef BOOL (WINAPI * PFNWGLGETGENLOCKSOURCEDELAYI3DPROC) (HDC hDC, UINT *uDelay);PFNWGLGETGENLOCKSOURCEDELAYI3DPROC552,27474
typedef BOOL (WINAPI * PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC) (HDC hDC, UINT *uMaxLineDelay, UPFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC553,27559
#define WGL_I3D_image_buffer WGL_I3D_image_buffer571,28523
#define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D WGL_IMAGE_BUFFER_MIN_ACCESS_I3D572,28555
#define WGL_IMAGE_BUFFER_LOCK_I3D WGL_IMAGE_BUFFER_LOCK_I3D573,28609
typedef LPVOID (WINAPI * PFNWGLCREATEIMAGEBUFFERI3DPROC) (HDC hDC, DWORD dwSize, UINT uFlags);PFNWGLCREATEIMAGEBUFFERI3DPROC574,28663
typedef BOOL (WINAPI * PFNWGLDESTROYIMAGEBUFFERI3DPROC) (HDC hDC, LPVOID pAddress);PFNWGLDESTROYIMAGEBUFFERI3DPROC575,28759
typedef BOOL (WINAPI * PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const HANDLE *pEvent, PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC576,28844
typedef BOOL (WINAPI * PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC) (HDC hDC, const LPVOID *pAddress, PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC577,28998
#define WGL_I3D_swap_frame_lock WGL_I3D_swap_frame_lock587,29585
typedef BOOL (WINAPI * PFNWGLENABLEFRAMELOCKI3DPROC) (void);PFNWGLENABLEFRAMELOCKI3DPROC588,29620
typedef BOOL (WINAPI * PFNWGLDISABLEFRAMELOCKI3DPROC) (void);PFNWGLDISABLEFRAMELOCKI3DPROC589,29682
typedef BOOL (WINAPI * PFNWGLISENABLEDFRAMELOCKI3DPROC) (BOOL *pFlag);PFNWGLISENABLEDFRAMELOCKI3DPROC590,29745
typedef BOOL (WINAPI * PFNWGLQUERYFRAMELOCKMASTERI3DPROC) (BOOL *pFlag);PFNWGLQUERYFRAMELOCKMASTERI3DPROC591,29817
#define WGL_I3D_swap_frame_usage WGL_I3D_swap_frame_usage601,30198
typedef BOOL (WINAPI * PFNWGLGETFRAMEUSAGEI3DPROC) (float *pUsage);PFNWGLGETFRAMEUSAGEI3DPROC602,30234
typedef BOOL (WINAPI * PFNWGLBEGINFRAMETRACKINGI3DPROC) (void);PFNWGLBEGINFRAMETRACKINGI3DPROC603,30303
typedef BOOL (WINAPI * PFNWGLENDFRAMETRACKINGI3DPROC) (void);PFNWGLENDFRAMETRACKINGI3DPROC604,30368
typedef BOOL (WINAPI * PFNWGLQUERYFRAMETRACKINGI3DPROC) (DWORD *pFrameCount, DWORD *pMissedFramePFNWGLQUERYFRAMETRACKINGI3DPROC605,30431
#define WGL_NV_DX_interop WGL_NV_DX_interop615,30910
#define WGL_ACCESS_READ_ONLY_NV WGL_ACCESS_READ_ONLY_NV616,30939
#define WGL_ACCESS_READ_WRITE_NV WGL_ACCESS_READ_WRITE_NV617,30993
#define WGL_ACCESS_WRITE_DISCARD_NV WGL_ACCESS_WRITE_DISCARD_NV618,31047
typedef BOOL (WINAPI * PFNWGLDXSETRESOURCESHAREHANDLENVPROC) (void *dxObject, HANDLE shareHandlePFNWGLDXSETRESOURCESHAREHANDLENVPROC619,31101
typedef HANDLE (WINAPI * PFNWGLDXOPENDEVICENVPROC) (void *dxDevice);PFNWGLDXOPENDEVICENVPROC620,31201
typedef BOOL (WINAPI * PFNWGLDXCLOSEDEVICENVPROC) (HANDLE hDevice);PFNWGLDXCLOSEDEVICENVPROC621,31271
typedef HANDLE (WINAPI * PFNWGLDXREGISTEROBJECTNVPROC) (HANDLE hDevice, void *dxObject, GLuint nPFNWGLDXREGISTEROBJECTNVPROC622,31340
typedef BOOL (WINAPI * PFNWGLDXUNREGISTEROBJECTNVPROC) (HANDLE hDevice, HANDLE hObject);PFNWGLDXUNREGISTEROBJECTNVPROC623,31471
typedef BOOL (WINAPI * PFNWGLDXOBJECTACCESSNVPROC) (HANDLE hObject, GLenum access);PFNWGLDXOBJECTACCESSNVPROC624,31561
typedef BOOL (WINAPI * PFNWGLDXLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjectsPFNWGLDXLOCKOBJECTSNVPROC625,31646
typedef BOOL (WINAPI * PFNWGLDXUNLOCKOBJECTSNVPROC) (HANDLE hDevice, GLint count, HANDLE *hObjecPFNWGLDXUNLOCKOBJECTSNVPROC626,31746
#define WGL_NV_DX_interop2 WGL_NV_DX_interop2640,32543
#define WGL_NV_copy_image WGL_NV_copy_image644,32635
typedef BOOL (WINAPI * PFNWGLCOPYIMAGESUBDATANVPROC) (HGLRC hSrcRC, GLuint srcName, GLenum srcTaPFNWGLCOPYIMAGESUBDATANVPROC645,32664
#define WGL_NV_delay_before_swap WGL_NV_delay_before_swap652,33355
typedef BOOL (WINAPI * PFNWGLDELAYBEFORESWAPNVPROC) (HDC hDC, GLfloat seconds);PFNWGLDELAYBEFORESWAPNVPROC653,33391
#define WGL_NV_float_buffer WGL_NV_float_buffer660,33642
#define WGL_FLOAT_COMPONENTS_NV WGL_FLOAT_COMPONENTS_NV661,33673
#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV662,33723
#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV663,33780
#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV664,33838
#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV665,33897
#define WGL_TEXTURE_FLOAT_R_NV WGL_TEXTURE_FLOAT_R_NV666,33957
#define WGL_TEXTURE_FLOAT_RG_NV WGL_TEXTURE_FLOAT_RG_NV667,34007
#define WGL_TEXTURE_FLOAT_RGB_NV WGL_TEXTURE_FLOAT_RGB_NV668,34057
#define WGL_TEXTURE_FLOAT_RGBA_NV WGL_TEXTURE_FLOAT_RGBA_NV669,34107
#define WGL_NV_gpu_affinity WGL_NV_gpu_affinity673,34222
struct _GPU_DEVICE {_GPU_DEVICE675,34278
    DWORD  cb;cb676,34300
    CHAR   DeviceName[32];DeviceName677,34316
    CHAR   DeviceString[128];DeviceString678,34344
    DWORD  Flags;Flags679,34375
    RECT   rcVirtualScreen;rcVirtualScreen680,34394
typedef struct _GPU_DEVICE *PGPU_DEVICE;PGPU_DEVICE682,34427
#define ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV683,34469
#define ERROR_MISSING_AFFINITY_MASK_NV ERROR_MISSING_AFFINITY_MASK_NV684,34522
typedef BOOL (WINAPI * PFNWGLENUMGPUSNVPROC) (UINT iGpuIndex, HGPUNV *phGpu);PFNWGLENUMGPUSNVPROC685,34572
typedef BOOL (WINAPI * PFNWGLENUMGPUDEVICESNVPROC) (HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE PFNWGLENUMGPUDEVICESNVPROC686,34651
typedef HDC (WINAPI * PFNWGLCREATEAFFINITYDCNVPROC) (const HGPUNV *phGpuList);PFNWGLCREATEAFFINITYDCNVPROC687,34762
typedef BOOL (WINAPI * PFNWGLENUMGPUSFROMAFFINITYDCNVPROC) (HDC hAffinityDC, UINT iGpuIndex, HGPPFNWGLENUMGPUSFROMAFFINITYDCNVPROC688,34842
typedef BOOL (WINAPI * PFNWGLDELETEDCNVPROC) (HDC hdc);PFNWGLDELETEDCNVPROC689,34951
#define WGL_NV_multigpu_context WGL_NV_multigpu_context700,35456
#define WGL_CONTEXT_MULTIGPU_ATTRIB_NV WGL_CONTEXT_MULTIGPU_ATTRIB_NV701,35491
#define WGL_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV WGL_CONTEXT_MULTIGPU_ATTRIB_SINGLE_NV702,35541
#define WGL_CONTEXT_MULTIGPU_ATTRIB_AFR_NV WGL_CONTEXT_MULTIGPU_ATTRIB_AFR_NV703,35595
#define WGL_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV WGL_CONTEXT_MULTIGPU_ATTRIB_MULTICAST_NV704,35646
#define WGL_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV WGL_CONTEXT_MULTIGPU_ATTRIB_MULTI_DISPLAY_MULTICAST_NV705,35703
#define WGL_NV_multisample_coverage WGL_NV_multisample_coverage709,35851
#define WGL_COVERAGE_SAMPLES_NV WGL_COVERAGE_SAMPLES_NV710,35890
#define WGL_COLOR_SAMPLES_NV WGL_COLOR_SAMPLES_NV711,35940
#define WGL_NV_present_video WGL_NV_present_video715,36064
#define WGL_NUM_VIDEO_SLOTS_NV WGL_NUM_VIDEO_SLOTS_NV717,36135
typedef int (WINAPI * PFNWGLENUMERATEVIDEODEVICESNVPROC) (HDC hDc, HVIDEOOUTPUTDEVICENV *phDevicPFNWGLENUMERATEVIDEODEVICESNVPROC718,36185
typedef BOOL (WINAPI * PFNWGLBINDVIDEODEVICENVPROC) (HDC hDc, unsigned int uVideoSlot, HVIDEOOUTPFNWGLBINDVIDEODEVICENVPROC719,36290
typedef BOOL (WINAPI * PFNWGLQUERYCURRENTCONTEXTNVPROC) (int iAttribute, int *piValue);PFNWGLQUERYCURRENTCONTEXTNVPROC720,36439
#define WGL_NV_render_depth_texture WGL_NV_render_depth_texture729,36926
#define WGL_BIND_TO_TEXTURE_DEPTH_NV WGL_BIND_TO_TEXTURE_DEPTH_NV730,36965
#define WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV731,37015
#define WGL_DEPTH_TEXTURE_FORMAT_NV WGL_DEPTH_TEXTURE_FORMAT_NV732,37070
#define WGL_TEXTURE_DEPTH_COMPONENT_NV WGL_TEXTURE_DEPTH_COMPONENT_NV733,37120
#define WGL_DEPTH_COMPONENT_NV WGL_DEPTH_COMPONENT_NV734,37170
#define WGL_NV_render_texture_rectangle WGL_NV_render_texture_rectangle738,37305
#define WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV739,37348
#define WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV740,37401
#define WGL_TEXTURE_RECTANGLE_NV WGL_TEXTURE_RECTANGLE_NV741,37455
#define WGL_NV_swap_group WGL_NV_swap_group745,37580
typedef BOOL (WINAPI * PFNWGLJOINSWAPGROUPNVPROC) (HDC hDC, GLuint group);PFNWGLJOINSWAPGROUPNVPROC746,37609
typedef BOOL (WINAPI * PFNWGLBINDSWAPBARRIERNVPROC) (GLuint group, GLuint barrier);PFNWGLBINDSWAPBARRIERNVPROC747,37685
typedef BOOL (WINAPI * PFNWGLQUERYSWAPGROUPNVPROC) (HDC hDC, GLuint *group, GLuint *barrier);PFNWGLQUERYSWAPGROUPNVPROC748,37770
typedef BOOL (WINAPI * PFNWGLQUERYMAXSWAPGROUPSNVPROC) (HDC hDC, GLuint *maxGroups, GLuint *maxBPFNWGLQUERYMAXSWAPGROUPSNVPROC749,37865
typedef BOOL (WINAPI * PFNWGLQUERYFRAMECOUNTNVPROC) (HDC hDC, GLuint *count);PFNWGLQUERYFRAMECOUNTNVPROC750,37972
typedef BOOL (WINAPI * PFNWGLRESETFRAMECOUNTNVPROC) (HDC hDC);PFNWGLRESETFRAMECOUNTNVPROC751,38051
#define WGL_NV_vertex_array_range WGL_NV_vertex_array_range763,38614
typedef void *(WINAPI * PFNWGLALLOCATEMEMORYNVPROC) (GLsizei size, GLfloat readfreq, GLfloat wriPFNWGLALLOCATEMEMORYNVPROC764,38651
typedef void (WINAPI * PFNWGLFREEMEMORYNVPROC) (void *pointer);PFNWGLFREEMEMORYNVPROC765,38775
#define WGL_NV_video_capture WGL_NV_video_capture773,39101
#define WGL_UNIQUE_ID_NV WGL_UNIQUE_ID_NV775,39171
#define WGL_NUM_VIDEO_CAPTURE_SLOTS_NV WGL_NUM_VIDEO_CAPTURE_SLOTS_NV776,39221
typedef BOOL (WINAPI * PFNWGLBINDVIDEOCAPTUREDEVICENVPROC) (UINT uVideoSlot, HVIDEOINPUTDEVICENVPFNWGLBINDVIDEOCAPTUREDEVICENVPROC777,39271
typedef UINT (WINAPI * PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC) (HDC hDc, HVIDEOINPUTDEVICENV *PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC778,39379
typedef BOOL (WINAPI * PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevicePFNWGLLOCKVIDEOCAPTUREDEVICENVPROC779,39491
typedef BOOL (WINAPI * PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevicPFNWGLQUERYVIDEOCAPTUREDEVICENVPROC780,39591
typedef BOOL (WINAPI * PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC) (HDC hDc, HVIDEOINPUTDEVICENV hDevPFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC781,39722
#define WGL_NV_video_output WGL_NV_video_output792,40388
#define WGL_BIND_TO_VIDEO_RGB_NV WGL_BIND_TO_VIDEO_RGB_NV794,40448
#define WGL_BIND_TO_VIDEO_RGBA_NV WGL_BIND_TO_VIDEO_RGBA_NV795,40498
#define WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV796,40548
#define WGL_VIDEO_OUT_COLOR_NV WGL_VIDEO_OUT_COLOR_NV797,40599
#define WGL_VIDEO_OUT_ALPHA_NV WGL_VIDEO_OUT_ALPHA_NV798,40649
#define WGL_VIDEO_OUT_DEPTH_NV WGL_VIDEO_OUT_DEPTH_NV799,40699
#define WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV800,40749
#define WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV801,40799
#define WGL_VIDEO_OUT_FRAME WGL_VIDEO_OUT_FRAME802,40849
#define WGL_VIDEO_OUT_FIELD_1 WGL_VIDEO_OUT_FIELD_1803,40899
#define WGL_VIDEO_OUT_FIELD_2 WGL_VIDEO_OUT_FIELD_2804,40949
#define WGL_VIDEO_OUT_STACKED_FIELDS_1_2 WGL_VIDEO_OUT_STACKED_FIELDS_1_2805,40999
#define WGL_VIDEO_OUT_STACKED_FIELDS_2_1 WGL_VIDEO_OUT_STACKED_FIELDS_2_1806,41049
typedef BOOL (WINAPI * PFNWGLGETVIDEODEVICENVPROC) (HDC hDC, int numDevices, HPVIDEODEV *hVideoDPFNWGLGETVIDEODEVICENVPROC807,41099
typedef BOOL (WINAPI * PFNWGLRELEASEVIDEODEVICENVPROC) (HPVIDEODEV hVideoDevice);PFNWGLRELEASEVIDEODEVICENVPROC808,41204
typedef BOOL (WINAPI * PFNWGLBINDVIDEOIMAGENVPROC) (HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffePFNWGLBINDVIDEOIMAGENVPROC809,41287
typedef BOOL (WINAPI * PFNWGLRELEASEVIDEOIMAGENVPROC) (HPBUFFERARB hPbuffer, int iVideoBuffer);PFNWGLRELEASEVIDEOIMAGENVPROC810,41406
typedef BOOL (WINAPI * PFNWGLSENDPBUFFERTOVIDEONVPROC) (HPBUFFERARB hPbuffer, int iBufferType, uPFNWGLSENDPBUFFERTOVIDEONVPROC811,41503
typedef BOOL (WINAPI * PFNWGLGETVIDEOINFONVPROC) (HPVIDEODEV hpVideoDevice, unsigned long *pulCoPFNWGLGETVIDEOINFONVPROC812,41647
#define WGL_OML_sync_control WGL_OML_sync_control824,42497
typedef BOOL (WINAPI * PFNWGLGETSYNCVALUESOMLPROC) (HDC hdc, INT64 *ust, INT64 *msc, INT64 *sbc)PFNWGLGETSYNCVALUESOMLPROC825,42529
typedef BOOL (WINAPI * PFNWGLGETMSCRATEOMLPROC) (HDC hdc, INT32 *numerator, INT32 *denominator);PFNWGLGETMSCRATEOMLPROC826,42628
typedef INT64 (WINAPI * PFNWGLSWAPBUFFERSMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, PFNWGLSWAPBUFFERSMSCOMLPROC827,42726
typedef INT64 (WINAPI * PFNWGLSWAPLAYERBUFFERSMSCOMLPROC) (HDC hdc, INT fuPlanes, INT64 target_mPFNWGLSWAPLAYERBUFFERSMSCOMLPROC828,42841
typedef BOOL (WINAPI * PFNWGLWAITFORMSCOMLPROC) (HDC hdc, INT64 target_msc, INT64 divisor, INT64PFNWGLWAITFORMSCOMLPROC829,42975
typedef BOOL (WINAPI * PFNWGLWAITFORSBCOMLPROC) (HDC hdc, INT64 target_sbc, INT64 *ust, INT64 *mPFNWGLWAITFORSBCOMLPROC830,43121

../gejo/scripts/generate_opengl_header.py,1663
dir_path = os.path.dirname(os.path.realpath(__file__))dir_path8,175
dir_path = os.path.join(dir_path, "..")dir_path9,231
loader_file  = sys.argv[1]loader_file15,327
defines_file = sys.argv[2]defines_file16,355
defs_file    = sys.argv[3]defs_file17,383
header_guard = """#if !defined(OPENGL_H)header_guard19,413
header_endif = "#endif"header_endif21,478
opengl_include = """#include <gl/gl.h>opengl_include23,505
global_opengl = "global_variable OpenGL g_opengl = {};\n"global_opengl31,676
    opengl_defs = opengl_defs_file.read()opengl_defs35,787
    glcorearb_defines = []glcorearb_defines38,866
    glcorearb_typedefs = []glcorearb_typedefs39,894
                line = line.replace("GLAPI", "typedef")line45,1165
                line = line.replace("APIENTRY", "OPENGL_APIENTRY")line46,1222
    defines_to_add = []defines_to_add49,1341
    typedefs_to_add = []typedefs_to_add50,1366
            unstripped_line = lineunstripped_line54,1460
            line = line.rstrip()line55,1496
            define = list(filter(lambda x: re.search(r'\b' + line + r'\b', x), glcorearb_definesdefine57,1544
            typedef = list(filter(lambda x: re.search(r'\b' + line + r'\b', x), glcorearb_typedetypedef62,1802
    output = header_guardoutput67,2086
    new_signatures = []new_signatures76,2464
        file_contents = win32_file.read()file_contents78,2537
            OpenGLFunction_part = file_contents.split("{Start OpenGLFunction}")[1].split("{End OOpenGLFunction_part80,2679
    union = "union OpenGL\n{\n\tstruct\n\t{\n"union86,3086
        type_signature = "type_"+typedef[0].rstrip()type_signature88,3171

../gejo/scripts/opengl_defs.gen,0
